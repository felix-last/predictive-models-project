MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0X7L7DI 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0X7L7DI new;
MPRINT(EM_DIAGRAM):   run;
1509353    filename emflow
1509353  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring NEURAL4_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509354    *------------------------------------------------------------*;
1509355    * Ensmbl28: Scoring NEURAL4_TRAIN data;
1509356    *------------------------------------------------------------*;
1509357    data EMWS8.Ensmbl28_TRAIN
1509358    / view=EMWS8.Ensmbl28_TRAIN
1509359    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_TRAIN / view=EMWS8.Ensmbl28_TRAIN ;
1509360    set EMWS8.Neural4_TRAIN
1509361    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_TRAIN ;
1509362    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas.
1509363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509364   +* Ensmbl28: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Combine model for DepVar;
1509365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509366   +* Ensmbl28: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 1 of 5;
1509367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509369   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1509370   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1509371   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1509372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509374   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1509375   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1509376   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1509377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509379   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1509380   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1509381   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1509382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509384   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1509385   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1509386   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1509387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509388   +
1509389   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1509390   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1509390  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1509391   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1509392   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1509393   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1509394   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1509395   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1509396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509397   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1509398   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1509399   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1509400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509402   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1509403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509404   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1509405   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1509406   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1509407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509408   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1509409   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1509410   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1509411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509413   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1509414   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1509415   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1509416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509418   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1509419   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1509420   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1509421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1509422   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1509423   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1509424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1509425   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1509426   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1509427   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1509428   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1509429   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1509430   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1509431   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1509432   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1509433   +LENGTH _WARN_ $4
1509434   +      F_DepVar  $ 12
1509435   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1509436   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1509437   +
1509438   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1509439   +
1509440   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1509441   +
1509442   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1509443   +
1509444   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1509445   +
1509446   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1509447   +
1509448   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1509449   +
1509450   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1509451   +
1509452   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1509453   +
1509454   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1509455   +
1509456   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1509457   +
1509458   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1509459   +
1509460   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1509461   +
1509462   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1509463   +
1509464   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1509465   +
1509466   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1509467   +
1509468   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1509469   +
1509470   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1509471   +
1509472   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1509473   +
1509474   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1509475   +
1509476   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1509477   +
1509478   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1509479   +
1509480   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1509481   +
1509482   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1509483   +
1509484   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1509485   +
1509486   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1509487   +
1509488   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1509489   +
1509490   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1509491   +
1509492   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1509493   +
1509494   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1509495   +
1509496   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1509497   +
1509498   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1509499   +
1509500   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1509501   +
1509502   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1509503   +
1509504   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1509505   +
1509506   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1509507   +
1509508   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1509509   +
1509510   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1509511   +
1509512   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1509513   +
1509514   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1509515   +
1509516   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1509517   +
1509518   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1509519   +
1509520   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1509521   +
1509522   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1509523   +
1509524   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1509525   +
1509526   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1509527   +
1509528   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1509529   +
1509530   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1509531   +
1509532   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1509533   +
1509534   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1509535   +
1509536   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1509537   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1509538   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1509539   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1509540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509542   +end;
MPRINT(EM_DIAGRAM):   end;
1509543   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509545   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1509546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509547   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509548   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1509549   +   end;
MPRINT(EM_DIAGRAM):   end;
1509550   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509551   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1509552   +   end;
MPRINT(EM_DIAGRAM):   end;
1509553   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509554   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1509555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509557   +   end;
MPRINT(EM_DIAGRAM):   end;
1509558   +end;
MPRINT(EM_DIAGRAM):   end;
1509559   +
1509560   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1509561   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1509562   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1509563   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1509564   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509566   +end;
MPRINT(EM_DIAGRAM):   end;
1509567   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509568   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509569   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1509570   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509571   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509572   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1509573   +   end;
MPRINT(EM_DIAGRAM):   end;
1509574   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509575   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1509576   +   end;
MPRINT(EM_DIAGRAM):   end;
1509577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509578   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1509579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509581   +   end;
MPRINT(EM_DIAGRAM):   end;
1509582   +end;
MPRINT(EM_DIAGRAM):   end;
1509583   +
1509584   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1509585   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1509586   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1509587   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1509588   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509589   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509590   +end;
MPRINT(EM_DIAGRAM):   end;
1509591   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509592   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509593   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1509594   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509595   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509596   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1509597   +   end;
MPRINT(EM_DIAGRAM):   end;
1509598   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509599   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1509600   +   end;
MPRINT(EM_DIAGRAM):   end;
1509601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509602   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1509603   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509604   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509605   +   end;
MPRINT(EM_DIAGRAM):   end;
1509606   +end;
MPRINT(EM_DIAGRAM):   end;
1509607   +
1509608   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1509609   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1509610   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1509611   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1509612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509614   +end;
MPRINT(EM_DIAGRAM):   end;
1509615   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509617   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1509618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509619   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509620   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1509621   +   end;
MPRINT(EM_DIAGRAM):   end;
1509622   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509623   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1509624   +   end;
MPRINT(EM_DIAGRAM):   end;
1509625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509626   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1509627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509629   +   end;
MPRINT(EM_DIAGRAM):   end;
1509630   +end;
MPRINT(EM_DIAGRAM):   end;
1509631   +
1509632   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1509633   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1509634   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1509635   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1509636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509638   +end;
MPRINT(EM_DIAGRAM):   end;
1509639   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509641   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1509642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509643   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509644   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1509645   +   end;
MPRINT(EM_DIAGRAM):   end;
1509646   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509647   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1509648   +   end;
MPRINT(EM_DIAGRAM):   end;
1509649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509650   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1509651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509653   +   end;
MPRINT(EM_DIAGRAM):   end;
1509654   +end;
MPRINT(EM_DIAGRAM):   end;
1509655   +
1509656   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1509657   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1509658   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1509659   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1509660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509662   +end;
MPRINT(EM_DIAGRAM):   end;
1509663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509665   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1509666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509667   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1509668   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1509669   +   end;
MPRINT(EM_DIAGRAM):   end;
1509670   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1509671   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1509672   +   end;
MPRINT(EM_DIAGRAM):   end;
1509673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509674   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1509675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509677   +   end;
MPRINT(EM_DIAGRAM):   end;
1509678   +end;
MPRINT(EM_DIAGRAM):   end;
1509679   +
1509680   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1509681   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1509682   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1509683   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1509684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509686   +end;
MPRINT(EM_DIAGRAM):   end;
1509687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1509689   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1509690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509691   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1509692   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1509693   +   end;
MPRINT(EM_DIAGRAM):   end;
1509694   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1509695   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1509696   +   end;
MPRINT(EM_DIAGRAM):   end;
1509697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509698   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1509699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509701   +   end;
MPRINT(EM_DIAGRAM):   end;
1509702   +end;
MPRINT(EM_DIAGRAM):   end;
1509703   +
1509704   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1509705   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1509706   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1509707   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1509708   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1509709   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1509710   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1509711   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1509712   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1509713   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1509714   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1509715   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1509716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509718   +end;
MPRINT(EM_DIAGRAM):   end;
1509719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509720   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1509721   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1509722   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509723   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1509724   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1509725   +   end;
MPRINT(EM_DIAGRAM):   end;
1509726   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1509727   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1509728   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1509729   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1509730   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1509731   +   end;
MPRINT(EM_DIAGRAM):   end;
1509732   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1509733   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1509734   +   end;
MPRINT(EM_DIAGRAM):   end;
1509735   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1509736   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1509737   +   end;
MPRINT(EM_DIAGRAM):   end;
1509738   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1509739   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1509740   +   end;
MPRINT(EM_DIAGRAM):   end;
1509741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509742   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1509743   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1509744   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1509745   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1509746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509748   +   end;
MPRINT(EM_DIAGRAM):   end;
1509749   +end;
MPRINT(EM_DIAGRAM):   end;
1509750   +
1509751   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1509752   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1509753   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1509754   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1509755   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1509756   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1509757   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1509758   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1509759   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1509760   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1509761   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1509762   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1509763   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1509764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1509765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509766   +end;
MPRINT(EM_DIAGRAM):   end;
1509767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1509768   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1509769   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1509770   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1509771   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1509772   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1509773   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1509774   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1509775   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1509776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1509777   +         end;
MPRINT(EM_DIAGRAM):   end;
1509778   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1509779   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1509780   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1509781   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1509782   +            end;
MPRINT(EM_DIAGRAM):   end;
1509783   +         end;
MPRINT(EM_DIAGRAM):   end;
1509784   +      end;
MPRINT(EM_DIAGRAM):   end;
1509785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1509786   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1509787   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1509788   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1509789   +         end;
MPRINT(EM_DIAGRAM):   end;
1509790   +      end;
MPRINT(EM_DIAGRAM):   end;
1509791   +   end;
MPRINT(EM_DIAGRAM):   end;
1509792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1509793   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1509794   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1509795   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1509796   +      end;
MPRINT(EM_DIAGRAM):   end;
1509797   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1509798   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1509799   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1509800   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1509801   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1509802   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1509803   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1509804   +         end;
MPRINT(EM_DIAGRAM):   end;
1509805   +      end;
MPRINT(EM_DIAGRAM):   end;
1509806   +   end;
MPRINT(EM_DIAGRAM):   end;
1509807   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1509808   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1509809   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1509810   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1509811   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1509812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1509813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509814   +   end;
MPRINT(EM_DIAGRAM):   end;
1509815   +end;
MPRINT(EM_DIAGRAM):   end;
1509816   +
1509817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509818   +*** Checking missing input Interval
1509819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1509820   +
1509821   +IF NMISS(
1509822   +   AcceptedCmpTotal ,
1509823   +   Age ,
1509824   +   Frq ,
1509825   +   Income ,
1509826   +   Kidhome ,
1509827   +   Mnt ,
1509828   +   MntFishProducts ,
1509829   +   MntFruits ,
1509830   +   MntGoldProds ,
1509831   +   MntMeatProducts ,
1509832   +   MntSweetProducts ,
1509833   +   MntWines ,
1509834   +   MonthsAsCustomer ,
1509835   +   NumCatalogPurchases ,
1509836   +   NumDealsPurchases ,
1509837   +   NumDistPurchases ,
1509838   +   NumStorePurchases ,
1509839   +   NumWebPurchases ,
1509840   +   NumWebVisitsMonth ,
1509841   +   RFMstat ,
1509842   +   RMntFrq ,
1509843   +   Recency ,
1509844   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1509845   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1509846   +
1509847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1509848   +END;
MPRINT(EM_DIAGRAM):   END;
1509849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509850   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1509851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509852   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1509853   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1509854   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1509855   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1509856   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1509857   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1509858   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1509859   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1509860   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1509861   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1509862   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1509863   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1509864   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1509865   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1509866   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1509867   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1509868   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1509869   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1509870   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1509871   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1509872   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1509873   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1509874   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1509875   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1509876   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1509877   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1509878   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1509879   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1509880   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1509881   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1509882   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1509883   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1509884   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1509885   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1509886   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1509887   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1509888   +END;
MPRINT(EM_DIAGRAM):   END;
1509889   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1509890   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1509891   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1509892   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1509893   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1509894   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1509895   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1509896   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1509897   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1509898   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1509899   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1509900   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1509901   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1509902   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1509903   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1509904   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1509905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1509906   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1509907   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1509908   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1509909   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1509910   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1509911   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1509912   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1509913   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1509914   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1509915   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1509916   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1509917   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1509918   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1509919   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1509920   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1509921   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1509922   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1509923   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1509924   +   ELSE S_NumCatalogPurchases
1509925   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1509926   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1509927   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1509928   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1509929   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1509930   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1509931   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1509932   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1509933   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1509934   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1509935   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1509936   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1509937   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1509938   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1509939   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1509940   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1509941   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1509942   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1509943   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1509944   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1509945   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1509946   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1509947   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1509948   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1509949   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1509950   +END;
MPRINT(EM_DIAGRAM):   END;
1509951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509952   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1509953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509955   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1509956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509958   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1509959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1509960   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1509961   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1509962   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1509963   +        S_Income  +    -0.76740176580734 * S_Kidhome
1509964   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1509965   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1509966   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1509967   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1509968   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1509969   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1509970   +          +    -1.00050516074089 * S_NumDealsPurchases
1509971   +          +    -0.89322788176916 * S_NumDistPurchases
1509972   +          +     1.21914397196653 * S_NumStorePurchases
1509973   +          +     1.50867172673665 * S_NumWebPurchases
1509974   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1509975   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1509976   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1509977   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1509978   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1509979   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1509980   +        S_Income  +    -0.76288911429735 * S_Kidhome
1509981   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1509982   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1509983   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1509984   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1509985   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1509986   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1509987   +          +     0.79497206561332 * S_NumDealsPurchases
1509988   +          +    -0.13658888199464 * S_NumDistPurchases
1509989   +          +    -0.86436416316417 * S_NumStorePurchases
1509990   +          +    -0.85206550087617 * S_NumWebPurchases
1509991   +          +     1.72745004688732 * S_NumWebVisitsMonth
1509992   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1509993   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1509994   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1509995   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1509996   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1509997   +        S_Income  +    -0.48841499166688 * S_Kidhome
1509998   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1509999   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1510000   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1510001   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1510002   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1510003   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1510004   +          +    -0.00010125986409 * S_NumDealsPurchases
1510005   +          +    -0.00873530900019 * S_NumDistPurchases
1510006   +          +    -0.13188135131414 * S_NumStorePurchases
1510007   +          +    -0.10710067608125 * S_NumWebPurchases
1510008   +          +     0.99164053465149 * S_NumWebVisitsMonth
1510009   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1510010   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1510011   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1510012   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1510013   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1510014   +        S_Income  +    -0.57026847797175 * S_Kidhome
1510015   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1510016   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1510017   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1510018   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1510019   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1510020   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1510021   +          +     0.83618651452015 * S_NumDealsPurchases
1510022   +          +     0.22469306589917 * S_NumDistPurchases
1510023   +          +    -0.95889459414769 * S_NumStorePurchases
1510024   +          +    -0.95695646799114 * S_NumWebPurchases
1510025   +          +     0.96738689790948 * S_NumWebVisitsMonth
1510026   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1510027   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1510028   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1510029   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1510030   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1510031   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1510032   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1510033   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1510034   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1510035   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1510036   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1510037   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1510038   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1510039   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1510040   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1510041   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1510042   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1510043   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1510044   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1510045   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1510046   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1510047   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1510048   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1510049   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1510050   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1510051   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1510052   +          +     0.80885454992674 * Marital_StatusDivorced
1510053   +          +     -0.5568630572283 * Marital_StatusMarried
1510054   +          +    -0.03099047176508 * Marital_StatusSingle
1510055   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1510056   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1510057   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1510058   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1510059   +          +     0.13911597069393 * Marital_StatusDivorced
1510060   +          +    -1.50081060732787 * Marital_StatusMarried
1510061   +          +     1.41717012231539 * Marital_StatusSingle
1510062   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1510063   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1510064   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1510065   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1510066   +          +    -0.26412736340464 * Marital_StatusDivorced
1510067   +          +    -0.27049992388629 * Marital_StatusMarried
1510068   +          +     0.67476795725099 * Marital_StatusSingle
1510069   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1510070   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1510071   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1510072   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1510073   +          +      0.8954230457499 * Marital_StatusDivorced
1510074   +          +     0.73706556068242 * Marital_StatusMarried
1510075   +          +    -1.29073720538893 * Marital_StatusSingle
1510076   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1510077   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1510078   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1510079   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1510080   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1510081   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1510082   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1510083   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1510084   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1510085   +END;
MPRINT(EM_DIAGRAM):   END;
1510086   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1510087   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1510088   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1510089   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1510090   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1510091   +END;
MPRINT(EM_DIAGRAM):   END;
1510092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510093   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1510094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510095   +
1510096   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1510097   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1510098   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1510099   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1510100   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1510101   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510102   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1510103   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1510104   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1510105   +end;
MPRINT(EM_DIAGRAM):   end;
1510106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510107   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1510108   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1510109   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1510110   +   end;
MPRINT(EM_DIAGRAM):   end;
1510111   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1510112   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1510113   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1510114   +   end;
MPRINT(EM_DIAGRAM):   end;
1510115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510116   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1510117   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1510118   +   end;
MPRINT(EM_DIAGRAM):   end;
1510119   +end;
MPRINT(EM_DIAGRAM):   end;
1510120   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1510121   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1510122   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1510123   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1510124   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1510125   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1510126   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1510127   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1510128   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1510129   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1510130   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1510131   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1510132   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1510133   +END;
MPRINT(EM_DIAGRAM):   END;
1510134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1510135   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1510136   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1510137   +END;
MPRINT(EM_DIAGRAM):   END;
1510138   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1510139   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1510140   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1510141   +END;
MPRINT(EM_DIAGRAM):   END;
1510142   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1510143   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1510144   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1510145   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1510146   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1510147   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1510148   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1510149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510150   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1510151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510152   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1510153   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1510154   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1510155   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1510156   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1510157   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1510158   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1510159   +END;
MPRINT(EM_DIAGRAM):   END;
1510160   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1510161   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1510162   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1510163   +drop
1510164   +H11
1510165   +H12
1510166   +H13
1510167   +H14
1510168   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1510169   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1510170   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1510171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510172   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1510173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510174   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1510175   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1510176   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1510177   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1510178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510179   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1510180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510181   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1510182   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1510183   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1510184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510185   +* Ensmbl28: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 2 of 5;
1510186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510188   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1510189   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1510190   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1510191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510192   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1510193   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1510194   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1510195   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1510196   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1510197   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1510198   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1510199   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1510200   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1510201   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1510202   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1510203   +LENGTH _WARN_ $4
1510204   +      F_DepVar  $ 12
1510205   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1510206   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1510207   +
1510208   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1510209   +
1510210   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1510211   +
1510212   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1510213   +
1510214   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1510215   +
1510216   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1510217   +
1510218   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1510219   +
1510220   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1510221   +
1510222   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1510223   +
1510224   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1510225   +
1510226   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1510227   +
1510228   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1510229   +
1510230   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1510231   +
1510232   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1510233   +
1510234   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1510235   +
1510236   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1510237   +
1510238   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1510239   +
1510240   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1510241   +
1510242   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1510243   +
1510244   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1510245   +
1510246   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1510247   +
1510248   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1510249   +
1510250   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1510251   +
1510252   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1510253   +
1510254   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1510255   +
1510256   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1510257   +
1510258   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1510259   +
1510260   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1510261   +
1510262   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1510263   +
1510264   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1510265   +
1510266   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1510267   +
1510268   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1510269   +
1510270   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1510271   +
1510272   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1510273   +
1510274   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1510275   +
1510276   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1510277   +
1510278   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1510279   +
1510280   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1510281   +
1510282   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1510283   +
1510284   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1510285   +
1510286   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1510287   +
1510288   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1510289   +
1510290   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1510291   +
1510292   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1510293   +
1510294   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1510295   +
1510296   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1510297   +
1510298   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1510299   +
1510300   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1510301   +
1510302   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1510303   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1510304   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1510305   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1510306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510308   +end;
MPRINT(EM_DIAGRAM):   end;
1510309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510311   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1510312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510314   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1510315   +   end;
MPRINT(EM_DIAGRAM):   end;
1510316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510317   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1510318   +   end;
MPRINT(EM_DIAGRAM):   end;
1510319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510320   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1510321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510323   +   end;
MPRINT(EM_DIAGRAM):   end;
1510324   +end;
MPRINT(EM_DIAGRAM):   end;
1510325   +
1510326   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1510327   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1510328   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1510329   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1510330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510332   +end;
MPRINT(EM_DIAGRAM):   end;
1510333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510335   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1510336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510338   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1510339   +   end;
MPRINT(EM_DIAGRAM):   end;
1510340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510341   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1510342   +   end;
MPRINT(EM_DIAGRAM):   end;
1510343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510344   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1510345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510347   +   end;
MPRINT(EM_DIAGRAM):   end;
1510348   +end;
MPRINT(EM_DIAGRAM):   end;
1510349   +
1510350   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1510351   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1510352   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1510353   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1510354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510356   +end;
MPRINT(EM_DIAGRAM):   end;
1510357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510359   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1510360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510362   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1510363   +   end;
MPRINT(EM_DIAGRAM):   end;
1510364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510365   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1510366   +   end;
MPRINT(EM_DIAGRAM):   end;
1510367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510368   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1510369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510371   +   end;
MPRINT(EM_DIAGRAM):   end;
1510372   +end;
MPRINT(EM_DIAGRAM):   end;
1510373   +
1510374   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1510375   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1510376   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1510377   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1510378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510380   +end;
MPRINT(EM_DIAGRAM):   end;
1510381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510383   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1510384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510386   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1510387   +   end;
MPRINT(EM_DIAGRAM):   end;
1510388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510389   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1510390   +   end;
MPRINT(EM_DIAGRAM):   end;
1510391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510392   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1510393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510395   +   end;
MPRINT(EM_DIAGRAM):   end;
1510396   +end;
MPRINT(EM_DIAGRAM):   end;
1510397   +
1510398   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1510399   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1510400   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1510401   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1510402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510404   +end;
MPRINT(EM_DIAGRAM):   end;
1510405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510407   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1510408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510410   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1510411   +   end;
MPRINT(EM_DIAGRAM):   end;
1510412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510413   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1510414   +   end;
MPRINT(EM_DIAGRAM):   end;
1510415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510416   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1510417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510419   +   end;
MPRINT(EM_DIAGRAM):   end;
1510420   +end;
MPRINT(EM_DIAGRAM):   end;
1510421   +
1510422   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1510423   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1510424   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1510425   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1510426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510428   +end;
MPRINT(EM_DIAGRAM):   end;
1510429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510431   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1510432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1510434   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1510435   +   end;
MPRINT(EM_DIAGRAM):   end;
1510436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1510437   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1510438   +   end;
MPRINT(EM_DIAGRAM):   end;
1510439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510440   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1510441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510443   +   end;
MPRINT(EM_DIAGRAM):   end;
1510444   +end;
MPRINT(EM_DIAGRAM):   end;
1510445   +
1510446   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1510447   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1510448   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1510449   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1510450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510452   +end;
MPRINT(EM_DIAGRAM):   end;
1510453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1510455   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1510456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510457   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1510458   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1510459   +   end;
MPRINT(EM_DIAGRAM):   end;
1510460   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1510461   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1510462   +   end;
MPRINT(EM_DIAGRAM):   end;
1510463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510464   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1510465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510467   +   end;
MPRINT(EM_DIAGRAM):   end;
1510468   +end;
MPRINT(EM_DIAGRAM):   end;
1510469   +
1510470   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1510471   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1510472   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1510473   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1510474   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1510475   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1510476   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1510477   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1510478   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1510479   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1510480   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1510481   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1510482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510484   +end;
MPRINT(EM_DIAGRAM):   end;
1510485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510486   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1510487   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1510488   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510489   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1510490   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1510491   +   end;
MPRINT(EM_DIAGRAM):   end;
1510492   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1510493   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1510494   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1510495   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1510496   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1510497   +   end;
MPRINT(EM_DIAGRAM):   end;
1510498   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1510499   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1510500   +   end;
MPRINT(EM_DIAGRAM):   end;
1510501   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1510502   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1510503   +   end;
MPRINT(EM_DIAGRAM):   end;
1510504   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1510505   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1510506   +   end;
MPRINT(EM_DIAGRAM):   end;
1510507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510508   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1510509   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1510510   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1510511   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1510512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510514   +   end;
MPRINT(EM_DIAGRAM):   end;
1510515   +end;
MPRINT(EM_DIAGRAM):   end;
1510516   +
1510517   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1510518   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1510519   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1510520   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1510521   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1510522   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1510523   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1510524   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1510525   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1510526   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1510527   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1510528   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1510529   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1510530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1510531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510532   +end;
MPRINT(EM_DIAGRAM):   end;
1510533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510534   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1510535   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1510536   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510537   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1510538   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1510539   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1510540   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1510541   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1510542   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1510543   +         end;
MPRINT(EM_DIAGRAM):   end;
1510544   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1510545   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1510546   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1510547   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1510548   +            end;
MPRINT(EM_DIAGRAM):   end;
1510549   +         end;
MPRINT(EM_DIAGRAM):   end;
1510550   +      end;
MPRINT(EM_DIAGRAM):   end;
1510551   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1510552   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1510553   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1510554   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1510555   +         end;
MPRINT(EM_DIAGRAM):   end;
1510556   +      end;
MPRINT(EM_DIAGRAM):   end;
1510557   +   end;
MPRINT(EM_DIAGRAM):   end;
1510558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510559   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1510560   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1510561   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1510562   +      end;
MPRINT(EM_DIAGRAM):   end;
1510563   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1510564   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1510565   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1510566   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1510567   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1510568   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1510569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1510570   +         end;
MPRINT(EM_DIAGRAM):   end;
1510571   +      end;
MPRINT(EM_DIAGRAM):   end;
1510572   +   end;
MPRINT(EM_DIAGRAM):   end;
1510573   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1510574   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1510575   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1510576   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1510577   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1510578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1510579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510580   +   end;
MPRINT(EM_DIAGRAM):   end;
1510581   +end;
MPRINT(EM_DIAGRAM):   end;
1510582   +
1510583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510584   +*** Checking missing input Interval
1510585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1510586   +
1510587   +IF NMISS(
1510588   +   AcceptedCmpTotal ,
1510589   +   Age ,
1510590   +   Frq ,
1510591   +   Income ,
1510592   +   Kidhome ,
1510593   +   Mnt ,
1510594   +   MntFishProducts ,
1510595   +   MntFruits ,
1510596   +   MntGoldProds ,
1510597   +   MntMeatProducts ,
1510598   +   MntSweetProducts ,
1510599   +   MntWines ,
1510600   +   MonthsAsCustomer ,
1510601   +   NumCatalogPurchases ,
1510602   +   NumDealsPurchases ,
1510603   +   NumDistPurchases ,
1510604   +   NumStorePurchases ,
1510605   +   NumWebPurchases ,
1510606   +   NumWebVisitsMonth ,
1510607   +   RFMstat ,
1510608   +   RMntFrq ,
1510609   +   Recency ,
1510610   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1510611   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1510612   +
1510613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1510614   +END;
MPRINT(EM_DIAGRAM):   END;
1510615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510616   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1510617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510618   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1510619   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1510620   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1510621   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1510622   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1510623   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1510624   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1510625   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1510626   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1510627   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1510628   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1510629   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1510630   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1510631   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1510632   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1510633   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1510634   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1510635   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1510636   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1510637   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1510638   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1510639   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1510640   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1510641   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1510642   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1510643   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1510644   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1510645   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1510646   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1510647   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1510648   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1510649   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1510650   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1510651   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1510652   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1510653   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1510654   +END;
MPRINT(EM_DIAGRAM):   END;
1510655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1510656   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1510657   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1510658   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1510659   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1510660   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1510661   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1510662   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1510663   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1510664   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1510665   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1510666   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1510667   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1510668   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1510669   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1510670   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1510671   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1510672   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1510673   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1510674   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1510675   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1510676   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1510677   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1510678   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1510679   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1510680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1510681   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1510682   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1510683   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1510684   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1510685   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1510686   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1510687   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1510688   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1510689   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1510690   +   ELSE S_NumCatalogPurchases
1510691   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1510692   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1510693   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1510694   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1510695   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1510696   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1510697   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1510698   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1510699   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1510700   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1510701   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1510702   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1510703   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1510704   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1510705   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1510706   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1510707   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1510708   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1510709   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1510710   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1510711   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1510712   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1510713   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1510714   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1510715   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1510716   +END;
MPRINT(EM_DIAGRAM):   END;
1510717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510718   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1510719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510721   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1510722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510724   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1510725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510726   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1510727   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1510728   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1510729   +        S_Income  +    -1.07733254688396 * S_Kidhome
1510730   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1510731   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1510732   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1510733   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1510734   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1510735   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1510736   +          +     0.34431711603003 * S_NumDealsPurchases
1510737   +          +      0.7134923732819 * S_NumDistPurchases
1510738   +          +     0.05901777448936 * S_NumStorePurchases
1510739   +          +    -0.19803026616936 * S_NumWebPurchases
1510740   +          +     1.34202846183228 * S_NumWebVisitsMonth
1510741   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1510742   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1510743   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1510744   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1510745   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1510746   +        S_Income  +    -0.00255151514163 * S_Kidhome
1510747   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1510748   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1510749   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1510750   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1510751   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1510752   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1510753   +          +     0.45752917132477 * S_NumDealsPurchases
1510754   +          +      0.1559495599293 * S_NumDistPurchases
1510755   +          +    -0.33402213718695 * S_NumStorePurchases
1510756   +          +    -0.39372662704902 * S_NumWebPurchases
1510757   +          +     0.52518189694069 * S_NumWebVisitsMonth
1510758   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1510759   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1510760   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1510761   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1510762   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1510763   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1510764   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1510765   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1510766   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1510767   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1510768   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1510769   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1510770   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1510771   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1510772   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1510773   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1510774   +          +     0.46710555357393 * Marital_StatusDivorced
1510775   +          +    -1.27560428667174 * Marital_StatusMarried
1510776   +          +      1.3147344073121 * Marital_StatusSingle
1510777   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1510778   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1510779   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1510780   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1510781   +          +     0.07422027097612 * Marital_StatusDivorced
1510782   +          +     0.00271855575037 * Marital_StatusMarried
1510783   +          +    -0.00749566028051 * Marital_StatusSingle
1510784   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1510785   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1510786   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1510787   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1510788   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1510789   +END;
MPRINT(EM_DIAGRAM):   END;
1510790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1510791   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1510792   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1510793   +END;
MPRINT(EM_DIAGRAM):   END;
1510794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510795   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1510796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510797   +
1510798   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1510799   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1510800   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1510801   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1510802   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1510803   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1510804   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1510805   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1510806   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1510807   +end;
MPRINT(EM_DIAGRAM):   end;
1510808   +else do;
MPRINT(EM_DIAGRAM):   else do;
1510809   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1510810   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1510811   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1510812   +   end;
MPRINT(EM_DIAGRAM):   end;
1510813   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1510814   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1510815   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1510816   +   end;
MPRINT(EM_DIAGRAM):   end;
1510817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1510818   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1510819   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1510820   +   end;
MPRINT(EM_DIAGRAM):   end;
1510821   +end;
MPRINT(EM_DIAGRAM):   end;
1510822   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1510823   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1510824   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1510825   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1510826   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1510827   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1510828   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1510829   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1510830   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1510831   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1510832   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1510833   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1510834   +END;
MPRINT(EM_DIAGRAM):   END;
1510835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1510836   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1510837   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1510838   +END;
MPRINT(EM_DIAGRAM):   END;
1510839   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1510840   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1510841   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1510842   +END;
MPRINT(EM_DIAGRAM):   END;
1510843   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1510844   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1510845   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1510846   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1510847   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1510848   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1510849   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1510850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510851   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1510852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1510853   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1510854   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1510855   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1510856   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1510857   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1510858   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1510859   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1510860   +END;
MPRINT(EM_DIAGRAM):   END;
1510861   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1510862   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1510863   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1510864   +drop
1510865   +H11
1510866   +H12
1510867   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1510868   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1510869   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1510870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510871   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1510872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510873   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1510874   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1510875   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1510876   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1510877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510878   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1510879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510880   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1510881   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1510882   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1510883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510884   +* Ensmbl28: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 3 of 5;
1510885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510887   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1510888   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1510889   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1510890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1510891   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1510892   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1510893   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1510894   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1510895   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1510896   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1510897   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1510898   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1510899   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1510900   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1510901   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1510902   +LENGTH _WARN_ $4
1510903   +      F_DepVar  $ 12
1510904   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1510905   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1510906   +
1510907   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1510908   +
1510909   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1510910   +
1510911   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1510912   +
1510913   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1510914   +
1510915   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1510916   +
1510917   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1510918   +
1510919   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1510920   +
1510921   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1510922   +
1510923   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1510924   +
1510925   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1510926   +
1510927   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1510928   +
1510929   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1510930   +
1510931   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1510932   +
1510933   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1510934   +
1510935   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1510936   +
1510937   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1510938   +
1510939   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1510940   +
1510941   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1510942   +
1510943   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1510944   +
1510945   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1510946   +
1510947   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1510948   +
1510949   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1510950   +
1510951   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1510952   +
1510953   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1510954   +
1510955   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1510956   +
1510957   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1510958   +
1510959   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1510960   +
1510961   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1510962   +
1510963   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1510964   +
1510965   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1510966   +
1510967   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1510968   +
1510969   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1510970   +
1510971   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1510972   +
1510973   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1510974   +
1510975   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1510976   +
1510977   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1510978   +
1510979   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1510980   +
1510981   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1510982   +
1510983   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1510984   +
1510985   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1510986   +
1510987   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1510988   +
1510989   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1510990   +
1510991   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1510992   +
1510993   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1510994   +
1510995   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1510996   +
1510997   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1510998   +
1510999   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1511000   +
1511001   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1511002   +
1511003   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1511004   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1511005   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1511006   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1511007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511009   +end;
MPRINT(EM_DIAGRAM):   end;
1511010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511012   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1511013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511015   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1511016   +   end;
MPRINT(EM_DIAGRAM):   end;
1511017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511018   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1511019   +   end;
MPRINT(EM_DIAGRAM):   end;
1511020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511021   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1511022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511024   +   end;
MPRINT(EM_DIAGRAM):   end;
1511025   +end;
MPRINT(EM_DIAGRAM):   end;
1511026   +
1511027   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1511028   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1511029   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1511030   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1511031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511033   +end;
MPRINT(EM_DIAGRAM):   end;
1511034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511036   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1511037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511039   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1511040   +   end;
MPRINT(EM_DIAGRAM):   end;
1511041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511042   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1511043   +   end;
MPRINT(EM_DIAGRAM):   end;
1511044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511045   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1511046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511048   +   end;
MPRINT(EM_DIAGRAM):   end;
1511049   +end;
MPRINT(EM_DIAGRAM):   end;
1511050   +
1511051   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1511052   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1511053   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1511054   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1511055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511057   +end;
MPRINT(EM_DIAGRAM):   end;
1511058   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511060   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1511061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511063   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1511064   +   end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
1511065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511066   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1511067   +   end;
MPRINT(EM_DIAGRAM):   end;
1511068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511069   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1511070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511072   +   end;
MPRINT(EM_DIAGRAM):   end;
1511073   +end;
MPRINT(EM_DIAGRAM):   end;
1511074   +
1511075   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1511076   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1511077   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1511078   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1511079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511081   +end;
MPRINT(EM_DIAGRAM):   end;
1511082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511084   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1511085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511087   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1511088   +   end;
MPRINT(EM_DIAGRAM):   end;
1511089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511090   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1511091   +   end;
MPRINT(EM_DIAGRAM):   end;
1511092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511093   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1511094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511096   +   end;
MPRINT(EM_DIAGRAM):   end;
1511097   +end;
MPRINT(EM_DIAGRAM):   end;
1511098   +
1511099   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1511100   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1511101   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1511102   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1511103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511105   +end;
MPRINT(EM_DIAGRAM):   end;
1511106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511108   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1511109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511111   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1511112   +   end;
MPRINT(EM_DIAGRAM):   end;
1511113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511114   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1511115   +   end;
MPRINT(EM_DIAGRAM):   end;
1511116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511117   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1511118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511120   +   end;
MPRINT(EM_DIAGRAM):   end;
1511121   +end;
MPRINT(EM_DIAGRAM):   end;
1511122   +
1511123   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1511124   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1511125   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1511126   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1511127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511129   +end;
MPRINT(EM_DIAGRAM):   end;
1511130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511132   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1511133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511135   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1511136   +   end;
MPRINT(EM_DIAGRAM):   end;
1511137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511138   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1511139   +   end;
MPRINT(EM_DIAGRAM):   end;
1511140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511141   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1511142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511144   +   end;
MPRINT(EM_DIAGRAM):   end;
1511145   +end;
MPRINT(EM_DIAGRAM):   end;
1511146   +
1511147   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1511148   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1511149   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1511150   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1511151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511153   +end;
MPRINT(EM_DIAGRAM):   end;
1511154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511156   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1511157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511158   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1511159   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1511160   +   end;
MPRINT(EM_DIAGRAM):   end;
1511161   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1511162   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1511163   +   end;
MPRINT(EM_DIAGRAM):   end;
1511164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511165   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1511166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511168   +   end;
MPRINT(EM_DIAGRAM):   end;
1511169   +end;
MPRINT(EM_DIAGRAM):   end;
1511170   +
1511171   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1511172   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1511173   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1511174   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1511175   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1511176   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1511177   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1511178   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1511179   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1511180   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1511181   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1511182   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1511183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511185   +end;
MPRINT(EM_DIAGRAM):   end;
1511186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511187   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1511188   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1511189   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511190   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1511191   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1511192   +   end;
MPRINT(EM_DIAGRAM):   end;
1511193   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1511194   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1511195   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1511196   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1511197   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1511198   +   end;
MPRINT(EM_DIAGRAM):   end;
1511199   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1511200   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1511201   +   end;
MPRINT(EM_DIAGRAM):   end;
1511202   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1511203   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1511204   +   end;
MPRINT(EM_DIAGRAM):   end;
1511205   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1511206   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1511207   +   end;
MPRINT(EM_DIAGRAM):   end;
1511208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511209   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1511210   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1511211   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1511212   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1511213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511215   +   end;
MPRINT(EM_DIAGRAM):   end;
1511216   +end;
MPRINT(EM_DIAGRAM):   end;
1511217   +
1511218   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1511219   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1511220   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1511221   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1511222   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1511223   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1511224   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1511225   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1511226   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1511227   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1511228   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1511229   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1511230   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1511231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511233   +end;
MPRINT(EM_DIAGRAM):   end;
1511234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511235   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1511236   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1511237   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511238   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1511239   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1511240   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1511241   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1511242   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1511243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511244   +         end;
MPRINT(EM_DIAGRAM):   end;
1511245   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1511246   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1511247   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1511248   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511249   +            end;
MPRINT(EM_DIAGRAM):   end;
1511250   +         end;
MPRINT(EM_DIAGRAM):   end;
1511251   +      end;
MPRINT(EM_DIAGRAM):   end;
1511252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1511253   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1511254   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1511255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511256   +         end;
MPRINT(EM_DIAGRAM):   end;
1511257   +      end;
MPRINT(EM_DIAGRAM):   end;
1511258   +   end;
MPRINT(EM_DIAGRAM):   end;
1511259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511260   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1511261   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1511262   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511263   +      end;
MPRINT(EM_DIAGRAM):   end;
1511264   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1511265   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1511266   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1511267   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1511268   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1511269   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1511270   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511271   +         end;
MPRINT(EM_DIAGRAM):   end;
1511272   +      end;
MPRINT(EM_DIAGRAM):   end;
1511273   +   end;
MPRINT(EM_DIAGRAM):   end;
1511274   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1511275   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1511276   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1511277   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1511278   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1511279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511281   +   end;
MPRINT(EM_DIAGRAM):   end;
1511282   +end;
MPRINT(EM_DIAGRAM):   end;
1511283   +
1511284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511285   +*** Checking missing input Interval
1511286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1511287   +
1511288   +IF NMISS(
1511289   +   AcceptedCmpTotal ,
1511290   +   Age ,
1511291   +   Frq ,
1511292   +   Income ,
1511293   +   Kidhome ,
1511294   +   Mnt ,
1511295   +   MntFishProducts ,
1511296   +   MntFruits ,
1511297   +   MntGoldProds ,
1511298   +   MntMeatProducts ,
1511299   +   MntSweetProducts ,
1511300   +   MntWines ,
1511301   +   MonthsAsCustomer ,
1511302   +   NumCatalogPurchases ,
1511303   +   NumDealsPurchases ,
1511304   +   NumDistPurchases ,
1511305   +   NumStorePurchases ,
1511306   +   NumWebPurchases ,
1511307   +   NumWebVisitsMonth ,
1511308   +   RFMstat ,
1511309   +   RMntFrq ,
1511310   +   Recency ,
1511311   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1511312   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1511313   +
1511314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511315   +END;
MPRINT(EM_DIAGRAM):   END;
1511316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511317   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1511318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1511320   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1511321   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1511322   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1511323   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1511324   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1511325   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1511326   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1511327   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1511328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1511329   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1511330   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1511331   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1511332   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1511333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1511334   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1511335   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1511336   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1511337   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1511338   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1511339   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1511340   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1511341   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1511342   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1511343   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1511344   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1511345   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1511346   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1511347   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1511348   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1511349   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1511350   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1511351   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1511352   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1511353   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1511354   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1511355   +END;
MPRINT(EM_DIAGRAM):   END;
1511356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1511357   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1511358   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1511359   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1511360   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1511361   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1511362   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1511363   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1511364   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1511365   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1511366   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1511367   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1511368   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1511369   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1511370   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1511371   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1511372   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1511373   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1511374   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1511375   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1511376   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1511377   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1511378   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1511379   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1511380   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1511381   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1511382   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1511383   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1511384   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1511385   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1511386   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1511387   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1511388   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1511389   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1511390   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1511391   +   ELSE S_NumCatalogPurchases
1511392   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1511393   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1511394   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1511395   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1511396   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1511397   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1511398   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1511399   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1511400   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1511401   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1511402   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1511403   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1511404   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1511405   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1511406   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1511407   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1511408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1511409   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1511410   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1511411   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1511412   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1511413   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1511414   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1511415   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1511416   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1511417   +END;
MPRINT(EM_DIAGRAM):   END;
1511418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511419   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1511420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511422   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1511423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511425   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1511426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1511428   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1511429   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1511430   +        S_Income  +     0.49557647195287 * S_Kidhome
1511431   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1511432   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1511433   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1511434   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1511435   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1511436   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1511437   +          +     1.29965538748336 * S_NumDealsPurchases
1511438   +          +     0.16818868463142 * S_NumDistPurchases
1511439   +          +    -0.64507792847411 * S_NumStorePurchases
1511440   +          +    -0.52243329275268 * S_NumWebPurchases
1511441   +          +     1.48521107923182 * S_NumWebVisitsMonth
1511442   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1511443   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1511444   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1511445   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1511446   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1511447   +        S_Income  +       0.536631748871 * S_Kidhome
1511448   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1511449   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1511450   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1511451   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1511452   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1511453   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1511454   +          +    -0.63220849663702 * S_NumDealsPurchases
1511455   +          +    -0.03517440588176 * S_NumDistPurchases
1511456   +          +     0.90435516280473 * S_NumStorePurchases
1511457   +          +     1.02540776095101 * S_NumWebPurchases
1511458   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1511459   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1511460   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1511461   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1511462   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1511463   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1511464   +        S_Income  +     0.45173611630992 * S_Kidhome
1511465   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1511466   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1511467   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1511468   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1511469   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1511470   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1511471   +          +     0.00572910064772 * S_NumDealsPurchases
1511472   +          +    -0.43545754325176 * S_NumDistPurchases
1511473   +          +     0.12831980635185 * S_NumStorePurchases
1511474   +          +     0.02223697618186 * S_NumWebPurchases
1511475   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1511476   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1511477   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1511478   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1511479   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1511480   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1511481   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1511482   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1511483   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1511484   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1511485   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1511486   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1511487   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1511488   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1511489   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1511490   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1511491   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1511492   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1511493   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1511494   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1511495   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1511496   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1511497   +          +     0.14010081581672 * Marital_StatusDivorced
1511498   +          +     0.03574033044092 * Marital_StatusMarried
1511499   +          +    -0.14272769898675 * Marital_StatusSingle
1511500   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1511501   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1511502   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1511503   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1511504   +          +    -0.14878433798537 * Marital_StatusDivorced
1511505   +          +     0.14990226067603 * Marital_StatusMarried
1511506   +          +    -0.50903755449357 * Marital_StatusSingle
1511507   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1511508   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1511509   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1511510   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1511511   +          +    -0.52568922939912 * Marital_StatusDivorced
1511512   +          +     1.74121506979092 * Marital_StatusMarried
1511513   +          +    -1.16029880777095 * Marital_StatusSingle
1511514   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1511515   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1511516   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1511517   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1511518   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1511519   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1511520   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1511521   +END;
MPRINT(EM_DIAGRAM):   END;
1511522   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1511523   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1511524   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1511525   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1511526   +END;
MPRINT(EM_DIAGRAM):   END;
1511527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511528   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1511529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511530   +
1511531   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1511532   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1511533   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1511534   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1511535   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1511536   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511537   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1511538   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1511539   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1511540   +end;
MPRINT(EM_DIAGRAM):   end;
1511541   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511542   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1511543   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1511544   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1511545   +   end;
MPRINT(EM_DIAGRAM):   end;
1511546   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1511547   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1511548   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1511549   +   end;
MPRINT(EM_DIAGRAM):   end;
1511550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511551   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1511552   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1511553   +   end;
MPRINT(EM_DIAGRAM):   end;
1511554   +end;
MPRINT(EM_DIAGRAM):   end;
1511555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1511556   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1511557   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1511558   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1511559   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1511560   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1511561   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1511562   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1511563   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1511564   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1511565   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1511566   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1511567   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1511568   +END;
MPRINT(EM_DIAGRAM):   END;
1511569   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1511570   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1511571   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1511572   +END;
MPRINT(EM_DIAGRAM):   END;
1511573   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1511574   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1511575   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1511576   +END;
MPRINT(EM_DIAGRAM):   END;
1511577   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1511578   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1511579   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1511580   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1511581   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1511582   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1511583   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1511584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511585   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1511586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1511587   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1511588   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1511589   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1511590   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1511591   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1511592   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1511593   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1511594   +END;
MPRINT(EM_DIAGRAM):   END;
1511595   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1511596   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1511597   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1511598   +drop
1511599   +H11
1511600   +H12
1511601   +H13
1511602   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1511603   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1511604   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1511605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511606   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1511607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511608   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1511609   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1511610   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1511611   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1511612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511613   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1511614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511615   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1511616   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1511617   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1511618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511619   +* Ensmbl28: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 4 of 5;
1511620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511622   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1511623   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1511624   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1511625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1511626   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1511627   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1511628   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1511629   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1511630   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1511631   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1511632   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1511633   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1511634   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1511635   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1511636   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1511637   +LENGTH _WARN_ $4
1511638   +      F_DepVar  $ 12
1511639   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1511640   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1511641   +
1511642   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1511643   +
1511644   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1511645   +
1511646   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1511647   +
1511648   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1511649   +
1511650   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1511651   +
1511652   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1511653   +
1511654   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1511655   +
1511656   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1511657   +
1511658   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1511659   +
1511660   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1511661   +
1511662   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1511663   +
1511664   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1511665   +
1511666   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1511667   +
1511668   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1511669   +
1511670   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1511671   +
1511672   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1511673   +
1511674   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1511675   +
1511676   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1511677   +
1511678   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1511679   +
1511680   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1511681   +
1511682   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1511683   +
1511684   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1511685   +
1511686   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1511687   +
1511688   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1511689   +
1511690   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1511691   +
1511692   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1511693   +
1511694   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1511695   +
1511696   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1511697   +
1511698   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1511699   +
1511700   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1511701   +
1511702   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1511703   +
1511704   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1511705   +
1511706   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1511707   +
1511708   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1511709   +
1511710   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1511711   +
1511712   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1511713   +
1511714   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1511715   +
1511716   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1511717   +
1511718   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1511719   +
1511720   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1511721   +
1511722   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1511723   +
1511724   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1511725   +
1511726   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1511727   +
1511728   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1511729   +
1511730   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1511731   +
1511732   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1511733   +
1511734   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1511735   +
1511736   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1511737   +
1511738   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1511739   +
1511740   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1511741   +
1511742   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1511743   +
1511744   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1511745   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1511746   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1511747   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1511748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511750   +end;
MPRINT(EM_DIAGRAM):   end;
1511751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511753   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1511754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511755   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511756   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1511757   +   end;
MPRINT(EM_DIAGRAM):   end;
1511758   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511759   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1511760   +   end;
MPRINT(EM_DIAGRAM):   end;
1511761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511762   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1511763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511765   +   end;
MPRINT(EM_DIAGRAM):   end;
1511766   +end;
MPRINT(EM_DIAGRAM):   end;
1511767   +
1511768   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1511769   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1511770   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1511771   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1511772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511774   +end;
MPRINT(EM_DIAGRAM):   end;
1511775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511777   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1511778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511779   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511780   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1511781   +   end;
MPRINT(EM_DIAGRAM):   end;
1511782   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511783   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1511784   +   end;
MPRINT(EM_DIAGRAM):   end;
1511785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511786   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1511787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511789   +   end;
MPRINT(EM_DIAGRAM):   end;
1511790   +end;
MPRINT(EM_DIAGRAM):   end;
1511791   +
1511792   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1511793   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1511794   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1511795   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1511796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511798   +end;
MPRINT(EM_DIAGRAM):   end;
1511799   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511801   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1511802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511803   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511804   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1511805   +   end;
MPRINT(EM_DIAGRAM):   end;
1511806   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511807   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1511808   +   end;
MPRINT(EM_DIAGRAM):   end;
1511809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511810   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1511811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511813   +   end;
MPRINT(EM_DIAGRAM):   end;
1511814   +end;
MPRINT(EM_DIAGRAM):   end;
1511815   +
1511816   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1511817   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1511818   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1511819   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1511820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511822   +end;
MPRINT(EM_DIAGRAM):   end;
1511823   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511825   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1511826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511827   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511828   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1511829   +   end;
MPRINT(EM_DIAGRAM):   end;
1511830   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511831   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1511832   +   end;
MPRINT(EM_DIAGRAM):   end;
1511833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511834   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1511835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511837   +   end;
MPRINT(EM_DIAGRAM):   end;
1511838   +end;
MPRINT(EM_DIAGRAM):   end;
1511839   +
1511840   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1511841   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1511842   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1511843   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1511844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511846   +end;
MPRINT(EM_DIAGRAM):   end;
1511847   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511849   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1511850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511851   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511852   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1511853   +   end;
MPRINT(EM_DIAGRAM):   end;
1511854   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511855   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1511856   +   end;
MPRINT(EM_DIAGRAM):   end;
1511857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511858   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1511859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511861   +   end;
MPRINT(EM_DIAGRAM):   end;
1511862   +end;
MPRINT(EM_DIAGRAM):   end;
1511863   +
1511864   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1511865   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1511866   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1511867   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1511868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511870   +end;
MPRINT(EM_DIAGRAM):   end;
1511871   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511873   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1511874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1511876   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1511877   +   end;
MPRINT(EM_DIAGRAM):   end;
1511878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1511879   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1511880   +   end;
MPRINT(EM_DIAGRAM):   end;
1511881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511882   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1511883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511885   +   end;
MPRINT(EM_DIAGRAM):   end;
1511886   +end;
MPRINT(EM_DIAGRAM):   end;
1511887   +
1511888   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1511889   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1511890   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1511891   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1511892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511894   +end;
MPRINT(EM_DIAGRAM):   end;
1511895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1511897   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1511898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511899   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1511900   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1511901   +   end;
MPRINT(EM_DIAGRAM):   end;
1511902   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1511903   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1511904   +   end;
MPRINT(EM_DIAGRAM):   end;
1511905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511906   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1511907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511909   +   end;
MPRINT(EM_DIAGRAM):   end;
1511910   +end;
MPRINT(EM_DIAGRAM):   end;
1511911   +
1511912   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1511913   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1511914   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1511915   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1511916   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1511917   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1511918   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1511919   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1511920   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1511921   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1511922   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1511923   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1511924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511926   +end;
MPRINT(EM_DIAGRAM):   end;
1511927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511928   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1511929   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1511930   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511931   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1511932   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1511933   +   end;
MPRINT(EM_DIAGRAM):   end;
1511934   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1511935   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1511936   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1511937   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1511938   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1511939   +   end;
MPRINT(EM_DIAGRAM):   end;
1511940   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1511941   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1511942   +   end;
MPRINT(EM_DIAGRAM):   end;
1511943   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1511944   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1511945   +   end;
MPRINT(EM_DIAGRAM):   end;
1511946   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1511947   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1511948   +   end;
MPRINT(EM_DIAGRAM):   end;
1511949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1511950   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1511951   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1511952   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1511953   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1511954   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1511955   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511956   +   end;
MPRINT(EM_DIAGRAM):   end;
1511957   +end;
MPRINT(EM_DIAGRAM):   end;
1511958   +
1511959   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1511960   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1511961   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1511962   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1511963   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1511964   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1511965   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1511966   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1511967   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1511968   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1511969   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1511970   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1511971   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1511972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1511973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1511974   +end;
MPRINT(EM_DIAGRAM):   end;
1511975   +else do;
MPRINT(EM_DIAGRAM):   else do;
1511976   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1511977   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1511978   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1511979   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1511980   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1511981   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1511982   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1511983   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1511984   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511985   +         end;
MPRINT(EM_DIAGRAM):   end;
1511986   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1511987   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1511988   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1511989   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511990   +            end;
MPRINT(EM_DIAGRAM):   end;
1511991   +         end;
MPRINT(EM_DIAGRAM):   end;
1511992   +      end;
MPRINT(EM_DIAGRAM):   end;
1511993   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1511994   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1511995   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1511996   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1511997   +         end;
MPRINT(EM_DIAGRAM):   end;
1511998   +      end;
MPRINT(EM_DIAGRAM):   end;
1511999   +   end;
MPRINT(EM_DIAGRAM):   end;
1512000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512001   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1512002   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1512003   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512004   +      end;
MPRINT(EM_DIAGRAM):   end;
1512005   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1512006   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1512007   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1512008   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1512009   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1512010   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1512011   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512012   +         end;
MPRINT(EM_DIAGRAM):   end;
1512013   +      end;
MPRINT(EM_DIAGRAM):   end;
1512014   +   end;
MPRINT(EM_DIAGRAM):   end;
1512015   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1512016   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1512017   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1512018   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1512019   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1512020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512022   +   end;
MPRINT(EM_DIAGRAM):   end;
1512023   +end;
MPRINT(EM_DIAGRAM):   end;
1512024   +
1512025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512026   +*** Checking missing input Interval
1512027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1512028   +
1512029   +IF NMISS(
1512030   +   AcceptedCmpTotal ,
1512031   +   Age ,
1512032   +   Frq ,
1512033   +   Income ,
1512034   +   Kidhome ,
1512035   +   Mnt ,
1512036   +   MntFishProducts ,
1512037   +   MntFruits ,
1512038   +   MntGoldProds ,
1512039   +   MntMeatProducts ,
1512040   +   MntSweetProducts ,
1512041   +   MntWines ,
1512042   +   MonthsAsCustomer ,
1512043   +   NumCatalogPurchases ,
1512044   +   NumDealsPurchases ,
1512045   +   NumDistPurchases ,
1512046   +   NumStorePurchases ,
1512047   +   NumWebPurchases ,
1512048   +   NumWebVisitsMonth ,
1512049   +   RFMstat ,
1512050   +   RMntFrq ,
1512051   +   Recency ,
1512052   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1512053   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1512054   +
1512055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512056   +END;
MPRINT(EM_DIAGRAM):   END;
1512057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512058   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1512059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512060   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1512061   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1512062   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1512063   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1512064   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1512065   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1512066   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1512067   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1512068   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1512069   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1512070   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1512071   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1512072   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1512073   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1512074   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1512075   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1512076   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1512077   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1512078   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1512079   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1512080   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1512081   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1512082   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1512083   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1512084   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1512085   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1512086   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1512087   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1512088   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1512089   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1512090   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1512091   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1512092   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1512093   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1512094   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1512095   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1512096   +END;
MPRINT(EM_DIAGRAM):   END;
1512097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1512098   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1512099   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1512100   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1512101   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1512102   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1512103   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1512104   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1512105   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1512106   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1512107   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1512108   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1512109   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1512110   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1512111   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1512112   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1512113   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1512114   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1512115   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1512116   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1512117   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1512118   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1512119   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1512120   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1512121   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1512122   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1512123   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1512124   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1512125   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1512126   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1512127   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1512128   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1512129   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1512130   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1512131   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1512132   +   ELSE S_NumCatalogPurchases
1512133   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1512134   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1512135   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1512136   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1512137   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1512138   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1512139   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1512140   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1512141   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1512142   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1512143   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1512144   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1512145   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1512146   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1512147   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1512148   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1512149   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1512150   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1512151   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1512152   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1512153   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1512154   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1512155   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1512156   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1512157   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1512158   +END;
MPRINT(EM_DIAGRAM):   END;
1512159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512160   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1512161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512163   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1512164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512166   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1512167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512168   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1512169   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1512170   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1512171   +        S_Income  +    -0.09693130155866 * S_Kidhome
1512172   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1512173   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1512174   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1512175   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1512176   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1512177   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1512178   +          +     0.87256063855463 * S_NumDealsPurchases
1512179   +          +     0.24228318068596 * S_NumDistPurchases
1512180   +          +    -0.65575177240856 * S_NumStorePurchases
1512181   +          +    -0.94105747825406 * S_NumWebPurchases
1512182   +          +     0.88098930350141 * S_NumWebVisitsMonth
1512183   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1512184   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1512185   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1512186   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1512187   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1512188   +        S_Income  +    -0.48351377369429 * S_Kidhome
1512189   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1512190   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1512191   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1512192   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1512193   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1512194   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1512195   +          +     0.19198092320653 * S_NumDealsPurchases
1512196   +          +    -0.01877290175933 * S_NumDistPurchases
1512197   +          +    -0.61698509852352 * S_NumStorePurchases
1512198   +          +    -0.36114842161331 * S_NumWebPurchases
1512199   +          +     0.87653599441887 * S_NumWebVisitsMonth
1512200   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1512201   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1512202   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1512203   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1512204   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1512205   +        S_Income  +    -0.03117320792997 * S_Kidhome
1512206   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1512207   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1512208   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1512209   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1512210   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1512211   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1512212   +          +    -0.17772008430544 * S_NumDealsPurchases
1512213   +          +    -0.24320624261016 * S_NumDistPurchases
1512214   +          +     0.42056923271106 * S_NumStorePurchases
1512215   +          +    -0.28718554863857 * S_NumWebPurchases
1512216   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1512217   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1512218   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1512219   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1512220   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1512221   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1512222   +        S_Income  +     -0.0433863245185 * S_Kidhome
1512223   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1512224   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1512225   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1512226   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1512227   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1512228   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1512229   +          +    -0.43652501997552 * S_NumDealsPurchases
1512230   +          +     0.17317052107867 * S_NumDistPurchases
1512231   +          +     0.23672921935551 * S_NumStorePurchases
1512232   +          +     0.49273989445476 * S_NumWebPurchases
1512233   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1512234   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1512235   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1512236   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1512237   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1512238   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1512239   +        S_Income  +     0.59347379159371 * S_Kidhome
1512240   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1512241   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1512242   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1512243   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1512244   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1512245   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1512246   +          +     0.06887104992711 * S_NumDealsPurchases
1512247   +          +    -0.03976087278251 * S_NumDistPurchases
1512248   +          +     -0.0289014951041 * S_NumStorePurchases
1512249   +          +    -0.08062500939119 * S_NumWebPurchases
1512250   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1512251   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1512252   +        S_RMntFrq  +       0.940313744576 * S_Recency
1512253   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1512254   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1512255   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1512256   +        S_Income  +    -0.55245961592835 * S_Kidhome
1512257   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1512258   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1512259   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1512260   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1512261   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1512262   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1512263   +          +    -0.50731731808528 * S_NumDealsPurchases
1512264   +          +     -0.4854662155502 * S_NumDistPurchases
1512265   +          +     0.21175181231244 * S_NumStorePurchases
1512266   +          +     0.04923223410585 * S_NumWebPurchases
1512267   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1512268   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1512269   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1512270   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1512271   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1512272   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1512273   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1512274   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1512275   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1512276   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1512277   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1512278   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1512279   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1512280   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1512281   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1512282   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1512283   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1512284   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1512285   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1512286   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1512287   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1512288   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1512289   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1512290   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1512291   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1512292   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1512293   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1512294   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1512295   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1512296   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1512297   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1512298   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1512299   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1512300   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1512301   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1512302   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1512303   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1512304   +          +     0.13102231169849 * Marital_StatusDivorced
1512305   +          +     0.13221932247035 * Marital_StatusMarried
1512306   +          +    -0.28666963919866 * Marital_StatusSingle
1512307   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1512308   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1512309   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1512310   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1512311   +          +     0.36873255525654 * Marital_StatusDivorced
1512312   +          +    -0.54422050380085 * Marital_StatusMarried
1512313   +          +     0.58130553469516 * Marital_StatusSingle
1512314   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1512315   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1512316   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1512317   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1512318   +          +    -0.07480235993304 * Marital_StatusDivorced
1512319   +          +     0.31705972445069 * Marital_StatusMarried
1512320   +          +    -0.08626328185895 * Marital_StatusSingle
1512321   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1512322   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1512323   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1512324   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1512325   +          +    -0.06733679615115 * Marital_StatusDivorced
1512326   +          +     0.23111557732379 * Marital_StatusMarried
1512327   +          +    -0.34379469870478 * Marital_StatusSingle
1512328   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1512329   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1512330   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1512331   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1512332   +          +    -0.07108588070668 * Marital_StatusDivorced
1512333   +          +     1.10060875265784 * Marital_StatusMarried
1512334   +          +    -0.74271327534863 * Marital_StatusSingle
1512335   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1512336   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1512337   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1512338   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1512339   +          +    -0.19461023827362 * Marital_StatusDivorced
1512340   +          +     -0.4165676037681 * Marital_StatusMarried
1512341   +          +     0.43379324993555 * Marital_StatusSingle
1512342   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1512343   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1512344   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1512345   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1512346   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1512347   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1512348   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1512349   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1512350   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1512351   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1512352   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1512353   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1512354   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1512355   +END;
MPRINT(EM_DIAGRAM):   END;
1512356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1512357   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1512358   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1512359   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1512360   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1512361   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1512362   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1512363   +END;
MPRINT(EM_DIAGRAM):   END;
1512364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512365   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1512366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512367   +
1512368   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1512369   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1512370   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1512371   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1512372   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1512373   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512374   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1512375   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1512376   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1512377   +end;
MPRINT(EM_DIAGRAM):   end;
1512378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512379   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1512380   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1512381   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1512382   +   end;
MPRINT(EM_DIAGRAM):   end;
1512383   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1512384   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1512385   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1512386   +   end;
MPRINT(EM_DIAGRAM):   end;
1512387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512388   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1512389   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1512390   +   end;
MPRINT(EM_DIAGRAM):   end;
1512391   +end;
MPRINT(EM_DIAGRAM):   end;
1512392   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1512393   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1512394   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1512395   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1512396   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1512397   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1512398   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1512399   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1512400   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1512401   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1512402   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1512403   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1512404   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1512405   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1512406   +END;
MPRINT(EM_DIAGRAM):   END;
1512407   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1512408   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1512409   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1512410   +END;
MPRINT(EM_DIAGRAM):   END;
1512411   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1512412   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1512413   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1512414   +END;
MPRINT(EM_DIAGRAM):   END;
1512415   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1512416   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1512417   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1512418   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1512419   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1512420   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1512421   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1512422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512423   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1512424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512425   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1512426   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1512427   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1512428   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1512429   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1512430   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1512431   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1512432   +END;
MPRINT(EM_DIAGRAM):   END;
1512433   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1512434   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1512435   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1512436   +drop
1512437   +H11
1512438   +H12
1512439   +H13
1512440   +H14
1512441   +H15
1512442   +H16
1512443   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1512444   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1512445   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1512446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512447   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1512448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512449   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1512450   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1512451   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1512452   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1512453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512454   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1512455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512456   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1512457   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1512458   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1512459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512460   +* Ensmbl28: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 5 of 5;
1512461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512463   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1512464   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1512465   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1512466   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1512467   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1512468   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1512469   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1512470   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1512471   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1512472   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1512473   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1512474   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1512475   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1512476   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1512477   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1512478   +LENGTH _WARN_ $4
1512479   +      F_DepVar  $ 12
1512480   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1512481   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1512482   +
1512483   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1512484   +
1512485   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1512486   +
1512487   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1512488   +
1512489   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1512490   +
1512491   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1512492   +
1512493   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1512494   +
1512495   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1512496   +
1512497   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1512498   +
1512499   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1512500   +
1512501   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1512502   +
1512503   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1512504   +
1512505   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1512506   +
1512507   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1512508   +
1512509   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1512510   +
1512511   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1512512   +
1512513   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1512514   +
1512515   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1512516   +
1512517   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1512518   +
1512519   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1512520   +
1512521   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1512522   +
1512523   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1512524   +
1512525   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1512526   +
1512527   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1512528   +
1512529   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1512530   +
1512531   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1512532   +
1512533   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1512534   +
1512535   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1512536   +
1512537   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1512538   +
1512539   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1512540   +
1512541   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1512542   +
1512543   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1512544   +
1512545   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1512546   +
1512547   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1512548   +
1512549   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1512550   +
1512551   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1512552   +
1512553   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1512554   +
1512555   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1512556   +
1512557   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1512558   +
1512559   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1512560   +
1512561   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1512562   +
1512563   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1512564   +
1512565   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1512566   +
1512567   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1512568   +
1512569   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1512570   +
1512571   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1512572   +
1512573   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1512574   +
1512575   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1512576   +
1512577   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1512578   +
1512579   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1512580   +
1512581   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1512582   +
1512583   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1512584   +
1512585   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1512586   +
1512587   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1512588   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1512589   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1512590   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1512591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512593   +end;
MPRINT(EM_DIAGRAM):   end;
1512594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512596   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1512597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512598   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512599   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1512600   +   end;
MPRINT(EM_DIAGRAM):   end;
1512601   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512602   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1512603   +   end;
MPRINT(EM_DIAGRAM):   end;
1512604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512605   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1512606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512608   +   end;
MPRINT(EM_DIAGRAM):   end;
1512609   +end;
MPRINT(EM_DIAGRAM):   end;
1512610   +
1512611   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1512612   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1512613   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1512614   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1512615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512617   +end;
MPRINT(EM_DIAGRAM):   end;
1512618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512620   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1512621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512622   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512623   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1512624   +   end;
MPRINT(EM_DIAGRAM):   end;
1512625   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512626   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1512627   +   end;
MPRINT(EM_DIAGRAM):   end;
1512628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512629   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1512630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512632   +   end;
MPRINT(EM_DIAGRAM):   end;
1512633   +end;
MPRINT(EM_DIAGRAM):   end;
1512634   +
1512635   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1512636   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1512637   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1512638   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1512639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512641   +end;
MPRINT(EM_DIAGRAM):   end;
1512642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512644   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1512645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512646   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512647   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1512648   +   end;
MPRINT(EM_DIAGRAM):   end;
1512649   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512650   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1512651   +   end;
MPRINT(EM_DIAGRAM):   end;
1512652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512653   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1512654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512656   +   end;
MPRINT(EM_DIAGRAM):   end;
1512657   +end;
MPRINT(EM_DIAGRAM):   end;
1512658   +
1512659   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1512660   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1512661   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1512662   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1512663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512665   +end;
MPRINT(EM_DIAGRAM):   end;
1512666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512668   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1512669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512670   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512671   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1512672   +   end;
MPRINT(EM_DIAGRAM):   end;
1512673   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512674   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1512675   +   end;
MPRINT(EM_DIAGRAM):   end;
1512676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512677   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1512678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512680   +   end;
MPRINT(EM_DIAGRAM):   end;
1512681   +end;
MPRINT(EM_DIAGRAM):   end;
1512682   +
1512683   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1512684   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1512685   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1512686   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1512687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512689   +end;
MPRINT(EM_DIAGRAM):   end;
1512690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512692   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1512693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512695   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1512696   +   end;
MPRINT(EM_DIAGRAM):   end;
1512697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512698   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1512699   +   end;
MPRINT(EM_DIAGRAM):   end;
1512700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512701   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1512702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512704   +   end;
MPRINT(EM_DIAGRAM):   end;
1512705   +end;
MPRINT(EM_DIAGRAM):   end;
1512706   +
1512707   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1512708   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1512709   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1512710   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1512711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512713   +end;
MPRINT(EM_DIAGRAM):   end;
1512714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512716   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1512717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512718   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1512719   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1512720   +   end;
MPRINT(EM_DIAGRAM):   end;
1512721   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1512722   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1512723   +   end;
MPRINT(EM_DIAGRAM):   end;
1512724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512725   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1512726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512728   +   end;
MPRINT(EM_DIAGRAM):   end;
1512729   +end;
MPRINT(EM_DIAGRAM):   end;
1512730   +
1512731   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1512732   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1512733   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1512734   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1512735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512737   +end;
MPRINT(EM_DIAGRAM):   end;
1512738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1512740   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1512741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512742   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1512743   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1512744   +   end;
MPRINT(EM_DIAGRAM):   end;
1512745   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1512746   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1512747   +   end;
MPRINT(EM_DIAGRAM):   end;
1512748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512749   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1512750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512752   +   end;
MPRINT(EM_DIAGRAM):   end;
1512753   +end;
MPRINT(EM_DIAGRAM):   end;
1512754   +
1512755   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1512756   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1512757   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1512758   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1512759   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1512760   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1512761   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1512762   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1512763   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1512764   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1512765   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1512766   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1512767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512769   +end;
MPRINT(EM_DIAGRAM):   end;
1512770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512771   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1512772   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1512773   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512774   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1512775   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1512776   +   end;
MPRINT(EM_DIAGRAM):   end;
1512777   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1512778   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1512779   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1512780   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1512781   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1512782   +   end;
MPRINT(EM_DIAGRAM):   end;
1512783   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1512784   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1512785   +   end;
MPRINT(EM_DIAGRAM):   end;
1512786   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1512787   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1512788   +   end;
MPRINT(EM_DIAGRAM):   end;
1512789   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1512790   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1512791   +   end;
MPRINT(EM_DIAGRAM):   end;
1512792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512793   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1512794   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1512795   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1512796   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1512797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512799   +   end;
MPRINT(EM_DIAGRAM):   end;
1512800   +end;
MPRINT(EM_DIAGRAM):   end;
1512801   +
1512802   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1512803   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1512804   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1512805   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1512806   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1512807   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1512808   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1512809   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1512810   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1512811   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1512812   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1512813   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1512814   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1512815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1512816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512817   +end;
MPRINT(EM_DIAGRAM):   end;
1512818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1512819   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1512820   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1512821   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1512822   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1512823   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1512824   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1512825   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1512826   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1512827   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512828   +         end;
MPRINT(EM_DIAGRAM):   end;
1512829   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1512830   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1512831   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1512832   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512833   +            end;
MPRINT(EM_DIAGRAM):   end;
1512834   +         end;
MPRINT(EM_DIAGRAM):   end;
1512835   +      end;
MPRINT(EM_DIAGRAM):   end;
1512836   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1512837   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1512838   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1512839   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512840   +         end;
MPRINT(EM_DIAGRAM):   end;
1512841   +      end;
MPRINT(EM_DIAGRAM):   end;
1512842   +   end;
MPRINT(EM_DIAGRAM):   end;
1512843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1512844   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1512845   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1512846   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512847   +      end;
MPRINT(EM_DIAGRAM):   end;
1512848   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1512849   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1512850   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1512851   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1512852   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1512853   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1512854   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1512855   +         end;
MPRINT(EM_DIAGRAM):   end;
1512856   +      end;
MPRINT(EM_DIAGRAM):   end;
1512857   +   end;
MPRINT(EM_DIAGRAM):   end;
1512858   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1512859   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1512860   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1512861   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1512862   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1512863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1512864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512865   +   end;
MPRINT(EM_DIAGRAM):   end;
1512866   +end;
MPRINT(EM_DIAGRAM):   end;
1512867   +
1512868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512869   +*** Checking missing input Interval
1512870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1512871   +
1512872   +IF NMISS(
1512873   +   AcceptedCmpTotal ,
1512874   +   Age ,
1512875   +   Frq ,
1512876   +   Income ,
1512877   +   Kidhome ,
1512878   +   Mnt ,
1512879   +   MntFishProducts ,
1512880   +   MntFruits ,
1512881   +   MntGoldProds ,
1512882   +   MntMeatProducts ,
1512883   +   MntSweetProducts ,
1512884   +   MntWines ,
1512885   +   MonthsAsCustomer ,
1512886   +   NumCatalogPurchases ,
1512887   +   NumDealsPurchases ,
1512888   +   NumDistPurchases ,
1512889   +   NumStorePurchases ,
1512890   +   NumWebPurchases ,
1512891   +   NumWebVisitsMonth ,
1512892   +   RFMstat ,
1512893   +   RMntFrq ,
1512894   +   Recency ,
1512895   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1512896   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1512897   +
1512898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1512899   +END;
MPRINT(EM_DIAGRAM):   END;
1512900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512901   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1512902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1512903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1512904   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1512905   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1512906   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1512907   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1512908   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1512909   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1512910   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1512911   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1512912   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1512913   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1512914   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1512915   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1512916   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1512917   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1512918   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1512919   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1512920   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1512921   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1512922   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1512923   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1512924   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1512925   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1512926   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1512927   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1512928   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1512929   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1512930   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1512931   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1512932   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1512933   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1512934   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1512935   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1512936   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1512937   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1512938   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1512939   +END;
MPRINT(EM_DIAGRAM):   END;
1512940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1512941   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1512942   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1512943   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1512944   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1512945   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1512946   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1512947   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1512948   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1512949   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1512950   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1512951   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1512952   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1512953   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1512954   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1512955   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1512956   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1512957   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1512958   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1512959   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1512960   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1512961   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1512962   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1512963   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1512964   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1512965   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1512966   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1512967   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1512968   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1512969   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1512970   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1512971   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1512972   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1512973   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1512974   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1512975   +   ELSE S_NumCatalogPurchases
1512976   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1512977   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1512978   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1512979   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1512980   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1512981   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1512982   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1512983   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1512984   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1512985   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1512986   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1512987   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1512988   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1512989   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1512990   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1512991   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1512992   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1512993   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1512994   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1512995   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1512996   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1512997   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1512998   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1512999   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1513000   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1513001   +END;
MPRINT(EM_DIAGRAM):   END;
1513002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513003   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1513004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513006   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1513007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513009   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1513010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1513012   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1513013   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1513014   +        S_Income  +    -0.48552270697514 * S_Kidhome
1513015   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1513016   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1513017   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1513018   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1513019   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1513020   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1513021   +          +    -0.23083265836869 * S_NumDealsPurchases
1513022   +          +     0.18257445063797 * S_NumDistPurchases
1513023   +          +     0.38040778765927 * S_NumStorePurchases
1513024   +          +     0.25798779223068 * S_NumWebPurchases
1513025   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1513026   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1513027   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1513028   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1513029   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1513030   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1513031   +        S_Income  +     0.23694585796773 * S_Kidhome
1513032   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1513033   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1513034   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1513035   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1513036   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1513037   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1513038   +          +    -0.07783411363525 * S_NumDealsPurchases
1513039   +          +     0.41281579441285 * S_NumDistPurchases
1513040   +          +     0.22243606867939 * S_NumStorePurchases
1513041   +          +     0.27174952755013 * S_NumWebPurchases
1513042   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1513043   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1513044   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1513045   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1513046   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1513047   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1513048   +        S_Income  +     0.20802765248799 * S_Kidhome
1513049   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1513050   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1513051   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1513052   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1513053   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1513054   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1513055   +          +     0.09455783738093 * S_NumDealsPurchases
1513056   +          +    -0.06039304909585 * S_NumDistPurchases
1513057   +          +    -0.10306611685636 * S_NumStorePurchases
1513058   +          +    -0.00323837049664 * S_NumWebPurchases
1513059   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1513060   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1513061   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1513062   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1513063   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1513064   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1513065   +        S_Income  +     0.26381864865425 * S_Kidhome
1513066   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1513067   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1513068   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1513069   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1513070   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1513071   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1513072   +          +      0.8306613243419 * S_NumDealsPurchases
1513073   +          +     0.31439474207278 * S_NumDistPurchases
1513074   +          +    -0.62131474975756 * S_NumStorePurchases
1513075   +          +    -1.04845843654047 * S_NumWebPurchases
1513076   +          +     0.13255915506164 * S_NumWebVisitsMonth
1513077   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1513078   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1513079   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1513080   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1513081   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1513082   +        S_Income  +    -0.71599192201946 * S_Kidhome
1513083   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1513084   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1513085   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1513086   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1513087   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1513088   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1513089   +          +     0.63537278643623 * S_NumDealsPurchases
1513090   +          +     0.00410348485264 * S_NumDistPurchases
1513091   +          +    -0.78287523583925 * S_NumStorePurchases
1513092   +          +    -0.73614491225189 * S_NumWebPurchases
1513093   +          +      1.5997596522354 * S_NumWebVisitsMonth
1513094   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1513095   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1513096   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1513097   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1513098   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1513099   +        S_Income  +    -0.23853377939411 * S_Kidhome
1513100   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1513101   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1513102   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1513103   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1513104   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1513105   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1513106   +          +    -0.30899603957269 * S_NumDealsPurchases
1513107   +          +     0.11839581082877 * S_NumDistPurchases
1513108   +          +     0.20149797391098 * S_NumStorePurchases
1513109   +          +      0.1616654107491 * S_NumWebPurchases
1513110   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1513111   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1513112   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1513113   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1513114   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1513115   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1513116   +        S_Income  +    -0.48650790963695 * S_Kidhome
1513117   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1513118   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1513119   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1513120   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1513121   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1513122   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1513123   +          +    -0.18889005468777 * S_NumDealsPurchases
1513124   +          +     0.17240918361456 * S_NumDistPurchases
1513125   +          +     0.11704610685994 * S_NumStorePurchases
1513126   +          +     0.23031393640508 * S_NumWebPurchases
1513127   +          +     0.66002859819524 * S_NumWebVisitsMonth
1513128   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1513129   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1513130   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1513131   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1513132   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1513133   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1513134   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1513135   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1513136   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1513137   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1513138   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1513139   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1513140   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1513141   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1513142   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1513143   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1513144   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1513145   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1513146   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1513147   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1513148   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1513149   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1513150   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1513151   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1513152   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1513153   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1513154   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1513155   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1513156   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1513157   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1513158   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1513159   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1513160   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1513161   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1513162   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1513163   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1513164   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1513165   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1513166   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1513167   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1513168   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1513169   +          +     0.43452164349556 * Marital_StatusDivorced
1513170   +          +    -0.46042593279944 * Marital_StatusMarried
1513171   +          +     0.45533323427801 * Marital_StatusSingle
1513172   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1513173   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1513174   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1513175   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1513176   +          +     0.11002244687305 * Marital_StatusDivorced
1513177   +          +     0.52424349905683 * Marital_StatusMarried
1513178   +          +     -0.3969250366321 * Marital_StatusSingle
1513179   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1513180   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1513181   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1513182   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1513183   +          +    -0.05300704180744 * Marital_StatusDivorced
1513184   +          +     0.07805487103106 * Marital_StatusMarried
1513185   +          +     0.20033339442958 * Marital_StatusSingle
1513186   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1513187   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1513188   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1513189   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1513190   +          +    -0.42379596543146 * Marital_StatusDivorced
1513191   +          +     0.66738351478416 * Marital_StatusMarried
1513192   +          +    -0.37324277578462 * Marital_StatusSingle
1513193   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1513194   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1513195   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1513196   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1513197   +          +     0.88761025578489 * Marital_StatusDivorced
1513198   +          +    -0.85905539883385 * Marital_StatusMarried
1513199   +          +     0.73467737758558 * Marital_StatusSingle
1513200   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1513201   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1513202   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1513203   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1513204   +          +    -0.11980818075461 * Marital_StatusDivorced
1513205   +          +    -0.16572953052582 * Marital_StatusMarried
1513206   +          +     0.34617421331983 * Marital_StatusSingle
1513207   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1513208   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1513209   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1513210   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1513211   +          +     0.14874886057777 * Marital_StatusDivorced
1513212   +          +     -1.0463076915992 * Marital_StatusMarried
1513213   +          +     0.72937563672763 * Marital_StatusSingle
1513214   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1513215   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1513216   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1513217   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1513218   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1513219   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1513220   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1513221   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1513222   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1513223   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1513224   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1513225   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1513226   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1513227   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1513228   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1513229   +END;
MPRINT(EM_DIAGRAM):   END;
1513230   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1513231   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1513232   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1513233   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1513234   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1513235   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1513236   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1513237   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1513238   +END;
MPRINT(EM_DIAGRAM):   END;
1513239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513240   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1513241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513242   +
1513243   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1513244   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1513245   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1513246   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1513247   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1513248   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513249   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1513250   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1513251   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1513252   +end;
MPRINT(EM_DIAGRAM):   end;
1513253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513254   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1513255   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1513256   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1513257   +   end;
MPRINT(EM_DIAGRAM):   end;
1513258   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1513259   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1513260   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1513261   +   end;
MPRINT(EM_DIAGRAM):   end;
1513262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513263   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1513264   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1513265   +   end;
MPRINT(EM_DIAGRAM):   end;
1513266   +end;
MPRINT(EM_DIAGRAM):   end;
1513267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1513268   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1513269   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1513270   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1513271   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1513272   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1513273   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1513274   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1513275   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1513276   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1513277   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1513278   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1513279   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1513280   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1513281   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1513282   +END;
MPRINT(EM_DIAGRAM):   END;
1513283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1513284   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1513285   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1513286   +END;
MPRINT(EM_DIAGRAM):   END;
1513287   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1513288   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1513289   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1513290   +END;
MPRINT(EM_DIAGRAM):   END;
1513291   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1513292   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1513293   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1513294   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1513295   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1513296   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1513297   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1513298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513299   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1513300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513301   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1513302   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1513303   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1513304   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1513305   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1513306   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1513307   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1513308   +END;
MPRINT(EM_DIAGRAM):   END;
1513309   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1513310   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1513311   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1513312   +drop
1513313   +H11
1513314   +H12
1513315   +H13
1513316   +H14
1513317   +H15
1513318   +H16
1513319   +H17
1513320   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1513321   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1513322   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1513323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513324   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1513325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513326   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1513327   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1513328   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1513329   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1513330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513331   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1513332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513333   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1513334   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1513335   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1513336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513337   +* Ensmbl28: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Maximum Posteriors of 5 models;
1513338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513339   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1513340   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1513341   +P_DepVar1 = max(
1513342   +Neural4_P_DepVar1 ,
1513343   +Neural2_P_DepVar1 ,
1513344   +Neural3_P_DepVar1 ,
1513345   +Neural9_P_DepVar1 ,
1513346   +Neural10_P_DepVar1
1513347   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural4_P_DepVar1 , Neural2_P_DepVar1 , 
Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1513348   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1513349   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1513350   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1513351   +end;
MPRINT(EM_DIAGRAM):   end;
1513352   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1513353   +P_DepVar0 = max(
1513354   +Neural4_P_DepVar0 ,
1513355   +Neural2_P_DepVar0 ,
1513356   +Neural3_P_DepVar0 ,
1513357   +Neural9_P_DepVar0 ,
1513358   +Neural10_P_DepVar0
1513359   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural4_P_DepVar0 , Neural2_P_DepVar0 , 
Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1513360   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1513361   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1513362   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1513363   +end;
MPRINT(EM_DIAGRAM):   end;
1513364   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1513365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513366   +* Ensmbl28: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Classification Vars;
1513367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513368   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1513369   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1513370   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1513371   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1513372   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1513373   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1513374   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1513375   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1513376   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1513377   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1513378   +end;
MPRINT(EM_DIAGRAM):   end;
1513379   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1513380   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1513381   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1513382   +end;
MPRINT(EM_DIAGRAM):   end;
1513383   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1513384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513385   +* Ensmbl28: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Producing Unformatted variable;
1513386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513387   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1513388   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1513389   +else
1513390   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1513391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513392   +* Ensmbl28: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing _WARN_ Variable;
1513393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513394   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1513395   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1513396   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1513397   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1513398   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1513399   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1513400   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1513401   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1513402   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1513403   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1513404   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1513405   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1513406   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1513407   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1513408   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1513409   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1513410   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1513411   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1513412   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1513413   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1513413  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1513414   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1513414  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1513415   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1513415  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1513416   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1513416  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1513417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513418   +* Ensmbl28: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Residual Vars;
1513419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513420   +if
1513421   +F_DepVar NE '1'
1513422   +AND F_DepVar NE '0'
1513423   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1513424   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1513425   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1513426   +end;
MPRINT(EM_DIAGRAM):   end;
1513427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513428   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1513429   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1513430   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1513431   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1513432   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1513433   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1513434   +END;
MPRINT(EM_DIAGRAM):   END;
1513435   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1513436    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL28_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1513437    quit;
1513438    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1513439    filename emflow
1513439  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring NEURAL4_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513440    *------------------------------------------------------------*;
1513441    * Ensmbl28: Scoring NEURAL4_VALIDATE data;
1513442    *------------------------------------------------------------*;
1513443    data EMWS8.Ensmbl28_VALIDATE
1513444    / view=EMWS8.Ensmbl28_VALIDATE
1513445    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_VALIDATE / view=EMWS8.Ensmbl28_VALIDATE ;
1513446    set EMWS8.Neural4_VALIDATE
1513447    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_VALIDATE ;
1513448    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas.
1513449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513450   +* Ensmbl28: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Combine model for DepVar;
1513451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513452   +* Ensmbl28: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 1 of 5;
1513453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513455   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1513456   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1513457   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1513458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513460   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1513461   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1513462   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1513463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513465   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1513466   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1513467   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1513468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513470   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1513471   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1513472   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1513473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513474   +
1513475   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1513476   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1513476  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1513477   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1513478   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1513479   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1513480   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1513481   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1513482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513483   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1513484   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1513485   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1513486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513488   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1513489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513490   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1513491   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1513492   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1513493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513494   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1513495   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1513496   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1513497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513499   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1513500   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1513501   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1513502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513504   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1513505   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1513506   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1513507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1513508   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1513509   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1513510   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1513511   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1513512   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1513513   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1513514   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1513515   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1513516   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1513517   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1513518   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1513519   +LENGTH _WARN_ $4
1513520   +      F_DepVar  $ 12
1513521   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1513522   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1513523   +
1513524   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1513525   +
1513526   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1513527   +
1513528   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1513529   +
1513530   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1513531   +
1513532   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1513533   +
1513534   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1513535   +
1513536   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1513537   +
1513538   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1513539   +
1513540   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1513541   +
1513542   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1513543   +
1513544   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1513545   +
1513546   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1513547   +
1513548   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1513549   +
1513550   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1513551   +
1513552   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1513553   +
1513554   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1513555   +
1513556   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1513557   +
1513558   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1513559   +
1513560   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1513561   +
1513562   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1513563   +
1513564   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1513565   +
1513566   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1513567   +
1513568   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1513569   +
1513570   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1513571   +
1513572   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1513573   +
1513574   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1513575   +
1513576   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1513577   +
1513578   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1513579   +
1513580   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1513581   +
1513582   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1513583   +
1513584   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1513585   +
1513586   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1513587   +
1513588   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1513589   +
1513590   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1513591   +
1513592   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1513593   +
1513594   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1513595   +
1513596   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1513597   +
1513598   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1513599   +
1513600   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1513601   +
1513602   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1513603   +
1513604   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1513605   +
1513606   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1513607   +
1513608   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1513609   +
1513610   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1513611   +
1513612   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1513613   +
1513614   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1513615   +
1513616   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1513617   +
1513618   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1513619   +
1513620   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1513621   +
1513622   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1513623   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1513624   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1513625   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1513626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513628   +end;
MPRINT(EM_DIAGRAM):   end;
1513629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513631   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1513632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513634   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1513635   +   end;
MPRINT(EM_DIAGRAM):   end;
1513636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513637   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1513638   +   end;
MPRINT(EM_DIAGRAM):   end;
1513639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513640   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1513641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513643   +   end;
MPRINT(EM_DIAGRAM):   end;
1513644   +end;
MPRINT(EM_DIAGRAM):   end;
1513645   +
1513646   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1513647   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1513648   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1513649   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1513650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513652   +end;
MPRINT(EM_DIAGRAM):   end;
1513653   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513655   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1513656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513658   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1513659   +   end;
MPRINT(EM_DIAGRAM):   end;
1513660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513661   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1513662   +   end;
MPRINT(EM_DIAGRAM):   end;
1513663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513664   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1513665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513667   +   end;
MPRINT(EM_DIAGRAM):   end;
1513668   +end;
MPRINT(EM_DIAGRAM):   end;
1513669   +
1513670   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1513671   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1513672   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1513673   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1513674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513676   +end;
MPRINT(EM_DIAGRAM):   end;
1513677   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513679   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1513680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513682   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1513683   +   end;
MPRINT(EM_DIAGRAM):   end;
1513684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513685   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1513686   +   end;
MPRINT(EM_DIAGRAM):   end;
1513687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513688   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1513689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513691   +   end;
MPRINT(EM_DIAGRAM):   end;
1513692   +end;
MPRINT(EM_DIAGRAM):   end;
1513693   +
1513694   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1513695   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1513696   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1513697   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1513698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513700   +end;
MPRINT(EM_DIAGRAM):   end;
1513701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513703   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1513704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513706   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1513707   +   end;
MPRINT(EM_DIAGRAM):   end;
1513708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513709   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1513710   +   end;
MPRINT(EM_DIAGRAM):   end;
1513711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513712   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1513713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513715   +   end;
MPRINT(EM_DIAGRAM):   end;
1513716   +end;
MPRINT(EM_DIAGRAM):   end;
1513717   +
1513718   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1513719   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1513720   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1513721   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1513722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513724   +end;
MPRINT(EM_DIAGRAM):   end;
1513725   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513727   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1513728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513730   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1513731   +   end;
MPRINT(EM_DIAGRAM):   end;
1513732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513733   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1513734   +   end;
MPRINT(EM_DIAGRAM):   end;
1513735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513736   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1513737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513739   +   end;
MPRINT(EM_DIAGRAM):   end;
1513740   +end;
MPRINT(EM_DIAGRAM):   end;
1513741   +
1513742   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1513743   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1513744   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1513745   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1513746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513748   +end;
MPRINT(EM_DIAGRAM):   end;
1513749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513751   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1513752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1513754   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1513755   +   end;
MPRINT(EM_DIAGRAM):   end;
1513756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1513757   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1513758   +   end;
MPRINT(EM_DIAGRAM):   end;
1513759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513760   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1513761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513763   +   end;
MPRINT(EM_DIAGRAM):   end;
1513764   +end;
MPRINT(EM_DIAGRAM):   end;
1513765   +
1513766   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1513767   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1513768   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1513769   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1513770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513772   +end;
MPRINT(EM_DIAGRAM):   end;
1513773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1513775   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1513776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513777   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1513778   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1513779   +   end;
MPRINT(EM_DIAGRAM):   end;
1513780   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1513781   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1513782   +   end;
MPRINT(EM_DIAGRAM):   end;
1513783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513784   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1513785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513787   +   end;
MPRINT(EM_DIAGRAM):   end;
1513788   +end;
MPRINT(EM_DIAGRAM):   end;
1513789   +
1513790   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1513791   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1513792   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1513793   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1513794   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1513795   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1513796   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1513797   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1513798   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1513799   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1513800   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1513801   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1513802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513804   +end;
MPRINT(EM_DIAGRAM):   end;
1513805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513806   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1513807   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1513808   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513809   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1513810   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1513811   +   end;
MPRINT(EM_DIAGRAM):   end;
1513812   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1513813   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1513814   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1513815   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1513816   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1513817   +   end;
MPRINT(EM_DIAGRAM):   end;
1513818   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1513819   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1513820   +   end;
MPRINT(EM_DIAGRAM):   end;
1513821   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1513822   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1513823   +   end;
MPRINT(EM_DIAGRAM):   end;
1513824   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1513825   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1513826   +   end;
MPRINT(EM_DIAGRAM):   end;
1513827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513828   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1513829   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1513830   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1513831   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1513832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513834   +   end;
MPRINT(EM_DIAGRAM):   end;
1513835   +end;
MPRINT(EM_DIAGRAM):   end;
1513836   +
1513837   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1513838   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1513839   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1513840   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1513841   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1513842   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1513843   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1513844   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1513845   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1513846   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1513847   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1513848   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1513849   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1513850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1513851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513852   +end;
MPRINT(EM_DIAGRAM):   end;
1513853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1513854   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1513855   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1513856   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1513857   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1513858   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1513859   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1513860   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1513861   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1513862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1513863   +         end;
MPRINT(EM_DIAGRAM):   end;
1513864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1513865   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1513866   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1513867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1513868   +            end;
MPRINT(EM_DIAGRAM):   end;
1513869   +         end;
MPRINT(EM_DIAGRAM):   end;
1513870   +      end;
MPRINT(EM_DIAGRAM):   end;
1513871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1513872   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1513873   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1513874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1513875   +         end;
MPRINT(EM_DIAGRAM):   end;
1513876   +      end;
MPRINT(EM_DIAGRAM):   end;
1513877   +   end;
MPRINT(EM_DIAGRAM):   end;
1513878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1513879   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1513880   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1513881   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1513882   +      end;
MPRINT(EM_DIAGRAM):   end;
1513883   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1513884   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1513885   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1513886   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1513887   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1513888   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1513889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1513890   +         end;
MPRINT(EM_DIAGRAM):   end;
1513891   +      end;
MPRINT(EM_DIAGRAM):   end;
1513892   +   end;
MPRINT(EM_DIAGRAM):   end;
1513893   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1513894   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1513895   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1513896   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1513897   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1513898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1513899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513900   +   end;
MPRINT(EM_DIAGRAM):   end;
1513901   +end;
MPRINT(EM_DIAGRAM):   end;
1513902   +
1513903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513904   +*** Checking missing input Interval
1513905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1513906   +
1513907   +IF NMISS(
1513908   +   AcceptedCmpTotal ,
1513909   +   Age ,
1513910   +   Frq ,
1513911   +   Income ,
1513912   +   Kidhome ,
1513913   +   Mnt ,
1513914   +   MntFishProducts ,
1513915   +   MntFruits ,
1513916   +   MntGoldProds ,
1513917   +   MntMeatProducts ,
1513918   +   MntSweetProducts ,
1513919   +   MntWines ,
1513920   +   MonthsAsCustomer ,
1513921   +   NumCatalogPurchases ,
1513922   +   NumDealsPurchases ,
1513923   +   NumDistPurchases ,
1513924   +   NumStorePurchases ,
1513925   +   NumWebPurchases ,
1513926   +   NumWebVisitsMonth ,
1513927   +   RFMstat ,
1513928   +   RMntFrq ,
1513929   +   Recency ,
1513930   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1513931   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1513932   +
1513933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1513934   +END;
MPRINT(EM_DIAGRAM):   END;
1513935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513936   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1513937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1513938   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1513939   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1513940   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1513941   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1513942   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1513943   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1513944   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1513945   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1513946   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1513947   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1513948   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1513949   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1513950   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1513951   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1513952   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1513953   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1513954   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1513955   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1513956   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1513957   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1513958   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1513959   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1513960   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1513961   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1513962   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1513963   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1513964   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1513965   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1513966   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1513967   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1513968   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1513969   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1513970   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1513971   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1513972   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1513973   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1513974   +END;
MPRINT(EM_DIAGRAM):   END;
1513975   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1513976   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1513977   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1513978   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1513979   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1513980   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1513981   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1513982   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1513983   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1513984   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1513985   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1513986   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1513987   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1513988   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1513989   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1513990   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1513991   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1513992   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1513993   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1513994   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1513995   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1513996   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1513997   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1513998   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1513999   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1514000   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1514001   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1514002   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1514003   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1514004   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1514005   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1514006   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1514007   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1514008   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1514009   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1514010   +   ELSE S_NumCatalogPurchases
1514011   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1514012   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1514013   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1514014   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1514015   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1514016   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1514017   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1514018   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1514019   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1514020   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1514021   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1514022   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1514023   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1514024   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1514025   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1514026   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1514027   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1514028   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1514029   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1514030   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1514031   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1514032   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1514033   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1514034   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1514035   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1514036   +END;
MPRINT(EM_DIAGRAM):   END;
1514037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514038   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1514039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514041   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1514042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514044   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1514045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1514047   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1514048   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1514049   +        S_Income  +    -0.76740176580734 * S_Kidhome
1514050   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1514051   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1514052   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1514053   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1514054   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1514055   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1514056   +          +    -1.00050516074089 * S_NumDealsPurchases
1514057   +          +    -0.89322788176916 * S_NumDistPurchases
1514058   +          +     1.21914397196653 * S_NumStorePurchases
1514059   +          +     1.50867172673665 * S_NumWebPurchases
1514060   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1514061   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1514062   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1514063   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1514064   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1514065   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1514066   +        S_Income  +    -0.76288911429735 * S_Kidhome
1514067   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1514068   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1514069   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1514070   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1514071   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1514072   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1514073   +          +     0.79497206561332 * S_NumDealsPurchases
1514074   +          +    -0.13658888199464 * S_NumDistPurchases
1514075   +          +    -0.86436416316417 * S_NumStorePurchases
1514076   +          +    -0.85206550087617 * S_NumWebPurchases
1514077   +          +     1.72745004688732 * S_NumWebVisitsMonth
1514078   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1514079   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1514080   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1514081   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1514082   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1514083   +        S_Income  +    -0.48841499166688 * S_Kidhome
1514084   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1514085   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1514086   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1514087   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1514088   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1514089   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1514090   +          +    -0.00010125986409 * S_NumDealsPurchases
1514091   +          +    -0.00873530900019 * S_NumDistPurchases
1514092   +          +    -0.13188135131414 * S_NumStorePurchases
1514093   +          +    -0.10710067608125 * S_NumWebPurchases
1514094   +          +     0.99164053465149 * S_NumWebVisitsMonth
1514095   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1514096   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1514097   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1514098   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1514099   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1514100   +        S_Income  +    -0.57026847797175 * S_Kidhome
1514101   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1514102   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1514103   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1514104   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1514105   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1514106   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1514107   +          +     0.83618651452015 * S_NumDealsPurchases
1514108   +          +     0.22469306589917 * S_NumDistPurchases
1514109   +          +    -0.95889459414769 * S_NumStorePurchases
1514110   +          +    -0.95695646799114 * S_NumWebPurchases
1514111   +          +     0.96738689790948 * S_NumWebVisitsMonth
1514112   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1514113   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1514114   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1514115   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1514116   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1514117   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1514118   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1514119   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1514120   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1514121   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1514122   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1514123   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1514124   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1514125   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1514126   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1514127   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1514128   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1514129   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1514130   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1514131   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1514132   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1514133   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1514134   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1514135   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1514136   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1514137   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1514138   +          +     0.80885454992674 * Marital_StatusDivorced
1514139   +          +     -0.5568630572283 * Marital_StatusMarried
1514140   +          +    -0.03099047176508 * Marital_StatusSingle
1514141   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1514142   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1514143   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1514144   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1514145   +          +     0.13911597069393 * Marital_StatusDivorced
1514146   +          +    -1.50081060732787 * Marital_StatusMarried
1514147   +          +     1.41717012231539 * Marital_StatusSingle
1514148   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1514149   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1514150   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1514151   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1514152   +          +    -0.26412736340464 * Marital_StatusDivorced
1514153   +          +    -0.27049992388629 * Marital_StatusMarried
1514154   +          +     0.67476795725099 * Marital_StatusSingle
1514155   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1514156   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1514157   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1514158   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1514159   +          +      0.8954230457499 * Marital_StatusDivorced
1514160   +          +     0.73706556068242 * Marital_StatusMarried
1514161   +          +    -1.29073720538893 * Marital_StatusSingle
1514162   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1514163   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1514164   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1514165   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1514166   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1514167   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1514168   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1514169   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1514170   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1514171   +END;
MPRINT(EM_DIAGRAM):   END;
1514172   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1514173   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1514174   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1514175   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1514176   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1514177   +END;
MPRINT(EM_DIAGRAM):   END;
1514178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514179   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1514180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514181   +
1514182   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1514183   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1514184   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1514185   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1514186   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1514187   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514188   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1514189   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1514190   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1514191   +end;
MPRINT(EM_DIAGRAM):   end;
1514192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514193   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1514194   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1514195   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1514196   +   end;
MPRINT(EM_DIAGRAM):   end;
1514197   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1514198   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1514199   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1514200   +   end;
MPRINT(EM_DIAGRAM):   end;
1514201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514202   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1514203   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1514204   +   end;
MPRINT(EM_DIAGRAM):   end;
1514205   +end;
MPRINT(EM_DIAGRAM):   end;
1514206   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1514207   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1514208   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1514209   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1514210   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1514211   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1514212   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1514213   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1514214   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1514215   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1514216   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1514217   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1514218   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1514219   +END;
MPRINT(EM_DIAGRAM):   END;
1514220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1514221   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1514222   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1514223   +END;
MPRINT(EM_DIAGRAM):   END;
1514224   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1514225   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1514226   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1514227   +END;
MPRINT(EM_DIAGRAM):   END;
1514228   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1514229   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1514230   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1514231   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1514232   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1514233   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1514234   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1514235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514236   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1514237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514238   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1514239   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1514240   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1514241   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1514242   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1514243   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1514244   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1514245   +END;
MPRINT(EM_DIAGRAM):   END;
1514246   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1514247   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1514248   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1514249   +drop
1514250   +H11
1514251   +H12
1514252   +H13
1514253   +H14
1514254   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1514255   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1514256   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1514257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514258   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1514259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514260   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1514261   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1514262   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1514263   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1514264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514265   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1514266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514267   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1514268   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1514269   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1514270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514271   +* Ensmbl28: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 2 of 5;
1514272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514274   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1514275   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1514276   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1514277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514278   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1514279   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1514280   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1514281   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1514282   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1514283   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1514284   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1514285   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1514286   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1514287   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1514288   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1514289   +LENGTH _WARN_ $4
1514290   +      F_DepVar  $ 12
1514291   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1514292   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1514293   +
1514294   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1514295   +
1514296   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1514297   +
1514298   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1514299   +
1514300   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1514301   +
1514302   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1514303   +
1514304   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1514305   +
1514306   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1514307   +
1514308   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1514309   +
1514310   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1514311   +
1514312   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1514313   +
1514314   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1514315   +
1514316   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1514317   +
1514318   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1514319   +
1514320   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1514321   +
1514322   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1514323   +
1514324   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1514325   +
1514326   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1514327   +
1514328   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1514329   +
1514330   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1514331   +
1514332   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1514333   +
1514334   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1514335   +
1514336   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1514337   +
1514338   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1514339   +
1514340   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1514341   +
1514342   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1514343   +
1514344   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1514345   +
1514346   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1514347   +
1514348   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1514349   +
1514350   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1514351   +
1514352   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1514353   +
1514354   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1514355   +
1514356   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1514357   +
1514358   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1514359   +
1514360   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1514361   +
1514362   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1514363   +
1514364   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1514365   +
1514366   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1514367   +
1514368   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1514369   +
1514370   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1514371   +
1514372   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1514373   +
1514374   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1514375   +
1514376   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1514377   +
1514378   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1514379   +
1514380   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1514381   +
1514382   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1514383   +
1514384   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1514385   +
1514386   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1514387   +
1514388   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1514389   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1514390   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1514391   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1514392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514394   +end;
MPRINT(EM_DIAGRAM):   end;
1514395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514397   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1514398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514399   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514400   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1514401   +   end;
MPRINT(EM_DIAGRAM):   end;
1514402   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514403   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1514404   +   end;
MPRINT(EM_DIAGRAM):   end;
1514405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514406   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1514407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514409   +   end;
MPRINT(EM_DIAGRAM):   end;
1514410   +end;
MPRINT(EM_DIAGRAM):   end;
1514411   +
1514412   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1514413   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1514414   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1514415   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1514416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514418   +end;
MPRINT(EM_DIAGRAM):   end;
1514419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514421   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1514422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514423   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514424   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1514425   +   end;
MPRINT(EM_DIAGRAM):   end;
1514426   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514427   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1514428   +   end;
MPRINT(EM_DIAGRAM):   end;
1514429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514430   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1514431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514433   +   end;
MPRINT(EM_DIAGRAM):   end;
1514434   +end;
MPRINT(EM_DIAGRAM):   end;
1514435   +
1514436   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1514437   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1514438   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1514439   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1514440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514442   +end;
MPRINT(EM_DIAGRAM):   end;
1514443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514445   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1514446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514447   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514448   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1514449   +   end;
MPRINT(EM_DIAGRAM):   end;
1514450   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514451   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1514452   +   end;
MPRINT(EM_DIAGRAM):   end;
1514453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514454   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1514455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514457   +   end;
MPRINT(EM_DIAGRAM):   end;
1514458   +end;
MPRINT(EM_DIAGRAM):   end;
1514459   +
1514460   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1514461   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1514462   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1514463   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1514464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514466   +end;
MPRINT(EM_DIAGRAM):   end;
1514467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514468   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514469   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1514470   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514471   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514472   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1514473   +   end;
MPRINT(EM_DIAGRAM):   end;
1514474   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514475   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1514476   +   end;
MPRINT(EM_DIAGRAM):   end;
1514477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514478   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1514479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514481   +   end;
MPRINT(EM_DIAGRAM):   end;
1514482   +end;
MPRINT(EM_DIAGRAM):   end;
1514483   +
1514484   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1514485   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1514486   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1514487   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1514488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514490   +end;
MPRINT(EM_DIAGRAM):   end;
1514491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514493   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1514494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514495   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514496   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1514497   +   end;
MPRINT(EM_DIAGRAM):   end;
1514498   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514499   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1514500   +   end;
MPRINT(EM_DIAGRAM):   end;
1514501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514502   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1514503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514505   +   end;
MPRINT(EM_DIAGRAM):   end;
1514506   +end;
MPRINT(EM_DIAGRAM):   end;
1514507   +
1514508   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1514509   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1514510   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1514511   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1514512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514514   +end;
MPRINT(EM_DIAGRAM):   end;
1514515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514517   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1514518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1514520   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1514521   +   end;
MPRINT(EM_DIAGRAM):   end;
1514522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1514523   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1514524   +   end;
MPRINT(EM_DIAGRAM):   end;
1514525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514526   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1514527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514529   +   end;
MPRINT(EM_DIAGRAM):   end;
1514530   +end;
MPRINT(EM_DIAGRAM):   end;
1514531   +
1514532   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1514533   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1514534   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1514535   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1514536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514538   +end;
MPRINT(EM_DIAGRAM):   end;
1514539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1514541   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1514542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514543   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1514544   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1514545   +   end;
MPRINT(EM_DIAGRAM):   end;
1514546   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1514547   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1514548   +   end;
MPRINT(EM_DIAGRAM):   end;
1514549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514550   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1514551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514553   +   end;
MPRINT(EM_DIAGRAM):   end;
1514554   +end;
MPRINT(EM_DIAGRAM):   end;
1514555   +
1514556   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1514557   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1514558   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1514559   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1514560   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1514561   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1514562   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1514563   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1514564   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1514565   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1514566   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1514567   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1514568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514570   +end;
MPRINT(EM_DIAGRAM):   end;
1514571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514572   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1514573   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1514574   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514575   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1514576   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1514577   +   end;
MPRINT(EM_DIAGRAM):   end;
1514578   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1514579   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1514580   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1514581   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1514582   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1514583   +   end;
MPRINT(EM_DIAGRAM):   end;
1514584   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1514585   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1514586   +   end;
MPRINT(EM_DIAGRAM):   end;
1514587   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1514588   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1514589   +   end;
MPRINT(EM_DIAGRAM):   end;
1514590   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1514591   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1514592   +   end;
MPRINT(EM_DIAGRAM):   end;
1514593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514594   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1514595   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1514596   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1514597   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1514598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514600   +   end;
MPRINT(EM_DIAGRAM):   end;
1514601   +end;
MPRINT(EM_DIAGRAM):   end;
1514602   +
1514603   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1514604   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1514605   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1514606   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1514607   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1514608   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1514609   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1514610   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1514611   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1514612   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1514613   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1514614   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1514615   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1514616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1514617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514618   +end;
MPRINT(EM_DIAGRAM):   end;
1514619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514620   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1514621   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1514622   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514623   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1514624   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1514625   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1514626   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1514627   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1514628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1514629   +         end;
MPRINT(EM_DIAGRAM):   end;
1514630   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1514631   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1514632   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1514633   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1514634   +            end;
MPRINT(EM_DIAGRAM):   end;
1514635   +         end;
MPRINT(EM_DIAGRAM):   end;
1514636   +      end;
MPRINT(EM_DIAGRAM):   end;
1514637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1514638   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1514639   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1514640   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1514641   +         end;
MPRINT(EM_DIAGRAM):   end;
1514642   +      end;
MPRINT(EM_DIAGRAM):   end;
1514643   +   end;
MPRINT(EM_DIAGRAM):   end;
1514644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514645   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1514646   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1514647   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1514648   +      end;
MPRINT(EM_DIAGRAM):   end;
1514649   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1514650   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1514651   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1514652   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1514653   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1514654   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1514655   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1514656   +         end;
MPRINT(EM_DIAGRAM):   end;
1514657   +      end;
MPRINT(EM_DIAGRAM):   end;
1514658   +   end;
MPRINT(EM_DIAGRAM):   end;
1514659   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1514660   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1514661   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1514662   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1514663   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1514664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1514665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514666   +   end;
MPRINT(EM_DIAGRAM):   end;
1514667   +end;
MPRINT(EM_DIAGRAM):   end;
1514668   +
1514669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514670   +*** Checking missing input Interval
1514671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1514672   +
1514673   +IF NMISS(
1514674   +   AcceptedCmpTotal ,
1514675   +   Age ,
1514676   +   Frq ,
1514677   +   Income ,
1514678   +   Kidhome ,
1514679   +   Mnt ,
1514680   +   MntFishProducts ,
1514681   +   MntFruits ,
1514682   +   MntGoldProds ,
1514683   +   MntMeatProducts ,
1514684   +   MntSweetProducts ,
1514685   +   MntWines ,
1514686   +   MonthsAsCustomer ,
1514687   +   NumCatalogPurchases ,
1514688   +   NumDealsPurchases ,
1514689   +   NumDistPurchases ,
1514690   +   NumStorePurchases ,
1514691   +   NumWebPurchases ,
1514692   +   NumWebVisitsMonth ,
1514693   +   RFMstat ,
1514694   +   RMntFrq ,
1514695   +   Recency ,
1514696   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1514697   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1514698   +
1514699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1514700   +END;
MPRINT(EM_DIAGRAM):   END;
1514701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514702   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1514703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514704   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1514705   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1514706   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1514707   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1514708   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1514709   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1514710   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1514711   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1514712   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1514713   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1514714   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1514715   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1514716   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1514717   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1514718   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1514719   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1514720   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1514721   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1514722   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1514723   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1514724   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1514725   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1514726   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1514727   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1514728   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1514729   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1514730   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1514731   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1514732   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1514733   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1514734   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1514735   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1514736   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1514737   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1514738   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1514739   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1514740   +END;
MPRINT(EM_DIAGRAM):   END;
1514741   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1514742   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1514743   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1514744   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1514745   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1514746   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1514747   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1514748   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1514749   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1514750   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1514751   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1514752   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1514753   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1514754   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1514755   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1514756   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1514757   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1514758   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1514759   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1514760   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1514761   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1514762   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1514763   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1514764   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1514765   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1514766   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1514767   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1514768   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1514769   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1514770   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1514771   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1514772   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1514773   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1514774   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1514775   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1514776   +   ELSE S_NumCatalogPurchases
1514777   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1514778   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1514779   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1514780   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1514781   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1514782   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1514783   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1514784   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1514785   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1514786   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1514787   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1514788   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1514789   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1514790   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1514791   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1514792   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1514793   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1514794   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1514795   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1514796   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1514797   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1514798   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1514799   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1514800   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1514801   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1514802   +END;
MPRINT(EM_DIAGRAM):   END;
1514803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514804   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1514805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514807   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1514808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514810   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1514811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514812   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1514813   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1514814   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1514815   +        S_Income  +    -1.07733254688396 * S_Kidhome
1514816   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1514817   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1514818   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1514819   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1514820   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1514821   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1514822   +          +     0.34431711603003 * S_NumDealsPurchases
1514823   +          +      0.7134923732819 * S_NumDistPurchases
1514824   +          +     0.05901777448936 * S_NumStorePurchases
1514825   +          +    -0.19803026616936 * S_NumWebPurchases
1514826   +          +     1.34202846183228 * S_NumWebVisitsMonth
1514827   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1514828   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1514829   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1514830   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1514831   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1514832   +        S_Income  +    -0.00255151514163 * S_Kidhome
1514833   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1514834   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1514835   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1514836   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1514837   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1514838   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1514839   +          +     0.45752917132477 * S_NumDealsPurchases
1514840   +          +      0.1559495599293 * S_NumDistPurchases
1514841   +          +    -0.33402213718695 * S_NumStorePurchases
1514842   +          +    -0.39372662704902 * S_NumWebPurchases
1514843   +          +     0.52518189694069 * S_NumWebVisitsMonth
1514844   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1514845   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1514846   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1514847   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1514848   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1514849   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1514850   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1514851   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1514852   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1514853   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1514854   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1514855   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1514856   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1514857   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1514858   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1514859   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1514860   +          +     0.46710555357393 * Marital_StatusDivorced
1514861   +          +    -1.27560428667174 * Marital_StatusMarried
1514862   +          +      1.3147344073121 * Marital_StatusSingle
1514863   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1514864   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1514865   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1514866   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1514867   +          +     0.07422027097612 * Marital_StatusDivorced
1514868   +          +     0.00271855575037 * Marital_StatusMarried
1514869   +          +    -0.00749566028051 * Marital_StatusSingle
1514870   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1514871   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1514872   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1514873   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1514874   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1514875   +END;
MPRINT(EM_DIAGRAM):   END;
1514876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1514877   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1514878   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1514879   +END;
MPRINT(EM_DIAGRAM):   END;
1514880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514881   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1514882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514883   +
1514884   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1514885   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1514886   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1514887   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1514888   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1514889   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1514890   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1514891   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1514892   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1514893   +end;
MPRINT(EM_DIAGRAM):   end;
1514894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1514895   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1514896   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1514897   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1514898   +   end;
MPRINT(EM_DIAGRAM):   end;
1514899   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1514900   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1514901   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1514902   +   end;
MPRINT(EM_DIAGRAM):   end;
1514903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1514904   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1514905   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1514906   +   end;
MPRINT(EM_DIAGRAM):   end;
1514907   +end;
MPRINT(EM_DIAGRAM):   end;
1514908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1514909   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1514910   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1514911   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1514912   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1514913   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1514914   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1514915   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1514916   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1514917   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1514918   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1514919   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1514920   +END;
MPRINT(EM_DIAGRAM):   END;
1514921   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1514922   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1514923   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1514924   +END;
MPRINT(EM_DIAGRAM):   END;
1514925   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1514926   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1514927   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1514928   +END;
MPRINT(EM_DIAGRAM):   END;
1514929   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1514930   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1514931   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1514932   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1514933   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1514934   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1514935   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1514936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514937   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1514938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1514939   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1514940   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1514941   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1514942   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1514943   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1514944   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1514945   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1514946   +END;
MPRINT(EM_DIAGRAM):   END;
1514947   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1514948   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1514949   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1514950   +drop
1514951   +H11
1514952   +H12
1514953   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1514954   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1514955   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1514956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514957   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1514958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514959   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1514960   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1514961   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1514962   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1514963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514964   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1514965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514966   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1514967   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1514968   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1514969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514970   +* Ensmbl28: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 3 of 5;
1514971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514973   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1514974   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1514975   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1514976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1514977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1514978   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1514979   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1514980   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1514981   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1514982   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1514983   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1514984   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1514985   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1514986   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1514987   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1514988   +LENGTH _WARN_ $4
1514989   +      F_DepVar  $ 12
1514990   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1514991   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1514992   +
1514993   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1514994   +
1514995   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1514996   +
1514997   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1514998   +
1514999   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1515000   +
1515001   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1515002   +
1515003   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1515004   +
1515005   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1515006   +
1515007   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1515008   +
1515009   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1515010   +
1515011   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1515012   +
1515013   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1515014   +
1515015   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1515016   +
1515017   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1515018   +
1515019   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1515020   +
1515021   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1515022   +
1515023   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1515024   +
1515025   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1515026   +
1515027   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1515028   +
1515029   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1515030   +
1515031   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1515032   +
1515033   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1515034   +
1515035   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1515036   +
1515037   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1515038   +
1515039   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1515040   +
1515041   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1515042   +
1515043   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1515044   +
1515045   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1515046   +
1515047   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1515048   +
1515049   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1515050   +
1515051   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1515052   +
1515053   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1515054   +
1515055   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1515056   +
1515057   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1515058   +
1515059   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1515060   +
1515061   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1515062   +
1515063   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1515064   +
1515065   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1515066   +
1515067   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1515068   +
1515069   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1515070   +
1515071   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1515072   +
1515073   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1515074   +
1515075   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1515076   +
1515077   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1515078   +
1515079   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1515080   +
1515081   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1515082   +
1515083   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1515084   +
1515085   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1515086   +
1515087   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1515088   +
1515089   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1515090   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1515091   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1515092   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1515093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515095   +end;
MPRINT(EM_DIAGRAM):   end;
1515096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515098   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1515099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515101   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1515102   +   end;
MPRINT(EM_DIAGRAM):   end;
1515103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515104   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1515105   +   end;
MPRINT(EM_DIAGRAM):   end;
1515106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515107   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1515108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515110   +   end;
MPRINT(EM_DIAGRAM):   end;
1515111   +end;
MPRINT(EM_DIAGRAM):   end;
1515112   +
1515113   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1515114   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1515115   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1515116   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1515117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515119   +end;
MPRINT(EM_DIAGRAM):   end;
1515120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515122   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1515123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515125   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1515126   +   end;
MPRINT(EM_DIAGRAM):   end;
1515127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515128   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1515129   +   end;
MPRINT(EM_DIAGRAM):   end;
1515130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515131   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1515132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515134   +   end;
MPRINT(EM_DIAGRAM):   end;
1515135   +end;
MPRINT(EM_DIAGRAM):   end;
1515136   +
1515137   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1515138   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1515139   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1515140   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1515141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515143   +end;
MPRINT(EM_DIAGRAM):   end;
1515144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515146   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1515147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515148   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515149   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1515150   +   end;
MPRINT(EM_DIAGRAM):   end;
1515151   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515152   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1515153   +   end;
MPRINT(EM_DIAGRAM):   end;
1515154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515155   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1515156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515158   +   end;
MPRINT(EM_DIAGRAM):   end;
1515159   +end;
MPRINT(EM_DIAGRAM):   end;
1515160   +
1515161   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1515162   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1515163   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1515164   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1515165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515167   +end;
MPRINT(EM_DIAGRAM):   end;
1515168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515170   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1515171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515172   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515173   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1515174   +   end;
MPRINT(EM_DIAGRAM):   end;
1515175   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515176   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1515177   +   end;
MPRINT(EM_DIAGRAM):   end;
1515178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515179   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1515180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515182   +   end;
MPRINT(EM_DIAGRAM):   end;
1515183   +end;
MPRINT(EM_DIAGRAM):   end;
1515184   +
1515185   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1515186   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1515187   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1515188   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1515189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515191   +end;
MPRINT(EM_DIAGRAM):   end;
1515192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515194   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1515195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515196   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515197   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1515198   +   end;
MPRINT(EM_DIAGRAM):   end;
1515199   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515200   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1515201   +   end;
MPRINT(EM_DIAGRAM):   end;
1515202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515203   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1515204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515206   +   end;
MPRINT(EM_DIAGRAM):   end;
1515207   +end;
MPRINT(EM_DIAGRAM):   end;
1515208   +
1515209   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1515210   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1515211   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1515212   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1515213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515215   +end;
MPRINT(EM_DIAGRAM):   end;
1515216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515218   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1515219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515220   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515221   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1515222   +   end;
MPRINT(EM_DIAGRAM):   end;
1515223   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515224   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1515225   +   end;
MPRINT(EM_DIAGRAM):   end;
1515226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515227   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1515228   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515229   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515230   +   end;
MPRINT(EM_DIAGRAM):   end;
1515231   +end;
MPRINT(EM_DIAGRAM):   end;
1515232   +
1515233   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1515234   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1515235   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1515236   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1515237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515239   +end;
MPRINT(EM_DIAGRAM):   end;
1515240   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515241   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515242   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1515243   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515244   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1515245   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1515246   +   end;
MPRINT(EM_DIAGRAM):   end;
1515247   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1515248   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1515249   +   end;
MPRINT(EM_DIAGRAM):   end;
1515250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515251   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1515252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515254   +   end;
MPRINT(EM_DIAGRAM):   end;
1515255   +end;
MPRINT(EM_DIAGRAM):   end;
1515256   +
1515257   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1515258   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1515259   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1515260   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1515261   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1515262   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1515263   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1515264   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1515265   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1515266   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1515267   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1515268   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1515269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515271   +end;
MPRINT(EM_DIAGRAM):   end;
1515272   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515273   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1515274   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1515275   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515276   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1515277   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1515278   +   end;
MPRINT(EM_DIAGRAM):   end;
1515279   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1515280   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1515281   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1515282   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1515283   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1515284   +   end;
MPRINT(EM_DIAGRAM):   end;
1515285   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1515286   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1515287   +   end;
MPRINT(EM_DIAGRAM):   end;
1515288   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1515289   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1515290   +   end;
MPRINT(EM_DIAGRAM):   end;
1515291   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1515292   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1515293   +   end;
MPRINT(EM_DIAGRAM):   end;
1515294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515295   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1515296   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1515297   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1515298   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1515299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515301   +   end;
MPRINT(EM_DIAGRAM):   end;
1515302   +end;
MPRINT(EM_DIAGRAM):   end;
1515303   +
1515304   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1515305   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1515306   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1515307   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1515308   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1515309   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1515310   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1515311   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1515312   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1515313   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1515314   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1515315   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1515316   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1515317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515319   +end;
MPRINT(EM_DIAGRAM):   end;
1515320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515321   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1515322   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1515323   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515324   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1515325   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1515326   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1515327   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1515328   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1515329   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1515330   +         end;
MPRINT(EM_DIAGRAM):   end;
1515331   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1515332   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1515333   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1515334   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1515335   +            end;
MPRINT(EM_DIAGRAM):   end;
1515336   +         end;
MPRINT(EM_DIAGRAM):   end;
1515337   +      end;
MPRINT(EM_DIAGRAM):   end;
1515338   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1515339   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1515340   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1515341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1515342   +         end;
MPRINT(EM_DIAGRAM):   end;
1515343   +      end;
MPRINT(EM_DIAGRAM):   end;
1515344   +   end;
MPRINT(EM_DIAGRAM):   end;
1515345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515346   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1515347   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1515348   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1515349   +      end;
MPRINT(EM_DIAGRAM):   end;
1515350   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1515351   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1515352   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1515353   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1515354   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1515355   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1515356   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1515357   +         end;
MPRINT(EM_DIAGRAM):   end;
1515358   +      end;
MPRINT(EM_DIAGRAM):   end;
1515359   +   end;
MPRINT(EM_DIAGRAM):   end;
1515360   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1515361   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1515362   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1515363   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1515364   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1515365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515367   +   end;
MPRINT(EM_DIAGRAM):   end;
1515368   +end;
MPRINT(EM_DIAGRAM):   end;
1515369   +
1515370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515371   +*** Checking missing input Interval
1515372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1515373   +
1515374   +IF NMISS(
1515375   +   AcceptedCmpTotal ,
1515376   +   Age ,
1515377   +   Frq ,
1515378   +   Income ,
1515379   +   Kidhome ,
1515380   +   Mnt ,
1515381   +   MntFishProducts ,
1515382   +   MntFruits ,
1515383   +   MntGoldProds ,
1515384   +   MntMeatProducts ,
1515385   +   MntSweetProducts ,
1515386   +   MntWines ,
1515387   +   MonthsAsCustomer ,
1515388   +   NumCatalogPurchases ,
1515389   +   NumDealsPurchases ,
1515390   +   NumDistPurchases ,
1515391   +   NumStorePurchases ,
1515392   +   NumWebPurchases ,
1515393   +   NumWebVisitsMonth ,
1515394   +   RFMstat ,
1515395   +   RMntFrq ,
1515396   +   Recency ,
1515397   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1515398   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1515399   +
1515400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515401   +END;
MPRINT(EM_DIAGRAM):   END;
1515402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515403   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1515404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1515406   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1515407   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1515408   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1515409   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1515410   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1515411   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1515412   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1515413   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1515414   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1515415   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1515416   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1515417   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1515418   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1515419   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1515420   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1515421   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1515422   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1515423   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1515424   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1515425   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1515426   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1515427   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1515428   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1515429   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1515430   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1515431   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1515432   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1515433   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1515434   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1515435   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1515436   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1515437   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1515438   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1515439   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1515440   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1515441   +END;
MPRINT(EM_DIAGRAM):   END;
1515442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1515443   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1515444   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1515445   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1515446   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1515447   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1515448   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1515449   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1515450   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1515451   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1515452   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1515453   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1515454   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1515455   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1515456   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1515457   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1515458   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1515459   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1515460   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1515461   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1515462   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1515463   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1515464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1515465   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1515466   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1515467   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1515468   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1515469   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1515470   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1515471   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1515472   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1515473   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1515474   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1515475   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1515476   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1515477   +   ELSE S_NumCatalogPurchases
1515478   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1515479   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1515480   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1515481   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1515482   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1515483   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1515484   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1515485   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1515486   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1515487   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1515488   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1515489   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1515490   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1515491   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1515492   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1515493   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1515494   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1515495   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1515496   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1515497   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1515498   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1515499   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1515500   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1515501   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1515502   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1515503   +END;
MPRINT(EM_DIAGRAM):   END;
1515504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515505   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1515506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515508   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1515509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515511   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1515512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515513   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1515514   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1515515   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1515516   +        S_Income  +     0.49557647195287 * S_Kidhome
1515517   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1515518   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1515519   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1515520   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1515521   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1515522   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1515523   +          +     1.29965538748336 * S_NumDealsPurchases
1515524   +          +     0.16818868463142 * S_NumDistPurchases
1515525   +          +    -0.64507792847411 * S_NumStorePurchases
1515526   +          +    -0.52243329275268 * S_NumWebPurchases
1515527   +          +     1.48521107923182 * S_NumWebVisitsMonth
1515528   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1515529   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1515530   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1515531   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1515532   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1515533   +        S_Income  +       0.536631748871 * S_Kidhome
1515534   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1515535   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1515536   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1515537   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1515538   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1515539   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1515540   +          +    -0.63220849663702 * S_NumDealsPurchases
1515541   +          +    -0.03517440588176 * S_NumDistPurchases
1515542   +          +     0.90435516280473 * S_NumStorePurchases
1515543   +          +     1.02540776095101 * S_NumWebPurchases
1515544   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1515545   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1515546   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1515547   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1515548   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1515549   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1515550   +        S_Income  +     0.45173611630992 * S_Kidhome
1515551   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1515552   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1515553   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1515554   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1515555   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1515556   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1515557   +          +     0.00572910064772 * S_NumDealsPurchases
1515558   +          +    -0.43545754325176 * S_NumDistPurchases
1515559   +          +     0.12831980635185 * S_NumStorePurchases
1515560   +          +     0.02223697618186 * S_NumWebPurchases
1515561   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1515562   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1515563   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1515564   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1515565   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1515566   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1515567   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1515568   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1515569   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1515570   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1515571   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1515572   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1515573   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1515574   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1515575   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1515576   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1515577   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1515578   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1515579   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1515580   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1515581   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1515582   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1515583   +          +     0.14010081581672 * Marital_StatusDivorced
1515584   +          +     0.03574033044092 * Marital_StatusMarried
1515585   +          +    -0.14272769898675 * Marital_StatusSingle
1515586   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1515587   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1515588   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1515589   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1515590   +          +    -0.14878433798537 * Marital_StatusDivorced
1515591   +          +     0.14990226067603 * Marital_StatusMarried
1515592   +          +    -0.50903755449357 * Marital_StatusSingle
1515593   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1515594   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1515595   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1515596   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1515597   +          +    -0.52568922939912 * Marital_StatusDivorced
1515598   +          +     1.74121506979092 * Marital_StatusMarried
1515599   +          +    -1.16029880777095 * Marital_StatusSingle
1515600   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1515601   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1515602   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1515603   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1515604   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1515605   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1515606   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1515607   +END;
MPRINT(EM_DIAGRAM):   END;
1515608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1515609   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1515610   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1515611   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1515612   +END;
MPRINT(EM_DIAGRAM):   END;
1515613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515614   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1515615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515616   +
1515617   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1515618   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1515619   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1515620   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1515621   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1515622   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515623   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1515624   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1515625   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1515626   +end;
MPRINT(EM_DIAGRAM):   end;
1515627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515628   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1515629   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1515630   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1515631   +   end;
MPRINT(EM_DIAGRAM):   end;
1515632   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1515633   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1515634   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1515635   +   end;
MPRINT(EM_DIAGRAM):   end;
1515636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515637   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1515638   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1515639   +   end;
MPRINT(EM_DIAGRAM):   end;
1515640   +end;
MPRINT(EM_DIAGRAM):   end;
1515641   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1515642   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1515643   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1515644   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1515645   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1515646   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1515647   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1515648   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1515649   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1515650   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1515651   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1515652   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1515653   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1515654   +END;
MPRINT(EM_DIAGRAM):   END;
1515655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1515656   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1515657   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1515658   +END;
MPRINT(EM_DIAGRAM):   END;
1515659   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1515660   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1515661   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1515662   +END;
MPRINT(EM_DIAGRAM):   END;
1515663   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1515664   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1515665   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1515666   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1515667   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1515668   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1515669   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1515670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515671   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1515672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1515673   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1515674   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1515675   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1515676   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1515677   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1515678   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1515679   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1515680   +END;
MPRINT(EM_DIAGRAM):   END;
1515681   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1515682   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1515683   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1515684   +drop
1515685   +H11
1515686   +H12
1515687   +H13
1515688   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1515689   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1515690   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1515691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515692   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1515693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515694   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1515695   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1515696   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1515697   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1515698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515699   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1515700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515701   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1515702   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1515703   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1515704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515705   +* Ensmbl28: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 4 of 5;
1515706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515708   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1515709   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1515710   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1515711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1515712   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1515713   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1515714   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1515715   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1515716   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1515717   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1515718   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1515719   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1515720   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1515721   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1515722   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1515723   +LENGTH _WARN_ $4
1515724   +      F_DepVar  $ 12
1515725   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1515726   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1515727   +
1515728   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1515729   +
1515730   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1515731   +
1515732   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1515733   +
1515734   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1515735   +
1515736   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1515737   +
1515738   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1515739   +
1515740   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1515741   +
1515742   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1515743   +
1515744   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1515745   +
1515746   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1515747   +
1515748   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1515749   +
1515750   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1515751   +
1515752   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1515753   +
1515754   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1515755   +
1515756   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1515757   +
1515758   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1515759   +
1515760   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1515761   +
1515762   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1515763   +
1515764   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1515765   +
1515766   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1515767   +
1515768   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1515769   +
1515770   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1515771   +
1515772   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1515773   +
1515774   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1515775   +
1515776   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1515777   +
1515778   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1515779   +
1515780   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1515781   +
1515782   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1515783   +
1515784   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1515785   +
1515786   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1515787   +
1515788   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1515789   +
1515790   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1515791   +
1515792   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1515793   +
1515794   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1515795   +
1515796   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1515797   +
1515798   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1515799   +
1515800   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1515801   +
1515802   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1515803   +
1515804   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1515805   +
1515806   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1515807   +
1515808   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1515809   +
1515810   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1515811   +
1515812   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1515813   +
1515814   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1515815   +
1515816   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1515817   +
1515818   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1515819   +
1515820   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1515821   +
1515822   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1515823   +
1515824   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1515825   +
1515826   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1515827   +
1515828   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1515829   +
1515830   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1515831   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1515832   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1515833   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1515834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515836   +end;
MPRINT(EM_DIAGRAM):   end;
1515837   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515838   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515839   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1515840   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515841   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515842   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1515843   +   end;
MPRINT(EM_DIAGRAM):   end;
1515844   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515845   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1515846   +   end;
MPRINT(EM_DIAGRAM):   end;
1515847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515848   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1515849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515851   +   end;
MPRINT(EM_DIAGRAM):   end;
1515852   +end;
MPRINT(EM_DIAGRAM):   end;
1515853   +
1515854   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1515855   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1515856   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1515857   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1515858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515860   +end;
MPRINT(EM_DIAGRAM):   end;
1515861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515862   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515863   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1515864   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515865   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515866   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1515867   +   end;
MPRINT(EM_DIAGRAM):   end;
1515868   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515869   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1515870   +   end;
MPRINT(EM_DIAGRAM):   end;
1515871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515872   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1515873   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515874   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515875   +   end;
MPRINT(EM_DIAGRAM):   end;
1515876   +end;
MPRINT(EM_DIAGRAM):   end;
1515877   +
1515878   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1515879   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1515880   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1515881   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1515882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515884   +end;
MPRINT(EM_DIAGRAM):   end;
1515885   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515886   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515887   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1515888   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515889   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515890   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1515891   +   end;
MPRINT(EM_DIAGRAM):   end;
1515892   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515893   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1515894   +   end;
MPRINT(EM_DIAGRAM):   end;
1515895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515896   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1515897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515899   +   end;
MPRINT(EM_DIAGRAM):   end;
1515900   +end;
MPRINT(EM_DIAGRAM):   end;
1515901   +
1515902   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1515903   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1515904   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1515905   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1515906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515908   +end;
MPRINT(EM_DIAGRAM):   end;
1515909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515911   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1515912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515913   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515914   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1515915   +   end;
MPRINT(EM_DIAGRAM):   end;
1515916   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515917   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1515918   +   end;
MPRINT(EM_DIAGRAM):   end;
1515919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515920   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1515921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515923   +   end;
MPRINT(EM_DIAGRAM):   end;
1515924   +end;
MPRINT(EM_DIAGRAM):   end;
1515925   +
1515926   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1515927   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1515928   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1515929   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1515930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515932   +end;
MPRINT(EM_DIAGRAM):   end;
1515933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515935   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1515936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515938   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1515939   +   end;
MPRINT(EM_DIAGRAM):   end;
1515940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515941   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1515942   +   end;
MPRINT(EM_DIAGRAM):   end;
1515943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515944   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1515945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515947   +   end;
MPRINT(EM_DIAGRAM):   end;
1515948   +end;
MPRINT(EM_DIAGRAM):   end;
1515949   +
1515950   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1515951   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1515952   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1515953   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1515954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515956   +end;
MPRINT(EM_DIAGRAM):   end;
1515957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515959   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1515960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1515962   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1515963   +   end;
MPRINT(EM_DIAGRAM):   end;
1515964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1515965   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1515966   +   end;
MPRINT(EM_DIAGRAM):   end;
1515967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515968   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1515969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515971   +   end;
MPRINT(EM_DIAGRAM):   end;
1515972   +end;
MPRINT(EM_DIAGRAM):   end;
1515973   +
1515974   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1515975   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1515976   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1515977   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1515978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1515979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515980   +end;
MPRINT(EM_DIAGRAM):   end;
1515981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1515982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1515983   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1515984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1515985   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1515986   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1515987   +   end;
MPRINT(EM_DIAGRAM):   end;
1515988   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1515989   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1515990   +   end;
MPRINT(EM_DIAGRAM):   end;
1515991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1515992   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1515993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1515994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1515995   +   end;
MPRINT(EM_DIAGRAM):   end;
1515996   +end;
MPRINT(EM_DIAGRAM):   end;
1515997   +
1515998   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1515999   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1516000   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1516001   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1516002   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1516003   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1516004   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1516005   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1516006   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1516007   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1516008   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1516009   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1516010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516012   +end;
MPRINT(EM_DIAGRAM):   end;
1516013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516014   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1516015   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1516016   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516017   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1516018   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1516019   +   end;
MPRINT(EM_DIAGRAM):   end;
1516020   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1516021   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1516022   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1516023   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1516024   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1516025   +   end;
MPRINT(EM_DIAGRAM):   end;
1516026   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1516027   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1516028   +   end;
MPRINT(EM_DIAGRAM):   end;
1516029   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1516030   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1516031   +   end;
MPRINT(EM_DIAGRAM):   end;
1516032   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1516033   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1516034   +   end;
MPRINT(EM_DIAGRAM):   end;
1516035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516036   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1516037   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1516038   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1516039   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1516040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516042   +   end;
MPRINT(EM_DIAGRAM):   end;
1516043   +end;
MPRINT(EM_DIAGRAM):   end;
1516044   +
1516045   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1516046   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1516047   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1516048   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1516049   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1516050   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1516051   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1516052   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1516053   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1516054   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1516055   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1516056   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1516057   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1516058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516060   +end;
MPRINT(EM_DIAGRAM):   end;
1516061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516062   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1516063   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1516064   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516065   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1516066   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1516067   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1516068   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1516069   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1516070   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516071   +         end;
MPRINT(EM_DIAGRAM):   end;
1516072   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1516073   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1516074   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1516075   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516076   +            end;
MPRINT(EM_DIAGRAM):   end;
1516077   +         end;
MPRINT(EM_DIAGRAM):   end;
1516078   +      end;
MPRINT(EM_DIAGRAM):   end;
1516079   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1516080   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1516081   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1516082   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516083   +         end;
MPRINT(EM_DIAGRAM):   end;
1516084   +      end;
MPRINT(EM_DIAGRAM):   end;
1516085   +   end;
MPRINT(EM_DIAGRAM):   end;
1516086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516087   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1516088   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1516089   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516090   +      end;
MPRINT(EM_DIAGRAM):   end;
1516091   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1516092   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1516093   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1516094   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1516095   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1516096   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1516097   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516098   +         end;
MPRINT(EM_DIAGRAM):   end;
1516099   +      end;
MPRINT(EM_DIAGRAM):   end;
1516100   +   end;
MPRINT(EM_DIAGRAM):   end;
1516101   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1516102   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1516103   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1516104   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1516105   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1516106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516108   +   end;
MPRINT(EM_DIAGRAM):   end;
1516109   +end;
MPRINT(EM_DIAGRAM):   end;
1516110   +
1516111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516112   +*** Checking missing input Interval
1516113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1516114   +
1516115   +IF NMISS(
1516116   +   AcceptedCmpTotal ,
1516117   +   Age ,
1516118   +   Frq ,
1516119   +   Income ,
1516120   +   Kidhome ,
1516121   +   Mnt ,
1516122   +   MntFishProducts ,
1516123   +   MntFruits ,
1516124   +   MntGoldProds ,
1516125   +   MntMeatProducts ,
1516126   +   MntSweetProducts ,
1516127   +   MntWines ,
1516128   +   MonthsAsCustomer ,
1516129   +   NumCatalogPurchases ,
1516130   +   NumDealsPurchases ,
1516131   +   NumDistPurchases ,
1516132   +   NumStorePurchases ,
1516133   +   NumWebPurchases ,
1516134   +   NumWebVisitsMonth ,
1516135   +   RFMstat ,
1516136   +   RMntFrq ,
1516137   +   Recency ,
1516138   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1516139   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1516140   +
1516141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516142   +END;
MPRINT(EM_DIAGRAM):   END;
1516143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516144   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1516145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516146   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1516147   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1516148   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1516149   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1516150   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1516151   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1516152   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1516153   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1516154   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1516155   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1516156   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1516157   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1516158   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1516159   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1516160   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1516161   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1516162   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1516163   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1516164   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1516165   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1516166   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1516167   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1516168   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1516169   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1516170   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1516171   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1516172   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1516173   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1516174   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1516175   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1516176   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1516177   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1516178   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1516179   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1516180   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1516181   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1516182   +END;
MPRINT(EM_DIAGRAM):   END;
1516183   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1516184   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1516185   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1516186   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1516187   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1516188   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1516189   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1516190   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1516191   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1516192   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1516193   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1516194   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1516195   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1516196   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1516197   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1516198   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1516199   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1516200   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1516201   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1516202   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1516203   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1516204   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1516205   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1516206   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1516207   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1516208   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1516209   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1516210   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1516211   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1516212   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1516213   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1516214   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1516215   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1516216   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1516217   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1516218   +   ELSE S_NumCatalogPurchases
1516219   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1516220   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1516221   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1516222   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1516223   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1516224   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1516225   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1516226   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1516227   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1516228   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1516229   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1516230   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1516231   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1516232   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1516233   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1516234   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1516235   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1516236   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1516237   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1516238   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1516239   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1516240   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1516241   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1516242   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1516243   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1516244   +END;
MPRINT(EM_DIAGRAM):   END;
1516245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516246   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1516247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516249   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1516250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516252   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1516253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1516255   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1516256   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1516257   +        S_Income  +    -0.09693130155866 * S_Kidhome
1516258   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1516259   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1516260   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1516261   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1516262   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1516263   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1516264   +          +     0.87256063855463 * S_NumDealsPurchases
1516265   +          +     0.24228318068596 * S_NumDistPurchases
1516266   +          +    -0.65575177240856 * S_NumStorePurchases
1516267   +          +    -0.94105747825406 * S_NumWebPurchases
1516268   +          +     0.88098930350141 * S_NumWebVisitsMonth
1516269   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1516270   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1516271   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1516272   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1516273   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1516274   +        S_Income  +    -0.48351377369429 * S_Kidhome
1516275   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1516276   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1516277   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1516278   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1516279   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1516280   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1516281   +          +     0.19198092320653 * S_NumDealsPurchases
1516282   +          +    -0.01877290175933 * S_NumDistPurchases
1516283   +          +    -0.61698509852352 * S_NumStorePurchases
1516284   +          +    -0.36114842161331 * S_NumWebPurchases
1516285   +          +     0.87653599441887 * S_NumWebVisitsMonth
1516286   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1516287   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1516288   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1516289   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1516290   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1516291   +        S_Income  +    -0.03117320792997 * S_Kidhome
1516292   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1516293   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1516294   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1516295   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1516296   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1516297   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1516298   +          +    -0.17772008430544 * S_NumDealsPurchases
1516299   +          +    -0.24320624261016 * S_NumDistPurchases
1516300   +          +     0.42056923271106 * S_NumStorePurchases
1516301   +          +    -0.28718554863857 * S_NumWebPurchases
1516302   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1516303   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1516304   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1516305   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1516306   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1516307   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1516308   +        S_Income  +     -0.0433863245185 * S_Kidhome
1516309   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1516310   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1516311   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1516312   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1516313   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1516314   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1516315   +          +    -0.43652501997552 * S_NumDealsPurchases
1516316   +          +     0.17317052107867 * S_NumDistPurchases
1516317   +          +     0.23672921935551 * S_NumStorePurchases
1516318   +          +     0.49273989445476 * S_NumWebPurchases
1516319   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1516320   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1516321   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1516322   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1516323   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1516324   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1516325   +        S_Income  +     0.59347379159371 * S_Kidhome
1516326   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1516327   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1516328   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1516329   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1516330   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1516331   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1516332   +          +     0.06887104992711 * S_NumDealsPurchases
1516333   +          +    -0.03976087278251 * S_NumDistPurchases
1516334   +          +     -0.0289014951041 * S_NumStorePurchases
1516335   +          +    -0.08062500939119 * S_NumWebPurchases
1516336   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1516337   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1516338   +        S_RMntFrq  +       0.940313744576 * S_Recency
1516339   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1516340   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1516341   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1516342   +        S_Income  +    -0.55245961592835 * S_Kidhome
1516343   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1516344   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1516345   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1516346   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1516347   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1516348   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1516349   +          +    -0.50731731808528 * S_NumDealsPurchases
1516350   +          +     -0.4854662155502 * S_NumDistPurchases
1516351   +          +     0.21175181231244 * S_NumStorePurchases
1516352   +          +     0.04923223410585 * S_NumWebPurchases
1516353   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1516354   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1516355   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1516356   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1516357   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1516358   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1516359   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1516360   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1516361   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1516362   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1516363   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1516364   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1516365   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1516366   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1516367   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1516368   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1516369   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1516370   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1516371   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1516372   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1516373   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1516374   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1516375   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1516376   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1516377   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1516378   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1516379   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1516380   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1516381   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1516382   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1516383   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1516384   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1516385   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1516386   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1516387   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1516388   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1516389   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1516390   +          +     0.13102231169849 * Marital_StatusDivorced
1516391   +          +     0.13221932247035 * Marital_StatusMarried
1516392   +          +    -0.28666963919866 * Marital_StatusSingle
1516393   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1516394   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1516395   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1516396   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1516397   +          +     0.36873255525654 * Marital_StatusDivorced
1516398   +          +    -0.54422050380085 * Marital_StatusMarried
1516399   +          +     0.58130553469516 * Marital_StatusSingle
1516400   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1516401   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1516402   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1516403   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1516404   +          +    -0.07480235993304 * Marital_StatusDivorced
1516405   +          +     0.31705972445069 * Marital_StatusMarried
1516406   +          +    -0.08626328185895 * Marital_StatusSingle
The SAS System

1516407   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1516408   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1516409   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1516410   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1516411   +          +    -0.06733679615115 * Marital_StatusDivorced
1516412   +          +     0.23111557732379 * Marital_StatusMarried
1516413   +          +    -0.34379469870478 * Marital_StatusSingle
1516414   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1516415   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1516416   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1516417   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1516418   +          +    -0.07108588070668 * Marital_StatusDivorced
1516419   +          +     1.10060875265784 * Marital_StatusMarried
1516420   +          +    -0.74271327534863 * Marital_StatusSingle
1516421   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1516422   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1516423   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1516424   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1516425   +          +    -0.19461023827362 * Marital_StatusDivorced
1516426   +          +     -0.4165676037681 * Marital_StatusMarried
1516427   +          +     0.43379324993555 * Marital_StatusSingle
1516428   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1516429   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1516430   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1516431   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1516432   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1516433   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1516434   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1516435   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1516436   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1516437   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1516438   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1516439   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1516440   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1516441   +END;
MPRINT(EM_DIAGRAM):   END;
1516442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1516443   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1516444   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1516445   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1516446   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1516447   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1516448   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1516449   +END;
MPRINT(EM_DIAGRAM):   END;
1516450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516451   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1516452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516453   +
1516454   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1516455   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1516456   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1516457   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1516458   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1516459   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516460   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1516461   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1516462   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1516463   +end;
MPRINT(EM_DIAGRAM):   end;
1516464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516465   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1516466   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1516467   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1516468   +   end;
MPRINT(EM_DIAGRAM):   end;
1516469   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1516470   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1516471   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1516472   +   end;
MPRINT(EM_DIAGRAM):   end;
1516473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516474   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1516475   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1516476   +   end;
MPRINT(EM_DIAGRAM):   end;
1516477   +end;
MPRINT(EM_DIAGRAM):   end;
1516478   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1516479   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1516480   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1516481   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1516482   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1516483   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1516484   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1516485   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1516486   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1516487   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1516488   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1516489   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1516490   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1516491   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1516492   +END;
MPRINT(EM_DIAGRAM):   END;
1516493   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1516494   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1516495   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1516496   +END;
MPRINT(EM_DIAGRAM):   END;
1516497   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1516498   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1516499   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1516500   +END;
MPRINT(EM_DIAGRAM):   END;
1516501   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1516502   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1516503   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1516504   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1516505   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1516506   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1516507   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1516508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516509   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1516510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516511   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1516512   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1516513   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1516514   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1516515   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1516516   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1516517   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1516518   +END;
MPRINT(EM_DIAGRAM):   END;
1516519   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1516520   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1516521   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1516522   +drop
1516523   +H11
1516524   +H12
1516525   +H13
1516526   +H14
1516527   +H15
1516528   +H16
1516529   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1516530   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1516531   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1516532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516533   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1516534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516535   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1516536   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1516537   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1516538   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1516539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516540   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1516541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516542   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1516543   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1516544   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1516545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516546   +* Ensmbl28: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 5 of 5;
1516547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516549   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1516550   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1516551   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1516552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1516553   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1516554   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1516555   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1516556   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1516557   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1516558   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1516559   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1516560   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1516561   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1516562   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1516563   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1516564   +LENGTH _WARN_ $4
1516565   +      F_DepVar  $ 12
1516566   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1516567   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1516568   +
1516569   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1516570   +
1516571   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1516572   +
1516573   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1516574   +
1516575   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1516576   +
1516577   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1516578   +
1516579   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1516580   +
1516581   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1516582   +
1516583   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1516584   +
1516585   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1516586   +
1516587   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1516588   +
1516589   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1516590   +
1516591   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1516592   +
1516593   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1516594   +
1516595   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1516596   +
1516597   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1516598   +
1516599   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1516600   +
1516601   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1516602   +
1516603   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1516604   +
1516605   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1516606   +
1516607   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1516608   +
1516609   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1516610   +
1516611   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1516612   +
1516613   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1516614   +
1516615   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1516616   +
1516617   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1516618   +
1516619   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1516620   +
1516621   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1516622   +
1516623   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1516624   +
1516625   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1516626   +
1516627   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1516628   +
1516629   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1516630   +
1516631   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1516632   +
1516633   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1516634   +
1516635   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1516636   +
1516637   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1516638   +
1516639   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1516640   +
1516641   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1516642   +
1516643   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1516644   +
1516645   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1516646   +
1516647   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1516648   +
1516649   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1516650   +
1516651   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1516652   +
1516653   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1516654   +
1516655   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1516656   +
1516657   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1516658   +
1516659   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1516660   +
1516661   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1516662   +
1516663   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1516664   +
1516665   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1516666   +
1516667   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1516668   +
1516669   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1516670   +
1516671   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1516672   +
1516673   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1516674   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1516675   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1516676   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1516677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516679   +end;
MPRINT(EM_DIAGRAM):   end;
1516680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516682   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1516683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516684   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516685   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1516686   +   end;
MPRINT(EM_DIAGRAM):   end;
1516687   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516688   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1516689   +   end;
MPRINT(EM_DIAGRAM):   end;
1516690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516691   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1516692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516694   +   end;
MPRINT(EM_DIAGRAM):   end;
1516695   +end;
MPRINT(EM_DIAGRAM):   end;
1516696   +
1516697   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1516698   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1516699   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1516700   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1516701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516703   +end;
MPRINT(EM_DIAGRAM):   end;
1516704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516706   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1516707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516708   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516709   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1516710   +   end;
MPRINT(EM_DIAGRAM):   end;
1516711   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516712   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1516713   +   end;
MPRINT(EM_DIAGRAM):   end;
1516714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516715   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1516716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516718   +   end;
MPRINT(EM_DIAGRAM):   end;
1516719   +end;
MPRINT(EM_DIAGRAM):   end;
1516720   +
1516721   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1516722   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1516723   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1516724   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1516725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516727   +end;
MPRINT(EM_DIAGRAM):   end;
1516728   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516730   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1516731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516732   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516733   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1516734   +   end;
MPRINT(EM_DIAGRAM):   end;
1516735   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516736   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1516737   +   end;
MPRINT(EM_DIAGRAM):   end;
1516738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516739   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1516740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516742   +   end;
MPRINT(EM_DIAGRAM):   end;
1516743   +end;
MPRINT(EM_DIAGRAM):   end;
1516744   +
1516745   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1516746   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1516747   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1516748   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1516749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516751   +end;
MPRINT(EM_DIAGRAM):   end;
1516752   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516754   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1516755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516757   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1516758   +   end;
MPRINT(EM_DIAGRAM):   end;
1516759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516760   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1516761   +   end;
MPRINT(EM_DIAGRAM):   end;
1516762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516763   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1516764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516766   +   end;
MPRINT(EM_DIAGRAM):   end;
1516767   +end;
MPRINT(EM_DIAGRAM):   end;
1516768   +
1516769   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1516770   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1516771   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1516772   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1516773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516775   +end;
MPRINT(EM_DIAGRAM):   end;
1516776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516778   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1516779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516781   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1516782   +   end;
MPRINT(EM_DIAGRAM):   end;
1516783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516784   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1516785   +   end;
MPRINT(EM_DIAGRAM):   end;
1516786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516787   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1516788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516790   +   end;
MPRINT(EM_DIAGRAM):   end;
1516791   +end;
MPRINT(EM_DIAGRAM):   end;
1516792   +
1516793   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1516794   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1516795   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1516796   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1516797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516799   +end;
MPRINT(EM_DIAGRAM):   end;
1516800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516802   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1516803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1516805   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1516806   +   end;
MPRINT(EM_DIAGRAM):   end;
1516807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1516808   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1516809   +   end;
MPRINT(EM_DIAGRAM):   end;
1516810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516811   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1516812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516814   +   end;
MPRINT(EM_DIAGRAM):   end;
1516815   +end;
MPRINT(EM_DIAGRAM):   end;
1516816   +
1516817   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1516818   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1516819   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1516820   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1516821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516823   +end;
MPRINT(EM_DIAGRAM):   end;
1516824   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1516826   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1516827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516828   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1516829   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1516830   +   end;
MPRINT(EM_DIAGRAM):   end;
1516831   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1516832   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1516833   +   end;
MPRINT(EM_DIAGRAM):   end;
1516834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516835   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1516836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516838   +   end;
MPRINT(EM_DIAGRAM):   end;
1516839   +end;
MPRINT(EM_DIAGRAM):   end;
1516840   +
1516841   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1516842   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1516843   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1516844   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1516845   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1516846   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1516847   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1516848   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1516849   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1516850   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1516851   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1516852   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1516853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516855   +end;
MPRINT(EM_DIAGRAM):   end;
1516856   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516857   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1516858   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1516859   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516860   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1516861   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1516862   +   end;
MPRINT(EM_DIAGRAM):   end;
1516863   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1516864   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1516865   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1516866   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1516867   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1516868   +   end;
MPRINT(EM_DIAGRAM):   end;
1516869   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1516870   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1516871   +   end;
MPRINT(EM_DIAGRAM):   end;
1516872   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1516873   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1516874   +   end;
MPRINT(EM_DIAGRAM):   end;
1516875   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1516876   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1516877   +   end;
MPRINT(EM_DIAGRAM):   end;
1516878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516879   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1516880   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1516881   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1516882   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1516883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516885   +   end;
MPRINT(EM_DIAGRAM):   end;
1516886   +end;
MPRINT(EM_DIAGRAM):   end;
1516887   +
1516888   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1516889   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1516890   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1516891   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1516892   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1516893   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1516894   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1516895   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1516896   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1516897   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1516898   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1516899   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1516900   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1516901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1516902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516903   +end;
MPRINT(EM_DIAGRAM):   end;
1516904   +else do;
MPRINT(EM_DIAGRAM):   else do;
1516905   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1516906   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1516907   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1516908   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1516909   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1516910   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1516911   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1516912   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1516913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516914   +         end;
MPRINT(EM_DIAGRAM):   end;
1516915   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1516916   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1516917   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1516918   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516919   +            end;
MPRINT(EM_DIAGRAM):   end;
1516920   +         end;
MPRINT(EM_DIAGRAM):   end;
1516921   +      end;
MPRINT(EM_DIAGRAM):   end;
1516922   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1516923   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1516924   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1516925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516926   +         end;
MPRINT(EM_DIAGRAM):   end;
1516927   +      end;
MPRINT(EM_DIAGRAM):   end;
1516928   +   end;
MPRINT(EM_DIAGRAM):   end;
1516929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1516930   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1516931   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1516932   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516933   +      end;
MPRINT(EM_DIAGRAM):   end;
1516934   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1516935   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1516936   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1516937   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1516938   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1516939   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1516940   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1516941   +         end;
MPRINT(EM_DIAGRAM):   end;
1516942   +      end;
MPRINT(EM_DIAGRAM):   end;
1516943   +   end;
MPRINT(EM_DIAGRAM):   end;
1516944   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1516945   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1516946   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1516947   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1516948   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1516949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1516950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516951   +   end;
MPRINT(EM_DIAGRAM):   end;
1516952   +end;
MPRINT(EM_DIAGRAM):   end;
1516953   +
1516954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516955   +*** Checking missing input Interval
1516956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1516957   +
1516958   +IF NMISS(
1516959   +   AcceptedCmpTotal ,
1516960   +   Age ,
1516961   +   Frq ,
1516962   +   Income ,
1516963   +   Kidhome ,
1516964   +   Mnt ,
1516965   +   MntFishProducts ,
1516966   +   MntFruits ,
1516967   +   MntGoldProds ,
1516968   +   MntMeatProducts ,
1516969   +   MntSweetProducts ,
1516970   +   MntWines ,
1516971   +   MonthsAsCustomer ,
1516972   +   NumCatalogPurchases ,
1516973   +   NumDealsPurchases ,
1516974   +   NumDistPurchases ,
1516975   +   NumStorePurchases ,
1516976   +   NumWebPurchases ,
1516977   +   NumWebVisitsMonth ,
1516978   +   RFMstat ,
1516979   +   RMntFrq ,
1516980   +   Recency ,
1516981   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1516982   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1516983   +
1516984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1516985   +END;
MPRINT(EM_DIAGRAM):   END;
1516986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516987   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1516988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1516989   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1516990   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1516991   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1516992   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1516993   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1516994   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1516995   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1516996   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1516997   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1516998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1516999   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1517000   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1517001   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1517002   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1517003   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1517004   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1517005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1517006   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1517007   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1517008   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1517009   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1517010   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1517011   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1517012   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1517013   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1517014   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1517015   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1517016   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1517017   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1517018   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1517019   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1517020   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1517021   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1517022   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1517023   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1517024   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1517025   +END;
MPRINT(EM_DIAGRAM):   END;
1517026   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1517027   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1517028   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1517029   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1517030   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1517031   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1517032   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1517033   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1517034   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1517035   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1517036   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1517037   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1517038   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1517039   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1517040   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1517041   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1517042   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1517043   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1517044   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1517045   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1517046   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1517047   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1517048   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1517049   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1517050   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1517051   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1517052   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1517053   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1517054   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1517055   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1517056   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1517057   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1517058   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1517059   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1517060   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1517061   +   ELSE S_NumCatalogPurchases
1517062   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1517063   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1517064   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1517065   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1517066   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1517067   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1517068   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1517069   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1517070   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1517071   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1517072   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1517073   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1517074   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1517075   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1517076   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1517077   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1517078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1517079   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1517080   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1517081   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1517082   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1517083   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1517084   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1517085   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1517086   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1517087   +END;
MPRINT(EM_DIAGRAM):   END;
1517088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517089   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1517090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517092   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1517093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517095   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1517096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1517098   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1517099   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1517100   +        S_Income  +    -0.48552270697514 * S_Kidhome
1517101   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1517102   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1517103   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1517104   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1517105   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1517106   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1517107   +          +    -0.23083265836869 * S_NumDealsPurchases
1517108   +          +     0.18257445063797 * S_NumDistPurchases
1517109   +          +     0.38040778765927 * S_NumStorePurchases
1517110   +          +     0.25798779223068 * S_NumWebPurchases
1517111   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1517112   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1517113   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1517114   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1517115   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1517116   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1517117   +        S_Income  +     0.23694585796773 * S_Kidhome
1517118   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1517119   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1517120   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1517121   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1517122   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1517123   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1517124   +          +    -0.07783411363525 * S_NumDealsPurchases
1517125   +          +     0.41281579441285 * S_NumDistPurchases
1517126   +          +     0.22243606867939 * S_NumStorePurchases
1517127   +          +     0.27174952755013 * S_NumWebPurchases
1517128   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1517129   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1517130   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1517131   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1517132   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1517133   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1517134   +        S_Income  +     0.20802765248799 * S_Kidhome
1517135   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1517136   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1517137   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1517138   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1517139   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1517140   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1517141   +          +     0.09455783738093 * S_NumDealsPurchases
1517142   +          +    -0.06039304909585 * S_NumDistPurchases
1517143   +          +    -0.10306611685636 * S_NumStorePurchases
1517144   +          +    -0.00323837049664 * S_NumWebPurchases
1517145   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1517146   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1517147   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1517148   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1517149   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1517150   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1517151   +        S_Income  +     0.26381864865425 * S_Kidhome
1517152   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1517153   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1517154   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1517155   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1517156   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1517157   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1517158   +          +      0.8306613243419 * S_NumDealsPurchases
1517159   +          +     0.31439474207278 * S_NumDistPurchases
1517160   +          +    -0.62131474975756 * S_NumStorePurchases
1517161   +          +    -1.04845843654047 * S_NumWebPurchases
1517162   +          +     0.13255915506164 * S_NumWebVisitsMonth
1517163   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1517164   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1517165   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1517166   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1517167   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1517168   +        S_Income  +    -0.71599192201946 * S_Kidhome
1517169   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1517170   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1517171   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1517172   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1517173   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1517174   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1517175   +          +     0.63537278643623 * S_NumDealsPurchases
1517176   +          +     0.00410348485264 * S_NumDistPurchases
1517177   +          +    -0.78287523583925 * S_NumStorePurchases
1517178   +          +    -0.73614491225189 * S_NumWebPurchases
1517179   +          +      1.5997596522354 * S_NumWebVisitsMonth
1517180   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1517181   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1517182   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1517183   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1517184   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1517185   +        S_Income  +    -0.23853377939411 * S_Kidhome
1517186   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1517187   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1517188   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1517189   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1517190   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1517191   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1517192   +          +    -0.30899603957269 * S_NumDealsPurchases
1517193   +          +     0.11839581082877 * S_NumDistPurchases
1517194   +          +     0.20149797391098 * S_NumStorePurchases
1517195   +          +      0.1616654107491 * S_NumWebPurchases
1517196   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1517197   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1517198   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1517199   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1517200   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1517201   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1517202   +        S_Income  +    -0.48650790963695 * S_Kidhome
1517203   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1517204   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1517205   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1517206   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1517207   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1517208   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1517209   +          +    -0.18889005468777 * S_NumDealsPurchases
1517210   +          +     0.17240918361456 * S_NumDistPurchases
1517211   +          +     0.11704610685994 * S_NumStorePurchases
1517212   +          +     0.23031393640508 * S_NumWebPurchases
1517213   +          +     0.66002859819524 * S_NumWebVisitsMonth
1517214   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1517215   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1517216   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1517217   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1517218   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1517219   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1517220   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1517221   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1517222   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1517223   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1517224   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1517225   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1517226   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1517227   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1517228   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1517229   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1517230   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1517231   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1517232   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1517233   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1517234   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1517235   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1517236   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1517237   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1517238   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1517239   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1517240   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1517241   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1517242   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1517243   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1517244   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1517245   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1517246   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1517247   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1517248   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1517249   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1517250   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1517251   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1517252   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1517253   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1517254   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1517255   +          +     0.43452164349556 * Marital_StatusDivorced
1517256   +          +    -0.46042593279944 * Marital_StatusMarried
1517257   +          +     0.45533323427801 * Marital_StatusSingle
1517258   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1517259   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1517260   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1517261   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1517262   +          +     0.11002244687305 * Marital_StatusDivorced
1517263   +          +     0.52424349905683 * Marital_StatusMarried
1517264   +          +     -0.3969250366321 * Marital_StatusSingle
1517265   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1517266   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1517267   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1517268   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1517269   +          +    -0.05300704180744 * Marital_StatusDivorced
1517270   +          +     0.07805487103106 * Marital_StatusMarried
1517271   +          +     0.20033339442958 * Marital_StatusSingle
1517272   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1517273   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1517274   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1517275   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1517276   +          +    -0.42379596543146 * Marital_StatusDivorced
1517277   +          +     0.66738351478416 * Marital_StatusMarried
1517278   +          +    -0.37324277578462 * Marital_StatusSingle
1517279   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1517280   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1517281   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1517282   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1517283   +          +     0.88761025578489 * Marital_StatusDivorced
1517284   +          +    -0.85905539883385 * Marital_StatusMarried
1517285   +          +     0.73467737758558 * Marital_StatusSingle
1517286   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1517287   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1517288   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1517289   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1517290   +          +    -0.11980818075461 * Marital_StatusDivorced
1517291   +          +    -0.16572953052582 * Marital_StatusMarried
1517292   +          +     0.34617421331983 * Marital_StatusSingle
1517293   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1517294   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1517295   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1517296   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1517297   +          +     0.14874886057777 * Marital_StatusDivorced
1517298   +          +     -1.0463076915992 * Marital_StatusMarried
1517299   +          +     0.72937563672763 * Marital_StatusSingle
1517300   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1517301   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1517302   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1517303   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1517304   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1517305   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1517306   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1517307   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1517308   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1517309   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1517310   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1517311   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1517312   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1517313   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1517314   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1517315   +END;
MPRINT(EM_DIAGRAM):   END;
1517316   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1517317   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1517318   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1517319   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1517320   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1517321   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1517322   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1517323   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1517324   +END;
MPRINT(EM_DIAGRAM):   END;
1517325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517326   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1517327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517328   +
1517329   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1517330   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1517331   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1517332   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1517333   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1517334   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517335   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1517336   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1517337   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1517338   +end;
MPRINT(EM_DIAGRAM):   end;
1517339   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517340   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1517341   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1517342   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1517343   +   end;
MPRINT(EM_DIAGRAM):   end;
1517344   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1517345   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1517346   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1517347   +   end;
MPRINT(EM_DIAGRAM):   end;
1517348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517349   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1517350   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1517351   +   end;
MPRINT(EM_DIAGRAM):   end;
1517352   +end;
MPRINT(EM_DIAGRAM):   end;
1517353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1517354   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1517355   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1517356   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1517357   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1517358   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1517359   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1517360   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1517361   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1517362   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1517363   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1517364   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1517365   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1517366   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1517367   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1517368   +END;
MPRINT(EM_DIAGRAM):   END;
1517369   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1517370   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1517371   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1517372   +END;
MPRINT(EM_DIAGRAM):   END;
1517373   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1517374   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1517375   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1517376   +END;
MPRINT(EM_DIAGRAM):   END;
1517377   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1517378   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1517379   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1517380   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1517381   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1517382   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1517383   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1517384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517385   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1517386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517387   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1517388   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1517389   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1517390   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1517391   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1517392   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1517393   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1517394   +END;
MPRINT(EM_DIAGRAM):   END;
1517395   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1517396   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1517397   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1517398   +drop
1517399   +H11
1517400   +H12
1517401   +H13
1517402   +H14
1517403   +H15
1517404   +H16
1517405   +H17
1517406   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1517407   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1517408   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1517409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517410   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1517411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517412   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1517413   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1517414   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1517415   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1517416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517417   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1517418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517419   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1517420   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1517421   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1517422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517423   +* Ensmbl28: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Maximum Posteriors of 5 models;
1517424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517425   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1517426   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1517427   +P_DepVar1 = max(
1517428   +Neural4_P_DepVar1 ,
1517429   +Neural2_P_DepVar1 ,
1517430   +Neural3_P_DepVar1 ,
1517431   +Neural9_P_DepVar1 ,
1517432   +Neural10_P_DepVar1
1517433   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural4_P_DepVar1 , Neural2_P_DepVar1 , 
Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1517434   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1517435   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1517436   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1517437   +end;
MPRINT(EM_DIAGRAM):   end;
1517438   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1517439   +P_DepVar0 = max(
1517440   +Neural4_P_DepVar0 ,
1517441   +Neural2_P_DepVar0 ,
1517442   +Neural3_P_DepVar0 ,
1517443   +Neural9_P_DepVar0 ,
1517444   +Neural10_P_DepVar0
1517445   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural4_P_DepVar0 , Neural2_P_DepVar0 , 
Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1517446   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1517447   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1517448   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1517449   +end;
MPRINT(EM_DIAGRAM):   end;
1517450   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1517451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517452   +* Ensmbl28: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Classification Vars;
1517453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517454   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1517455   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1517456   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1517457   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1517458   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1517459   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1517460   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1517461   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1517462   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1517463   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1517464   +end;
MPRINT(EM_DIAGRAM):   end;
1517465   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1517466   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1517467   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1517468   +end;
MPRINT(EM_DIAGRAM):   end;
1517469   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1517470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517471   +* Ensmbl28: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Producing Unformatted variable;
1517472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517473   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1517474   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1517475   +else
1517476   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1517477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517478   +* Ensmbl28: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing _WARN_ Variable;
1517479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517480   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1517481   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1517482   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1517483   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1517484   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1517485   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1517486   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1517487   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1517488   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1517489   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1517490   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1517491   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1517492   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1517493   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1517494   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1517495   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1517496   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1517497   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1517498   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1517499   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1517499  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1517500   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1517500  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1517501   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1517501  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1517502   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1517502  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1517503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517504   +* Ensmbl28: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Residual Vars;
1517505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1517506   +if
1517507   +F_DepVar NE '1'
1517508   +AND F_DepVar NE '0'
1517509   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1517510   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1517511   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1517512   +end;
MPRINT(EM_DIAGRAM):   end;
1517513   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517514   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1517515   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1517516   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1517517   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1517518   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1517519   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1517520   +END;
MPRINT(EM_DIAGRAM):   END;
1517521   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1517522    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL28_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1517523    quit;
1517524    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl28_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl28_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl28_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1517584    filename _pref
1517584  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1517585    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1517586    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1517587   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1517588   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1517589   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1517590   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1517591   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1517592   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1517593   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1517594   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1517595   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1517596   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1517597   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1517598   +LENGTH _WARN_ $4
1517599   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1517600   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1517601   +
1517602   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1517603   +
1517604   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1517605   +
1517606   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1517607   +
1517608   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1517609   +
1517610   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1517611   +
1517612   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1517613   +
1517614   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1517615   +
1517616   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1517617   +
1517618   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1517619   +
1517620   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1517621   +
1517622   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1517623   +
1517624   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1517625   +
1517626   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1517627   +
1517628   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1517629   +
1517630   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1517631   +
1517632   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1517633   +
1517634   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1517635   +
1517636   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1517637   +
1517638   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1517639   +
1517640   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1517641   +
1517642   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1517643   +
1517644   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1517645   +
1517646   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1517647   +
1517648   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1517649   +
1517650   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1517651   +
1517652   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1517653   +
1517654   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1517655   +
1517656   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1517657   +
1517658   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1517659   +
1517660   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1517661   +
1517662   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1517663   +
1517664   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1517665   +
1517666   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1517667   +
1517668   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1517669   +
1517670   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1517671   +
1517672   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1517673   +
1517674   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1517675   +
1517676   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1517677   +
1517678   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1517679   +
1517680   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1517681   +
1517682   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1517683   +
1517684   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1517685   +
1517686   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1517687   +
1517688   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1517689   +
1517690   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1517691   +
1517692   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1517693   +
1517694   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1517695   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1517696   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1517697   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1517698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517700   +end;
MPRINT(EM_DIAGRAM):   end;
1517701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517703   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1517704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517706   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1517707   +   end;
MPRINT(EM_DIAGRAM):   end;
1517708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517709   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1517710   +   end;
MPRINT(EM_DIAGRAM):   end;
1517711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517712   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1517713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517715   +   end;
MPRINT(EM_DIAGRAM):   end;
1517716   +end;
MPRINT(EM_DIAGRAM):   end;
1517717   +
1517718   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1517719   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1517720   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1517721   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1517722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517724   +end;
MPRINT(EM_DIAGRAM):   end;
1517725   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517727   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1517728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517730   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1517731   +   end;
MPRINT(EM_DIAGRAM):   end;
1517732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517733   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1517734   +   end;
MPRINT(EM_DIAGRAM):   end;
1517735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517736   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1517737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517739   +   end;
MPRINT(EM_DIAGRAM):   end;
1517740   +end;
MPRINT(EM_DIAGRAM):   end;
1517741   +
1517742   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1517743   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1517744   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1517745   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1517746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517748   +end;
MPRINT(EM_DIAGRAM):   end;
1517749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517751   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1517752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517754   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1517755   +   end;
MPRINT(EM_DIAGRAM):   end;
1517756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517757   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1517758   +   end;
MPRINT(EM_DIAGRAM):   end;
1517759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517760   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1517761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517763   +   end;
MPRINT(EM_DIAGRAM):   end;
1517764   +end;
MPRINT(EM_DIAGRAM):   end;
1517765   +
1517766   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1517767   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1517768   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1517769   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1517770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517772   +end;
MPRINT(EM_DIAGRAM):   end;
1517773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517775   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1517776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517778   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1517779   +   end;
MPRINT(EM_DIAGRAM):   end;
1517780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517781   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1517782   +   end;
MPRINT(EM_DIAGRAM):   end;
1517783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517784   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1517785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517787   +   end;
MPRINT(EM_DIAGRAM):   end;
1517788   +end;
MPRINT(EM_DIAGRAM):   end;
1517789   +
1517790   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1517791   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1517792   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1517793   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1517794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517796   +end;
MPRINT(EM_DIAGRAM):   end;
1517797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517799   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1517800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517801   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517802   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1517803   +   end;
MPRINT(EM_DIAGRAM):   end;
1517804   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517805   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1517806   +   end;
MPRINT(EM_DIAGRAM):   end;
1517807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517808   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1517809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517811   +   end;
MPRINT(EM_DIAGRAM):   end;
1517812   +end;
MPRINT(EM_DIAGRAM):   end;
1517813   +
1517814   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1517815   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1517816   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1517817   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1517818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517820   +end;
MPRINT(EM_DIAGRAM):   end;
1517821   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517822   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517823   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1517824   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517825   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1517826   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1517827   +   end;
MPRINT(EM_DIAGRAM):   end;
1517828   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1517829   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1517830   +   end;
MPRINT(EM_DIAGRAM):   end;
1517831   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517832   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1517833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517835   +   end;
MPRINT(EM_DIAGRAM):   end;
1517836   +end;
MPRINT(EM_DIAGRAM):   end;
1517837   +
1517838   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1517839   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1517840   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1517841   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1517842   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517844   +end;
MPRINT(EM_DIAGRAM):   end;
1517845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517846   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1517847   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1517848   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517849   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1517850   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1517851   +   end;
MPRINT(EM_DIAGRAM):   end;
1517852   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1517853   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1517854   +   end;
MPRINT(EM_DIAGRAM):   end;
1517855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517856   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1517857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517859   +   end;
MPRINT(EM_DIAGRAM):   end;
1517860   +end;
MPRINT(EM_DIAGRAM):   end;
1517861   +
1517862   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1517863   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1517864   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1517865   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1517866   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1517867   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1517868   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1517869   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1517870   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1517871   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1517872   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1517873   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1517874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517876   +end;
MPRINT(EM_DIAGRAM):   end;
1517877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517878   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1517879   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1517880   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517881   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1517882   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1517883   +   end;
MPRINT(EM_DIAGRAM):   end;
1517884   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1517885   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1517886   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1517887   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1517888   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1517889   +   end;
MPRINT(EM_DIAGRAM):   end;
1517890   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1517891   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1517892   +   end;
MPRINT(EM_DIAGRAM):   end;
1517893   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1517894   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1517895   +   end;
MPRINT(EM_DIAGRAM):   end;
1517896   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1517897   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1517898   +   end;
MPRINT(EM_DIAGRAM):   end;
1517899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517900   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1517901   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1517902   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1517903   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1517904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517906   +   end;
MPRINT(EM_DIAGRAM):   end;
1517907   +end;
MPRINT(EM_DIAGRAM):   end;
1517908   +
1517909   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1517910   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1517911   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1517912   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1517913   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1517914   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1517915   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1517916   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1517917   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1517918   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1517919   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1517920   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1517921   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1517922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1517923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517924   +end;
MPRINT(EM_DIAGRAM):   end;
1517925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1517926   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1517927   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1517928   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1517929   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1517930   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1517931   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1517932   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1517933   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1517934   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1517935   +         end;
MPRINT(EM_DIAGRAM):   end;
1517936   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1517937   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1517938   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1517939   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1517940   +            end;
MPRINT(EM_DIAGRAM):   end;
1517941   +         end;
MPRINT(EM_DIAGRAM):   end;
1517942   +      end;
MPRINT(EM_DIAGRAM):   end;
1517943   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1517944   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1517945   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1517946   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1517947   +         end;
MPRINT(EM_DIAGRAM):   end;
1517948   +      end;
MPRINT(EM_DIAGRAM):   end;
1517949   +   end;
MPRINT(EM_DIAGRAM):   end;
1517950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1517951   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1517952   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1517953   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1517954   +      end;
MPRINT(EM_DIAGRAM):   end;
1517955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1517956   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1517957   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1517958   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1517959   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1517960   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1517961   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1517962   +         end;
MPRINT(EM_DIAGRAM):   end;
1517963   +      end;
MPRINT(EM_DIAGRAM):   end;
1517964   +   end;
MPRINT(EM_DIAGRAM):   end;
1517965   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1517966   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1517967   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1517968   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1517969   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1517970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1517971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1517972   +   end;
MPRINT(EM_DIAGRAM):   end;
1517973   +end;
MPRINT(EM_DIAGRAM):   end;
1517974   +
1517975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1517976   +*** Checking missing input Interval
1517977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1517978   +
1517979   +IF NMISS(
1517980   +   AcceptedCmpTotal ,
1517981   +   Age ,
1517982   +   Frq ,
1517983   +   Income ,
1517984   +   Kidhome ,
1517985   +   Mnt ,
1517986   +   MntFishProducts ,
1517987   +   MntFruits ,
1517988   +   MntGoldProds ,
1517989   +   MntMeatProducts ,
1517990   +   MntSweetProducts ,
1517991   +   MntWines ,
1517992   +   MonthsAsCustomer ,
1517993   +   NumCatalogPurchases ,
1517994   +   NumDealsPurchases ,
1517995   +   NumDistPurchases ,
1517996   +   NumStorePurchases ,
1517997   +   NumWebPurchases ,
1517998   +   NumWebVisitsMonth ,
1517999   +   RFMstat ,
1518000   +   RMntFrq ,
1518001   +   Recency ,
1518002   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1518003   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1518004   +
1518005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518006   +END;
MPRINT(EM_DIAGRAM):   END;
1518007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518008   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1518009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518010   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1518011   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1518012   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1518013   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1518014   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1518015   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1518016   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1518017   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1518018   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1518019   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1518020   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1518021   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1518022   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1518023   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1518024   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1518025   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1518026   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1518027   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1518028   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1518029   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1518030   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1518031   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1518032   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1518033   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1518034   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1518035   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1518036   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1518037   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1518038   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1518039   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1518040   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1518041   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1518042   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1518043   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1518044   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1518045   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1518046   +END;
MPRINT(EM_DIAGRAM):   END;
1518047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1518048   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1518049   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1518050   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1518051   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1518052   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1518053   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1518054   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1518055   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1518056   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1518057   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1518058   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1518059   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1518060   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1518061   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1518062   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1518063   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1518064   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1518065   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1518066   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1518067   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1518068   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1518069   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1518070   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1518071   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1518072   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1518073   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1518074   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1518075   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1518076   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1518077   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1518078   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1518079   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1518080   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1518081   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1518082   +   ELSE S_NumCatalogPurchases
1518083   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1518084   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1518085   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1518086   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1518087   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1518088   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1518089   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1518090   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1518091   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1518092   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1518093   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1518094   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1518095   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1518096   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1518097   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1518098   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1518099   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1518100   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1518101   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1518102   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1518103   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1518104   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1518105   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1518106   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1518107   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1518108   +END;
MPRINT(EM_DIAGRAM):   END;
1518109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518110   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1518111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518113   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1518114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518116   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1518117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1518119   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1518120   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1518121   +        S_Income  +    -0.76740176580734 * S_Kidhome
1518122   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1518123   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1518124   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1518125   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1518126   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1518127   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1518128   +          +    -1.00050516074089 * S_NumDealsPurchases
1518129   +          +    -0.89322788176916 * S_NumDistPurchases
1518130   +          +     1.21914397196653 * S_NumStorePurchases
1518131   +          +     1.50867172673665 * S_NumWebPurchases
1518132   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1518133   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1518134   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1518135   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1518136   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1518137   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1518138   +        S_Income  +    -0.76288911429735 * S_Kidhome
1518139   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1518140   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1518141   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1518142   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1518143   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1518144   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1518145   +          +     0.79497206561332 * S_NumDealsPurchases
1518146   +          +    -0.13658888199464 * S_NumDistPurchases
1518147   +          +    -0.86436416316417 * S_NumStorePurchases
1518148   +          +    -0.85206550087617 * S_NumWebPurchases
1518149   +          +     1.72745004688732 * S_NumWebVisitsMonth
1518150   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1518151   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1518152   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1518153   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1518154   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1518155   +        S_Income  +    -0.48841499166688 * S_Kidhome
1518156   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1518157   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1518158   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1518159   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1518160   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1518161   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1518162   +          +    -0.00010125986409 * S_NumDealsPurchases
1518163   +          +    -0.00873530900019 * S_NumDistPurchases
1518164   +          +    -0.13188135131414 * S_NumStorePurchases
1518165   +          +    -0.10710067608125 * S_NumWebPurchases
1518166   +          +     0.99164053465149 * S_NumWebVisitsMonth
1518167   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1518168   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1518169   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1518170   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1518171   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1518172   +        S_Income  +    -0.57026847797175 * S_Kidhome
1518173   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1518174   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1518175   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1518176   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1518177   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1518178   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1518179   +          +     0.83618651452015 * S_NumDealsPurchases
1518180   +          +     0.22469306589917 * S_NumDistPurchases
1518181   +          +    -0.95889459414769 * S_NumStorePurchases
1518182   +          +    -0.95695646799114 * S_NumWebPurchases
1518183   +          +     0.96738689790948 * S_NumWebVisitsMonth
1518184   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1518185   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1518186   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1518187   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1518188   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1518189   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1518190   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1518191   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1518192   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1518193   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1518194   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1518195   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1518196   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1518197   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1518198   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1518199   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1518200   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1518201   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1518202   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1518203   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1518204   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1518205   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1518206   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1518207   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1518208   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1518209   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1518210   +          +     0.80885454992674 * Marital_StatusDivorced
1518211   +          +     -0.5568630572283 * Marital_StatusMarried
1518212   +          +    -0.03099047176508 * Marital_StatusSingle
1518213   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1518214   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1518215   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1518216   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1518217   +          +     0.13911597069393 * Marital_StatusDivorced
1518218   +          +    -1.50081060732787 * Marital_StatusMarried
1518219   +          +     1.41717012231539 * Marital_StatusSingle
1518220   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1518221   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1518222   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1518223   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1518224   +          +    -0.26412736340464 * Marital_StatusDivorced
1518225   +          +    -0.27049992388629 * Marital_StatusMarried
1518226   +          +     0.67476795725099 * Marital_StatusSingle
1518227   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1518228   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1518229   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1518230   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1518231   +          +      0.8954230457499 * Marital_StatusDivorced
1518232   +          +     0.73706556068242 * Marital_StatusMarried
1518233   +          +    -1.29073720538893 * Marital_StatusSingle
1518234   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1518235   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1518236   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1518237   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1518238   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1518239   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1518240   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1518241   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1518242   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1518243   +END;
MPRINT(EM_DIAGRAM):   END;
1518244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1518245   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1518246   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1518247   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1518248   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1518249   +END;
MPRINT(EM_DIAGRAM):   END;
1518250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518251   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1518252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518253   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1518254   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1518255   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1518256   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1518257   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1518258   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1518259   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1518260   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1518261   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1518262   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1518263   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1518264   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1518265   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1518266   +END;
MPRINT(EM_DIAGRAM):   END;
1518267   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1518268   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1518269   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1518270   +END;
MPRINT(EM_DIAGRAM):   END;
1518271   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1518272   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1518273   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1518274   +END;
MPRINT(EM_DIAGRAM):   END;
1518275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518276   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1518277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1518278   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1518279   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1518280   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1518281   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1518282   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1518283   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1518284   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1518285   +END;
MPRINT(EM_DIAGRAM):   END;
1518286   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1518287   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1518288   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1518289   +drop
1518290   +H11
1518291   +H12
1518292   +H13
1518293   +H14
1518294   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1518295   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1518296    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1518297    quit;
1518298    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1518299    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1518300    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1518301    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1518302    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1518303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518304    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1518305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518307    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1518308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518310    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518311    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1518312    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1518313    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518314    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1518315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1518316    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1518317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518320    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1518321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518322    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518323    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1518324    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1518324  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1518325    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518326    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1518327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518328    filename _pref
1518328  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1518329    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1518330    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1518331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1518332   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1518333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1518334   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1518335   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1518336   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1518337    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1518338    quit;
1518339    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1518340    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1518341    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1518342    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1518343    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1518344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518345    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1518346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518347    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518348    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1518349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518351    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518352    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1518353    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1518354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518355    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1518356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1518357    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1518358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518360    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518361    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1518362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518363    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518364    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1518365    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1518365  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1518366    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518367    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1518368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518369    filename _pref
1518369  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1518370    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1518371    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1518372   +
1518373   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1518374   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1518374  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1518375   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1518376   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1518377   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1518378   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1518379   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1518380    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1518381    quit;
1518382    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1518383    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1518384    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1518385    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1518386    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1518387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518388    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1518389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518391    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1518392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518394    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518395    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1518396    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1518397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518398    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1518399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518400    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1518401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518403    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518404    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1518405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518406    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518407    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1518408    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1518408  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1518409    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518410    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1518411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518412    filename _pref
1518412  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1518413    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1518414    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1518415   +
1518416   +
1518417   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1518418   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1518419   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1518420   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1518421   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1518422   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518423   +
1518424   +
1518425   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1518426   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1518427   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1518428   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1518429   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1518430   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518431   +
1518432   +
1518433   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1518434   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1518435   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1518436   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1518437   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1518438   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518439   +
1518440   +
1518441   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1518442   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1518443   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1518444   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1518445   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1518446   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518447   +
1518448   +
1518449   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1518450   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1518451   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1518452   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1518453   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1518454   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518455   +
1518456   +
1518457   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1518458   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1518459   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1518460   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1518461   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1518462   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518463   +
1518464   +
1518465   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1518466   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1518467   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1518468   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1518469   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1518470   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518471   +
1518472   +
1518473   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1518474   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1518475   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1518476   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1518477   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1518478   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1518479   +if
1518480   +_FILTERNORM1 not in ( '.')
1518481   + and
1518482   +_FILTERNORM2 not in ( '.')
1518483   + and
1518484   +_FILTERNORM3 not in ( '.')
1518485   + and
1518486   +_FILTERNORM4 not in ( '.')
1518487   + and
1518488   +_FILTERNORM5 not in ( '.')
1518489   + and
1518490   +_FILTERNORM6 not in ( '.')
1518491   + and
1518492   +_FILTERNORM7 not in ( ' ')
1518493   + and
1518494   +_FILTERNORM8 not in ( ' ')
1518495   +and
1518496   +( Dt_Customer ne .)
1518497   +and ( Income ne . and (Income<=107000))
1518498   +and ( Kidhome ne .)
1518499   +and ( MntFishProducts ne .)
1518500   +and ( MntFruits ne .)
1518501   +and ( MntGoldProds ne .)
1518502   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1518503   +and ( MntSweetProducts ne .)
1518504   +and ( MntWines ne .)
1518505   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1518506   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1518507   +and ( NumStorePurchases ne .)
1518508   +and ( NumWebPurchases ne .)
1518509   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1518510   +and ( Recency ne .)
1518511   +and ( Teenhome ne .)
1518512   +and ( Year_Birth ne .)
1518513   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1518514   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1518515   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1518516   +end;
MPRINT(EM_DIAGRAM):   end;
1518517   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1518518   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1518519    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1518520    quit;
1518521    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1518522    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1518523    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1518524    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1518525    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1518526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518527    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1518528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518529    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518530    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1518531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518533    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518534    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1518535    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1518536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518537    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1518538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1518539    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1518540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518541    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1518543    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1518544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1518545    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518546    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1518547    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1518547  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1518548    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518549    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1518550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518551    %macro varDept(fcmpdata=,id=);
1518552    %global nobs&id scoreFlag&id;
1518553    %let scoreFlag&id = 0;
1518554    %if &id=1 or ^&fcmpStart %then %do;
1518555    proc sort data=&fcmpdata out=_temp&id nodupkey;
1518556    by NAME;
1518557    where id=&id and LHS in( %let j=1;
1518558    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1518559    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1518560    "&var" %let j = %eval(&j+1);
1518561    %end;
1518562    );
1518563    run;
1518564    %let dsid = %sysfunc(open(_temp&id));
1518565    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1518566    %let dsid = %sysfunc(close(&dsid));
1518567    %if &&nobs&id %then %do;
1518568    %let scoreFlag&id = 1;
1518569    %let fcmpStart = 1;
1518570    %end;
1518571    %else %let fcmpStart = 0;
1518572    %end;
1518573    %else %do;
1518574    proc sort data=&fcmpdata out=_tempid;
1518575    where id=&id;
1518576    by LHS;
1518577    run;
1518578    %let dsid = %sysfunc(open(_tempid));
1518579    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1518580    %let dsid = %sysfunc(close(&dsid));
1518581    %if ^&&nobs&id %then %do;
1518582    proc datasets lib=work nolist;
1518583    delete _tempid;
1518584    run;
1518585    quit;
1518586    %end;
1518587    %else %do;
1518588    data _tempAll;
1518589    set %let j=%eval(&id-1);
1518590    %do x=1 %to &j;
1518591    %if &&nobs&x %then %do;
1518592    _temp&x %end;
1518593    %end;
1518594    ;
1518595    run;
1518596    proc sql;
1518597    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1518597  ! work._tempid p2 where p.name=p2.lhs;
1518598    quit;
1518599    data _temp&id;
1518600    set _temp&id;
1518601    where LHS ne '' and NAME ne '' and Node ne '';
1518602    run;
1518603    proc datasets lib=work nolist;
1518604    delete _tempAll;
1518605    run;
1518606    %let dsid = %sysfunc(open(_temp&id));
1518607    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1518608    %let dsid = %sysfunc(close(&dsid));
1518609    %if ^&&nobs&id %then %do;
1518610    proc datasets lib=work nolist;
1518611    delete _temp&id;
1518612    run;
1518613    quit;
1518614    %end;
1518615    %else %do;
1518616    %let scoreFlag&id = 1;
1518617    data _temp&id;
1518618    set _temp&id;
1518619    where LHS ne NAME and node ne '';
1518620    run;
1518621    %let dsid = %sysfunc(open(_temp&id));
1518622    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1518623    %let dsid = %sysfunc(close(&dsid));
1518624    %if ^&&nobs&id %then %do;
1518625    proc datasets lib=work nolist;
1518626    delete _temp&id;
1518627    run;
1518628    quit;
1518629    %end;
1518630    %else %do;
1518631    proc sort data=_temp&id nodupkey;
1518632    by LHS NAME;
1518633    run;
1518634    %end;
1518635    %end;
1518636    %end;
1518637    %end;
1518638    %mend varDept;
1518639    %macro optCode(outdata=fcmpdata);
1518640    %global fcmpStart;
1518641    %let fcmpStart = 0;
1518642    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1518643    %let NumNodes=9;
1518644    %do k=1 %to &NumNodes;
1518645    %vardept(fcmpdata=&outdata, id=&k);
1518646    %end;
1518647    %mend optCode;
1518648    %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1518649    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1518650    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1518651    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1518652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1518653    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1518654    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1518655    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1518656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518657    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1518658    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1518658  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1518659    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1518660    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1518661    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1518662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1518663    filename _pref
1518663  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1518664    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1518665    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1518666   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1518667   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1518668   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1518669   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1518670   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1518671   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1518672   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1518673   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1518674   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1518675   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1518676   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1518677   +LENGTH _WARN_ $4
1518678   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1518679   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1518680   +
1518681   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1518682   +
1518683   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1518684   +
1518685   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1518686   +
1518687   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1518688   +
1518689   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1518690   +
1518691   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1518692   +
1518693   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1518694   +
1518695   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1518696   +
1518697   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1518698   +
1518699   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1518700   +
1518701   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1518702   +
1518703   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1518704   +
1518705   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1518706   +
1518707   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1518708   +
1518709   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1518710   +
1518711   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1518712   +
1518713   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1518714   +
1518715   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1518716   +
1518717   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1518718   +
1518719   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1518720   +
1518721   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1518722   +
1518723   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1518724   +
1518725   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1518726   +
1518727   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1518728   +
1518729   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1518730   +
1518731   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1518732   +
1518733   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1518734   +
1518735   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1518736   +
1518737   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1518738   +
1518739   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1518740   +
1518741   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1518742   +
1518743   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1518744   +
1518745   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1518746   +
1518747   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1518748   +
1518749   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1518750   +
1518751   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1518752   +
1518753   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1518754   +
1518755   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1518756   +
1518757   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1518758   +
1518759   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1518760   +
1518761   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1518762   +
1518763   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1518764   +
1518765   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1518766   +
1518767   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1518768   +
1518769   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1518770   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1518771   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1518772   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1518773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518775   +end;
MPRINT(EM_DIAGRAM):   end;
1518776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518778   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1518779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518781   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1518782   +   end;
MPRINT(EM_DIAGRAM):   end;
1518783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518784   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1518785   +   end;
MPRINT(EM_DIAGRAM):   end;
1518786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518787   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1518788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518790   +   end;
MPRINT(EM_DIAGRAM):   end;
1518791   +end;
MPRINT(EM_DIAGRAM):   end;
1518792   +
1518793   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1518794   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1518795   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1518796   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1518797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518799   +end;
MPRINT(EM_DIAGRAM):   end;
1518800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518802   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1518803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518805   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1518806   +   end;
MPRINT(EM_DIAGRAM):   end;
1518807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518808   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1518809   +   end;
MPRINT(EM_DIAGRAM):   end;
1518810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518811   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1518812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518814   +   end;
MPRINT(EM_DIAGRAM):   end;
1518815   +end;
MPRINT(EM_DIAGRAM):   end;
1518816   +
1518817   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1518818   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1518819   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1518820   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1518821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518823   +end;
MPRINT(EM_DIAGRAM):   end;
1518824   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518826   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1518827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518829   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1518830   +   end;
MPRINT(EM_DIAGRAM):   end;
1518831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518832   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1518833   +   end;
MPRINT(EM_DIAGRAM):   end;
1518834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518835   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1518836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518838   +   end;
MPRINT(EM_DIAGRAM):   end;
1518839   +end;
MPRINT(EM_DIAGRAM):   end;
1518840   +
1518841   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1518842   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1518843   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1518844   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1518845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518847   +end;
MPRINT(EM_DIAGRAM):   end;
1518848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518850   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1518851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518853   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1518854   +   end;
MPRINT(EM_DIAGRAM):   end;
1518855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518856   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1518857   +   end;
MPRINT(EM_DIAGRAM):   end;
1518858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518859   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1518860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518862   +   end;
MPRINT(EM_DIAGRAM):   end;
1518863   +end;
MPRINT(EM_DIAGRAM):   end;
1518864   +
1518865   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1518866   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1518867   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1518868   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1518869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518871   +end;
MPRINT(EM_DIAGRAM):   end;
1518872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518874   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1518875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518877   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1518878   +   end;
MPRINT(EM_DIAGRAM):   end;
1518879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518880   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1518881   +   end;
MPRINT(EM_DIAGRAM):   end;
1518882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518883   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1518884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518886   +   end;
MPRINT(EM_DIAGRAM):   end;
1518887   +end;
MPRINT(EM_DIAGRAM):   end;
1518888   +
1518889   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1518890   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1518891   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1518892   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1518893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518895   +end;
MPRINT(EM_DIAGRAM):   end;
1518896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518898   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1518899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1518901   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1518902   +   end;
MPRINT(EM_DIAGRAM):   end;
1518903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1518904   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1518905   +   end;
MPRINT(EM_DIAGRAM):   end;
1518906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518907   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1518908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518910   +   end;
MPRINT(EM_DIAGRAM):   end;
1518911   +end;
MPRINT(EM_DIAGRAM):   end;
1518912   +
1518913   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1518914   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1518915   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1518916   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1518917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518919   +end;
MPRINT(EM_DIAGRAM):   end;
1518920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1518922   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1518923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518924   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1518925   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1518926   +   end;
MPRINT(EM_DIAGRAM):   end;
1518927   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1518928   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1518929   +   end;
MPRINT(EM_DIAGRAM):   end;
1518930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518931   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1518932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518934   +   end;
MPRINT(EM_DIAGRAM):   end;
1518935   +end;
MPRINT(EM_DIAGRAM):   end;
1518936   +
1518937   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1518938   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1518939   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1518940   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1518941   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1518942   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1518943   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1518944   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1518945   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1518946   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1518947   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1518948   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1518949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518951   +end;
MPRINT(EM_DIAGRAM):   end;
1518952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1518953   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1518954   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1518955   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1518956   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1518957   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1518958   +   end;
MPRINT(EM_DIAGRAM):   end;
1518959   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1518960   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1518961   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1518962   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1518963   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1518964   +   end;
MPRINT(EM_DIAGRAM):   end;
1518965   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1518966   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1518967   +   end;
MPRINT(EM_DIAGRAM):   end;
1518968   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1518969   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1518970   +   end;
MPRINT(EM_DIAGRAM):   end;
1518971   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1518972   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1518973   +   end;
MPRINT(EM_DIAGRAM):   end;
1518974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1518975   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1518976   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1518977   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1518978   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1518979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1518980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518981   +   end;
MPRINT(EM_DIAGRAM):   end;
1518982   +end;
MPRINT(EM_DIAGRAM):   end;
1518983   +
1518984   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1518985   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1518986   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1518987   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1518988   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1518989   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1518990   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1518991   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1518992   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1518993   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1518994   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1518995   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1518996   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1518997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1518998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1518999   +end;
MPRINT(EM_DIAGRAM):   end;
1519000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519001   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1519002   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1519003   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519004   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1519005   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1519006   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1519007   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1519008   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1519009   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1519010   +         end;
MPRINT(EM_DIAGRAM):   end;
1519011   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1519012   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1519013   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1519014   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1519015   +            end;
MPRINT(EM_DIAGRAM):   end;
1519016   +         end;
MPRINT(EM_DIAGRAM):   end;
1519017   +      end;
MPRINT(EM_DIAGRAM):   end;
1519018   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1519019   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1519020   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1519021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1519022   +         end;
MPRINT(EM_DIAGRAM):   end;
1519023   +      end;
MPRINT(EM_DIAGRAM):   end;
1519024   +   end;
MPRINT(EM_DIAGRAM):   end;
1519025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519026   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1519027   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1519028   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1519029   +      end;
MPRINT(EM_DIAGRAM):   end;
1519030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1519031   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1519032   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1519033   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1519034   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1519035   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1519036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1519037   +         end;
MPRINT(EM_DIAGRAM):   end;
1519038   +      end;
MPRINT(EM_DIAGRAM):   end;
1519039   +   end;
MPRINT(EM_DIAGRAM):   end;
1519040   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1519041   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1519042   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1519043   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1519044   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1519045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519047   +   end;
MPRINT(EM_DIAGRAM):   end;
1519048   +end;
MPRINT(EM_DIAGRAM):   end;
1519049   +
1519050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519051   +*** Checking missing input Interval
1519052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1519053   +
1519054   +IF NMISS(
1519055   +   AcceptedCmpTotal ,
1519056   +   Age ,
1519057   +   Frq ,
1519058   +   Income ,
1519059   +   Kidhome ,
1519060   +   Mnt ,
1519061   +   MntFishProducts ,
1519062   +   MntFruits ,
1519063   +   MntGoldProds ,
1519064   +   MntMeatProducts ,
1519065   +   MntSweetProducts ,
1519066   +   MntWines ,
1519067   +   MonthsAsCustomer ,
1519068   +   NumCatalogPurchases ,
1519069   +   NumDealsPurchases ,
1519070   +   NumDistPurchases ,
1519071   +   NumStorePurchases ,
1519072   +   NumWebPurchases ,
1519073   +   NumWebVisitsMonth ,
1519074   +   RFMstat ,
1519075   +   RMntFrq ,
1519076   +   Recency ,
1519077   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1519078   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1519079   +
1519080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519081   +END;
MPRINT(EM_DIAGRAM):   END;
1519082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519083   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1519084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519085   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1519086   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1519087   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1519088   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1519089   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1519090   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1519091   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1519092   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1519093   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1519094   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1519095   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1519096   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1519097   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1519098   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1519099   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1519100   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1519101   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1519102   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1519103   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1519104   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1519105   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1519106   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1519107   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1519108   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1519109   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1519110   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1519111   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1519112   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1519113   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1519114   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1519115   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1519116   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1519117   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1519118   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1519119   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1519120   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1519121   +END;
MPRINT(EM_DIAGRAM):   END;
1519122   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1519123   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1519124   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1519125   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1519126   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1519127   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1519128   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1519129   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1519130   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1519131   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1519132   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1519133   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1519134   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1519135   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1519136   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1519137   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1519138   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1519139   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1519140   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1519141   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1519142   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1519143   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1519144   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1519145   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1519146   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1519147   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1519148   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1519149   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1519150   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1519151   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1519152   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1519153   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1519154   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1519155   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1519156   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1519157   +   ELSE S_NumCatalogPurchases
1519158   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1519159   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1519160   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1519161   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1519162   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1519163   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1519164   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1519165   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1519166   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1519167   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1519168   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1519169   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1519170   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1519171   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1519172   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1519173   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1519174   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1519175   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1519176   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1519177   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1519178   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1519179   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1519180   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1519181   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1519182   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1519183   +END;
MPRINT(EM_DIAGRAM):   END;
1519184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519185   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1519186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519188   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1519189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519191   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1519192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519193   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1519194   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1519195   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1519196   +        S_Income  +    -1.07733254688396 * S_Kidhome
1519197   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1519198   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1519199   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1519200   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1519201   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1519202   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1519203   +          +     0.34431711603003 * S_NumDealsPurchases
1519204   +          +      0.7134923732819 * S_NumDistPurchases
1519205   +          +     0.05901777448936 * S_NumStorePurchases
1519206   +          +    -0.19803026616936 * S_NumWebPurchases
1519207   +          +     1.34202846183228 * S_NumWebVisitsMonth
1519208   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1519209   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1519210   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1519211   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1519212   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1519213   +        S_Income  +    -0.00255151514163 * S_Kidhome
1519214   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1519215   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1519216   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1519217   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1519218   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1519219   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1519220   +          +     0.45752917132477 * S_NumDealsPurchases
1519221   +          +      0.1559495599293 * S_NumDistPurchases
1519222   +          +    -0.33402213718695 * S_NumStorePurchases
1519223   +          +    -0.39372662704902 * S_NumWebPurchases
1519224   +          +     0.52518189694069 * S_NumWebVisitsMonth
1519225   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1519226   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1519227   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1519228   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1519229   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1519230   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1519231   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1519232   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1519233   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1519234   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1519235   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1519236   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1519237   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1519238   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1519239   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1519240   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1519241   +          +     0.46710555357393 * Marital_StatusDivorced
1519242   +          +    -1.27560428667174 * Marital_StatusMarried
1519243   +          +      1.3147344073121 * Marital_StatusSingle
1519244   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1519245   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1519246   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1519247   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1519248   +          +     0.07422027097612 * Marital_StatusDivorced
1519249   +          +     0.00271855575037 * Marital_StatusMarried
1519250   +          +    -0.00749566028051 * Marital_StatusSingle
1519251   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1519252   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1519253   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1519254   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1519255   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1519256   +END;
MPRINT(EM_DIAGRAM):   END;
1519257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1519258   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1519259   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1519260   +END;
MPRINT(EM_DIAGRAM):   END;
1519261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519262   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1519263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519264   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1519265   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1519266   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1519267   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1519268   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1519269   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1519270   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1519271   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1519272   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1519273   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1519274   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1519275   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1519276   +END;
MPRINT(EM_DIAGRAM):   END;
1519277   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1519278   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1519279   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1519280   +END;
MPRINT(EM_DIAGRAM):   END;
1519281   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1519282   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1519283   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1519284   +END;
MPRINT(EM_DIAGRAM):   END;
1519285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519286   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1519287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1519288   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1519289   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1519290   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1519291   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1519292   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1519293   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1519294   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1519295   +END;
MPRINT(EM_DIAGRAM):   END;
1519296   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1519297   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1519298   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1519299   +drop
1519300   +H11
1519301   +H12
1519302   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1519303   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1519304    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1519305    quit;
1519306    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1519307    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1519308    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1519309    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1519310    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1519311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519312    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1519313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519315    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1519316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519319    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1519320    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1519321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519322    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1519323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1519324    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1519325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519327    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519328    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1519329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519330    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519331    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1519332    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1519332  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1519333    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519334    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1519335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519336    filename _pref
1519336  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1519337    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1519338    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1519339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1519340   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1519341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1519342   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1519343   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1519344   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1519345    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1519346    quit;
1519347    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1519348    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1519349    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1519350    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1519351    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1519352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519353    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1519354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519356    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1519357    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519359    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519360    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1519361    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1519362    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519363    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1519364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1519365    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1519366    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519368    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519369    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1519370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519371    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519372    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1519373    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1519373  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1519374    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519375    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1519376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519377    filename _pref
1519377  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1519378    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1519379    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1519380   +
1519381   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1519382   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1519382  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1519383   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1519384   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1519385   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1519386   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1519387   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1519388    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1519389    quit;
1519390    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1519391    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1519392    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1519393    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1519394    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1519395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519396    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1519397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519399    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1519400    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519402    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519403    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1519404    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1519405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519406    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1519407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519408    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1519409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519410    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519411    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519412    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1519413    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519414    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519415    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1519416    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1519416  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1519417    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519418    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1519419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519420    filename _pref
1519420  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1519421    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1519422    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1519423   +
1519424   +
1519425   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1519426   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1519427   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1519428   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1519429   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1519430   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519431   +
1519432   +
1519433   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1519434   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1519435   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1519436   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1519437   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1519438   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519439   +
1519440   +
1519441   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1519442   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1519443   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1519444   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1519445   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1519446   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519447   +
1519448   +
1519449   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1519450   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1519451   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1519452   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1519453   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1519454   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519455   +
1519456   +
1519457   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1519458   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1519459   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1519460   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1519461   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1519462   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519463   +
1519464   +
1519465   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1519466   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1519467   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1519468   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1519469   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1519470   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519471   +
1519472   +
1519473   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1519474   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1519475   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1519476   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1519477   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1519478   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519479   +
1519480   +
1519481   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1519482   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1519483   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1519484   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1519485   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1519486   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1519487   +if
1519488   +_FILTERNORM1 not in ( '.')
1519489   + and
1519490   +_FILTERNORM2 not in ( '.')
1519491   + and
1519492   +_FILTERNORM3 not in ( '.')
1519493   + and
1519494   +_FILTERNORM4 not in ( '.')
1519495   + and
1519496   +_FILTERNORM5 not in ( '.')
1519497   + and
1519498   +_FILTERNORM6 not in ( '.')
1519499   + and
1519500   +_FILTERNORM7 not in ( ' ')
1519501   + and
1519502   +_FILTERNORM8 not in ( ' ')
1519503   +and
1519504   +( Dt_Customer ne .)
1519505   +and ( Income ne . and (Income<=107000))
1519506   +and ( Kidhome ne .)
1519507   +and ( MntFishProducts ne .)
1519508   +and ( MntFruits ne .)
1519509   +and ( MntGoldProds ne .)
1519510   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1519511   +and ( MntSweetProducts ne .)
1519512   +and ( MntWines ne .)
1519513   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1519514   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1519515   +and ( NumStorePurchases ne .)
1519516   +and ( NumWebPurchases ne .)
1519517   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1519518   +and ( Recency ne .)
1519519   +and ( Teenhome ne .)
1519520   +and ( Year_Birth ne .)
1519521   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1519522   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1519523   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1519524   +end;
MPRINT(EM_DIAGRAM):   end;
1519525   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1519526   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1519527    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1519528    quit;
1519529    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1519530    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1519531    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1519532    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1519533    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1519534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519535    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1519536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519538    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1519539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519541    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519542    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1519543    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1519544    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519545    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1519546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1519547    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1519548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1519551    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1519552    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1519553    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519554    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1519555    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1519555  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1519556    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519557    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1519558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519559    %macro varDept(fcmpdata=,id=);
1519560    %global nobs&id scoreFlag&id;
1519561    %let scoreFlag&id = 0;
1519562    %if &id=1 or ^&fcmpStart %then %do;
1519563    proc sort data=&fcmpdata out=_temp&id nodupkey;
1519564    by NAME;
1519565    where id=&id and LHS in( %let j=1;
1519566    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1519567    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1519568    "&var" %let j = %eval(&j+1);
1519569    %end;
1519570    );
1519571    run;
1519572    %let dsid = %sysfunc(open(_temp&id));
1519573    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1519574    %let dsid = %sysfunc(close(&dsid));
1519575    %if &&nobs&id %then %do;
1519576    %let scoreFlag&id = 1;
1519577    %let fcmpStart = 1;
1519578    %end;
1519579    %else %let fcmpStart = 0;
1519580    %end;
1519581    %else %do;
1519582    proc sort data=&fcmpdata out=_tempid;
1519583    where id=&id;
1519584    by LHS;
1519585    run;
1519586    %let dsid = %sysfunc(open(_tempid));
1519587    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1519588    %let dsid = %sysfunc(close(&dsid));
1519589    %if ^&&nobs&id %then %do;
1519590    proc datasets lib=work nolist;
1519591    delete _tempid;
1519592    run;
1519593    quit;
1519594    %end;
1519595    %else %do;
1519596    data _tempAll;
1519597    set %let j=%eval(&id-1);
1519598    %do x=1 %to &j;
1519599    %if &&nobs&x %then %do;
1519600    _temp&x %end;
1519601    %end;
1519602    ;
1519603    run;
1519604    proc sql;
1519605    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1519605  ! work._tempid p2 where p.name=p2.lhs;
1519606    quit;
1519607    data _temp&id;
1519608    set _temp&id;
1519609    where LHS ne '' and NAME ne '' and Node ne '';
1519610    run;
1519611    proc datasets lib=work nolist;
1519612    delete _tempAll;
1519613    run;
1519614    %let dsid = %sysfunc(open(_temp&id));
1519615    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1519616    %let dsid = %sysfunc(close(&dsid));
1519617    %if ^&&nobs&id %then %do;
1519618    proc datasets lib=work nolist;
1519619    delete _temp&id;
1519620    run;
1519621    quit;
1519622    %end;
1519623    %else %do;
1519624    %let scoreFlag&id = 1;
1519625    data _temp&id;
1519626    set _temp&id;
1519627    where LHS ne NAME and node ne '';
1519628    run;
1519629    %let dsid = %sysfunc(open(_temp&id));
1519630    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1519631    %let dsid = %sysfunc(close(&dsid));
1519632    %if ^&&nobs&id %then %do;
1519633    proc datasets lib=work nolist;
1519634    delete _temp&id;
1519635    run;
1519636    quit;
1519637    %end;
1519638    %else %do;
1519639    proc sort data=_temp&id nodupkey;
1519640    by LHS NAME;
1519641    run;
1519642    %end;
1519643    %end;
1519644    %end;
1519645    %end;
1519646    %mend varDept;
1519647    %macro optCode(outdata=fcmpdata);
1519648    %global fcmpStart;
1519649    %let fcmpStart = 0;
1519650    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1519651    %let NumNodes=9;
1519652    %do k=1 %to &NumNodes;
1519653    %vardept(fcmpdata=&outdata, id=&k);
1519654    %end;
1519655    %mend optCode;
1519656    %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1519657    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1519658    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1519659    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1519660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1519661    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1519662    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1519663    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1519664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1519666    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1519666  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1519667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1519668    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1519669    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1519670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1519671    filename _pref
1519671  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1519672    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1519673    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1519674   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1519675   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1519676   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1519677   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1519678   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1519679   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1519680   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1519681   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1519682   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1519683   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1519684   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1519685   +LENGTH _WARN_ $4
1519686   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1519687   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1519688   +
1519689   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1519690   +
1519691   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1519692   +
1519693   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1519694   +
1519695   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1519696   +
1519697   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1519698   +
1519699   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1519700   +
1519701   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1519702   +
1519703   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1519704   +
1519705   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1519706   +
1519707   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1519708   +
1519709   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1519710   +
1519711   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1519712   +
1519713   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1519714   +
1519715   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1519716   +
1519717   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1519718   +
1519719   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1519720   +
1519721   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1519722   +
1519723   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1519724   +
1519725   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1519726   +
1519727   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1519728   +
1519729   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1519730   +
1519731   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1519732   +
1519733   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1519734   +
1519735   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1519736   +
1519737   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1519738   +
1519739   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1519740   +
1519741   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1519742   +
1519743   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1519744   +
1519745   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1519746   +
1519747   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1519748   +
1519749   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1519750   +
1519751   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1519752   +
1519753   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1519754   +
1519755   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1519756   +
1519757   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1519758   +
1519759   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1519760   +
1519761   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1519762   +
1519763   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1519764   +
1519765   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1519766   +
1519767   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1519768   +
1519769   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1519770   +
1519771   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1519772   +
1519773   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1519774   +
1519775   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1519776   +
1519777   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1519778   +
1519779   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1519780   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1519781   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1519782   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1519783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519785   +end;
MPRINT(EM_DIAGRAM):   end;
1519786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519788   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1519789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519791   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1519792   +   end;
MPRINT(EM_DIAGRAM):   end;
1519793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519794   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1519795   +   end;
MPRINT(EM_DIAGRAM):   end;
1519796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519797   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1519798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519800   +   end;
MPRINT(EM_DIAGRAM):   end;
1519801   +end;
MPRINT(EM_DIAGRAM):   end;
1519802   +
1519803   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1519804   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1519805   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1519806   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1519807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519809   +end;
MPRINT(EM_DIAGRAM):   end;
1519810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519812   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1519813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519814   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519815   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1519816   +   end;
MPRINT(EM_DIAGRAM):   end;
1519817   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519818   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1519819   +   end;
MPRINT(EM_DIAGRAM):   end;
1519820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519821   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1519822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519824   +   end;
MPRINT(EM_DIAGRAM):   end;
1519825   +end;
MPRINT(EM_DIAGRAM):   end;
1519826   +
1519827   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1519828   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1519829   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1519830   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1519831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519833   +end;
MPRINT(EM_DIAGRAM):   end;
1519834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519836   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1519837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519839   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1519840   +   end;
MPRINT(EM_DIAGRAM):   end;
1519841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519842   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1519843   +   end;
MPRINT(EM_DIAGRAM):   end;
1519844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519845   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1519846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519848   +   end;
MPRINT(EM_DIAGRAM):   end;
1519849   +end;
MPRINT(EM_DIAGRAM):   end;
1519850   +
1519851   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1519852   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1519853   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1519854   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1519855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519857   +end;
MPRINT(EM_DIAGRAM):   end;
1519858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519860   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1519861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519863   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1519864   +   end;
MPRINT(EM_DIAGRAM):   end;
1519865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519866   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1519867   +   end;
MPRINT(EM_DIAGRAM):   end;
1519868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519869   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1519870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519872   +   end;
MPRINT(EM_DIAGRAM):   end;
1519873   +end;
MPRINT(EM_DIAGRAM):   end;
1519874   +
1519875   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1519876   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1519877   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1519878   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1519879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519881   +end;
MPRINT(EM_DIAGRAM):   end;
1519882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519884   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1519885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519887   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1519888   +   end;
MPRINT(EM_DIAGRAM):   end;
1519889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519890   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1519891   +   end;
MPRINT(EM_DIAGRAM):   end;
1519892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519893   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1519894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519896   +   end;
MPRINT(EM_DIAGRAM):   end;
1519897   +end;
MPRINT(EM_DIAGRAM):   end;
1519898   +
1519899   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1519900   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1519901   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1519902   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1519903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519905   +end;
MPRINT(EM_DIAGRAM):   end;
1519906   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519908   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1519909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1519911   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1519912   +   end;
MPRINT(EM_DIAGRAM):   end;
1519913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1519914   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1519915   +   end;
MPRINT(EM_DIAGRAM):   end;
1519916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519917   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1519918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519920   +   end;
MPRINT(EM_DIAGRAM):   end;
1519921   +end;
MPRINT(EM_DIAGRAM):   end;
1519922   +
1519923   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1519924   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1519925   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1519926   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1519927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519929   +end;
MPRINT(EM_DIAGRAM):   end;
1519930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1519932   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1519933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519934   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1519935   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1519936   +   end;
MPRINT(EM_DIAGRAM):   end;
1519937   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1519938   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1519939   +   end;
MPRINT(EM_DIAGRAM):   end;
1519940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519941   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1519942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519944   +   end;
MPRINT(EM_DIAGRAM):   end;
1519945   +end;
MPRINT(EM_DIAGRAM):   end;
1519946   +
1519947   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1519948   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1519949   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1519950   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1519951   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1519952   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1519953   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1519954   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1519955   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1519956   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1519957   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1519958   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1519959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1519960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519961   +end;
MPRINT(EM_DIAGRAM):   end;
1519962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1519963   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1519964   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1519965   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1519966   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1519967   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1519968   +   end;
MPRINT(EM_DIAGRAM):   end;
1519969   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1519970   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1519971   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1519972   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1519973   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1519974   +   end;
MPRINT(EM_DIAGRAM):   end;
1519975   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1519976   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1519977   +   end;
MPRINT(EM_DIAGRAM):   end;
1519978   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1519979   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1519980   +   end;
MPRINT(EM_DIAGRAM):   end;
1519981   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1519982   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1519983   +   end;
MPRINT(EM_DIAGRAM):   end;
1519984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1519985   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1519986   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1519987   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1519988   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1519989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1519990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1519991   +   end;
MPRINT(EM_DIAGRAM):   end;
1519992   +end;
MPRINT(EM_DIAGRAM):   end;
1519993   +
1519994   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1519995   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1519996   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1519997   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1519998   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1519999   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1520000   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1520001   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1520002   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1520003   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1520004   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1520005   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1520006   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1520007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520009   +end;
MPRINT(EM_DIAGRAM):   end;
1520010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520011   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1520012   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1520013   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520014   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1520015   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1520016   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1520017   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1520018   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1520019   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1520020   +         end;
MPRINT(EM_DIAGRAM):   end;
1520021   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1520022   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1520023   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1520024   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1520025   +            end;
MPRINT(EM_DIAGRAM):   end;
1520026   +         end;
MPRINT(EM_DIAGRAM):   end;
1520027   +      end;
MPRINT(EM_DIAGRAM):   end;
1520028   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1520029   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1520030   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1520031   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1520032   +         end;
MPRINT(EM_DIAGRAM):   end;
1520033   +      end;
MPRINT(EM_DIAGRAM):   end;
1520034   +   end;
MPRINT(EM_DIAGRAM):   end;
1520035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520036   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1520037   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1520038   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1520039   +      end;
MPRINT(EM_DIAGRAM):   end;
1520040   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1520041   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1520042   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1520043   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1520044   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1520045   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1520046   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1520047   +         end;
MPRINT(EM_DIAGRAM):   end;
1520048   +      end;
MPRINT(EM_DIAGRAM):   end;
1520049   +   end;
MPRINT(EM_DIAGRAM):   end;
1520050   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1520051   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1520052   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1520053   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1520054   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1520055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520057   +   end;
MPRINT(EM_DIAGRAM):   end;
1520058   +end;
MPRINT(EM_DIAGRAM):   end;
1520059   +
1520060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520061   +*** Checking missing input Interval
1520062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1520063   +
1520064   +IF NMISS(
1520065   +   AcceptedCmpTotal ,
1520066   +   Age ,
1520067   +   Frq ,
1520068   +   Income ,
1520069   +   Kidhome ,
1520070   +   Mnt ,
1520071   +   MntFishProducts ,
1520072   +   MntFruits ,
1520073   +   MntGoldProds ,
1520074   +   MntMeatProducts ,
1520075   +   MntSweetProducts ,
1520076   +   MntWines ,
1520077   +   MonthsAsCustomer ,
1520078   +   NumCatalogPurchases ,
1520079   +   NumDealsPurchases ,
1520080   +   NumDistPurchases ,
1520081   +   NumStorePurchases ,
1520082   +   NumWebPurchases ,
1520083   +   NumWebVisitsMonth ,
1520084   +   RFMstat ,
1520085   +   RMntFrq ,
1520086   +   Recency ,
1520087   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1520088   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1520089   +
1520090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520091   +END;
MPRINT(EM_DIAGRAM):   END;
1520092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520093   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1520094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520095   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1520096   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1520097   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1520098   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1520099   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1520100   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1520101   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1520102   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1520103   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1520104   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1520105   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1520106   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1520107   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1520108   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1520109   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1520110   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1520111   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1520112   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1520113   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1520114   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1520115   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1520116   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1520117   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1520118   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1520119   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1520120   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1520121   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1520122   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1520123   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1520124   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1520125   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1520126   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1520127   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1520128   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1520129   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1520130   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1520131   +END;
MPRINT(EM_DIAGRAM):   END;
1520132   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1520133   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1520134   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1520135   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1520136   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1520137   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1520138   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1520139   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1520140   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1520141   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1520142   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1520143   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1520144   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1520145   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1520146   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1520147   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1520148   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1520149   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1520150   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1520151   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1520152   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1520153   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1520154   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1520155   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1520156   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1520157   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1520158   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1520159   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1520160   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1520161   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1520162   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1520163   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1520164   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1520165   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1520166   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1520167   +   ELSE S_NumCatalogPurchases
1520168   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1520169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1520170   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1520171   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1520172   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1520173   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1520174   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1520175   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1520176   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1520177   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1520178   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1520179   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1520180   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1520181   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1520182   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1520183   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1520184   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1520185   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1520186   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1520187   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1520188   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1520189   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1520190   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1520191   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1520192   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1520193   +END;
MPRINT(EM_DIAGRAM):   END;
1520194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520195   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1520196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520198   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1520199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520201   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1520202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1520204   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1520205   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1520206   +        S_Income  +     0.49557647195287 * S_Kidhome
1520207   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1520208   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1520209   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1520210   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1520211   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1520212   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1520213   +          +     1.29965538748336 * S_NumDealsPurchases
1520214   +          +     0.16818868463142 * S_NumDistPurchases
1520215   +          +    -0.64507792847411 * S_NumStorePurchases
1520216   +          +    -0.52243329275268 * S_NumWebPurchases
1520217   +          +     1.48521107923182 * S_NumWebVisitsMonth
1520218   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1520219   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1520220   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1520221   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1520222   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1520223   +        S_Income  +       0.536631748871 * S_Kidhome
1520224   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1520225   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1520226   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1520227   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1520228   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1520229   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1520230   +          +    -0.63220849663702 * S_NumDealsPurchases
1520231   +          +    -0.03517440588176 * S_NumDistPurchases
1520232   +          +     0.90435516280473 * S_NumStorePurchases
1520233   +          +     1.02540776095101 * S_NumWebPurchases
1520234   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1520235   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1520236   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1520237   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1520238   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1520239   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1520240   +        S_Income  +     0.45173611630992 * S_Kidhome
1520241   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1520242   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1520243   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1520244   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1520245   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1520246   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1520247   +          +     0.00572910064772 * S_NumDealsPurchases
1520248   +          +    -0.43545754325176 * S_NumDistPurchases
1520249   +          +     0.12831980635185 * S_NumStorePurchases
1520250   +          +     0.02223697618186 * S_NumWebPurchases
1520251   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1520252   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1520253   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1520254   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1520255   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1520256   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1520257   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1520258   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1520259   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1520260   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1520261   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1520262   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1520263   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1520264   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1520265   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1520266   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1520267   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1520268   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1520269   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1520270   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1520271   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1520272   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1520273   +          +     0.14010081581672 * Marital_StatusDivorced
1520274   +          +     0.03574033044092 * Marital_StatusMarried
1520275   +          +    -0.14272769898675 * Marital_StatusSingle
1520276   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1520277   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1520278   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1520279   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1520280   +          +    -0.14878433798537 * Marital_StatusDivorced
1520281   +          +     0.14990226067603 * Marital_StatusMarried
1520282   +          +    -0.50903755449357 * Marital_StatusSingle
1520283   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1520284   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1520285   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1520286   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1520287   +          +    -0.52568922939912 * Marital_StatusDivorced
1520288   +          +     1.74121506979092 * Marital_StatusMarried
1520289   +          +    -1.16029880777095 * Marital_StatusSingle
1520290   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1520291   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1520292   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1520293   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1520294   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1520295   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1520296   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1520297   +END;
MPRINT(EM_DIAGRAM):   END;
1520298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1520299   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1520300   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1520301   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1520302   +END;
MPRINT(EM_DIAGRAM):   END;
1520303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520304   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1520305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520306   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1520307   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1520308   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1520309   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1520310   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1520311   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1520312   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1520313   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1520314   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1520315   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1520316   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1520317   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1520318   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1520319   +END;
MPRINT(EM_DIAGRAM):   END;
1520320   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1520321   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1520322   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1520323   +END;
MPRINT(EM_DIAGRAM):   END;
1520324   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1520325   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1520326   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1520327   +END;
MPRINT(EM_DIAGRAM):   END;
1520328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520329   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1520330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1520331   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1520332   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1520333   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1520334   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1520335   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1520336   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1520337   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1520338   +END;
MPRINT(EM_DIAGRAM):   END;
1520339   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1520340   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1520341   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1520342   +drop
1520343   +H11
1520344   +H12
1520345   +H13
1520346   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1520347   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1520348    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1520349    quit;
1520350    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1520351    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1520352    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1520353    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1520354    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1520355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520356    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1520357    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520359    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1520360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520363    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1520364    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1520365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520366    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1520367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1520368    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1520369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520371    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520372    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1520373    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520374    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520375    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1520376    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1520376  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1520377    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520378    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1520379    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520380    filename _pref
1520380  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1520381    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1520382    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1520383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1520384   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1520385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1520386   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1520387   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1520388   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1520389    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1520390    quit;
1520391    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1520392    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1520393    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1520394    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1520395    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1520396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520397    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1520398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520400    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1520401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520403    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520404    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1520405    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1520406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520407    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1520408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1520409    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1520410    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520412    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520413    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1520414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520415    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520416    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1520417    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1520417  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1520418    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520419    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1520420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520421    filename _pref
1520421  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1520422    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1520423    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1520424   +
1520425   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1520426   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1520426  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1520427   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1520428   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1520429   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1520430   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1520431   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1520432    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1520433    quit;
1520434    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1520435    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1520436    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1520437    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1520438    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1520439    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520440    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1520441    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520443    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1520444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520446    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520447    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1520448    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1520449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520450    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1520451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520452    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1520453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520455    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520456    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1520457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520458    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520459    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1520460    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1520460  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1520461    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520462    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1520463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520464    filename _pref
1520464  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1520465    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1520466    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1520467   +
1520468   +
1520469   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1520470   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1520471   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1520472   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1520473   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1520474   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520475   +
1520476   +
1520477   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1520478   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1520479   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1520480   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1520481   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1520482   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520483   +
1520484   +
1520485   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1520486   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1520487   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1520488   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1520489   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1520490   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520491   +
1520492   +
1520493   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1520494   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1520495   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1520496   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1520497   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1520498   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520499   +
1520500   +
1520501   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1520502   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1520503   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1520504   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1520505   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1520506   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520507   +
1520508   +
1520509   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1520510   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1520511   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1520512   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1520513   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1520514   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520515   +
1520516   +
1520517   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1520518   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1520519   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1520520   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1520521   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1520522   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520523   +
1520524   +
1520525   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1520526   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1520527   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1520528   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1520529   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1520530   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1520531   +if
1520532   +_FILTERNORM1 not in ( '.')
1520533   + and
1520534   +_FILTERNORM2 not in ( '.')
1520535   + and
1520536   +_FILTERNORM3 not in ( '.')
1520537   + and
1520538   +_FILTERNORM4 not in ( '.')
1520539   + and
1520540   +_FILTERNORM5 not in ( '.')
1520541   + and
1520542   +_FILTERNORM6 not in ( '.')
1520543   + and
1520544   +_FILTERNORM7 not in ( ' ')
1520545   + and
1520546   +_FILTERNORM8 not in ( ' ')
1520547   +and
1520548   +( Dt_Customer ne .)
1520549   +and ( Income ne . and (Income<=107000))
1520550   +and ( Kidhome ne .)
1520551   +and ( MntFishProducts ne .)
1520552   +and ( MntFruits ne .)
1520553   +and ( MntGoldProds ne .)
1520554   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1520555   +and ( MntSweetProducts ne .)
1520556   +and ( MntWines ne .)
1520557   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1520558   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1520559   +and ( NumStorePurchases ne .)
1520560   +and ( NumWebPurchases ne .)
1520561   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1520562   +and ( Recency ne .)
1520563   +and ( Teenhome ne .)
1520564   +and ( Year_Birth ne .)
1520565   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1520566   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1520567   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1520568   +end;
MPRINT(EM_DIAGRAM):   end;
1520569   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1520570   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1520571    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1520572    quit;
1520573    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1520574    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1520575    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1520576    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1520577    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1520578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520579    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1520580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520582    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1520583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520586    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1520587    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1520588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520589    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1520590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1520591    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1520592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1520595    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1520596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1520597    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520598    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1520599    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1520599  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1520600    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520601    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1520602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520603    %macro varDept(fcmpdata=,id=);
1520604    %global nobs&id scoreFlag&id;
1520605    %let scoreFlag&id = 0;
1520606    %if &id=1 or ^&fcmpStart %then %do;
1520607    proc sort data=&fcmpdata out=_temp&id nodupkey;
1520608    by NAME;
1520609    where id=&id and LHS in( %let j=1;
1520610    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1520611    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1520612    "&var" %let j = %eval(&j+1);
1520613    %end;
1520614    );
1520615    run;
1520616    %let dsid = %sysfunc(open(_temp&id));
1520617    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1520618    %let dsid = %sysfunc(close(&dsid));
1520619    %if &&nobs&id %then %do;
1520620    %let scoreFlag&id = 1;
1520621    %let fcmpStart = 1;
1520622    %end;
1520623    %else %let fcmpStart = 0;
1520624    %end;
1520625    %else %do;
1520626    proc sort data=&fcmpdata out=_tempid;
1520627    where id=&id;
1520628    by LHS;
1520629    run;
1520630    %let dsid = %sysfunc(open(_tempid));
1520631    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1520632    %let dsid = %sysfunc(close(&dsid));
1520633    %if ^&&nobs&id %then %do;
1520634    proc datasets lib=work nolist;
1520635    delete _tempid;
1520636    run;
1520637    quit;
1520638    %end;
1520639    %else %do;
1520640    data _tempAll;
1520641    set %let j=%eval(&id-1);
1520642    %do x=1 %to &j;
1520643    %if &&nobs&x %then %do;
1520644    _temp&x %end;
1520645    %end;
1520646    ;
1520647    run;
1520648    proc sql;
1520649    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1520649  ! work._tempid p2 where p.name=p2.lhs;
1520650    quit;
1520651    data _temp&id;
1520652    set _temp&id;
1520653    where LHS ne '' and NAME ne '' and Node ne '';
1520654    run;
1520655    proc datasets lib=work nolist;
1520656    delete _tempAll;
1520657    run;
1520658    %let dsid = %sysfunc(open(_temp&id));
1520659    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1520660    %let dsid = %sysfunc(close(&dsid));
1520661    %if ^&&nobs&id %then %do;
1520662    proc datasets lib=work nolist;
1520663    delete _temp&id;
1520664    run;
1520665    quit;
1520666    %end;
1520667    %else %do;
1520668    %let scoreFlag&id = 1;
1520669    data _temp&id;
1520670    set _temp&id;
1520671    where LHS ne NAME and node ne '';
1520672    run;
1520673    %let dsid = %sysfunc(open(_temp&id));
1520674    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1520675    %let dsid = %sysfunc(close(&dsid));
1520676    %if ^&&nobs&id %then %do;
1520677    proc datasets lib=work nolist;
1520678    delete _temp&id;
1520679    run;
1520680    quit;
1520681    %end;
1520682    %else %do;
1520683    proc sort data=_temp&id nodupkey;
1520684    by LHS NAME;
1520685    run;
1520686    %end;
1520687    %end;
1520688    %end;
1520689    %end;
1520690    %mend varDept;
1520691    %macro optCode(outdata=fcmpdata);
1520692    %global fcmpStart;
1520693    %let fcmpStart = 0;
1520694    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1520695    %let NumNodes=9;
1520696    %do k=1 %to &NumNodes;
1520697    %vardept(fcmpdata=&outdata, id=&k);
1520698    %end;
1520699    %mend optCode;
1520700    %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.22 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1520701    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1520702    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1520703    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1520704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1520705    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1520706    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1520707    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1520708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520709    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1520710    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1520710  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1520711    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1520712    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1520713    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1520714    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1520715    filename _pref
1520715  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1520716    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1520717    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1520718   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1520719   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1520720   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1520721   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1520722   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1520723   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1520724   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1520725   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1520726   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1520727   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1520728   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1520729   +LENGTH _WARN_ $4
1520730   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1520731   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1520732   +
1520733   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1520734   +
1520735   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1520736   +
1520737   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1520738   +
1520739   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1520740   +
1520741   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1520742   +
1520743   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1520744   +
1520745   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1520746   +
1520747   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1520748   +
1520749   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1520750   +
1520751   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1520752   +
1520753   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1520754   +
1520755   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1520756   +
1520757   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1520758   +
1520759   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1520760   +
1520761   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1520762   +
1520763   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1520764   +
1520765   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1520766   +
1520767   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1520768   +
1520769   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1520770   +
1520771   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1520772   +
1520773   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1520774   +
1520775   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1520776   +
1520777   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1520778   +
1520779   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1520780   +
1520781   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1520782   +
1520783   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1520784   +
1520785   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1520786   +
1520787   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1520788   +
1520789   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1520790   +
1520791   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1520792   +
1520793   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1520794   +
1520795   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1520796   +
1520797   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1520798   +
1520799   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1520800   +
1520801   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1520802   +
1520803   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1520804   +
1520805   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1520806   +
1520807   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1520808   +
1520809   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1520810   +
1520811   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1520812   +
1520813   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1520814   +
1520815   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1520816   +
1520817   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1520818   +
1520819   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1520820   +
1520821   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1520822   +
1520823   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1520824   +
1520825   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1520826   +
1520827   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1520828   +
1520829   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1520830   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1520831   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1520832   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1520833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520835   +end;
MPRINT(EM_DIAGRAM):   end;
1520836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520838   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1520839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520841   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1520842   +   end;
MPRINT(EM_DIAGRAM):   end;
1520843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520844   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1520845   +   end;
MPRINT(EM_DIAGRAM):   end;
1520846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520847   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1520848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520850   +   end;
MPRINT(EM_DIAGRAM):   end;
1520851   +end;
MPRINT(EM_DIAGRAM):   end;
1520852   +
1520853   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1520854   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1520855   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1520856   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1520857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520859   +end;
MPRINT(EM_DIAGRAM):   end;
1520860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520862   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1520863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520865   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1520866   +   end;
MPRINT(EM_DIAGRAM):   end;
1520867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520868   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1520869   +   end;
MPRINT(EM_DIAGRAM):   end;
1520870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520871   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1520872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520874   +   end;
MPRINT(EM_DIAGRAM):   end;
1520875   +end;
MPRINT(EM_DIAGRAM):   end;
1520876   +
1520877   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1520878   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1520879   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1520880   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1520881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520883   +end;
MPRINT(EM_DIAGRAM):   end;
1520884   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520886   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1520887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520889   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1520890   +   end;
MPRINT(EM_DIAGRAM):   end;
1520891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520892   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1520893   +   end;
MPRINT(EM_DIAGRAM):   end;
1520894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520895   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1520896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520898   +   end;
MPRINT(EM_DIAGRAM):   end;
1520899   +end;
MPRINT(EM_DIAGRAM):   end;
1520900   +
1520901   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1520902   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1520903   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1520904   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1520905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520907   +end;
MPRINT(EM_DIAGRAM):   end;
1520908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520910   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1520911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520913   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1520914   +   end;
MPRINT(EM_DIAGRAM):   end;
1520915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520916   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1520917   +   end;
MPRINT(EM_DIAGRAM):   end;
1520918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520919   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1520920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520922   +   end;
MPRINT(EM_DIAGRAM):   end;
1520923   +end;
MPRINT(EM_DIAGRAM):   end;
1520924   +
1520925   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1520926   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1520927   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1520928   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1520929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520931   +end;
MPRINT(EM_DIAGRAM):   end;
1520932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520934   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1520935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520937   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1520938   +   end;
MPRINT(EM_DIAGRAM):   end;
1520939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520940   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1520941   +   end;
MPRINT(EM_DIAGRAM):   end;
1520942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520943   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1520944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520946   +   end;
MPRINT(EM_DIAGRAM):   end;
1520947   +end;
MPRINT(EM_DIAGRAM):   end;
1520948   +
1520949   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1520950   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1520951   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1520952   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1520953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520955   +end;
MPRINT(EM_DIAGRAM):   end;
1520956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520958   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1520959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520960   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1520961   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1520962   +   end;
MPRINT(EM_DIAGRAM):   end;
1520963   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1520964   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1520965   +   end;
MPRINT(EM_DIAGRAM):   end;
1520966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520967   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1520968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520970   +   end;
MPRINT(EM_DIAGRAM):   end;
1520971   +end;
MPRINT(EM_DIAGRAM):   end;
1520972   +
1520973   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1520974   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1520975   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1520976   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1520977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1520978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520979   +end;
MPRINT(EM_DIAGRAM):   end;
1520980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1520981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1520982   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1520983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1520984   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1520985   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1520986   +   end;
MPRINT(EM_DIAGRAM):   end;
1520987   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1520988   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1520989   +   end;
MPRINT(EM_DIAGRAM):   end;
1520990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1520991   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1520992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1520993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1520994   +   end;
MPRINT(EM_DIAGRAM):   end;
1520995   +end;
MPRINT(EM_DIAGRAM):   end;
1520996   +
1520997   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1520998   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1520999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1521000   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1521001   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1521002   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1521003   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1521004   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1521005   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1521006   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1521007   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1521008   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1521009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1521010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521011   +end;
MPRINT(EM_DIAGRAM):   end;
1521012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1521013   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1521014   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1521015   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1521016   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1521017   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1521018   +   end;
MPRINT(EM_DIAGRAM):   end;
1521019   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1521020   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1521021   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1521022   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1521023   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1521024   +   end;
MPRINT(EM_DIAGRAM):   end;
1521025   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1521026   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1521027   +   end;
MPRINT(EM_DIAGRAM):   end;
1521028   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1521029   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1521030   +   end;
MPRINT(EM_DIAGRAM):   end;
1521031   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1521032   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1521033   +   end;
MPRINT(EM_DIAGRAM):   end;
1521034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1521035   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1521036   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1521037   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1521038   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1521039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1521040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521041   +   end;
MPRINT(EM_DIAGRAM):   end;
1521042   +end;
MPRINT(EM_DIAGRAM):   end;
1521043   +
1521044   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1521045   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1521046   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1521047   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1521048   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1521049   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1521050   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1521051   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1521052   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1521053   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1521054   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1521055   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1521056   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1521057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1521058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521059   +end;
MPRINT(EM_DIAGRAM):   end;
1521060   +else do;
MPRINT(EM_DIAGRAM):   else do;
1521061   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1521062   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1521063   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1521064   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1521065   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1521066   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1521067   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1521068   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1521069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1521070   +         end;
MPRINT(EM_DIAGRAM):   end;
1521071   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1521072   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1521073   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1521074   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1521075   +            end;
MPRINT(EM_DIAGRAM):   end;
1521076   +         end;
MPRINT(EM_DIAGRAM):   end;
1521077   +      end;
MPRINT(EM_DIAGRAM):   end;
1521078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1521079   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1521080   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1521081   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1521082   +         end;
MPRINT(EM_DIAGRAM):   end;
1521083   +      end;
MPRINT(EM_DIAGRAM):   end;
1521084   +   end;
MPRINT(EM_DIAGRAM):   end;
1521085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1521086   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1521087   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1521088   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1521089   +      end;
MPRINT(EM_DIAGRAM):   end;
1521090   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1521091   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1521092   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1521093   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1521094   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1521095   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1521096   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1521097   +         end;
MPRINT(EM_DIAGRAM):   end;
1521098   +      end;
MPRINT(EM_DIAGRAM):   end;
1521099   +   end;
MPRINT(EM_DIAGRAM):   end;
1521100   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1521101   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1521102   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1521103   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1521104   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1521105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1521106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521107   +   end;
MPRINT(EM_DIAGRAM):   end;
1521108   +end;
MPRINT(EM_DIAGRAM):   end;
1521109   +
1521110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521111   +*** Checking missing input Interval
1521112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1521113   +
1521114   +IF NMISS(
1521115   +   AcceptedCmpTotal ,
1521116   +   Age ,
1521117   +   Frq ,
1521118   +   Income ,
1521119   +   Kidhome ,
1521120   +   Mnt ,
1521121   +   MntFishProducts ,
1521122   +   MntFruits ,
1521123   +   MntGoldProds ,
1521124   +   MntMeatProducts ,
1521125   +   MntSweetProducts ,
1521126   +   MntWines ,
1521127   +   MonthsAsCustomer ,
1521128   +   NumCatalogPurchases ,
1521129   +   NumDealsPurchases ,
1521130   +   NumDistPurchases ,
1521131   +   NumStorePurchases ,
1521132   +   NumWebPurchases ,
1521133   +   NumWebVisitsMonth ,
1521134   +   RFMstat ,
1521135   +   RMntFrq ,
1521136   +   Recency ,
1521137   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1521138   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1521139   +
1521140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521141   +END;
MPRINT(EM_DIAGRAM):   END;
1521142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521143   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1521144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1521146   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1521147   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1521148   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1521149   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1521150   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1521151   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1521152   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1521153   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1521154   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1521155   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1521156   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1521157   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1521158   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1521159   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1521160   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1521161   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1521162   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1521163   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1521164   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1521165   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1521166   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1521167   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1521168   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1521169   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1521170   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1521171   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1521172   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1521173   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1521174   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1521175   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1521176   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1521177   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1521178   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1521179   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1521180   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1521181   +END;
MPRINT(EM_DIAGRAM):   END;
1521182   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1521183   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1521184   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1521185   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1521186   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1521187   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1521188   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1521189   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1521190   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1521191   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1521192   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1521193   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1521194   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1521195   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1521196   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1521197   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1521198   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1521199   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1521200   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1521201   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1521202   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1521203   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1521204   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1521205   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1521206   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1521207   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1521208   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1521209   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1521210   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1521211   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1521212   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1521213   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1521214   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1521215   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1521216   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1521217   +   ELSE S_NumCatalogPurchases
1521218   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1521219   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1521220   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1521221   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1521222   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1521223   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1521224   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1521225   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1521226   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1521227   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1521228   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1521229   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1521230   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1521231   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1521232   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1521233   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1521234   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1521235   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1521236   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1521237   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1521238   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1521239   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1521240   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1521241   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1521242   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1521243   +END;
MPRINT(EM_DIAGRAM):   END;
1521244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521245   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1521246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521248   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1521249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521251   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1521252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521253   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1521254   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1521255   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1521256   +        S_Income  +    -0.09693130155866 * S_Kidhome
1521257   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1521258   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1521259   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1521260   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1521261   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1521262   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1521263   +          +     0.87256063855463 * S_NumDealsPurchases
1521264   +          +     0.24228318068596 * S_NumDistPurchases
1521265   +          +    -0.65575177240856 * S_NumStorePurchases
1521266   +          +    -0.94105747825406 * S_NumWebPurchases
1521267   +          +     0.88098930350141 * S_NumWebVisitsMonth
1521268   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1521269   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1521270   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1521271   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1521272   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1521273   +        S_Income  +    -0.48351377369429 * S_Kidhome
1521274   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1521275   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1521276   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1521277   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1521278   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1521279   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1521280   +          +     0.19198092320653 * S_NumDealsPurchases
1521281   +          +    -0.01877290175933 * S_NumDistPurchases
1521282   +          +    -0.61698509852352 * S_NumStorePurchases
1521283   +          +    -0.36114842161331 * S_NumWebPurchases
1521284   +          +     0.87653599441887 * S_NumWebVisitsMonth
1521285   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1521286   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1521287   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1521288   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1521289   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1521290   +        S_Income  +    -0.03117320792997 * S_Kidhome
1521291   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1521292   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1521293   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1521294   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1521295   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1521296   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1521297   +          +    -0.17772008430544 * S_NumDealsPurchases
1521298   +          +    -0.24320624261016 * S_NumDistPurchases
1521299   +          +     0.42056923271106 * S_NumStorePurchases
1521300   +          +    -0.28718554863857 * S_NumWebPurchases
1521301   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1521302   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1521303   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1521304   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1521305   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1521306   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1521307   +        S_Income  +     -0.0433863245185 * S_Kidhome
1521308   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1521309   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1521310   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1521311   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1521312   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1521313   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1521314   +          +    -0.43652501997552 * S_NumDealsPurchases
1521315   +          +     0.17317052107867 * S_NumDistPurchases
1521316   +          +     0.23672921935551 * S_NumStorePurchases
1521317   +          +     0.49273989445476 * S_NumWebPurchases
1521318   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1521319   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1521320   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1521321   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1521322   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1521323   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1521324   +        S_Income  +     0.59347379159371 * S_Kidhome
1521325   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1521326   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1521327   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1521328   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1521329   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1521330   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1521331   +          +     0.06887104992711 * S_NumDealsPurchases
1521332   +          +    -0.03976087278251 * S_NumDistPurchases
1521333   +          +     -0.0289014951041 * S_NumStorePurchases
1521334   +          +    -0.08062500939119 * S_NumWebPurchases
1521335   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1521336   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1521337   +        S_RMntFrq  +       0.940313744576 * S_Recency
1521338   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1521339   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1521340   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1521341   +        S_Income  +    -0.55245961592835 * S_Kidhome
1521342   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1521343   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1521344   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1521345   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1521346   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1521347   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1521348   +          +    -0.50731731808528 * S_NumDealsPurchases
1521349   +          +     -0.4854662155502 * S_NumDistPurchases
1521350   +          +     0.21175181231244 * S_NumStorePurchases
1521351   +          +     0.04923223410585 * S_NumWebPurchases
1521352   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1521353   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1521354   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1521355   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1521356   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1521357   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1521358   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1521359   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1521360   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1521361   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1521362   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1521363   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1521364   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1521365   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1521366   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1521367   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1521368   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1521369   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1521370   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1521371   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1521372   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1521373   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1521374   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1521375   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1521376   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1521377   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1521378   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1521379   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1521380   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1521381   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1521382   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1521383   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1521384   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1521385   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1521386   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1521387   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1521388   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1521389   +          +     0.13102231169849 * Marital_StatusDivorced
1521390   +          +     0.13221932247035 * Marital_StatusMarried
1521391   +          +    -0.28666963919866 * Marital_StatusSingle
1521392   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1521393   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1521394   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1521395   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1521396   +          +     0.36873255525654 * Marital_StatusDivorced
1521397   +          +    -0.54422050380085 * Marital_StatusMarried
1521398   +          +     0.58130553469516 * Marital_StatusSingle
1521399   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1521400   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1521401   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1521402   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1521403   +          +    -0.07480235993304 * Marital_StatusDivorced
1521404   +          +     0.31705972445069 * Marital_StatusMarried
1521405   +          +    -0.08626328185895 * Marital_StatusSingle
1521406   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1521407   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1521408   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1521409   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1521410   +          +    -0.06733679615115 * Marital_StatusDivorced
1521411   +          +     0.23111557732379 * Marital_StatusMarried
1521412   +          +    -0.34379469870478 * Marital_StatusSingle
1521413   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1521414   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1521415   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1521416   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1521417   +          +    -0.07108588070668 * Marital_StatusDivorced
1521418   +          +     1.10060875265784 * Marital_StatusMarried
1521419   +          +    -0.74271327534863 * Marital_StatusSingle
1521420   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1521421   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1521422   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1521423   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1521424   +          +    -0.19461023827362 * Marital_StatusDivorced
1521425   +          +     -0.4165676037681 * Marital_StatusMarried
1521426   +          +     0.43379324993555 * Marital_StatusSingle
1521427   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1521428   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1521429   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1521430   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1521431   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1521432   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1521433   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1521434   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1521435   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1521436   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1521437   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1521438   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1521439   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1521440   +END;
MPRINT(EM_DIAGRAM):   END;
1521441   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1521442   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1521443   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1521444   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1521445   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1521446   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1521447   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1521448   +END;
MPRINT(EM_DIAGRAM):   END;
1521449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521450   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1521451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521452   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1521453   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1521454   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1521455   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1521456   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1521457   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1521458   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1521459   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1521460   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1521461   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1521462   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1521463   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1521464   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1521465   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1521466   +END;
MPRINT(EM_DIAGRAM):   END;
1521467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1521468   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1521469   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1521470   +END;
MPRINT(EM_DIAGRAM):   END;
1521471   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1521472   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1521473   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1521474   +END;
MPRINT(EM_DIAGRAM):   END;
1521475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521476   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1521477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1521478   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1521479   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1521480   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1521481   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1521482   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1521483   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1521484   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1521485   +END;
MPRINT(EM_DIAGRAM):   END;
1521486   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1521487   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1521488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1521489   +drop
1521490   +H11
1521491   +H12
1521492   +H13
1521493   +H14
1521494   +H15
1521495   +H16
1521496   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1521497   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1521498    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1521499    quit;
1521500    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1521501    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1521502    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1521503    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1521504    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1521505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521506    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1521507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521509    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1521510    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521511    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521512    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521513    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1521514    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1521515    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521516    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1521517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1521518    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1521519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521521    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521522    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1521523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521524    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521525    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1521526    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1521526  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1521527    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521528    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1521529    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521530    filename _pref
1521530  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1521531    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1521532    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1521533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1521534   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1521535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1521536   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1521537   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1521538   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1521539    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1521540    quit;
1521541    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1521542    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1521543    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1521544    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1521545    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1521546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521547    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1521548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521550    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1521551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521553    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521554    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1521555    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1521556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521557    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1521558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1521559    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1521560    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521561    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521562    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521563    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1521564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521565    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521566    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1521567    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1521567  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1521568    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521569    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1521570    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521571    filename _pref
1521571  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1521572    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1521573    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1521574   +
1521575   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1521576   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1521576  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1521577   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1521578   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1521579   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1521580   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1521581   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1521582    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1521583    quit;
1521584    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1521585    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1521586    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1521587    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1521588    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1521589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521590    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1521591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521592    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521593    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1521594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521596    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521597    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1521598    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1521599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521600    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1521601    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521602    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1521603    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521605    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521606    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1521607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521608    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521609    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1521610    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1521610  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1521611    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521612    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1521613    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521614    filename _pref
1521614  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1521615    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1521616    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1521617   +
1521618   +
1521619   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1521620   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1521621   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1521622   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1521623   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1521624   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521625   +
1521626   +
1521627   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1521628   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1521629   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1521630   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1521631   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1521632   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521633   +
1521634   +
1521635   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1521636   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1521637   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1521638   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1521639   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1521640   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521641   +
1521642   +
1521643   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1521644   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1521645   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1521646   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1521647   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1521648   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521649   +
1521650   +
1521651   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1521652   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1521653   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1521654   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1521655   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1521656   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521657   +
1521658   +
1521659   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1521660   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1521661   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1521662   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1521663   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1521664   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521665   +
1521666   +
1521667   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1521668   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1521669   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1521670   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1521671   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1521672   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521673   +
1521674   +
1521675   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1521676   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1521677   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1521678   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1521679   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1521680   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1521681   +if
1521682   +_FILTERNORM1 not in ( '.')
1521683   + and
1521684   +_FILTERNORM2 not in ( '.')
1521685   + and
1521686   +_FILTERNORM3 not in ( '.')
1521687   + and
1521688   +_FILTERNORM4 not in ( '.')
1521689   + and
1521690   +_FILTERNORM5 not in ( '.')
1521691   + and
1521692   +_FILTERNORM6 not in ( '.')
1521693   + and
1521694   +_FILTERNORM7 not in ( ' ')
1521695   + and
1521696   +_FILTERNORM8 not in ( ' ')
1521697   +and
1521698   +( Dt_Customer ne .)
1521699   +and ( Income ne . and (Income<=107000))
1521700   +and ( Kidhome ne .)
1521701   +and ( MntFishProducts ne .)
1521702   +and ( MntFruits ne .)
1521703   +and ( MntGoldProds ne .)
1521704   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1521705   +and ( MntSweetProducts ne .)
1521706   +and ( MntWines ne .)
1521707   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1521708   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1521709   +and ( NumStorePurchases ne .)
1521710   +and ( NumWebPurchases ne .)
1521711   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1521712   +and ( Recency ne .)
1521713   +and ( Teenhome ne .)
1521714   +and ( Year_Birth ne .)
1521715   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1521716   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1521717   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1521718   +end;
MPRINT(EM_DIAGRAM):   end;
1521719   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1521720   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1521721    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1521722    quit;
1521723    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1521724    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1521725    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1521726    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1521727    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1521728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521729    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1521730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521732    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1521733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521735    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521736    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1521737    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1521738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521739    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1521740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1521741    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1521742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521744    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1521745    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1521746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1521747    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521748    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1521749    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1521749  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1521750    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1521751    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1521752    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521753    %macro varDept(fcmpdata=,id=);
1521754    %global nobs&id scoreFlag&id;
1521755    %let scoreFlag&id = 0;
1521756    %if &id=1 or ^&fcmpStart %then %do;
1521757    proc sort data=&fcmpdata out=_temp&id nodupkey;
1521758    by NAME;
1521759    where id=&id and LHS in( %let j=1;
1521760    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1521761    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1521762    "&var" %let j = %eval(&j+1);
1521763    %end;
1521764    );
1521765    run;
1521766    %let dsid = %sysfunc(open(_temp&id));
1521767    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1521768    %let dsid = %sysfunc(close(&dsid));
1521769    %if &&nobs&id %then %do;
1521770    %let scoreFlag&id = 1;
1521771    %let fcmpStart = 1;
1521772    %end;
1521773    %else %let fcmpStart = 0;
1521774    %end;
1521775    %else %do;
1521776    proc sort data=&fcmpdata out=_tempid;
1521777    where id=&id;
1521778    by LHS;
1521779    run;
1521780    %let dsid = %sysfunc(open(_tempid));
1521781    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1521782    %let dsid = %sysfunc(close(&dsid));
1521783    %if ^&&nobs&id %then %do;
1521784    proc datasets lib=work nolist;
1521785    delete _tempid;
1521786    run;
1521787    quit;
1521788    %end;
1521789    %else %do;
1521790    data _tempAll;
1521791    set %let j=%eval(&id-1);
1521792    %do x=1 %to &j;
1521793    %if &&nobs&x %then %do;
1521794    _temp&x %end;
1521795    %end;
1521796    ;
1521797    run;
1521798    proc sql;
1521799    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1521799  ! work._tempid p2 where p.name=p2.lhs;
1521800    quit;
1521801    data _temp&id;
1521802    set _temp&id;
1521803    where LHS ne '' and NAME ne '' and Node ne '';
1521804    run;
1521805    proc datasets lib=work nolist;
1521806    delete _tempAll;
1521807    run;
1521808    %let dsid = %sysfunc(open(_temp&id));
1521809    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1521810    %let dsid = %sysfunc(close(&dsid));
1521811    %if ^&&nobs&id %then %do;
1521812    proc datasets lib=work nolist;
1521813    delete _temp&id;
1521814    run;
1521815    quit;
1521816    %end;
1521817    %else %do;
1521818    %let scoreFlag&id = 1;
1521819    data _temp&id;
1521820    set _temp&id;
1521821    where LHS ne NAME and node ne '';
1521822    run;
1521823    %let dsid = %sysfunc(open(_temp&id));
1521824    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1521825    %let dsid = %sysfunc(close(&dsid));
1521826    %if ^&&nobs&id %then %do;
1521827    proc datasets lib=work nolist;
1521828    delete _temp&id;
1521829    run;
1521830    quit;
1521831    %end;
1521832    %else %do;
1521833    proc sort data=_temp&id nodupkey;
1521834    by LHS NAME;
1521835    run;
1521836    %end;
1521837    %end;
1521838    %end;
1521839    %end;
1521840    %mend varDept;
1521841    %macro optCode(outdata=fcmpdata);
1521842    %global fcmpStart;
1521843    %let fcmpStart = 0;
1521844    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1521845    %let NumNodes=9;
1521846    %do k=1 %to &NumNodes;
1521847    %vardept(fcmpdata=&outdata, id=&k);
1521848    %end;
1521849    %mend optCode;
1521850    %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1521851    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1521852    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1521853    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1521854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521855    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1521856    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1521857    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1521858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521859    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1521860    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1521860  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1521861    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521862    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1521863    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1521864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1521865    filename _pref
1521865  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1521866    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1521867    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1521868   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1521869   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1521870   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1521871   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1521872   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1521873   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1521874   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1521875   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1521876   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1521877   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1521878   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1521879   +LENGTH _WARN_ $4
1521880   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1521881   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1521882   +
1521883   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1521884   +
1521885   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1521886   +
1521887   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1521888   +
1521889   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1521890   +
1521891   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1521892   +
1521893   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1521894   +
1521895   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1521896   +
1521897   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1521898   +
1521899   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1521900   +
1521901   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1521902   +
1521903   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1521904   +
1521905   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1521906   +
1521907   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1521908   +
1521909   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1521910   +
1521911   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1521912   +
1521913   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1521914   +
1521915   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1521916   +
1521917   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1521918   +
1521919   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1521920   +
1521921   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1521922   +
1521923   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1521924   +
1521925   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1521926   +
1521927   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1521928   +
1521929   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1521930   +
1521931   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1521932   +
1521933   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1521934   +
1521935   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1521936   +
1521937   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1521938   +
1521939   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1521940   +
1521941   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1521942   +
1521943   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1521944   +
1521945   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1521946   +
1521947   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1521948   +
1521949   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1521950   +
1521951   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1521952   +
1521953   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1521954   +
1521955   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1521956   +
1521957   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1521958   +
1521959   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1521960   +
1521961   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1521962   +
1521963   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1521964   +
1521965   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1521966   +
1521967   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1521968   +
1521969   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1521970   +
1521971   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1521972   +
1521973   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1521974   +
1521975   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1521976   +
1521977   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1521978   +
1521979   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1521980   +
1521981   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1521982   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1521983   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1521984   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1521985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1521986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1521987   +end;
MPRINT(EM_DIAGRAM):   end;
1521988   +else do;
MPRINT(EM_DIAGRAM):   else do;
1521989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1521990   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1521991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1521992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1521993   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1521994   +   end;
MPRINT(EM_DIAGRAM):   end;
1521995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1521996   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1521997   +   end;
MPRINT(EM_DIAGRAM):   end;
1521998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1521999   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1522000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522002   +   end;
MPRINT(EM_DIAGRAM):   end;
1522003   +end;
MPRINT(EM_DIAGRAM):   end;
1522004   +
1522005   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1522006   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1522007   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1522008   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1522009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522011   +end;
MPRINT(EM_DIAGRAM):   end;
1522012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522014   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1522015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1522017   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1522018   +   end;
MPRINT(EM_DIAGRAM):   end;
1522019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1522020   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1522021   +   end;
MPRINT(EM_DIAGRAM):   end;
1522022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522023   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1522024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522026   +   end;
MPRINT(EM_DIAGRAM):   end;
1522027   +end;
MPRINT(EM_DIAGRAM):   end;
1522028   +
1522029   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1522030   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1522031   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1522032   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1522033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522035   +end;
MPRINT(EM_DIAGRAM):   end;
1522036   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522038   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1522039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1522041   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1522042   +   end;
MPRINT(EM_DIAGRAM):   end;
1522043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1522044   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1522045   +   end;
MPRINT(EM_DIAGRAM):   end;
1522046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522047   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1522048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522050   +   end;
MPRINT(EM_DIAGRAM):   end;
1522051   +end;
MPRINT(EM_DIAGRAM):   end;
1522052   +
1522053   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1522054   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1522055   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1522056   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1522057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522059   +end;
MPRINT(EM_DIAGRAM):   end;
1522060   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522062   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1522063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522064   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1522065   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1522066   +   end;
MPRINT(EM_DIAGRAM):   end;
1522067   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1522068   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1522069   +   end;
MPRINT(EM_DIAGRAM):   end;
1522070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522071   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1522072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522074   +   end;
MPRINT(EM_DIAGRAM):   end;
1522075   +end;
MPRINT(EM_DIAGRAM):   end;
1522076   +
1522077   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1522078   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1522079   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1522080   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1522081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522083   +end;
MPRINT(EM_DIAGRAM):   end;
1522084   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522086   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1522087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522088   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1522089   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1522090   +   end;
MPRINT(EM_DIAGRAM):   end;
1522091   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1522092   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1522093   +   end;
MPRINT(EM_DIAGRAM):   end;
1522094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522095   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1522096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522098   +   end;
MPRINT(EM_DIAGRAM):   end;
1522099   +end;
MPRINT(EM_DIAGRAM):   end;
1522100   +
1522101   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1522102   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1522103   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1522104   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1522105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522107   +end;
MPRINT(EM_DIAGRAM):   end;
1522108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522110   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1522111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522112   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1522113   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1522114   +   end;
MPRINT(EM_DIAGRAM):   end;
1522115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1522116   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1522117   +   end;
MPRINT(EM_DIAGRAM):   end;
1522118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522119   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1522120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522122   +   end;
MPRINT(EM_DIAGRAM):   end;
1522123   +end;
MPRINT(EM_DIAGRAM):   end;
1522124   +
1522125   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1522126   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1522127   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1522128   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1522129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522131   +end;
MPRINT(EM_DIAGRAM):   end;
1522132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1522134   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1522135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522136   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1522137   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1522138   +   end;
MPRINT(EM_DIAGRAM):   end;
1522139   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1522140   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1522141   +   end;
MPRINT(EM_DIAGRAM):   end;
1522142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522143   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1522144   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522145   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522146   +   end;
MPRINT(EM_DIAGRAM):   end;
1522147   +end;
MPRINT(EM_DIAGRAM):   end;
1522148   +
1522149   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1522150   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1522151   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1522152   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1522153   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1522154   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1522155   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1522156   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1522157   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1522158   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1522159   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1522160   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1522161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522163   +end;
MPRINT(EM_DIAGRAM):   end;
1522164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522165   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1522166   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1522167   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522168   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1522169   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1522170   +   end;
MPRINT(EM_DIAGRAM):   end;
1522171   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1522172   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1522173   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1522174   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1522175   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1522176   +   end;
MPRINT(EM_DIAGRAM):   end;
1522177   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1522178   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1522179   +   end;
MPRINT(EM_DIAGRAM):   end;
1522180   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1522181   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1522182   +   end;
MPRINT(EM_DIAGRAM):   end;
1522183   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1522184   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1522185   +   end;
MPRINT(EM_DIAGRAM):   end;
1522186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522187   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1522188   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1522189   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1522190   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1522191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522193   +   end;
MPRINT(EM_DIAGRAM):   end;
1522194   +end;
MPRINT(EM_DIAGRAM):   end;
1522195   +
1522196   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1522197   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1522198   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1522199   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1522200   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1522201   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1522202   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1522203   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1522204   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1522205   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1522206   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1522207   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1522208   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1522209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1522210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522211   +end;
MPRINT(EM_DIAGRAM):   end;
1522212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1522213   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1522214   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1522215   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1522216   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1522217   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1522218   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1522219   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1522220   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1522221   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1522222   +         end;
MPRINT(EM_DIAGRAM):   end;
1522223   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1522224   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1522225   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1522226   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1522227   +            end;
MPRINT(EM_DIAGRAM):   end;
1522228   +         end;
MPRINT(EM_DIAGRAM):   end;
1522229   +      end;
MPRINT(EM_DIAGRAM):   end;
1522230   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1522231   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1522232   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1522233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1522234   +         end;
MPRINT(EM_DIAGRAM):   end;
1522235   +      end;
MPRINT(EM_DIAGRAM):   end;
1522236   +   end;
MPRINT(EM_DIAGRAM):   end;
1522237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1522238   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1522239   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1522240   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1522241   +      end;
MPRINT(EM_DIAGRAM):   end;
1522242   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1522243   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1522244   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1522245   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1522246   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1522247   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1522248   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1522249   +         end;
MPRINT(EM_DIAGRAM):   end;
1522250   +      end;
MPRINT(EM_DIAGRAM):   end;
1522251   +   end;
MPRINT(EM_DIAGRAM):   end;
1522252   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1522253   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1522254   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1522255   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1522256   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1522257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1522258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522259   +   end;
MPRINT(EM_DIAGRAM):   end;
1522260   +end;
MPRINT(EM_DIAGRAM):   end;
1522261   +
1522262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522263   +*** Checking missing input Interval
1522264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1522265   +
1522266   +IF NMISS(
1522267   +   AcceptedCmpTotal ,
1522268   +   Age ,
1522269   +   Frq ,
1522270   +   Income ,
1522271   +   Kidhome ,
1522272   +   Mnt ,
1522273   +   MntFishProducts ,
1522274   +   MntFruits ,
1522275   +   MntGoldProds ,
1522276   +   MntMeatProducts ,
1522277   +   MntSweetProducts ,
1522278   +   MntWines ,
1522279   +   MonthsAsCustomer ,
1522280   +   NumCatalogPurchases ,
1522281   +   NumDealsPurchases ,
1522282   +   NumDistPurchases ,
1522283   +   NumStorePurchases ,
1522284   +   NumWebPurchases ,
1522285   +   NumWebVisitsMonth ,
1522286   +   RFMstat ,
1522287   +   RMntFrq ,
1522288   +   Recency ,
1522289   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1522290   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1522291   +
1522292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522293   +END;
MPRINT(EM_DIAGRAM):   END;
1522294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522295   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1522296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522297   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1522298   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1522299   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1522300   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1522301   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1522302   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1522303   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1522304   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1522305   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1522306   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1522307   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1522308   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1522309   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1522310   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1522311   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1522312   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1522313   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1522314   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1522315   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1522316   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1522317   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1522318   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1522319   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1522320   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1522321   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1522322   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1522323   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1522324   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1522325   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1522326   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1522327   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1522328   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1522329   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1522330   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1522331   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1522332   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1522333   +END;
MPRINT(EM_DIAGRAM):   END;
1522334   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1522335   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1522336   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1522337   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1522338   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1522339   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1522340   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1522341   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1522342   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1522343   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1522344   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1522345   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1522346   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1522347   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1522348   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1522349   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1522350   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1522351   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1522352   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1522353   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1522354   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1522355   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1522356   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1522357   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1522358   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1522359   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1522360   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1522361   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1522362   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1522363   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1522364   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1522365   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1522366   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1522367   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1522368   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1522369   +   ELSE S_NumCatalogPurchases
1522370   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1522371   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1522372   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1522373   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1522374   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1522375   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1522376   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1522377   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1522378   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1522379   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1522380   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1522381   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1522382   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1522383   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1522384   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1522385   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1522386   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1522387   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1522388   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1522389   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1522390   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1522391   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1522392   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1522393   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1522394   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1522395   +END;
MPRINT(EM_DIAGRAM):   END;
1522396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522397   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1522398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522400   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1522401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522403   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1522404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1522406   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1522407   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1522408   +        S_Income  +    -0.48552270697514 * S_Kidhome
1522409   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1522410   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1522411   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1522412   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1522413   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1522414   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1522415   +          +    -0.23083265836869 * S_NumDealsPurchases
1522416   +          +     0.18257445063797 * S_NumDistPurchases
1522417   +          +     0.38040778765927 * S_NumStorePurchases
1522418   +          +     0.25798779223068 * S_NumWebPurchases
1522419   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1522420   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1522421   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1522422   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1522423   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1522424   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1522425   +        S_Income  +     0.23694585796773 * S_Kidhome
1522426   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1522427   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1522428   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1522429   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1522430   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1522431   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1522432   +          +    -0.07783411363525 * S_NumDealsPurchases
1522433   +          +     0.41281579441285 * S_NumDistPurchases
1522434   +          +     0.22243606867939 * S_NumStorePurchases
1522435   +          +     0.27174952755013 * S_NumWebPurchases
1522436   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1522437   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1522438   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1522439   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1522440   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1522441   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1522442   +        S_Income  +     0.20802765248799 * S_Kidhome
1522443   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1522444   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1522445   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1522446   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1522447   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1522448   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1522449   +          +     0.09455783738093 * S_NumDealsPurchases
1522450   +          +    -0.06039304909585 * S_NumDistPurchases
1522451   +          +    -0.10306611685636 * S_NumStorePurchases
1522452   +          +    -0.00323837049664 * S_NumWebPurchases
1522453   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1522454   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1522455   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1522456   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1522457   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1522458   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1522459   +        S_Income  +     0.26381864865425 * S_Kidhome
1522460   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1522461   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1522462   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1522463   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1522464   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1522465   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1522466   +          +      0.8306613243419 * S_NumDealsPurchases
1522467   +          +     0.31439474207278 * S_NumDistPurchases
1522468   +          +    -0.62131474975756 * S_NumStorePurchases
1522469   +          +    -1.04845843654047 * S_NumWebPurchases
1522470   +          +     0.13255915506164 * S_NumWebVisitsMonth
1522471   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1522472   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1522473   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1522474   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1522475   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1522476   +        S_Income  +    -0.71599192201946 * S_Kidhome
1522477   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1522478   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1522479   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1522480   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1522481   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1522482   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1522483   +          +     0.63537278643623 * S_NumDealsPurchases
1522484   +          +     0.00410348485264 * S_NumDistPurchases
1522485   +          +    -0.78287523583925 * S_NumStorePurchases
1522486   +          +    -0.73614491225189 * S_NumWebPurchases
1522487   +          +      1.5997596522354 * S_NumWebVisitsMonth
1522488   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1522489   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1522490   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1522491   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1522492   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1522493   +        S_Income  +    -0.23853377939411 * S_Kidhome
1522494   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1522495   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1522496   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1522497   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1522498   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1522499   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1522500   +          +    -0.30899603957269 * S_NumDealsPurchases
1522501   +          +     0.11839581082877 * S_NumDistPurchases
1522502   +          +     0.20149797391098 * S_NumStorePurchases
1522503   +          +      0.1616654107491 * S_NumWebPurchases
1522504   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1522505   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1522506   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1522507   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1522508   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1522509   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1522510   +        S_Income  +    -0.48650790963695 * S_Kidhome
1522511   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1522512   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1522513   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1522514   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1522515   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1522516   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1522517   +          +    -0.18889005468777 * S_NumDealsPurchases
1522518   +          +     0.17240918361456 * S_NumDistPurchases
1522519   +          +     0.11704610685994 * S_NumStorePurchases
1522520   +          +     0.23031393640508 * S_NumWebPurchases
1522521   +          +     0.66002859819524 * S_NumWebVisitsMonth
1522522   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1522523   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1522524   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1522525   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1522526   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1522527   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1522528   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1522529   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1522530   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1522531   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1522532   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1522533   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1522534   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1522535   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1522536   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1522537   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1522538   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1522539   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1522540   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1522541   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1522542   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1522543   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1522544   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1522545   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1522546   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1522547   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1522548   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1522549   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1522550   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1522551   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1522552   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1522553   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1522554   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1522555   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1522556   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1522557   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1522558   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1522559   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1522560   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1522561   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1522562   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1522563   +          +     0.43452164349556 * Marital_StatusDivorced
1522564   +          +    -0.46042593279944 * Marital_StatusMarried
1522565   +          +     0.45533323427801 * Marital_StatusSingle
1522566   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1522567   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1522568   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1522569   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1522570   +          +     0.11002244687305 * Marital_StatusDivorced
1522571   +          +     0.52424349905683 * Marital_StatusMarried
1522572   +          +     -0.3969250366321 * Marital_StatusSingle
1522573   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1522574   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1522575   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1522576   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1522577   +          +    -0.05300704180744 * Marital_StatusDivorced
1522578   +          +     0.07805487103106 * Marital_StatusMarried
1522579   +          +     0.20033339442958 * Marital_StatusSingle
1522580   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1522581   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1522582   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1522583   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1522584   +          +    -0.42379596543146 * Marital_StatusDivorced
1522585   +          +     0.66738351478416 * Marital_StatusMarried
1522586   +          +    -0.37324277578462 * Marital_StatusSingle
1522587   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1522588   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1522589   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1522590   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1522591   +          +     0.88761025578489 * Marital_StatusDivorced
1522592   +          +    -0.85905539883385 * Marital_StatusMarried
1522593   +          +     0.73467737758558 * Marital_StatusSingle
1522594   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1522595   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1522596   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1522597   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1522598   +          +    -0.11980818075461 * Marital_StatusDivorced
1522599   +          +    -0.16572953052582 * Marital_StatusMarried
1522600   +          +     0.34617421331983 * Marital_StatusSingle
1522601   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1522602   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1522603   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1522604   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1522605   +          +     0.14874886057777 * Marital_StatusDivorced
1522606   +          +     -1.0463076915992 * Marital_StatusMarried
1522607   +          +     0.72937563672763 * Marital_StatusSingle
1522608   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1522609   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1522610   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1522611   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1522612   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1522613   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1522614   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1522615   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1522616   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1522617   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1522618   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1522619   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1522620   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1522621   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1522622   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1522623   +END;
MPRINT(EM_DIAGRAM):   END;
1522624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1522625   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1522626   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1522627   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1522628   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1522629   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1522630   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1522631   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1522632   +END;
MPRINT(EM_DIAGRAM):   END;
1522633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522634   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1522635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1522637   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1522638   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1522639   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1522640   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1522641   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1522642   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1522643   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1522644   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1522645   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1522646   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1522647   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1522648   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1522649   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1522650   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1522651   +END;
MPRINT(EM_DIAGRAM):   END;
1522652   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1522653   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1522654   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1522655   +END;
MPRINT(EM_DIAGRAM):   END;
1522656   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1522657   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1522658   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1522659   +END;
MPRINT(EM_DIAGRAM):   END;
1522660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522661   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1522662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522663   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1522664   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1522665   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1522666   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1522667   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1522668   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1522669   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1522670   +END;
MPRINT(EM_DIAGRAM):   END;
1522671   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1522672   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1522673   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1522674   +drop
1522675   +H11
1522676   +H12
1522677   +H13
1522678   +H14
1522679   +H15
1522680   +H16
1522681   +H17
1522682   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1522683   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1522684    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1522685    quit;
1522686    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1522687    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1522688    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1522689    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1522690    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1522691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522692    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1522693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522695    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1522696    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522698    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522699    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1522700    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1522701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522702    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1522703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1522704    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1522705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522707    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522708    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1522709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522710    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522711    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1522712    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1522712  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1522713    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522714    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1522715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522716    filename _pref
1522716  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1522717    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1522718    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1522719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1522720   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1522721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1522722   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1522723   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1522724   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1522725    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1522726    quit;
1522727    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1522728    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1522729    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1522730    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1522731    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1522732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522733    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1522734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522736    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1522737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522739    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522740    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1522741    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1522742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522743    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1522744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1522745    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1522746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522748    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522749    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1522750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522751    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522752    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1522753    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1522753  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1522754    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522755    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1522756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522757    filename _pref
1522757  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1522758    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1522759    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1522760   +
1522761   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1522762   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1522762  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1522763   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1522764   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1522765   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1522766   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1522767   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1522768    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1522769    quit;
1522770    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1522771    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1522772    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1522773    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1522774    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1522775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522776    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1522777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522779    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1522780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522782    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522783    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1522784    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1522785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522786    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1522787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522788    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1522789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522791    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522792    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1522793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522794    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522795    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1522796    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1522796  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1522797    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522798    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1522799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522800    filename _pref
1522800  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1522801    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1522802    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1522803   +
1522804   +
1522805   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1522806   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1522807   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1522808   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1522809   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1522810   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522811   +
1522812   +
1522813   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1522814   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1522815   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1522816   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1522817   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1522818   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522819   +
1522820   +
1522821   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1522822   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1522823   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1522824   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1522825   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1522826   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522827   +
1522828   +
1522829   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1522830   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1522831   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1522832   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1522833   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1522834   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522835   +
1522836   +
1522837   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1522838   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1522839   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1522840   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1522841   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1522842   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522843   +
1522844   +
1522845   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1522846   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1522847   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1522848   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1522849   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1522850   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522851   +
1522852   +
1522853   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1522854   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1522855   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1522856   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1522857   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1522858   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522859   +
1522860   +
1522861   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1522862   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1522863   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1522864   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1522865   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1522866   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1522867   +if
1522868   +_FILTERNORM1 not in ( '.')
1522869   + and
1522870   +_FILTERNORM2 not in ( '.')
1522871   + and
1522872   +_FILTERNORM3 not in ( '.')
1522873   + and
1522874   +_FILTERNORM4 not in ( '.')
1522875   + and
1522876   +_FILTERNORM5 not in ( '.')
1522877   + and
1522878   +_FILTERNORM6 not in ( '.')
1522879   + and
1522880   +_FILTERNORM7 not in ( ' ')
1522881   + and
1522882   +_FILTERNORM8 not in ( ' ')
1522883   +and
1522884   +( Dt_Customer ne .)
1522885   +and ( Income ne . and (Income<=107000))
1522886   +and ( Kidhome ne .)
1522887   +and ( MntFishProducts ne .)
1522888   +and ( MntFruits ne .)
1522889   +and ( MntGoldProds ne .)
1522890   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1522891   +and ( MntSweetProducts ne .)
1522892   +and ( MntWines ne .)
1522893   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1522894   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1522895   +and ( NumStorePurchases ne .)
1522896   +and ( NumWebPurchases ne .)
1522897   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1522898   +and ( Recency ne .)
1522899   +and ( Teenhome ne .)
1522900   +and ( Year_Birth ne .)
1522901   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1522902   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1522903   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1522904   +end;
MPRINT(EM_DIAGRAM):   end;
1522905   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1522906   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1522907    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1522908    quit;
1522909    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1522910    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1522911    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1522912    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1522913    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1522914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522915    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1522916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522918    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1522919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522921    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522922    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1522923    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1522924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522925    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1522926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1522927    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1522928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1522931    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1522932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1522933    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522934    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1522935    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1522935  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1522936    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522937    proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
1522938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1522939    %macro varDept(fcmpdata=,id=);
1522940    %global nobs&id scoreFlag&id;
1522941    %let scoreFlag&id = 0;
1522942    %if &id=1 or ^&fcmpStart %then %do;
1522943    proc sort data=&fcmpdata out=_temp&id nodupkey;
1522944    by NAME;
1522945    where id=&id and LHS in( %let j=1;
1522946    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1522947    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1522948    "&var" %let j = %eval(&j+1);
1522949    %end;
1522950    );
1522951    run;
1522952    %let dsid = %sysfunc(open(_temp&id));
1522953    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1522954    %let dsid = %sysfunc(close(&dsid));
1522955    %if &&nobs&id %then %do;
1522956    %let scoreFlag&id = 1;
1522957    %let fcmpStart = 1;
1522958    %end;
1522959    %else %let fcmpStart = 0;
1522960    %end;
1522961    %else %do;
1522962    proc sort data=&fcmpdata out=_tempid;
1522963    where id=&id;
1522964    by LHS;
1522965    run;
1522966    %let dsid = %sysfunc(open(_tempid));
1522967    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1522968    %let dsid = %sysfunc(close(&dsid));
1522969    %if ^&&nobs&id %then %do;
1522970    proc datasets lib=work nolist;
1522971    delete _tempid;
1522972    run;
1522973    quit;
1522974    %end;
1522975    %else %do;
1522976    data _tempAll;
1522977    set %let j=%eval(&id-1);
1522978    %do x=1 %to &j;
1522979    %if &&nobs&x %then %do;
1522980    _temp&x %end;
1522981    %end;
1522982    ;
1522983    run;
1522984    proc sql;
1522985    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1522985  ! work._tempid p2 where p.name=p2.lhs;
1522986    quit;
1522987    data _temp&id;
1522988    set _temp&id;
1522989    where LHS ne '' and NAME ne '' and Node ne '';
1522990    run;
1522991    proc datasets lib=work nolist;
1522992    delete _tempAll;
1522993    run;
1522994    %let dsid = %sysfunc(open(_temp&id));
1522995    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1522996    %let dsid = %sysfunc(close(&dsid));
1522997    %if ^&&nobs&id %then %do;
1522998    proc datasets lib=work nolist;
1522999    delete _temp&id;
1523000    run;
1523001    quit;
1523002    %end;
1523003    %else %do;
1523004    %let scoreFlag&id = 1;
1523005    data _temp&id;
1523006    set _temp&id;
1523007    where LHS ne NAME and node ne '';
1523008    run;
1523009    %let dsid = %sysfunc(open(_temp&id));
1523010    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1523011    %let dsid = %sysfunc(close(&dsid));
1523012    %if ^&&nobs&id %then %do;
1523013    proc datasets lib=work nolist;
1523014    delete _temp&id;
1523015    run;
1523016    quit;
1523017    %end;
1523018    %else %do;
1523019    proc sort data=_temp&id nodupkey;
1523020    by LHS NAME;
1523021    run;
1523022    %end;
1523023    %end;
1523024    %end;
1523025    %end;
1523026    %mend varDept;
1523027    %macro optCode(outdata=fcmpdata);
1523028    %global fcmpStart;
1523029    %let fcmpStart = 0;
1523030    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1523031    %let NumNodes=9;
1523032    %do k=1 %to &NumNodes;
1523033    %vardept(fcmpdata=&outdata, id=&k);
1523034    %end;
1523035    %mend optCode;
1523036    %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1523037    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1523038    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1523039    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1523040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523041    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1523042    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1523043    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1523044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1523045    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1523046    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1523046  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1523047    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523048    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1523049    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1523050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1523051    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1523052    * Ensmbl28: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing metadata for TRAIN data;
1523053    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL28_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl28_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl28_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl28_TRAIN out=WORK.M2VKIRK8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VKIRK8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VKIRK8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VKIRK8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VKIRK8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3QBMVMV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RWTX2B(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QBMVMV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl28";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl28";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1523373    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1523374    set EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl28_EMINFO;
1523375    where DATA='Ensmbl28' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl28' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1523376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_EMINFO.
      WHERE (DATA='Ensmbl28') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523377    data EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl28_EMINFO;
1523378    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1523379    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1523380    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1523384    run;
1523385    data EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMINFO;
1523386    set EMWS8.Ensmbl28_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl28_EMINFO WORK.MODELTEMP_INFO;
1523387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL28_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523388    proc sort data = EMWS8.Ensmbl28_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl28_EMINFO NOTHREADS;
1523389    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL28_EMINFO.
NOTE: The data set EMWS8.ENSMBL28_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523391    proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1523392    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1523394    proc sort data = EMWS8.Ensmbl28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1523395    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL28_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523397    data EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMINFO;
1523398    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1523399    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523400    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL28_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523401    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1523402    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1523403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1523404    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL28_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL28_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
