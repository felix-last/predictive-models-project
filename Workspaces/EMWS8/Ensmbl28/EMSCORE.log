MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                13.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ZPRZGF 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ZPRZGF new;
MPRINT(EM_DIAGRAM):   run;
306963     filename emflow
306963   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring NEURAL3_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306964     *------------------------------------------------------------*;
306965     * Ensmbl28: Scoring NEURAL3_TRAIN data;
306966     *------------------------------------------------------------*;
306967     data EMWS8.Ensmbl28_TRAIN
306968     / view=EMWS8.Ensmbl28_TRAIN
306969     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_TRAIN / view=EMWS8.Ensmbl28_TRAIN ;
306970     set EMWS8.Neural3_TRAIN
306971     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_TRAIN ;
306972     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas.
306973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306974    +* Ensmbl28: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Combine model for DepVar;
306975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306976    +* Ensmbl28: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 1 of 5;
306977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306978    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306979    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
306980    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
306981    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
306982    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306984    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
306985    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
306986    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
306987    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306988    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306989    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
306990    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
306991    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
306992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306993    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306994    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
306995    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
306996    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
306997    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306998    +
306999    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
307000    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
307000   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
307001    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
307002    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
307003    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
307004    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
307005    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
307006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307007    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
307008    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
307009    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
307010    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307011    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307012    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
307013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307014    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
307015    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
307016    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
307017    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307018    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
307019    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
307020    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
307021    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307022    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307023    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
307024    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
307025    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
307026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307028    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
307029    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
307030    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
307031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307032    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307033    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
307034    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307035    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
307036    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
307037    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
307038    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
307039    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
307040    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
307041    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
307042    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
307043    +LENGTH _WARN_ $4
307044    +      F_DepVar  $ 12
307045    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
307046    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
307047    +
307048    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
307049    +
307050    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
307051    +
307052    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
307053    +
307054    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
307055    +
307056    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
307057    +
307058    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
307059    +
307060    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
307061    +
307062    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
307063    +
307064    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
307065    +
307066    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
307067    +
307068    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
307069    +
307070    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
307071    +
307072    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
307073    +
307074    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
307075    +
307076    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
307077    +
307078    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
307079    +
307080    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
307081    +
307082    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
307083    +
307084    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
307085    +
307086    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
307087    +
307088    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
307089    +
307090    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
307091    +
307092    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
307093    +
307094    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
307095    +
307096    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
307097    +
307098    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
307099    +
307100    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
307101    +
307102    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
307103    +
307104    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
307105    +
307106    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
307107    +
307108    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
307109    +
307110    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
307111    +
307112    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
307113    +
307114    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
307115    +
307116    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
307117    +
307118    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
307119    +
307120    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
307121    +
307122    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
307123    +
307124    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
307125    +
307126    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
307127    +
307128    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
307129    +
307130    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307131    +
307132    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
307133    +
307134    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
307135    +
307136    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
307137    +
307138    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
307139    +
307140    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
307141    +
307142    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
307143    +
307144    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
307145    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
307146    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
307147    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
307148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307150    +end;
MPRINT(EM_DIAGRAM):   end;
307151    +else do;
MPRINT(EM_DIAGRAM):   else do;
307152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307153    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
307154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307156    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
307157    +   end;
MPRINT(EM_DIAGRAM):   end;
307158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307159    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
307160    +   end;
MPRINT(EM_DIAGRAM):   end;
307161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307162    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
307163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307165    +   end;
MPRINT(EM_DIAGRAM):   end;
307166    +end;
MPRINT(EM_DIAGRAM):   end;
307167    +
307168    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
307169    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
307170    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
307171    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
307172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307174    +end;
MPRINT(EM_DIAGRAM):   end;
307175    +else do;
MPRINT(EM_DIAGRAM):   else do;
307176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307177    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
307178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307180    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
307181    +   end;
MPRINT(EM_DIAGRAM):   end;
307182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307183    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
307184    +   end;
MPRINT(EM_DIAGRAM):   end;
307185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307186    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
307187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307189    +   end;
MPRINT(EM_DIAGRAM):   end;
307190    +end;
MPRINT(EM_DIAGRAM):   end;
307191    +
307192    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
307193    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
307194    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
307195    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
307196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307198    +end;
MPRINT(EM_DIAGRAM):   end;
307199    +else do;
MPRINT(EM_DIAGRAM):   else do;
307200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307201    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
307202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307203    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307204    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
307205    +   end;
MPRINT(EM_DIAGRAM):   end;
307206    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307207    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
307208    +   end;
MPRINT(EM_DIAGRAM):   end;
307209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307210    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
307211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307213    +   end;
MPRINT(EM_DIAGRAM):   end;
307214    +end;
MPRINT(EM_DIAGRAM):   end;
307215    +
307216    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
307217    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
307218    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
307219    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
307220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307222    +end;
MPRINT(EM_DIAGRAM):   end;
307223    +else do;
MPRINT(EM_DIAGRAM):   else do;
307224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307225    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
307226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307228    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
307229    +   end;
MPRINT(EM_DIAGRAM):   end;
307230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307231    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
307232    +   end;
MPRINT(EM_DIAGRAM):   end;
307233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307234    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
307235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307237    +   end;
MPRINT(EM_DIAGRAM):   end;
307238    +end;
MPRINT(EM_DIAGRAM):   end;
307239    +
307240    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
307241    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
307242    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
307243    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
307244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307246    +end;
MPRINT(EM_DIAGRAM):   end;
307247    +else do;
MPRINT(EM_DIAGRAM):   else do;
307248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307249    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
307250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307252    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
307253    +   end;
MPRINT(EM_DIAGRAM):   end;
307254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307255    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
307256    +   end;
MPRINT(EM_DIAGRAM):   end;
307257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307258    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
307259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307261    +   end;
MPRINT(EM_DIAGRAM):   end;
307262    +end;
MPRINT(EM_DIAGRAM):   end;
307263    +
307264    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
307265    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
307266    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
307267    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
307268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307270    +end;
MPRINT(EM_DIAGRAM):   end;
307271    +else do;
MPRINT(EM_DIAGRAM):   else do;
307272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307273    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
307274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307275    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307276    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
307277    +   end;
MPRINT(EM_DIAGRAM):   end;
307278    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307279    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
307280    +   end;
MPRINT(EM_DIAGRAM):   end;
307281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307282    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
307283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307285    +   end;
MPRINT(EM_DIAGRAM):   end;
307286    +end;
MPRINT(EM_DIAGRAM):   end;
307287    +
307288    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
307289    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
307290    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
307291    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
307292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307294    +end;
MPRINT(EM_DIAGRAM):   end;
307295    +else do;
MPRINT(EM_DIAGRAM):   else do;
307296    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307297    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
307298    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307299    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
307300    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
307301    +   end;
MPRINT(EM_DIAGRAM):   end;
307302    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
307303    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
307304    +   end;
MPRINT(EM_DIAGRAM):   end;
307305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307306    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
307307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307309    +   end;
MPRINT(EM_DIAGRAM):   end;
307310    +end;
MPRINT(EM_DIAGRAM):   end;
307311    +
307312    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
307313    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
307314    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
307315    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
307316    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
307317    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
307318    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
307319    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
307320    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
307321    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
307322    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
307323    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
307324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307326    +end;
MPRINT(EM_DIAGRAM):   end;
307327    +else do;
MPRINT(EM_DIAGRAM):   else do;
307328    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
307329    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
307330    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307331    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
307332    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
307333    +   end;
MPRINT(EM_DIAGRAM):   end;
307334    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
307335    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
307336    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
307337    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
307338    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
307339    +   end;
MPRINT(EM_DIAGRAM):   end;
307340    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
307341    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
307342    +   end;
MPRINT(EM_DIAGRAM):   end;
307343    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
307344    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
307345    +   end;
MPRINT(EM_DIAGRAM):   end;
307346    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
307347    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
307348    +   end;
MPRINT(EM_DIAGRAM):   end;
307349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307350    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
307351    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
307352    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
307353    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
307354    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307355    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307356    +   end;
MPRINT(EM_DIAGRAM):   end;
307357    +end;
MPRINT(EM_DIAGRAM):   end;
307358    +
307359    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
307360    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
307361    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
307362    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
307363    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
307364    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
307365    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
307366    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
307367    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
307368    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
307369    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
307370    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
307371    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
307372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307374    +end;
MPRINT(EM_DIAGRAM):   end;
307375    +else do;
MPRINT(EM_DIAGRAM):   else do;
307376    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
307377    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
307378    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307379    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
307380    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
307381    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
307382    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
307383    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
307384    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
307385    +         end;
MPRINT(EM_DIAGRAM):   end;
307386    +         else do;
MPRINT(EM_DIAGRAM):   else do;
307387    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
307388    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
307389    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
307390    +            end;
MPRINT(EM_DIAGRAM):   end;
307391    +         end;
MPRINT(EM_DIAGRAM):   end;
307392    +      end;
MPRINT(EM_DIAGRAM):   end;
307393    +      else do;
MPRINT(EM_DIAGRAM):   else do;
307394    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
307395    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
307396    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
307397    +         end;
MPRINT(EM_DIAGRAM):   end;
307398    +      end;
MPRINT(EM_DIAGRAM):   end;
307399    +   end;
MPRINT(EM_DIAGRAM):   end;
307400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307401    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
307402    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
307403    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
307404    +      end;
MPRINT(EM_DIAGRAM):   end;
307405    +      else do;
MPRINT(EM_DIAGRAM):   else do;
307406    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
307407    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
307408    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
307409    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
307410    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
307411    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
307412    +         end;
MPRINT(EM_DIAGRAM):   end;
307413    +      end;
MPRINT(EM_DIAGRAM):   end;
307414    +   end;
MPRINT(EM_DIAGRAM):   end;
307415    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
307416    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
307417    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
307418    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
307419    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
307420    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307421    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307422    +   end;
MPRINT(EM_DIAGRAM):   end;
307423    +end;
MPRINT(EM_DIAGRAM):   end;
307424    +
307425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307426    +*** Checking missing input Interval
307427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
307428    +
307429    +IF NMISS(
307430    +   AcceptedCmpTotal ,
307431    +   Age ,
307432    +   Frq ,
307433    +   Income ,
307434    +   Kidhome ,
307435    +   Mnt ,
307436    +   MntFishProducts ,
307437    +   MntFruits ,
307438    +   MntGoldProds ,
307439    +   MntMeatProducts ,
307440    +   MntSweetProducts ,
307441    +   MntWines ,
307442    +   MonthsAsCustomer ,
307443    +   NumCatalogPurchases ,
307444    +   NumDealsPurchases ,
307445    +   NumDistPurchases ,
307446    +   NumStorePurchases ,
307447    +   NumWebPurchases ,
307448    +   NumWebVisitsMonth ,
307449    +   RFMstat ,
307450    +   RMntFrq ,
307451    +   Recency ,
307452    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
307453    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
307454    +
307455    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307456    +END;
MPRINT(EM_DIAGRAM):   END;
307457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307458    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
307459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307460    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307461    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307462    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307463    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
307464    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307465    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307466    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
307467    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307468    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
307469    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
307470    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
307471    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307472    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
307473    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307474    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307475    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
307476    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
307477    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307478    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
307479    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
307480    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
307481    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
307482    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
307483    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
307484    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307485    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307486    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
307487    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
307488    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
307489    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
307490    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
307491    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
307492    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307493    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307494    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307495    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
307496    +END;
MPRINT(EM_DIAGRAM):   END;
307497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307498    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
307499    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307500    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307501    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
307502    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
307503    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
307504    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307505    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
307506    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307507    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
307508    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
307509    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
307510    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307511    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
307512    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
307513    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
307514    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
307515    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
307516    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
307517    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
307518    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307519    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
307520    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
307521    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307522    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307523    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
307524    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
307525    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
307526    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
307527    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307528    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
307529    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
307530    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
307531    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
307532    +   ELSE S_NumCatalogPurchases
307533    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
307534    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
307535    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
307536    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
307537    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
307538    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
307539    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307540    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307541    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
307542    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
307543    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
307544    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
307545    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
307546    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
307547    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
307548    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
307549    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
307550    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
307551    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307552    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
307553    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307554    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
307555    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307556    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
307557    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
307558    +END;
MPRINT(EM_DIAGRAM):   END;
307559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307560    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
307561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307563    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
307564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307566    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
307567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307568    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307569    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
307570    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
307571    +        S_Income  +     0.51123266106809 * S_Kidhome
307572    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
307573    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
307574    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
307575    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
307576    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
307577    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
307578    +          +     1.34095732961105 * S_NumDealsPurchases
307579    +          +     0.16605991333252 * S_NumDistPurchases
307580    +          +    -0.61746267736536 * S_NumStorePurchases
307581    +          +    -0.61812800689506 * S_NumWebPurchases
307582    +          +     1.44649145055387 * S_NumWebVisitsMonth
307583    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
307584    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
307585    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
307586    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
307587    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
307588    +        S_Income  +     0.52295323651199 * S_Kidhome
307589    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
307590    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
307591    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
307592    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
307593    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
307594    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
307595    +          +    -0.72543332317832 * S_NumDealsPurchases
307596    +          +    -0.05245472565117 * S_NumDistPurchases
307597    +          +     1.00667431585298 * S_NumStorePurchases
307598    +          +     1.02836701470962 * S_NumWebPurchases
307599    +          +    -1.25666606219201 * S_NumWebVisitsMonth
307600    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
307601    +        S_RMntFrq  +     1.50910531484632 * S_Recency
307602    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
307603    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
307604    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
307605    +        S_Income  +     0.58025720116696 * S_Kidhome
307606    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
307607    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
307608    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
307609    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
307610    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
307611    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
307612    +          +     0.12670438262487 * S_NumDealsPurchases
307613    +          +    -0.46113523834333 * S_NumDistPurchases
307614    +          +     0.07074818720567 * S_NumStorePurchases
307615    +          +    -0.05066645783537 * S_NumWebPurchases
307616    +          +    -0.65729410185804 * S_NumWebVisitsMonth
307617    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
307618    +        S_RMntFrq  +      1.4337242246086 * S_Recency
307619    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
307620    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
307621    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
307622    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
307623    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
307624    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
307625    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
307626    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
307627    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
307628    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
307629    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
307630    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
307631    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
307632    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
307633    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
307634    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
307635    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
307636    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
307637    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
307638    +          +     0.12692950862511 * Marital_StatusDivorced
307639    +          +     0.10026497666167 * Marital_StatusMarried
307640    +          +    -0.19893864592813 * Marital_StatusSingle
307641    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
307642    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
307643    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
307644    +        EducationGraduation  +     0.05580498138108 * EducationMaster
307645    +          +    -0.16785192490199 * Marital_StatusDivorced
307646    +          +     0.13153695130362 * Marital_StatusMarried
307647    +          +    -0.50411544587104 * Marital_StatusSingle
307648    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
307649    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
307650    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
307651    +        EducationGraduation  +     0.21882736952662 * EducationMaster
307652    +          +    -0.62654958087044 * Marital_StatusDivorced
307653    +          +     1.86250132393341 * Marital_StatusMarried
307654    +          +    -1.37067556451928 * Marital_StatusSingle
307655    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
307656    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
307657    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
307658    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
307659    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
307660    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
307661    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
307662    +END;
MPRINT(EM_DIAGRAM):   END;
307663    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307664    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
307665    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
307666    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
307667    +END;
MPRINT(EM_DIAGRAM):   END;
307668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307669    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
307670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307671    +
307672    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
307673    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
307674    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307675    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
307676    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
307677    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307678    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
307679    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307680    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307681    +end;
MPRINT(EM_DIAGRAM):   end;
307682    +else do;
MPRINT(EM_DIAGRAM):   else do;
307683    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
307684    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
307685    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
307686    +   end;
MPRINT(EM_DIAGRAM):   end;
307687    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
307688    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
307689    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
307690    +   end;
MPRINT(EM_DIAGRAM):   end;
307691    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307692    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307693    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307694    +   end;
MPRINT(EM_DIAGRAM):   end;
307695    +end;
MPRINT(EM_DIAGRAM):   end;
307696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307697    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
307698    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
307699    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
307700    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
307701    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
307702    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
307703    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
307704    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
307705    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
307706    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
307707    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
307708    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
307709    +END;
MPRINT(EM_DIAGRAM):   END;
307710    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307711    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
307712    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
307713    +END;
MPRINT(EM_DIAGRAM):   END;
307714    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
307715    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
307716    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
307717    +END;
MPRINT(EM_DIAGRAM):   END;
307718    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
307719    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
307720    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
307721    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
307722    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
307723    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
307724    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
307725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307726    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
307727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307728    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
307729    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
307730    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
307731    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
307732    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
307733    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
307734    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
307735    +END;
MPRINT(EM_DIAGRAM):   END;
307736    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307737    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
307738    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307739    +drop
307740    +H11
307741    +H12
307742    +H13
307743    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
307744    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
307745    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
307746    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307747    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
307748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307749    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
307750    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
307751    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
307752    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
307753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307754    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
307755    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307756    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
307757    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
307758    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
307759    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307760    +* Ensmbl28: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 2 of 5;
307761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307763    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
307764    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
307765    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
307766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307767    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307768    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
307769    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307770    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
307771    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
307772    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
307773    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
307774    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
307775    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
307776    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
307777    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
307778    +LENGTH _WARN_ $4
307779    +      F_DepVar  $ 12
307780    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
307781    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
307782    +
307783    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
307784    +
307785    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
307786    +
307787    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
307788    +
307789    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
307790    +
307791    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
307792    +
307793    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
307794    +
307795    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
307796    +
307797    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
307798    +
307799    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
307800    +
307801    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
307802    +
307803    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
307804    +
307805    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
307806    +
307807    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
307808    +
307809    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
307810    +
307811    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
307812    +
307813    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
307814    +
307815    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
307816    +
307817    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
307818    +
307819    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
307820    +
307821    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
307822    +
307823    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
307824    +
307825    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
307826    +
307827    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
307828    +
307829    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
307830    +
307831    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
307832    +
307833    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
307834    +
307835    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
307836    +
307837    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
307838    +
307839    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
307840    +
307841    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
307842    +
307843    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
307844    +
307845    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
307846    +
307847    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
307848    +
307849    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
307850    +
307851    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
307852    +
307853    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
307854    +
307855    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
307856    +
307857    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
307858    +
307859    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
307860    +
307861    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
307862    +
307863    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307864    +
307865    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
307866    +
307867    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
307868    +
307869    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
307870    +
307871    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
307872    +
307873    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
307874    +
307875    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
307876    +
307877    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
307878    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
307879    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
307880    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
307881    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307883    +end;
MPRINT(EM_DIAGRAM):   end;
307884    +else do;
MPRINT(EM_DIAGRAM):   else do;
307885    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307886    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
307887    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307888    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307889    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
307890    +   end;
MPRINT(EM_DIAGRAM):   end;
307891    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307892    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
307893    +   end;
MPRINT(EM_DIAGRAM):   end;
307894    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307895    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
307896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307898    +   end;
MPRINT(EM_DIAGRAM):   end;
307899    +end;
MPRINT(EM_DIAGRAM):   end;
307900    +
307901    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
307902    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
307903    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
307904    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
307905    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307907    +end;
MPRINT(EM_DIAGRAM):   end;
307908    +else do;
MPRINT(EM_DIAGRAM):   else do;
307909    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307910    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
307911    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307912    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307913    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
307914    +   end;
MPRINT(EM_DIAGRAM):   end;
307915    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307916    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
307917    +   end;
MPRINT(EM_DIAGRAM):   end;
307918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307919    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
307920    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307921    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307922    +   end;
MPRINT(EM_DIAGRAM):   end;
307923    +end;
MPRINT(EM_DIAGRAM):   end;
307924    +
307925    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
307926    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
307927    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
307928    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
307929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307931    +end;
MPRINT(EM_DIAGRAM):   end;
307932    +else do;
MPRINT(EM_DIAGRAM):   else do;
307933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307934    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
307935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307936    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307937    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
307938    +   end;
MPRINT(EM_DIAGRAM):   end;
307939    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307940    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
307941    +   end;
MPRINT(EM_DIAGRAM):   end;
307942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307943    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
307944    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307945    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307946    +   end;
MPRINT(EM_DIAGRAM):   end;
307947    +end;
MPRINT(EM_DIAGRAM):   end;
307948    +
307949    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
307950    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
307951    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
307952    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
307953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307955    +end;
MPRINT(EM_DIAGRAM):   end;
307956    +else do;
MPRINT(EM_DIAGRAM):   else do;
307957    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307958    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
307959    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307960    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307961    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
307962    +   end;
MPRINT(EM_DIAGRAM):   end;
307963    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307964    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
307965    +   end;
MPRINT(EM_DIAGRAM):   end;
307966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307967    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
307968    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307969    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307970    +   end;
MPRINT(EM_DIAGRAM):   end;
307971    +end;
MPRINT(EM_DIAGRAM):   end;
307972    +
307973    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
307974    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
307975    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
307976    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
307977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307979    +end;
MPRINT(EM_DIAGRAM):   end;
307980    +else do;
MPRINT(EM_DIAGRAM):   else do;
307981    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307982    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
307983    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307984    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
307985    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
307986    +   end;
MPRINT(EM_DIAGRAM):   end;
307987    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307988    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
307989    +   end;
MPRINT(EM_DIAGRAM):   end;
307990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307991    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
307992    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307993    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307994    +   end;
MPRINT(EM_DIAGRAM):   end;
307995    +end;
MPRINT(EM_DIAGRAM):   end;
307996    +
307997    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
307998    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
307999    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
308000    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
308001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308003    +end;
MPRINT(EM_DIAGRAM):   end;
308004    +else do;
MPRINT(EM_DIAGRAM):   else do;
308005    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308006    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
308007    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308008    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308009    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
308010    +   end;
MPRINT(EM_DIAGRAM):   end;
308011    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308012    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
308013    +   end;
MPRINT(EM_DIAGRAM):   end;
308014    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308015    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
308016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308018    +   end;
MPRINT(EM_DIAGRAM):   end;
308019    +end;
MPRINT(EM_DIAGRAM):   end;
308020    +
308021    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
308022    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
308023    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
308024    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
308025    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308027    +end;
MPRINT(EM_DIAGRAM):   end;
308028    +else do;
MPRINT(EM_DIAGRAM):   else do;
308029    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308030    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
308031    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308032    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
308033    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
308034    +   end;
MPRINT(EM_DIAGRAM):   end;
308035    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
308036    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
308037    +   end;
MPRINT(EM_DIAGRAM):   end;
308038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308039    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
308040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308042    +   end;
MPRINT(EM_DIAGRAM):   end;
308043    +end;
MPRINT(EM_DIAGRAM):   end;
308044    +
308045    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
308046    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
308047    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308048    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
308049    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
308050    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
308051    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
308052    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
308053    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
308054    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
308055    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
308056    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
308057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308059    +end;
MPRINT(EM_DIAGRAM):   end;
308060    +else do;
MPRINT(EM_DIAGRAM):   else do;
308061    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
308062    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
308063    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308064    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
308065    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
308066    +   end;
MPRINT(EM_DIAGRAM):   end;
308067    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
308068    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
308069    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
308070    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
308071    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
308072    +   end;
MPRINT(EM_DIAGRAM):   end;
308073    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
308074    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
308075    +   end;
MPRINT(EM_DIAGRAM):   end;
308076    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
308077    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
308078    +   end;
MPRINT(EM_DIAGRAM):   end;
308079    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
308080    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
308081    +   end;
MPRINT(EM_DIAGRAM):   end;
308082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308083    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
308084    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
308085    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
308086    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
308087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308089    +   end;
MPRINT(EM_DIAGRAM):   end;
308090    +end;
MPRINT(EM_DIAGRAM):   end;
308091    +
308092    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
308093    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
308094    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
308095    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308096    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
308097    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
308098    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
308099    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
308100    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
308101    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308102    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308103    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308104    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308107    +end;
MPRINT(EM_DIAGRAM):   end;
308108    +else do;
MPRINT(EM_DIAGRAM):   else do;
308109    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
308110    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
308111    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308112    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
308113    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
308114    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
308115    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
308116    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
308117    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308118    +         end;
MPRINT(EM_DIAGRAM):   end;
308119    +         else do;
MPRINT(EM_DIAGRAM):   else do;
308120    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
308121    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
308122    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308123    +            end;
MPRINT(EM_DIAGRAM):   end;
308124    +         end;
MPRINT(EM_DIAGRAM):   end;
308125    +      end;
MPRINT(EM_DIAGRAM):   end;
308126    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308127    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
308128    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
308129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308130    +         end;
MPRINT(EM_DIAGRAM):   end;
308131    +      end;
MPRINT(EM_DIAGRAM):   end;
308132    +   end;
MPRINT(EM_DIAGRAM):   end;
308133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308134    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
308135    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
308136    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308137    +      end;
MPRINT(EM_DIAGRAM):   end;
308138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308139    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
308140    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
308141    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
308142    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
308143    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
308144    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308145    +         end;
MPRINT(EM_DIAGRAM):   end;
308146    +      end;
MPRINT(EM_DIAGRAM):   end;
308147    +   end;
MPRINT(EM_DIAGRAM):   end;
308148    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
308149    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308150    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308151    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308152    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308155    +   end;
MPRINT(EM_DIAGRAM):   end;
308156    +end;
MPRINT(EM_DIAGRAM):   end;
308157    +
308158    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308159    +*** Checking missing input Interval
308160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308161    +
308162    +IF NMISS(
308163    +   AcceptedCmpTotal ,
308164    +   Age ,
308165    +   Frq ,
308166    +   Income ,
308167    +   Kidhome ,
308168    +   Mnt ,
308169    +   MntFishProducts ,
308170    +   MntFruits ,
308171    +   MntGoldProds ,
308172    +   MntMeatProducts ,
308173    +   MntSweetProducts ,
308174    +   MntWines ,
308175    +   MonthsAsCustomer ,
308176    +   NumCatalogPurchases ,
308177    +   NumDealsPurchases ,
308178    +   NumDistPurchases ,
308179    +   NumStorePurchases ,
308180    +   NumWebPurchases ,
308181    +   NumWebVisitsMonth ,
308182    +   RFMstat ,
308183    +   RMntFrq ,
308184    +   Recency ,
308185    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
308186    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308187    +
308188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308189    +END;
MPRINT(EM_DIAGRAM):   END;
308190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308191    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
308192    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308193    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308194    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308195    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308196    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
308197    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308198    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308199    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
308200    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308201    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
308202    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
308203    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
308204    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308205    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
308206    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308207    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308208    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
308209    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
308210    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308211    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
308212    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
308213    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
308214    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
308215    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308216    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
308217    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308218    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308219    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
308220    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
308221    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
308222    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
308223    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308224    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
308225    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308226    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308227    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308228    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
308229    +END;
MPRINT(EM_DIAGRAM):   END;
308230    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308231    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308232    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308233    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308234    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
308235    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
308236    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308237    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308238    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
308239    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308240    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
308241    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
308242    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308243    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308244    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
308245    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
308246    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
308247    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
308248    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
308249    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
308250    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
308251    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308252    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
308253    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308254    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308255    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308256    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
308257    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
308258    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
308259    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
308260    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308261    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
308262    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
308263    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
308264    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
308265    +   ELSE S_NumCatalogPurchases
308266    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
308267    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
308268    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
308269    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308270    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
308271    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
308272    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308273    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308274    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
308275    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
308276    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
308277    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
308278    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
308279    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
308280    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
308281    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308282    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
308283    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
308284    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308285    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
308286    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308287    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308288    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308289    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
308290    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
308291    +END;
MPRINT(EM_DIAGRAM):   END;
308292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308293    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
308294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308296    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
308297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308299    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
308300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308301    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308302    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
308303    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
308304    +        S_Income  +    -1.07615700855274 * S_Kidhome
308305    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
308306    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
308307    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
308308    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
308309    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
308310    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
308311    +          +      0.3429043319369 * S_NumDealsPurchases
308312    +          +     0.71313309767469 * S_NumDistPurchases
308313    +          +     0.06017757740083 * S_NumStorePurchases
308314    +          +    -0.19817724925068 * S_NumWebPurchases
308315    +          +     1.34164122205952 * S_NumWebVisitsMonth
308316    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
308317    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
308318    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
308319    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
308320    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
308321    +        S_Income  +     -0.0027232441092 * S_Kidhome
308322    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
308323    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
308324    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
308325    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
308326    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
308327    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
308328    +          +      0.4576973746858 * S_NumDealsPurchases
308329    +          +     0.15590877272659 * S_NumDistPurchases
308330    +          +    -0.33414539713736 * S_NumStorePurchases
308331    +          +    -0.39370244666257 * S_NumWebPurchases
308332    +          +     0.52596714886704 * S_NumWebVisitsMonth
308333    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
308334    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
308335    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
308336    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
308337    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
308338    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
308339    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
308340    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
308341    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
308342    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
308343    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
308344    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
308345    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
308346    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
308347    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
308348    +        EducationGraduation  +      -0.333138438339 * EducationMaster
308349    +          +      0.4663802937397 * Marital_StatusDivorced
308350    +          +    -1.27401898796099 * Marital_StatusMarried
308351    +          +      1.3125969368079 * Marital_StatusSingle
308352    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
308353    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
308354    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
308355    +        EducationGraduation  +     0.00771527138053 * EducationMaster
308356    +          +     0.07419179522004 * Marital_StatusDivorced
308357    +          +     0.00234615813337 * Marital_StatusMarried
308358    +          +    -0.00725460458412 * Marital_StatusSingle
308359    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
308360    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
308361    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
308362    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
308363    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
308364    +END;
MPRINT(EM_DIAGRAM):   END;
308365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308366    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
308367    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
308368    +END;
MPRINT(EM_DIAGRAM):   END;
308369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308370    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
308371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308372    +
308373    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
308374    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
308375    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308376    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
308377    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
308378    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308379    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
308380    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308381    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308382    +end;
MPRINT(EM_DIAGRAM):   end;
308383    +else do;
MPRINT(EM_DIAGRAM):   else do;
308384    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
308385    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
308386    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
308387    +   end;
MPRINT(EM_DIAGRAM):   end;
308388    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
308389    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
308390    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
308391    +   end;
MPRINT(EM_DIAGRAM):   end;
308392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308393    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308394    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308395    +   end;
MPRINT(EM_DIAGRAM):   end;
308396    +end;
MPRINT(EM_DIAGRAM):   end;
308397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308398    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
308399    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
308400    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
308401    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
308402    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308403    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
308404    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
308405    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
308406    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
308407    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
308408    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
308409    +END;
MPRINT(EM_DIAGRAM):   END;
308410    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308411    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
308412    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
308413    +END;
MPRINT(EM_DIAGRAM):   END;
308414    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
308415    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
308416    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
308417    +END;
MPRINT(EM_DIAGRAM):   END;
308418    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
308419    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
308420    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
308421    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
308422    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
308423    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
308424    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
308425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308426    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
308427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308428    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
308429    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
308430    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
308431    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
308432    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
308433    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
308434    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
308435    +END;
MPRINT(EM_DIAGRAM):   END;
308436    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308437    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
308438    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308439    +drop
308440    +H11
308441    +H12
308442    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
308443    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
308444    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
308445    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308446    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
308447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308448    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
308449    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
308450    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
308451    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
308452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308453    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
308454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308455    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
308456    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
308457    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
308458    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308459    +* Ensmbl28: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 3 of 5;
308460    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308461    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308462    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
308463    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
308464    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
308465    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308466    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308467    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
308468    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308469    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
308470    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
308471    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
308472    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
308473    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
308474    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
308475    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
308476    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
308477    +LENGTH _WARN_ $4
308478    +      F_DepVar  $ 12
308479    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
308480    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
308481    +
308482    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
308483    +
308484    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
308485    +
308486    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
308487    +
308488    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
308489    +
308490    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
308491    +
308492    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
308493    +
308494    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
308495    +
308496    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
308497    +
308498    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
308499    +
308500    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
308501    +
308502    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
308503    +
308504    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
308505    +
308506    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
308507    +
308508    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
308509    +
308510    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
308511    +
308512    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
308513    +
308514    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
308515    +
308516    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
308517    +
308518    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
308519    +
308520    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
308521    +
308522    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
308523    +
308524    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
308525    +
308526    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
308527    +
308528    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
308529    +
308530    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
308531    +
308532    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
308533    +
308534    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
308535    +
308536    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
308537    +
308538    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
308539    +
308540    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
308541    +
308542    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
308543    +
308544    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
308545    +
308546    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
308547    +
308548    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
308549    +
308550    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
308551    +
308552    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
308553    +
308554    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
308555    +
308556    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
308557    +
308558    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
308559    +
308560    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
308561    +
308562    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
308563    +
308564    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
308565    +
308566    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
308567    +
308568    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
308569    +
308570    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308571    +
308572    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
308573    +
308574    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
308575    +
308576    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
308577    +
308578    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
308579    +
308580    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
308581    +
308582    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308583    +
308584    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
308585    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
308586    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
308587    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
308588    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308590    +end;
MPRINT(EM_DIAGRAM):   end;
308591    +else do;
MPRINT(EM_DIAGRAM):   else do;
308592    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308593    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
308594    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308595    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308596    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
308597    +   end;
MPRINT(EM_DIAGRAM):   end;
308598    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308599    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
308600    +   end;
MPRINT(EM_DIAGRAM):   end;
308601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308602    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
308603    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308604    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308605    +   end;
MPRINT(EM_DIAGRAM):   end;
308606    +end;
MPRINT(EM_DIAGRAM):   end;
308607    +
308608    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
308609    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
308610    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
308611    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
308612    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308614    +end;
MPRINT(EM_DIAGRAM):   end;
308615    +else do;
MPRINT(EM_DIAGRAM):   else do;
308616    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308617    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
308618    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308619    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308620    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
308621    +   end;
MPRINT(EM_DIAGRAM):   end;
308622    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308623    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
308624    +   end;
MPRINT(EM_DIAGRAM):   end;
308625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308626    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
308627    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308628    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308629    +   end;
MPRINT(EM_DIAGRAM):   end;
308630    +end;
MPRINT(EM_DIAGRAM):   end;
308631    +
308632    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
308633    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
308634    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
308635    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
308636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308638    +end;
MPRINT(EM_DIAGRAM):   end;
308639    +else do;
MPRINT(EM_DIAGRAM):   else do;
308640    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308641    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
308642    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308643    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308644    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
308645    +   end;
MPRINT(EM_DIAGRAM):   end;
308646    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308647    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
308648    +   end;
MPRINT(EM_DIAGRAM):   end;
308649    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308650    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
308651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308653    +   end;
MPRINT(EM_DIAGRAM):   end;
308654    +end;
MPRINT(EM_DIAGRAM):   end;
308655    +
308656    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
308657    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
308658    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
308659    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
308660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308662    +end;
MPRINT(EM_DIAGRAM):   end;
308663    +else do;
MPRINT(EM_DIAGRAM):   else do;
308664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308665    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
308666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308667    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308668    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
308669    +   end;
MPRINT(EM_DIAGRAM):   end;
308670    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308671    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
308672    +   end;
MPRINT(EM_DIAGRAM):   end;
308673    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308674    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
308675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308677    +   end;
MPRINT(EM_DIAGRAM):   end;
308678    +end;
MPRINT(EM_DIAGRAM):   end;
308679    +
308680    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
308681    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
308682    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
308683    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
308684    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308685    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308686    +end;
MPRINT(EM_DIAGRAM):   end;
308687    +else do;
MPRINT(EM_DIAGRAM):   else do;
308688    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308689    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
308690    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308691    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308692    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
308693    +   end;
MPRINT(EM_DIAGRAM):   end;
308694    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308695    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
308696    +   end;
MPRINT(EM_DIAGRAM):   end;
308697    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308698    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
308699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308701    +   end;
MPRINT(EM_DIAGRAM):   end;
308702    +end;
MPRINT(EM_DIAGRAM):   end;
308703    +
308704    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
308705    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
308706    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
308707    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
308708    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308709    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308710    +end;
MPRINT(EM_DIAGRAM):   end;
308711    +else do;
MPRINT(EM_DIAGRAM):   else do;
308712    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308713    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
308714    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308715    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
308716    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
308717    +   end;
MPRINT(EM_DIAGRAM):   end;
308718    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308719    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
308720    +   end;
MPRINT(EM_DIAGRAM):   end;
308721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308722    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
308723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308725    +   end;
MPRINT(EM_DIAGRAM):   end;
308726    +end;
MPRINT(EM_DIAGRAM):   end;
308727    +
308728    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
308729    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
308730    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
308731    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
308732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308734    +end;
MPRINT(EM_DIAGRAM):   end;
308735    +else do;
MPRINT(EM_DIAGRAM):   else do;
308736    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308737    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
308738    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308739    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
308740    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
308741    +   end;
MPRINT(EM_DIAGRAM):   end;
308742    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
308743    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
308744    +   end;
MPRINT(EM_DIAGRAM):   end;
308745    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308746    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
308747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308749    +   end;
MPRINT(EM_DIAGRAM):   end;
308750    +end;
MPRINT(EM_DIAGRAM):   end;
308751    +
308752    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
308753    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
308754    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308755    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
308756    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
308757    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
308758    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
308759    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
308760    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
308761    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
308762    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
308763    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
308764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308766    +end;
MPRINT(EM_DIAGRAM):   end;
308767    +else do;
MPRINT(EM_DIAGRAM):   else do;
308768    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
308769    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
308770    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308771    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
308772    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
308773    +   end;
MPRINT(EM_DIAGRAM):   end;
308774    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
308775    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
308776    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
308777    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
308778    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
308779    +   end;
MPRINT(EM_DIAGRAM):   end;
308780    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
308781    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
308782    +   end;
MPRINT(EM_DIAGRAM):   end;
308783    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
308784    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
308785    +   end;
MPRINT(EM_DIAGRAM):   end;
308786    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
308787    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
308788    +   end;
MPRINT(EM_DIAGRAM):   end;
308789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308790    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
308791    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
308792    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
308793    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
308794    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308795    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308796    +   end;
MPRINT(EM_DIAGRAM):   end;
308797    +end;
MPRINT(EM_DIAGRAM):   end;
308798    +
308799    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
308800    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
308801    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
308802    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308803    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
308804    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
308805    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
308806    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
308807    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
308808    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308809    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308810    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308811    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308814    +end;
MPRINT(EM_DIAGRAM):   end;
308815    +else do;
MPRINT(EM_DIAGRAM):   else do;
308816    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
308817    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
308818    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308819    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
308820    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
308821    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
308822    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
308823    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
308824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308825    +         end;
MPRINT(EM_DIAGRAM):   end;
308826    +         else do;
MPRINT(EM_DIAGRAM):   else do;
308827    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
308828    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
308829    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308830    +            end;
MPRINT(EM_DIAGRAM):   end;
308831    +         end;
MPRINT(EM_DIAGRAM):   end;
308832    +      end;
MPRINT(EM_DIAGRAM):   end;
308833    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308834    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
308835    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
308836    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308837    +         end;
MPRINT(EM_DIAGRAM):   end;
308838    +      end;
MPRINT(EM_DIAGRAM):   end;
308839    +   end;
MPRINT(EM_DIAGRAM):   end;
308840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308841    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
308842    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
308843    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308844    +      end;
MPRINT(EM_DIAGRAM):   end;
308845    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308846    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
308847    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
308848    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
308849    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
308850    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
308851    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308852    +         end;
MPRINT(EM_DIAGRAM):   end;
308853    +      end;
MPRINT(EM_DIAGRAM):   end;
308854    +   end;
MPRINT(EM_DIAGRAM):   end;
308855    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
308856    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308857    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308858    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308859    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308860    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308861    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308862    +   end;
MPRINT(EM_DIAGRAM):   end;
308863    +end;
MPRINT(EM_DIAGRAM):   end;
308864    +
308865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308866    +*** Checking missing input Interval
308867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308868    +
308869    +IF NMISS(
308870    +   AcceptedCmpTotal ,
308871    +   Age ,
308872    +   Frq ,
308873    +   Income ,
308874    +   Kidhome ,
308875    +   Mnt ,
308876    +   MntFishProducts ,
308877    +   MntFruits ,
308878    +   MntGoldProds ,
308879    +   MntMeatProducts ,
308880    +   MntSweetProducts ,
308881    +   MntWines ,
308882    +   MonthsAsCustomer ,
308883    +   NumCatalogPurchases ,
308884    +   NumDealsPurchases ,
308885    +   NumDistPurchases ,
308886    +   NumStorePurchases ,
308887    +   NumWebPurchases ,
308888    +   NumWebVisitsMonth ,
308889    +   RFMstat ,
308890    +   RMntFrq ,
308891    +   Recency ,
308892    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
308893    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308894    +
308895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308896    +END;
MPRINT(EM_DIAGRAM):   END;
308897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308898    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
308899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308900    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308901    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308902    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308903    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
308904    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308905    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308906    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
308907    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308908    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
308909    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
308910    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
308911    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308912    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
308913    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308914    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308915    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
308916    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
308917    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308918    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
308919    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
308920    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
308921    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
308922    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308923    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
308924    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308925    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308926    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
308927    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
308928    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
308929    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
308930    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308931    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
308932    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308933    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308934    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308935    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
308936    +END;
MPRINT(EM_DIAGRAM):   END;
308937    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308938    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308939    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308940    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308941    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
308942    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
308943    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308944    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308945    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
308946    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308947    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
308948    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
308949    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308950    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308951    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
308952    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
308953    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
308954    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
308955    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
308956    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
308957    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
308958    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308959    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
308960    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308961    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308962    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308963    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
308964    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
308965    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
308966    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
308967    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308968    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
308969    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
308970    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
308971    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
308972    +   ELSE S_NumCatalogPurchases
308973    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
308974    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
308975    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
308976    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308977    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
308978    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
308979    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308980    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308981    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
308982    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
308983    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
308984    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
308985    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
308986    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
308987    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
308988    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308989    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
308990    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
308991    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308992    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
308993    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308994    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308995    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308996    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
308997    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
308998    +END;
MPRINT(EM_DIAGRAM):   END;
308999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309000    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
309001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309003    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
309004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309006    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
309007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309009    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
309010    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
309011    +        S_Income  +    -0.14142658616971 * S_Kidhome
309012    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
309013    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
309014    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
309015    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
309016    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
309017    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
309018    +          +     0.96837841774168 * S_NumDealsPurchases
309019    +          +      0.2846105381881 * S_NumDistPurchases
309020    +          +    -0.69514041792943 * S_NumStorePurchases
309021    +          +    -0.96425407351749 * S_NumWebPurchases
309022    +          +     0.79545449599683 * S_NumWebVisitsMonth
309023    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
309024    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
309025    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
309026    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
309027    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
309028    +        S_Income  +    -0.55432195959203 * S_Kidhome
309029    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
309030    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
309031    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
309032    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
309033    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
309034    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
309035    +          +      0.2190184330724 * S_NumDealsPurchases
309036    +          +    -0.01682909442896 * S_NumDistPurchases
309037    +          +    -0.70244951048552 * S_NumStorePurchases
309038    +          +     -0.3057457659316 * S_NumWebPurchases
309039    +          +     0.95928538762715 * S_NumWebVisitsMonth
309040    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
309041    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
309042    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
309043    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
309044    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
309045    +        S_Income  +    -0.06354861159882 * S_Kidhome
309046    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
309047    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
309048    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
309049    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
309050    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
309051    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
309052    +          +    -0.21394230159696 * S_NumDealsPurchases
309053    +          +    -0.23833771124663 * S_NumDistPurchases
309054    +          +     0.45832031017813 * S_NumStorePurchases
309055    +          +    -0.30226952040179 * S_NumWebPurchases
309056    +          +    -0.29796387184481 * S_NumWebVisitsMonth
309057    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
309058    +        S_RMntFrq  +     0.87067423045258 * S_Recency
309059    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
309060    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
309061    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
309062    +        S_Income  +    -0.04839586846715 * S_Kidhome
309063    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
309064    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
309065    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
309066    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
309067    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
309068    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
309069    +          +    -0.43749647771198 * S_NumDealsPurchases
309070    +          +     0.21263473847472 * S_NumDistPurchases
309071    +          +     0.26102168039141 * S_NumStorePurchases
309072    +          +     0.54921725943657 * S_NumWebPurchases
309073    +          +    -0.75685843498122 * S_NumWebVisitsMonth
309074    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
309075    +        S_RMntFrq  +     0.80536256822347 * S_Recency
309076    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
309077    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
309078    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
309079    +        S_Income  +     0.71499527198653 * S_Kidhome
309080    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
309081    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
309082    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
309083    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
309084    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
309085    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
309086    +          +     0.09436067776126 * S_NumDealsPurchases
309087    +          +    -0.02824201859641 * S_NumDistPurchases
309088    +          +    -0.06770433780564 * S_NumStorePurchases
309089    +          +    -0.07177620319715 * S_NumWebPurchases
309090    +          +    -0.75589979685266 * S_NumWebVisitsMonth
309091    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
309092    +        S_RMntFrq  +     0.94408788011429 * S_Recency
309093    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
309094    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
309095    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
309096    +        S_Income  +    -0.63474522042341 * S_Kidhome
309097    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
309098    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
309099    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
309100    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
309101    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
309102    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
309103    +          +    -0.51154511343396 * S_NumDealsPurchases
309104    +          +    -0.52422915823572 * S_NumDistPurchases
309105    +          +     0.30305498422357 * S_NumStorePurchases
309106    +          +     0.12197321559338 * S_NumWebPurchases
309107    +          +    -0.10520335422769 * S_NumWebVisitsMonth
309108    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
309109    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
309110    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
309111    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
309112    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
309113    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
309114    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
309115    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
309116    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
309117    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
309118    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
309119    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
309120    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
309121    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
309122    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
309123    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
309124    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
309125    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
309126    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
309127    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
309128    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
309129    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
309130    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
309131    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
309132    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
309133    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
309134    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
309135    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
309136    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
309137    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
309138    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
309139    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
309140    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
309141    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
309142    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
309143    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
309144    +          +     0.10234616400375 * Marital_StatusDivorced
309145    +          +     0.27961650739075 * Marital_StatusMarried
309146    +          +    -0.40239488723767 * Marital_StatusSingle
309147    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
309148    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
309149    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
309150    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
309151    +          +     0.46385792428023 * Marital_StatusDivorced
309152    +          +    -0.62344590646391 * Marital_StatusMarried
309153    +          +     0.61767209252062 * Marital_StatusSingle
309154    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
309155    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
309156    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
309157    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
309158    +          +    -0.07839612590836 * Marital_StatusDivorced
309159    +          +     0.35316864062221 * Marital_StatusMarried
309160    +          +    -0.10730136429834 * Marital_StatusSingle
309161    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
309162    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
309163    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
309164    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
309165    +          +    -0.09942175269886 * Marital_StatusDivorced
309166    +          +     0.24385460865335 * Marital_StatusMarried
309167    +          +    -0.33658955096296 * Marital_StatusSingle
309168    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
309169    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
309170    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
309171    +        EducationGraduation  +     0.37352174719748 * EducationMaster
309172    +          +    -0.08047852561096 * Marital_StatusDivorced
309173    +          +     1.16485862694561 * Marital_StatusMarried
309174    +          +    -0.94140251178566 * Marital_StatusSingle
309175    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
309176    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
309177    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
309178    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
309179    +          +    -0.16621963893391 * Marital_StatusDivorced
309180    +          +    -0.44542186297324 * Marital_StatusMarried
309181    +          +     0.42176133228308 * Marital_StatusSingle
309182    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
309183    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
309184    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
309185    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
309186    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
309187    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
309188    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
309189    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
309190    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
309191    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
309192    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
309193    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
309194    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
309195    +END;
MPRINT(EM_DIAGRAM):   END;
309196    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309197    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
309198    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
309199    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
309200    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
309201    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
309202    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
309203    +END;
MPRINT(EM_DIAGRAM):   END;
309204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309205    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
309206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309207    +
309208    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
309209    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
309210    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309211    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
309212    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
309213    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309214    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
309215    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309216    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309217    +end;
MPRINT(EM_DIAGRAM):   end;
309218    +else do;
MPRINT(EM_DIAGRAM):   else do;
309219    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
309220    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
309221    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
309222    +   end;
MPRINT(EM_DIAGRAM):   end;
309223    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
309224    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
309225    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
309226    +   end;
MPRINT(EM_DIAGRAM):   end;
309227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309228    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309229    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309230    +   end;
MPRINT(EM_DIAGRAM):   end;
309231    +end;
MPRINT(EM_DIAGRAM):   end;
309232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309233    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
309234    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
309235    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
309236    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
309237    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
309238    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
309239    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309240    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
309241    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
309242    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
309243    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
309244    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
309245    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
309246    +END;
MPRINT(EM_DIAGRAM):   END;
309247    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309248    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
309249    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
309250    +END;
MPRINT(EM_DIAGRAM):   END;
309251    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
309252    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
309253    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
309254    +END;
MPRINT(EM_DIAGRAM):   END;
309255    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
309256    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
309257    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
309258    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
309259    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
309260    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
309261    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
309262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309263    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
309264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309265    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
309266    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
309267    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
309268    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
309269    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
309270    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
309271    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
309272    +END;
MPRINT(EM_DIAGRAM):   END;
309273    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309274    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
309275    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309276    +drop
309277    +H11
309278    +H12
309279    +H13
309280    +H14
309281    +H15
309282    +H16
309283    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
309284    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
309285    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
309286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309287    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
309288    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309289    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
309290    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
309291    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
309292    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
309293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309294    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
309295    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309296    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
309297    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
309298    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
309299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309300    +* Ensmbl28: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 4 of 5;
309301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309302    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309303    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
309304    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
309305    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
309306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309307    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309308    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
309309    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309310    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
309311    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
309312    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
309313    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
309314    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
309315    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
309316    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
309317    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
309318    +LENGTH _WARN_ $4
309319    +      F_DepVar  $ 12
309320    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
309321    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
309322    +
309323    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
309324    +
309325    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
309326    +
309327    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
309328    +
309329    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
309330    +
309331    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
309332    +
309333    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
309334    +
309335    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
309336    +
309337    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
309338    +
309339    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
309340    +
309341    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
309342    +
309343    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
309344    +
309345    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
309346    +
309347    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
309348    +
309349    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
309350    +
309351    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
309352    +
309353    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
309354    +
309355    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
309356    +
309357    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
309358    +
309359    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
309360    +
309361    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
309362    +
309363    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
309364    +
309365    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
309366    +
309367    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
309368    +
309369    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
309370    +
309371    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
309372    +
309373    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
309374    +
309375    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
309376    +
309377    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
309378    +
309379    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
309380    +
309381    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
309382    +
309383    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
309384    +
309385    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
309386    +
309387    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
309388    +
309389    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
309390    +
309391    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
309392    +
309393    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
309394    +
309395    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
309396    +
309397    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
309398    +
309399    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
309400    +
309401    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
309402    +
309403    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
309404    +
309405    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
309406    +
309407    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309408    +
309409    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
309410    +
309411    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
309412    +
309413    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
309414    +
309415    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
309416    +
309417    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
309418    +
309419    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
309420    +
309421    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
309422    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
309423    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
309424    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
309425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309427    +end;
MPRINT(EM_DIAGRAM):   end;
309428    +else do;
MPRINT(EM_DIAGRAM):   else do;
309429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309430    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
309431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309432    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309433    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
309434    +   end;
MPRINT(EM_DIAGRAM):   end;
309435    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309436    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
309437    +   end;
MPRINT(EM_DIAGRAM):   end;
309438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309439    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
309440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309442    +   end;
MPRINT(EM_DIAGRAM):   end;
309443    +end;
MPRINT(EM_DIAGRAM):   end;
309444    +
309445    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
309446    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
309447    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
309448    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
309449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309451    +end;
MPRINT(EM_DIAGRAM):   end;
309452    +else do;
MPRINT(EM_DIAGRAM):   else do;
309453    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309454    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
309455    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309456    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309457    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
309458    +   end;
MPRINT(EM_DIAGRAM):   end;
309459    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309460    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
309461    +   end;
MPRINT(EM_DIAGRAM):   end;
309462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309463    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
309464    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309465    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309466    +   end;
MPRINT(EM_DIAGRAM):   end;
309467    +end;
MPRINT(EM_DIAGRAM):   end;
309468    +
309469    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
309470    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
309471    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
309472    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
309473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309475    +end;
MPRINT(EM_DIAGRAM):   end;
309476    +else do;
MPRINT(EM_DIAGRAM):   else do;
309477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309478    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
309479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309480    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309481    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
309482    +   end;
MPRINT(EM_DIAGRAM):   end;
309483    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309484    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
309485    +   end;
MPRINT(EM_DIAGRAM):   end;
309486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309487    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
309488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309490    +   end;
MPRINT(EM_DIAGRAM):   end;
309491    +end;
MPRINT(EM_DIAGRAM):   end;
309492    +
309493    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
309494    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
309495    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
309496    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
309497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309499    +end;
MPRINT(EM_DIAGRAM):   end;
309500    +else do;
MPRINT(EM_DIAGRAM):   else do;
309501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309502    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
309503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309504    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309505    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
309506    +   end;
MPRINT(EM_DIAGRAM):   end;
309507    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309508    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
309509    +   end;
MPRINT(EM_DIAGRAM):   end;
309510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309511    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
309512    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309513    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309514    +   end;
MPRINT(EM_DIAGRAM):   end;
309515    +end;
MPRINT(EM_DIAGRAM):   end;
309516    +
309517    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
309518    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
309519    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
309520    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
309521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309523    +end;
MPRINT(EM_DIAGRAM):   end;
309524    +else do;
MPRINT(EM_DIAGRAM):   else do;
309525    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309526    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
309527    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309528    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309529    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
309530    +   end;
MPRINT(EM_DIAGRAM):   end;
309531    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309532    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
309533    +   end;
MPRINT(EM_DIAGRAM):   end;
309534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309535    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
309536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309538    +   end;
MPRINT(EM_DIAGRAM):   end;
309539    +end;
MPRINT(EM_DIAGRAM):   end;
309540    +
309541    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
309542    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
309543    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
309544    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
309545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309547    +end;
MPRINT(EM_DIAGRAM):   end;
309548    +else do;
MPRINT(EM_DIAGRAM):   else do;
309549    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309550    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
309551    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309552    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
309553    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
309554    +   end;
MPRINT(EM_DIAGRAM):   end;
309555    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309556    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
309557    +   end;
MPRINT(EM_DIAGRAM):   end;
309558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309559    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
309560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309562    +   end;
MPRINT(EM_DIAGRAM):   end;
309563    +end;
MPRINT(EM_DIAGRAM):   end;
309564    +
309565    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
309566    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
309567    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
309568    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
309569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309571    +end;
MPRINT(EM_DIAGRAM):   end;
309572    +else do;
MPRINT(EM_DIAGRAM):   else do;
309573    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309574    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
309575    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309576    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
309577    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
309578    +   end;
MPRINT(EM_DIAGRAM):   end;
309579    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
309580    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
309581    +   end;
MPRINT(EM_DIAGRAM):   end;
309582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309583    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
309584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309586    +   end;
MPRINT(EM_DIAGRAM):   end;
309587    +end;
MPRINT(EM_DIAGRAM):   end;
309588    +
309589    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
309590    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
309591    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
309592    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
309593    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
309594    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
309595    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
309596    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
309597    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
309598    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
309599    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
309600    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
309601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309603    +end;
MPRINT(EM_DIAGRAM):   end;
309604    +else do;
MPRINT(EM_DIAGRAM):   else do;
309605    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
309606    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
309607    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309608    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
309609    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
309610    +   end;
MPRINT(EM_DIAGRAM):   end;
309611    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
309612    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
309613    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
309614    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
309615    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
309616    +   end;
MPRINT(EM_DIAGRAM):   end;
309617    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
309618    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
309619    +   end;
MPRINT(EM_DIAGRAM):   end;
309620    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
309621    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
309622    +   end;
MPRINT(EM_DIAGRAM):   end;
309623    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
309624    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
309625    +   end;
MPRINT(EM_DIAGRAM):   end;
309626    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309627    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
309628    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
309629    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
309630    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
309631    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309632    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309633    +   end;
MPRINT(EM_DIAGRAM):   end;
309634    +end;
MPRINT(EM_DIAGRAM):   end;
309635    +
309636    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
309637    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
309638    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
309639    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
309640    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
309641    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
309642    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
309643    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
309644    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
309645    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309646    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309647    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309648    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309649    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309651    +end;
MPRINT(EM_DIAGRAM):   end;
309652    +else do;
MPRINT(EM_DIAGRAM):   else do;
309653    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
309654    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
309655    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309656    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
309657    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
309658    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
309659    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
309660    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
309661    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309662    +         end;
MPRINT(EM_DIAGRAM):   end;
309663    +         else do;
MPRINT(EM_DIAGRAM):   else do;
309664    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
309665    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
309666    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309667    +            end;
MPRINT(EM_DIAGRAM):   end;
309668    +         end;
MPRINT(EM_DIAGRAM):   end;
309669    +      end;
MPRINT(EM_DIAGRAM):   end;
309670    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309671    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
309672    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
309673    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309674    +         end;
MPRINT(EM_DIAGRAM):   end;
309675    +      end;
MPRINT(EM_DIAGRAM):   end;
309676    +   end;
MPRINT(EM_DIAGRAM):   end;
309677    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309678    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
309679    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
309680    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309681    +      end;
MPRINT(EM_DIAGRAM):   end;
309682    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309683    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
309684    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
309685    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
309686    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
309687    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
309688    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309689    +         end;
MPRINT(EM_DIAGRAM):   end;
309690    +      end;
MPRINT(EM_DIAGRAM):   end;
309691    +   end;
MPRINT(EM_DIAGRAM):   end;
309692    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
309693    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309694    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309695    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309696    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309699    +   end;
MPRINT(EM_DIAGRAM):   end;
309700    +end;
MPRINT(EM_DIAGRAM):   end;
309701    +
309702    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309703    +*** Checking missing input Interval
309704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
309705    +
309706    +IF NMISS(
309707    +   AcceptedCmpTotal ,
309708    +   Age ,
309709    +   Frq ,
309710    +   Income ,
309711    +   Kidhome ,
309712    +   Mnt ,
309713    +   MntFishProducts ,
309714    +   MntFruits ,
309715    +   MntGoldProds ,
309716    +   MntMeatProducts ,
309717    +   MntSweetProducts ,
309718    +   MntWines ,
309719    +   MonthsAsCustomer ,
309720    +   NumCatalogPurchases ,
309721    +   NumDealsPurchases ,
309722    +   NumDistPurchases ,
309723    +   NumStorePurchases ,
309724    +   NumWebPurchases ,
309725    +   NumWebVisitsMonth ,
309726    +   RFMstat ,
309727    +   RMntFrq ,
309728    +   Recency ,
309729    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
309730    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
309731    +
309732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309733    +END;
MPRINT(EM_DIAGRAM):   END;
309734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309735    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
309736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309738    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309739    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
309740    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
309741    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309742    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
309743    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
309744    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309745    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
309746    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
309747    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
309748    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
309749    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
309750    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309751    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
309752    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
309753    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
309754    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
309755    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
309756    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
309757    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
309758    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
309759    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309760    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
309761    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
309762    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
309763    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
309764    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
309765    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
309766    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
309767    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309768    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
309769    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
309770    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
309771    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309772    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
309773    +END;
MPRINT(EM_DIAGRAM):   END;
309774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309775    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
309776    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309777    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
309778    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
309779    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
309780    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
309781    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309782    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
309783    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
309784    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
309785    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
309786    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
309787    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309788    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
309789    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
309790    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
309791    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
309792    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
309793    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
309794    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
309795    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
309796    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
309797    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
309798    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309799    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
309800    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
309801    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
309802    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
309803    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
309804    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
309805    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
309806    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
309807    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
309808    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
309809    +   ELSE S_NumCatalogPurchases
309810    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
309811    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
309812    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
309813    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309814    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
309815    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
309816    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
309817    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
309818    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
309819    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
309820    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
309821    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
309822    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
309823    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
309824    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
309825    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309826    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
309827    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
309828    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
309829    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
309830    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
309831    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
309832    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309833    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
309834    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
309835    +END;
MPRINT(EM_DIAGRAM):   END;
309836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309837    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
309838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309840    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
309841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309843    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
309844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309845    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309846    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
309847    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
309848    +        S_Income  +    -0.27053363011695 * S_Kidhome
309849    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
309850    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
309851    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
309852    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
309853    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
309854    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
309855    +          +    -1.35624485206227 * S_NumDealsPurchases
309856    +          +    -0.54646115734684 * S_NumDistPurchases
309857    +          +     1.29794225108321 * S_NumStorePurchases
309858    +          +      1.8453064081809 * S_NumWebPurchases
309859    +          +    -0.92747144824026 * S_NumWebVisitsMonth
309860    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
309861    +        S_RMntFrq  +     0.73207333681971 * S_Recency
309862    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
309863    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
309864    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
309865    +        S_Income  +    -0.79821220724157 * S_Kidhome
309866    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
309867    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
309868    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
309869    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
309870    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
309871    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
309872    +          +     0.72513216556859 * S_NumDealsPurchases
309873    +          +    -0.15566774650584 * S_NumDistPurchases
309874    +          +     -0.8847675798982 * S_NumStorePurchases
309875    +          +    -0.79405200318252 * S_NumWebPurchases
309876    +          +     1.74003779802254 * S_NumWebVisitsMonth
309877    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
309878    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
309879    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
309880    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
309881    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
309882    +        S_Income  +    -0.58596240450544 * S_Kidhome
309883    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
309884    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
309885    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
309886    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
309887    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
309888    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
309889    +          +     0.17466385502192 * S_NumDealsPurchases
309890    +          +    -0.06219545947203 * S_NumDistPurchases
309891    +          +     0.16637546838853 * S_NumStorePurchases
309892    +          +    -0.06908729397635 * S_NumWebPurchases
309893    +          +     1.44269772444244 * S_NumWebVisitsMonth
309894    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
309895    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
309896    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
309897    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
309898    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
309899    +        S_Income  +    -0.42454238091412 * S_Kidhome
309900    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
309901    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
309902    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
309903    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
309904    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
309905    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
309906    +          +     0.77329078721398 * S_NumDealsPurchases
309907    +          +     0.31693324305765 * S_NumDistPurchases
309908    +          +    -1.08524196373091 * S_NumStorePurchases
309909    +          +    -0.96945384922979 * S_NumWebPurchases
309910    +          +     1.24659288571587 * S_NumWebVisitsMonth
309911    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
309912    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
309913    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
309914    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
309915    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
309916    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
309917    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
309918    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
309919    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
309920    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
309921    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
309922    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
309923    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
309924    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
309925    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
309926    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
309927    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
309928    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
309929    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
309930    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
309931    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
309932    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
309933    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
309934    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
309935    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
309936    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
309937    +          +     0.36788499721115 * Marital_StatusDivorced
309938    +          +    -0.16988636986433 * Marital_StatusMarried
309939    +          +    -0.24560973256761 * Marital_StatusSingle
309940    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
309941    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
309942    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
309943    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
309944    +          +     0.24497797058028 * Marital_StatusDivorced
309945    +          +    -1.44410245434424 * Marital_StatusMarried
309946    +          +     1.47441310087392 * Marital_StatusSingle
309947    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
309948    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
309949    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
309950    +        EducationGraduation  +     0.04653963359475 * EducationMaster
309951    +          +     0.15823225296452 * Marital_StatusDivorced
309952    +          +    -0.39129434667884 * Marital_StatusMarried
309953    +          +     0.84414069966504 * Marital_StatusSingle
309954    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
309955    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
309956    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
309957    +        EducationGraduation  +     0.40030852414737 * EducationMaster
309958    +          +     1.22039169814542 * Marital_StatusDivorced
309959    +          +     0.91592976063128 * Marital_StatusMarried
309960    +          +    -1.51267332883308 * Marital_StatusSingle
309961    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
309962    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
309963    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
309964    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
309965    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
309966    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
309967    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
309968    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
309969    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
309970    +END;
MPRINT(EM_DIAGRAM):   END;
309971    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309972    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
309973    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
309974    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
309975    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
309976    +END;
MPRINT(EM_DIAGRAM):   END;
309977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309978    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
309979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309980    +
309981    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
309982    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
309983    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309984    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
309985    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
309986    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309987    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
309988    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309989    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309990    +end;
MPRINT(EM_DIAGRAM):   end;
309991    +else do;
MPRINT(EM_DIAGRAM):   else do;
309992    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
309993    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
309994    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
309995    +   end;
MPRINT(EM_DIAGRAM):   end;
309996    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
309997    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
309998    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
309999    +   end;
MPRINT(EM_DIAGRAM):   end;
310000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310001    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310002    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310003    +   end;
MPRINT(EM_DIAGRAM):   end;
310004    +end;
MPRINT(EM_DIAGRAM):   end;
310005    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310006    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
310007    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
310008    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
310009    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310010    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310011    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310012    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310013    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310014    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310015    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310016    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310017    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310018    +END;
MPRINT(EM_DIAGRAM):   END;
310019    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310020    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310021    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310022    +END;
MPRINT(EM_DIAGRAM):   END;
310023    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310024    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310025    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310026    +END;
MPRINT(EM_DIAGRAM):   END;
310027    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310028    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310029    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310030    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310031    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310032    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310033    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310035    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310037    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310038    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310039    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310040    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310041    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310042    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310043    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310044    +END;
MPRINT(EM_DIAGRAM):   END;
310045    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310046    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310047    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310048    +drop
310049    +H11
310050    +H12
310051    +H13
310052    +H14
310053    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
310054    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310055    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
310056    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310057    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
310058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310059    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
310060    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
310061    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
310062    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
310063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310064    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
310065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310066    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
310067    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
310068    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
310069    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310070    +* Ensmbl28: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 5 of 5;
310071    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310073    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
310074    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
310075    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
310076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310077    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310078    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
310079    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310080    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
310081    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
310082    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
310083    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
310084    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
310085    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
310086    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
310087    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
310088    +LENGTH _WARN_ $4
310089    +      F_DepVar  $ 12
310090    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
310091    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
310092    +
310093    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
310094    +
310095    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
310096    +
310097    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
310098    +
310099    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
310100    +
310101    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
310102    +
310103    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
310104    +
310105    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
310106    +
310107    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
310108    +
310109    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
310110    +
310111    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
310112    +
310113    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
310114    +
310115    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
310116    +
310117    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
310118    +
310119    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
310120    +
310121    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
310122    +
310123    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
310124    +
310125    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
310126    +
310127    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
310128    +
310129    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
310130    +
310131    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
310132    +
310133    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
310134    +
310135    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
310136    +
310137    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
310138    +
310139    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
310140    +
310141    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
310142    +
310143    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
310144    +
310145    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
310146    +
310147    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
310148    +
310149    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
310150    +
310151    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
310152    +
310153    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
310154    +
310155    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
310156    +
310157    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
310158    +
310159    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
310160    +
310161    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
310162    +
310163    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
310164    +
310165    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
310166    +
310167    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
310168    +
310169    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
310170    +
310171    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
310172    +
310173    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
310174    +
310175    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
310176    +
310177    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
310178    +
310179    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
310180    +
310181    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
310182    +
310183    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310184    +
310185    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
310186    +
310187    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
310188    +
310189    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
310190    +
310191    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
310192    +
310193    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
310194    +
310195    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
310196    +
310197    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
310198    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
310199    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
310200    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
310201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310203    +end;
MPRINT(EM_DIAGRAM):   end;
310204    +else do;
MPRINT(EM_DIAGRAM):   else do;
310205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310206    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
310207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310208    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310209    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
310210    +   end;
MPRINT(EM_DIAGRAM):   end;
310211    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310212    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
310213    +   end;
MPRINT(EM_DIAGRAM):   end;
310214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310215    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
310216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310218    +   end;
MPRINT(EM_DIAGRAM):   end;
310219    +end;
MPRINT(EM_DIAGRAM):   end;
310220    +
310221    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
310222    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
310223    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
310224    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
310225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310227    +end;
MPRINT(EM_DIAGRAM):   end;
310228    +else do;
MPRINT(EM_DIAGRAM):   else do;
310229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310230    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
310231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310232    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310233    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
310234    +   end;
MPRINT(EM_DIAGRAM):   end;
310235    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310236    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
310237    +   end;
MPRINT(EM_DIAGRAM):   end;
310238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310239    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
310240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310242    +   end;
MPRINT(EM_DIAGRAM):   end;
310243    +end;
MPRINT(EM_DIAGRAM):   end;
310244    +
310245    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
310246    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
310247    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
310248    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
310249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310251    +end;
MPRINT(EM_DIAGRAM):   end;
310252    +else do;
MPRINT(EM_DIAGRAM):   else do;
310253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310254    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
310255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310256    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310257    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
310258    +   end;
MPRINT(EM_DIAGRAM):   end;
310259    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310260    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
310261    +   end;
MPRINT(EM_DIAGRAM):   end;
310262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310263    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
310264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310266    +   end;
MPRINT(EM_DIAGRAM):   end;
310267    +end;
MPRINT(EM_DIAGRAM):   end;
310268    +
310269    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
310270    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
310271    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
310272    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
310273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310275    +end;
MPRINT(EM_DIAGRAM):   end;
310276    +else do;
MPRINT(EM_DIAGRAM):   else do;
310277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310278    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
310279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310280    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310281    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
310282    +   end;
MPRINT(EM_DIAGRAM):   end;
310283    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310284    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
310285    +   end;
MPRINT(EM_DIAGRAM):   end;
310286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310287    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
310288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310290    +   end;
MPRINT(EM_DIAGRAM):   end;
310291    +end;
MPRINT(EM_DIAGRAM):   end;
310292    +
310293    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
310294    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
310295    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
310296    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
310297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310299    +end;
MPRINT(EM_DIAGRAM):   end;
310300    +else do;
MPRINT(EM_DIAGRAM):   else do;
310301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310302    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
310303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310304    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310305    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
310306    +   end;
MPRINT(EM_DIAGRAM):   end;
310307    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310308    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
310309    +   end;
MPRINT(EM_DIAGRAM):   end;
310310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310311    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
310312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310314    +   end;
MPRINT(EM_DIAGRAM):   end;
310315    +end;
MPRINT(EM_DIAGRAM):   end;
310316    +
310317    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
310318    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
310319    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
310320    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
310321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310323    +end;
MPRINT(EM_DIAGRAM):   end;
310324    +else do;
MPRINT(EM_DIAGRAM):   else do;
310325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310326    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
310327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310328    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
310329    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
310330    +   end;
MPRINT(EM_DIAGRAM):   end;
310331    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310332    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
310333    +   end;
MPRINT(EM_DIAGRAM):   end;
310334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310335    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
310336    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310337    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310338    +   end;
MPRINT(EM_DIAGRAM):   end;
310339    +end;
MPRINT(EM_DIAGRAM):   end;
310340    +
310341    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
310342    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
310343    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
310344    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
310345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310347    +end;
MPRINT(EM_DIAGRAM):   end;
310348    +else do;
MPRINT(EM_DIAGRAM):   else do;
310349    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310350    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
310351    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310352    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
310353    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
310354    +   end;
MPRINT(EM_DIAGRAM):   end;
310355    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
310356    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
310357    +   end;
MPRINT(EM_DIAGRAM):   end;
310358    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310359    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
310360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310362    +   end;
MPRINT(EM_DIAGRAM):   end;
310363    +end;
MPRINT(EM_DIAGRAM):   end;
310364    +
310365    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
310366    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
310367    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
310368    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
310369    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
310370    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
310371    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
310372    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
310373    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
310374    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
310375    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
310376    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
310377    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310378    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310379    +end;
MPRINT(EM_DIAGRAM):   end;
310380    +else do;
MPRINT(EM_DIAGRAM):   else do;
310381    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
310382    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
310383    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310384    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
310385    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
310386    +   end;
MPRINT(EM_DIAGRAM):   end;
310387    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
310388    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
310389    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
310390    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
310391    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
310392    +   end;
MPRINT(EM_DIAGRAM):   end;
310393    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
310394    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
310395    +   end;
MPRINT(EM_DIAGRAM):   end;
310396    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
310397    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
310398    +   end;
MPRINT(EM_DIAGRAM):   end;
310399    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
310400    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
310401    +   end;
MPRINT(EM_DIAGRAM):   end;
310402    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310403    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
310404    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
310405    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
310406    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
310407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310409    +   end;
MPRINT(EM_DIAGRAM):   end;
310410    +end;
MPRINT(EM_DIAGRAM):   end;
310411    +
310412    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
310413    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
310414    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
310415    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
310416    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
310417    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
310418    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
310419    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
310420    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
310421    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
310422    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
310423    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
310424    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
310425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310427    +end;
MPRINT(EM_DIAGRAM):   end;
310428    +else do;
MPRINT(EM_DIAGRAM):   else do;
310429    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
310430    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
310431    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310432    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
310433    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
310434    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
310435    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
310436    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
310437    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310438    +         end;
MPRINT(EM_DIAGRAM):   end;
310439    +         else do;
MPRINT(EM_DIAGRAM):   else do;
310440    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
310441    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
310442    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310443    +            end;
MPRINT(EM_DIAGRAM):   end;
310444    +         end;
MPRINT(EM_DIAGRAM):   end;
310445    +      end;
MPRINT(EM_DIAGRAM):   end;
310446    +      else do;
MPRINT(EM_DIAGRAM):   else do;
310447    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
310448    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
310449    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310450    +         end;
MPRINT(EM_DIAGRAM):   end;
310451    +      end;
MPRINT(EM_DIAGRAM):   end;
310452    +   end;
MPRINT(EM_DIAGRAM):   end;
310453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310454    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
310455    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
310456    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310457    +      end;
MPRINT(EM_DIAGRAM):   end;
310458    +      else do;
MPRINT(EM_DIAGRAM):   else do;
310459    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
310460    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
310461    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
310462    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
310463    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
310464    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310465    +         end;
MPRINT(EM_DIAGRAM):   end;
310466    +      end;
MPRINT(EM_DIAGRAM):   end;
310467    +   end;
MPRINT(EM_DIAGRAM):   end;
310468    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
310469    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
310470    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
310471    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
310472    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
310473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310475    +   end;
MPRINT(EM_DIAGRAM):   end;
310476    +end;
MPRINT(EM_DIAGRAM):   end;
310477    +
310478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310479    +*** Checking missing input Interval
310480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
310481    +
310482    +IF NMISS(
310483    +   AcceptedCmpTotal ,
310484    +   Age ,
310485    +   Frq ,
310486    +   Income ,
310487    +   Kidhome ,
310488    +   Mnt ,
310489    +   MntFishProducts ,
310490    +   MntFruits ,
310491    +   MntGoldProds ,
310492    +   MntMeatProducts ,
310493    +   MntSweetProducts ,
310494    +   MntWines ,
310495    +   MonthsAsCustomer ,
310496    +   NumCatalogPurchases ,
310497    +   NumDealsPurchases ,
310498    +   NumDistPurchases ,
310499    +   NumStorePurchases ,
310500    +   NumWebPurchases ,
310501    +   NumWebVisitsMonth ,
310502    +   RFMstat ,
310503    +   RMntFrq ,
310504    +   Recency ,
310505    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
310506    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
310507    +
310508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310509    +END;
MPRINT(EM_DIAGRAM):   END;
310510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310511    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
310512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310514    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310515    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310516    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
310517    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310518    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310519    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
310520    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310521    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
310522    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
310523    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
310524    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310525    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
310526    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310527    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310528    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
310529    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
310530    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310531    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
310532    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
310533    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
310534    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
310535    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
310536    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
310537    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310538    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310539    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
310540    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
310541    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
310542    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
310543    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
310544    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
310545    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310546    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310547    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310548    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
310549    +END;
MPRINT(EM_DIAGRAM):   END;
310550    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310551    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
310552    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310553    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310554    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
310555    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
310556    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
310557    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310558    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
310559    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310560    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
310561    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
310562    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
310563    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310564    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
310565    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
310566    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
310567    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
310568    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
310569    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
310570    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
310571    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310572    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
310573    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
310574    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310575    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310576    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
310577    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
310578    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
310579    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
310580    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310581    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
310582    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
310583    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
310584    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
310585    +   ELSE S_NumCatalogPurchases
310586    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
310587    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
310588    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
310589    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
310590    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
310591    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
310592    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310593    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310594    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
310595    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
310596    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
310597    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
310598    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
310599    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
310600    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
310601    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
310602    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
310603    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
310604    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310605    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
310606    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310607    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
310608    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310609    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
310610    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
310611    +END;
MPRINT(EM_DIAGRAM):   END;
310612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310613    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
310614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310616    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
310617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310619    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
310620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310621    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310622    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
310623    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
310624    +        S_Income  +    -0.43070069114587 * S_Kidhome
310625    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
310626    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
310627    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
310628    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
310629    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
310630    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
310631    +          +    -0.21858146166244 * S_NumDealsPurchases
310632    +          +     0.18409991080913 * S_NumDistPurchases
310633    +          +     0.35683163455594 * S_NumStorePurchases
310634    +          +     0.24429183714976 * S_NumWebPurchases
310635    +          +     -0.1263739191616 * S_NumWebVisitsMonth
310636    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
310637    +        S_RMntFrq  +      0.3452503815146 * S_Recency
310638    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
310639    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
310640    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
310641    +        S_Income  +     0.24623934031778 * S_Kidhome
310642    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
310643    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
310644    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
310645    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
310646    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
310647    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
310648    +          +    -0.08125614129909 * S_NumDealsPurchases
310649    +          +     0.38003696656333 * S_NumDistPurchases
310650    +          +     0.22006494588298 * S_NumStorePurchases
310651    +          +     0.26217639358993 * S_NumWebPurchases
310652    +          +    -0.56905781005459 * S_NumWebVisitsMonth
310653    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
310654    +        S_RMntFrq  +     0.33060213336674 * S_Recency
310655    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
310656    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
310657    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
310658    +        S_Income  +     0.18597632724783 * S_Kidhome
310659    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
310660    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
310661    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
310662    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
310663    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
310664    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
310665    +          +     0.08121213946217 * S_NumDealsPurchases
310666    +          +    -0.04963282234139 * S_NumDistPurchases
310667    +          +    -0.09521586837775 * S_NumStorePurchases
310668    +          +     0.00630626523742 * S_NumWebPurchases
310669    +          +    -0.03891587920939 * S_NumWebVisitsMonth
310670    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
310671    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
310672    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
310673    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
310674    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
310675    +        S_Income  +     0.25356767518099 * S_Kidhome
310676    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
310677    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
310678    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
310679    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
310680    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
310681    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
310682    +          +     0.83749876944877 * S_NumDealsPurchases
310683    +          +     0.29636537008068 * S_NumDistPurchases
310684    +          +    -0.61202052257506 * S_NumStorePurchases
310685    +          +    -0.96921731415369 * S_NumWebPurchases
310686    +          +     0.10056455703323 * S_NumWebVisitsMonth
310687    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
310688    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
310689    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
310690    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
310691    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
310692    +        S_Income  +    -0.66239517276633 * S_Kidhome
310693    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
310694    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
310695    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
310696    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
310697    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
310698    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
310699    +          +     0.63122884753912 * S_NumDealsPurchases
310700    +          +     0.00285388491049 * S_NumDistPurchases
310701    +          +    -0.76222252593182 * S_NumStorePurchases
310702    +          +    -0.71485070772733 * S_NumWebPurchases
310703    +          +     1.59020450778179 * S_NumWebVisitsMonth
310704    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
310705    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
310706    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
310707    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
310708    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
310709    +        S_Income  +    -0.22662005590555 * S_Kidhome
310710    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
310711    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
310712    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
310713    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
310714    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
310715    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
310716    +          +    -0.28143084367284 * S_NumDealsPurchases
310717    +          +     0.09640746756361 * S_NumDistPurchases
310718    +          +      0.1754994442449 * S_NumStorePurchases
310719    +          +     0.14321475617403 * S_NumWebPurchases
310720    +          +     -0.1908048876137 * S_NumWebVisitsMonth
310721    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
310722    +        S_RMntFrq  +     0.02280616139018 * S_Recency
310723    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
310724    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
310725    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
310726    +        S_Income  +    -0.45643247613458 * S_Kidhome
310727    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
310728    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
310729    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
310730    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
310731    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
310732    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
310733    +          +    -0.14623073736275 * S_NumDealsPurchases
310734    +          +      0.1591142102614 * S_NumDistPurchases
310735    +          +     0.10364624011419 * S_NumStorePurchases
310736    +          +     0.21545343951201 * S_NumWebPurchases
310737    +          +     0.61096997379603 * S_NumWebVisitsMonth
310738    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
310739    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
310740    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
310741    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
310742    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
310743    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
310744    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
310745    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
310746    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
310747    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
310748    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
310749    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
310750    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
310751    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
310752    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
310753    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
310754    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
310755    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
310756    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
310757    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
310758    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
310759    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
310760    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
310761    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
310762    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
310763    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
310764    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
310765    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
310766    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
310767    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
310768    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
310769    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
310770    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
310771    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
310772    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
310773    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
310774    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
310775    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
310776    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
310777    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
310778    +        EducationGraduation  +     0.00389495660452 * EducationMaster
310779    +          +     0.39856598367829 * Marital_StatusDivorced
310780    +          +    -0.45922754552461 * Marital_StatusMarried
310781    +          +     0.41270195301891 * Marital_StatusSingle
310782    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
310783    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
310784    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
310785    +        EducationGraduation  +      0.2609956614651 * EducationMaster
310786    +          +     0.12002180366932 * Marital_StatusDivorced
310787    +          +     0.50693056076018 * Marital_StatusMarried
310788    +          +    -0.40828651697464 * Marital_StatusSingle
310789    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
310790    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
310791    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
310792    +        EducationGraduation  +     0.20017847825938 * EducationMaster
310793    +          +    -0.05075621283629 * Marital_StatusDivorced
310794    +          +     0.06731276969307 * Marital_StatusMarried
310795    +          +     0.20458391966582 * Marital_StatusSingle
310796    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
310797    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
310798    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
310799    +        EducationGraduation  +     0.28829384238085 * EducationMaster
310800    +          +    -0.37925185401218 * Marital_StatusDivorced
310801    +          +     0.62971134740586 * Marital_StatusMarried
310802    +          +    -0.36562351730859 * Marital_StatusSingle
310803    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
310804    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
310805    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
310806    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
310807    +          +     0.84382044664305 * Marital_StatusDivorced
310808    +          +    -0.84062627203871 * Marital_StatusMarried
310809    +          +     0.74100406031127 * Marital_StatusSingle
310810    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
310811    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
310812    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
310813    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
310814    +          +     -0.1195105091383 * Marital_StatusDivorced
310815    +          +    -0.13486422945269 * Marital_StatusMarried
310816    +          +     0.33592403429156 * Marital_StatusSingle
310817    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
310818    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
310819    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
310820    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
310821    +          +     0.14792293029589 * Marital_StatusDivorced
310822    +          +    -0.96003393582564 * Marital_StatusMarried
310823    +          +     0.64637652355384 * Marital_StatusSingle
310824    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
310825    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
310826    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
310827    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
310828    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
310829    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
310830    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
310831    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
310832    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
310833    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
310834    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
310835    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
310836    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
310837    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
310838    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
310839    +END;
MPRINT(EM_DIAGRAM):   END;
310840    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310841    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
310842    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
310843    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
310844    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
310845    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
310846    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
310847    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
310848    +END;
MPRINT(EM_DIAGRAM):   END;
310849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310850    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
310851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310852    +
310853    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
310854    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
310855    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310856    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
310857    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
310858    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310859    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
310860    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310861    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310862    +end;
MPRINT(EM_DIAGRAM):   end;
310863    +else do;
MPRINT(EM_DIAGRAM):   else do;
310864    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
310865    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
310866    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
310867    +   end;
MPRINT(EM_DIAGRAM):   end;
310868    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
310869    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
310870    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
310871    +   end;
MPRINT(EM_DIAGRAM):   end;
310872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310873    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310874    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310875    +   end;
MPRINT(EM_DIAGRAM):   end;
310876    +end;
MPRINT(EM_DIAGRAM):   end;
310877    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310878    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
310879    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
310880    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
310881    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
310882    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
310883    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310884    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310885    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310886    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310887    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310888    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310889    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310890    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310891    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310892    +END;
MPRINT(EM_DIAGRAM):   END;
310893    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310894    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310895    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310896    +END;
MPRINT(EM_DIAGRAM):   END;
310897    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310898    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310899    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310900    +END;
MPRINT(EM_DIAGRAM):   END;
310901    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310902    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310903    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310904    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310905    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310906    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310907    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310909    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310911    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310912    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310913    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310914    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310915    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310916    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310917    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310918    +END;
MPRINT(EM_DIAGRAM):   END;
310919    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310920    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310921    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310922    +drop
310923    +H11
310924    +H12
310925    +H13
310926    +H14
310927    +H15
310928    +H16
310929    +H17
310930    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
310931    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310932    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
310933    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310934    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
310935    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310936    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
310937    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
310938    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
310939    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
310940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310941    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
310942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310943    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
310944    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
310945    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
310946    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310947    +* Ensmbl28: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Maximum Posteriors of 5 models;
310948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310949    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
310950    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
310951    +P_DepVar1 = max(
310952    +Neural3_P_DepVar1 ,
310953    +Neural2_P_DepVar1 ,
310954    +Neural9_P_DepVar1 ,
310955    +Neural4_P_DepVar1 ,
310956    +Neural10_P_DepVar1
310957    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural3_P_DepVar1 , Neural2_P_DepVar1 , 
Neural9_P_DepVar1 , Neural4_P_DepVar1 , Neural10_P_DepVar1 );
310958    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
310959    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
310960    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
310961    +end;
MPRINT(EM_DIAGRAM):   end;
310962    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
310963    +P_DepVar0 = max(
310964    +Neural3_P_DepVar0 ,
310965    +Neural2_P_DepVar0 ,
310966    +Neural9_P_DepVar0 ,
310967    +Neural4_P_DepVar0 ,
310968    +Neural10_P_DepVar0
310969    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural3_P_DepVar0 , Neural2_P_DepVar0 , 
Neural9_P_DepVar0 , Neural4_P_DepVar0 , Neural10_P_DepVar0 );
310970    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
310971    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
310972    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
310973    +end;
MPRINT(EM_DIAGRAM):   end;
310974    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
310975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310976    +* Ensmbl28: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Classification Vars;
310977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310978    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
310979    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
310980    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
310981    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
310982    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
310983    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
310984    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
310985    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
310986    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
310987    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
310988    +end;
MPRINT(EM_DIAGRAM):   end;
310989    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
310990    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
310991    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
310992    +end;
MPRINT(EM_DIAGRAM):   end;
310993    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
310994    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310995    +* Ensmbl28: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Producing Unformatted variable;
310996    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310997    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
310998    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
310999    +else
311000    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
311001    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311002    +* Ensmbl28: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing _WARN_ Variable;
311003    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311004    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
311005    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
311006    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
311007    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
311008    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
311009    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
311010    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
311011    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
311012    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
311013    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
311014    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
311015    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
311016    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
311017    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
311018    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
311019    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
311020    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
311021    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
311022    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
311023    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
311023   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
311024    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
311024   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
311025    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
311025   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
311026    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
311026   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
311027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311028    +* Ensmbl28: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Residual Vars;
311029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311030    +if
311031    +F_DepVar NE '1'
311032    +AND F_DepVar NE '0'
311033    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
311034    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
311035    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
311036    +end;
MPRINT(EM_DIAGRAM):   end;
311037    +else do;
MPRINT(EM_DIAGRAM):   else do;
311038    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
311039    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
311040    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
311041    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
311042    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
311043    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
311044    +END;
MPRINT(EM_DIAGRAM):   END;
311045    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311046     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL28_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311047     quit;
311048     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
311049     filename emflow
311049   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring NEURAL3_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311050     *------------------------------------------------------------*;
311051     * Ensmbl28: Scoring NEURAL3_VALIDATE data;
311052     *------------------------------------------------------------*;
311053     data EMWS8.Ensmbl28_VALIDATE
311054     / view=EMWS8.Ensmbl28_VALIDATE
311055     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_VALIDATE / view=EMWS8.Ensmbl28_VALIDATE ;
311056     set EMWS8.Neural3_VALIDATE
311057     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_VALIDATE ;
311058     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\EMFLOWSCORE.sas.
311059    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311060    +* Ensmbl28: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Combine model for DepVar;
311061    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311062    +* Ensmbl28: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 1 of 5;
311063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311064    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311065    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
311066    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
311067    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
311068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311069    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311070    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
311071    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
311072    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
311073    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311074    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311075    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
311076    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
311077    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
311078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311079    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311080    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
311081    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
311082    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
311083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311084    +
311085    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
311086    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
311086   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
311087    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
311088    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
311089    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
311090    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
311091    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
311092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311093    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
311094    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
311095    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
311096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311098    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
311099    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311100    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
311101    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
311102    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
311103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311104    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
311105    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
311106    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
311107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311108    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311109    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
311110    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
311111    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
311112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311114    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
311115    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
311116    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
311117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311118    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311119    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311120    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311121    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311122    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311123    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311124    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311125    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311126    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311127    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311128    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311129    +LENGTH _WARN_ $4
311130    +      F_DepVar  $ 12
311131    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
311132    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311133    +
311134    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
311135    +
311136    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311137    +
311138    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
311139    +
311140    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
311141    +
311142    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311143    +
311144    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
311145    +
311146    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
311147    +
311148    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
311149    +
311150    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311151    +
311152    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
311153    +
311154    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
311155    +
311156    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
311157    +
311158    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
311159    +
311160    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
311161    +
311162    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
311163    +
311164    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
311165    +
311166    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
311167    +
311168    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
311169    +
311170    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
311171    +
311172    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
311173    +
311174    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311175    +
311176    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
311177    +
311178    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
311179    +
311180    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
311181    +
311182    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
311183    +
311184    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
311185    +
311186    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
311187    +
311188    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
311189    +
311190    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
311191    +
311192    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
311193    +
311194    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
311195    +
311196    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
311197    +
311198    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
311199    +
311200    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
311201    +
311202    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
311203    +
311204    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
311205    +
311206    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
311207    +
311208    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
311209    +
311210    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
311211    +
311212    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
311213    +
311214    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311215    +
311216    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311217    +
311218    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311219    +
311220    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311221    +
311222    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
311223    +
311224    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311225    +
311226    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
311227    +
311228    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311229    +
311230    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
311231    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
311232    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
311233    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
311234    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311235    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311236    +end;
MPRINT(EM_DIAGRAM):   end;
311237    +else do;
MPRINT(EM_DIAGRAM):   else do;
311238    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311239    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
311240    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311241    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311242    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
311243    +   end;
MPRINT(EM_DIAGRAM):   end;
311244    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311245    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
311246    +   end;
MPRINT(EM_DIAGRAM):   end;
311247    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311248    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
311249    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311250    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311251    +   end;
MPRINT(EM_DIAGRAM):   end;
311252    +end;
MPRINT(EM_DIAGRAM):   end;
311253    +
311254    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
311255    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
311256    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
311257    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
311258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311260    +end;
MPRINT(EM_DIAGRAM):   end;
311261    +else do;
MPRINT(EM_DIAGRAM):   else do;
311262    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311263    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
311264    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311265    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311266    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
311267    +   end;
MPRINT(EM_DIAGRAM):   end;
311268    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311269    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
311270    +   end;
MPRINT(EM_DIAGRAM):   end;
311271    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311272    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
311273    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311274    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311275    +   end;
MPRINT(EM_DIAGRAM):   end;
311276    +end;
MPRINT(EM_DIAGRAM):   end;
311277    +
311278    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
311279    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
311280    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
311281    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
311282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311284    +end;
MPRINT(EM_DIAGRAM):   end;
311285    +else do;
MPRINT(EM_DIAGRAM):   else do;
311286    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311287    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
311288    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311289    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311290    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
311291    +   end;
MPRINT(EM_DIAGRAM):   end;
311292    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311293    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
311294    +   end;
MPRINT(EM_DIAGRAM):   end;
311295    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311296    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
311297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311299    +   end;
MPRINT(EM_DIAGRAM):   end;
311300    +end;
MPRINT(EM_DIAGRAM):   end;
311301    +
311302    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
311303    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
311304    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
311305    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
311306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311308    +end;
MPRINT(EM_DIAGRAM):   end;
311309    +else do;
MPRINT(EM_DIAGRAM):   else do;
311310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311311    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
311312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311313    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311314    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
311315    +   end;
MPRINT(EM_DIAGRAM):   end;
311316    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311317    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
311318    +   end;
MPRINT(EM_DIAGRAM):   end;
311319    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311320    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
311321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311323    +   end;
MPRINT(EM_DIAGRAM):   end;
311324    +end;
MPRINT(EM_DIAGRAM):   end;
311325    +
311326    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
311327    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
311328    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
311329    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
311330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311332    +end;
MPRINT(EM_DIAGRAM):   end;
311333    +else do;
MPRINT(EM_DIAGRAM):   else do;
311334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311335    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
311336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311337    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311338    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
311339    +   end;
MPRINT(EM_DIAGRAM):   end;
311340    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311341    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
311342    +   end;
MPRINT(EM_DIAGRAM):   end;
311343    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311344    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
311345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311347    +   end;
MPRINT(EM_DIAGRAM):   end;
311348    +end;
MPRINT(EM_DIAGRAM):   end;
311349    +
311350    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
311351    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
311352    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
311353    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
311354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311356    +end;
MPRINT(EM_DIAGRAM):   end;
311357    +else do;
MPRINT(EM_DIAGRAM):   else do;
311358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311359    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
311360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311361    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311362    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
311363    +   end;
MPRINT(EM_DIAGRAM):   end;
311364    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311365    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
311366    +   end;
MPRINT(EM_DIAGRAM):   end;
311367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311368    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
311369    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311370    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311371    +   end;
MPRINT(EM_DIAGRAM):   end;
311372    +end;
MPRINT(EM_DIAGRAM):   end;
311373    +
311374    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
311375    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
311376    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
311377    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
311378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311380    +end;
MPRINT(EM_DIAGRAM):   end;
311381    +else do;
MPRINT(EM_DIAGRAM):   else do;
311382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311383    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
311384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311385    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
311386    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
311387    +   end;
MPRINT(EM_DIAGRAM):   end;
311388    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
311389    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
311390    +   end;
MPRINT(EM_DIAGRAM):   end;
311391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311392    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
311393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311395    +   end;
MPRINT(EM_DIAGRAM):   end;
311396    +end;
MPRINT(EM_DIAGRAM):   end;
311397    +
311398    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
311399    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
311400    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
311401    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
311402    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
311403    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
311404    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
311405    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
311406    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
311407    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
311408    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
311409    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
311410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311412    +end;
MPRINT(EM_DIAGRAM):   end;
311413    +else do;
MPRINT(EM_DIAGRAM):   else do;
311414    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
311415    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
311416    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311417    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
311418    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
311419    +   end;
MPRINT(EM_DIAGRAM):   end;
311420    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
311421    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
311422    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
311423    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
311424    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
311425    +   end;
MPRINT(EM_DIAGRAM):   end;
311426    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
311427    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
311428    +   end;
MPRINT(EM_DIAGRAM):   end;
311429    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
311430    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
311431    +   end;
MPRINT(EM_DIAGRAM):   end;
311432    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
311433    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
311434    +   end;
MPRINT(EM_DIAGRAM):   end;
311435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311436    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
311437    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
311438    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
311439    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
311440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311442    +   end;
MPRINT(EM_DIAGRAM):   end;
311443    +end;
MPRINT(EM_DIAGRAM):   end;
311444    +
311445    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
311446    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
311447    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
311448    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
311449    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
311450    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
311451    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
311452    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
311453    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
311454    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311455    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311456    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311457    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311458    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311459    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311460    +end;
MPRINT(EM_DIAGRAM):   end;
311461    +else do;
MPRINT(EM_DIAGRAM):   else do;
311462    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
311463    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
311464    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311465    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
311466    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
311467    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
311468    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
311469    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
311470    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311471    +         end;
MPRINT(EM_DIAGRAM):   end;
311472    +         else do;
MPRINT(EM_DIAGRAM):   else do;
311473    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
311474    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
311475    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311476    +            end;
MPRINT(EM_DIAGRAM):   end;
311477    +         end;
MPRINT(EM_DIAGRAM):   end;
311478    +      end;
MPRINT(EM_DIAGRAM):   end;
311479    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311480    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
311481    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
311482    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311483    +         end;
MPRINT(EM_DIAGRAM):   end;
311484    +      end;
MPRINT(EM_DIAGRAM):   end;
311485    +   end;
MPRINT(EM_DIAGRAM):   end;
311486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311487    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
311488    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
311489    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311490    +      end;
MPRINT(EM_DIAGRAM):   end;
311491    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311492    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
311493    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
311494    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
311495    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
311496    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
311497    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311498    +         end;
MPRINT(EM_DIAGRAM):   end;
311499    +      end;
MPRINT(EM_DIAGRAM):   end;
311500    +   end;
MPRINT(EM_DIAGRAM):   end;
311501    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
311502    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311503    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311504    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311505    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311508    +   end;
MPRINT(EM_DIAGRAM):   end;
311509    +end;
MPRINT(EM_DIAGRAM):   end;
311510    +
311511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311512    +*** Checking missing input Interval
311513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
311514    +
311515    +IF NMISS(
311516    +   AcceptedCmpTotal ,
311517    +   Age ,
311518    +   Frq ,
311519    +   Income ,
311520    +   Kidhome ,
311521    +   Mnt ,
311522    +   MntFishProducts ,
311523    +   MntFruits ,
311524    +   MntGoldProds ,
311525    +   MntMeatProducts ,
311526    +   MntSweetProducts ,
311527    +   MntWines ,
311528    +   MonthsAsCustomer ,
311529    +   NumCatalogPurchases ,
311530    +   NumDealsPurchases ,
311531    +   NumDistPurchases ,
311532    +   NumStorePurchases ,
311533    +   NumWebPurchases ,
311534    +   NumWebVisitsMonth ,
311535    +   RFMstat ,
311536    +   RMntFrq ,
311537    +   Recency ,
311538    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
311539    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
311540    +
311541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311542    +END;
MPRINT(EM_DIAGRAM):   END;
311543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311544    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
311545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311546    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311547    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311548    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
311549    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
311550    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311551    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
311552    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
311553    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311554    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
311555    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
311556    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
311557    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
311558    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
311559    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311560    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
311561    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
311562    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
311563    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
311564    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
311565    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
311566    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
311567    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
311568    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311569    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
311570    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
311571    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
311572    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
311573    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
311574    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
311575    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
311576    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311577    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
311578    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
311579    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
311580    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311581    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
311582    +END;
MPRINT(EM_DIAGRAM):   END;
311583    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311584    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
311585    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311586    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
311587    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
311588    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
311589    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
311590    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311591    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
311592    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
311593    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
311594    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
311595    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
311596    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311597    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
311598    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
311599    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
311600    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
311601    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
311602    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
311603    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
311604    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
311605    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
311606    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
311607    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311608    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
311609    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
311610    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
311611    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
311612    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
311613    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
311614    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
311615    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
311616    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
311617    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
311618    +   ELSE S_NumCatalogPurchases
311619    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
311620    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
311621    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
311622    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311623    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
311624    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
311625    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
311626    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
311627    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
311628    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
311629    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
311630    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
311631    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
311632    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
311633    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
311634    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311635    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
311636    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
311637    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
311638    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
311639    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
311640    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
311641    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311642    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
311643    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
311644    +END;
MPRINT(EM_DIAGRAM):   END;
311645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311646    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
311647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311649    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
311650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311652    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
311653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311654    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311655    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
311656    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
311657    +        S_Income  +     0.51123266106809 * S_Kidhome
311658    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
311659    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
311660    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
311661    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
311662    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
311663    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
311664    +          +     1.34095732961105 * S_NumDealsPurchases
311665    +          +     0.16605991333252 * S_NumDistPurchases
311666    +          +    -0.61746267736536 * S_NumStorePurchases
311667    +          +    -0.61812800689506 * S_NumWebPurchases
311668    +          +     1.44649145055387 * S_NumWebVisitsMonth
311669    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
311670    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
311671    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
311672    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
311673    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
311674    +        S_Income  +     0.52295323651199 * S_Kidhome
311675    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
311676    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
311677    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
311678    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
311679    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
311680    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
311681    +          +    -0.72543332317832 * S_NumDealsPurchases
311682    +          +    -0.05245472565117 * S_NumDistPurchases
311683    +          +     1.00667431585298 * S_NumStorePurchases
311684    +          +     1.02836701470962 * S_NumWebPurchases
311685    +          +    -1.25666606219201 * S_NumWebVisitsMonth
311686    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
311687    +        S_RMntFrq  +     1.50910531484632 * S_Recency
311688    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
311689    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
311690    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
311691    +        S_Income  +     0.58025720116696 * S_Kidhome
311692    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
311693    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
311694    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
311695    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
311696    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
311697    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
311698    +          +     0.12670438262487 * S_NumDealsPurchases
311699    +          +    -0.46113523834333 * S_NumDistPurchases
311700    +          +     0.07074818720567 * S_NumStorePurchases
311701    +          +    -0.05066645783537 * S_NumWebPurchases
311702    +          +    -0.65729410185804 * S_NumWebVisitsMonth
311703    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
311704    +        S_RMntFrq  +      1.4337242246086 * S_Recency
311705    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
311706    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
311707    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
311708    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
311709    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
311710    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
311711    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
311712    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
311713    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
311714    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
311715    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
311716    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
311717    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
311718    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
311719    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
311720    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
311721    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
311722    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
311723    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
311724    +          +     0.12692950862511 * Marital_StatusDivorced
311725    +          +     0.10026497666167 * Marital_StatusMarried
311726    +          +    -0.19893864592813 * Marital_StatusSingle
311727    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
311728    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
311729    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
311730    +        EducationGraduation  +     0.05580498138108 * EducationMaster
311731    +          +    -0.16785192490199 * Marital_StatusDivorced
311732    +          +     0.13153695130362 * Marital_StatusMarried
311733    +          +    -0.50411544587104 * Marital_StatusSingle
311734    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
311735    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
311736    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
311737    +        EducationGraduation  +     0.21882736952662 * EducationMaster
311738    +          +    -0.62654958087044 * Marital_StatusDivorced
311739    +          +     1.86250132393341 * Marital_StatusMarried
311740    +          +    -1.37067556451928 * Marital_StatusSingle
311741    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
311742    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
311743    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
311744    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
311745    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
311746    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
311747    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
311748    +END;
MPRINT(EM_DIAGRAM):   END;
311749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311750    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
311751    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
311752    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
311753    +END;
MPRINT(EM_DIAGRAM):   END;
311754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311755    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
311756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311757    +
311758    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
311759    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
311760    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311761    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
311762    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
311763    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311764    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
311765    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311766    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311767    +end;
MPRINT(EM_DIAGRAM):   end;
311768    +else do;
MPRINT(EM_DIAGRAM):   else do;
311769    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
311770    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
311771    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
311772    +   end;
MPRINT(EM_DIAGRAM):   end;
311773    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
311774    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
311775    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
311776    +   end;
MPRINT(EM_DIAGRAM):   end;
311777    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311778    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311779    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311780    +   end;
MPRINT(EM_DIAGRAM):   end;
311781    +end;
MPRINT(EM_DIAGRAM):   end;
311782    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311783    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
311784    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
311785    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
311786    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
311787    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
311788    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
311789    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
311790    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
311791    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
311792    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
311793    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
311794    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
311795    +END;
MPRINT(EM_DIAGRAM):   END;
311796    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311797    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
311798    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
311799    +END;
MPRINT(EM_DIAGRAM):   END;
311800    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
311801    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
311802    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
311803    +END;
MPRINT(EM_DIAGRAM):   END;
311804    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
311805    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
311806    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
311807    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
311808    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
311809    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
311810    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
311811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311812    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
311813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311814    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
311815    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
311816    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
311817    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
311818    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
311819    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
311820    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
311821    +END;
MPRINT(EM_DIAGRAM):   END;
311822    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311823    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
311824    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311825    +drop
311826    +H11
311827    +H12
311828    +H13
311829    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
311830    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
311831    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
311832    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311833    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
311834    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311835    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
311836    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
311837    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
311838    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
311839    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311840    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
311841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311842    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
311843    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
311844    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
311845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311846    +* Ensmbl28: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 2 of 5;
311847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311848    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311849    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
311850    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
311851    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
311852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311853    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311854    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311855    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311856    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311857    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311858    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311859    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311860    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311861    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311862    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311863    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311864    +LENGTH _WARN_ $4
311865    +      F_DepVar  $ 12
311866    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
311867    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311868    +
311869    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
311870    +
311871    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311872    +
311873    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
311874    +
311875    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
311876    +
311877    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311878    +
311879    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
311880    +
311881    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
311882    +
311883    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
311884    +
311885    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311886    +
311887    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
311888    +
311889    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
311890    +
311891    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
311892    +
311893    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
311894    +
311895    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
311896    +
311897    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
311898    +
311899    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
311900    +
311901    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
311902    +
311903    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
311904    +
311905    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
311906    +
311907    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
311908    +
311909    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311910    +
311911    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
311912    +
311913    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
311914    +
311915    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
311916    +
311917    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
311918    +
311919    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
311920    +
311921    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
311922    +
311923    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
311924    +
311925    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
311926    +
311927    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
311928    +
311929    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
311930    +
311931    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
311932    +
311933    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
311934    +
311935    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
311936    +
311937    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
311938    +
311939    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
311940    +
311941    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
311942    +
311943    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
311944    +
311945    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
311946    +
311947    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311948    +
311949    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311950    +
311951    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311952    +
311953    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311954    +
311955    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
311956    +
311957    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311958    +
311959    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
311960    +
311961    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311962    +
311963    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
311964    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
311965    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
311966    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
311967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311969    +end;
MPRINT(EM_DIAGRAM):   end;
311970    +else do;
MPRINT(EM_DIAGRAM):   else do;
311971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311972    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
311973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311974    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311975    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
311976    +   end;
MPRINT(EM_DIAGRAM):   end;
311977    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311978    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
311979    +   end;
MPRINT(EM_DIAGRAM):   end;
311980    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311981    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
311982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311984    +   end;
MPRINT(EM_DIAGRAM):   end;
311985    +end;
MPRINT(EM_DIAGRAM):   end;
311986    +
311987    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
311988    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
311989    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
311990    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
311991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311993    +end;
MPRINT(EM_DIAGRAM):   end;
311994    +else do;
MPRINT(EM_DIAGRAM):   else do;
311995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311996    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
311997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311998    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
311999    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
312000    +   end;
MPRINT(EM_DIAGRAM):   end;
312001    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312002    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
312003    +   end;
MPRINT(EM_DIAGRAM):   end;
312004    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312005    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
312006    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312007    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312008    +   end;
MPRINT(EM_DIAGRAM):   end;
312009    +end;
MPRINT(EM_DIAGRAM):   end;
312010    +
312011    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
312012    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
312013    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
312014    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
312015    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312016    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312017    +end;
MPRINT(EM_DIAGRAM):   end;
312018    +else do;
MPRINT(EM_DIAGRAM):   else do;
312019    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312020    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
312021    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312022    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312023    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
312024    +   end;
MPRINT(EM_DIAGRAM):   end;
312025    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312026    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
312027    +   end;
MPRINT(EM_DIAGRAM):   end;
312028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312029    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
312030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312032    +   end;
MPRINT(EM_DIAGRAM):   end;
312033    +end;
MPRINT(EM_DIAGRAM):   end;
312034    +
312035    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
312036    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
312037    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
312038    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
312039    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312041    +end;
MPRINT(EM_DIAGRAM):   end;
312042    +else do;
MPRINT(EM_DIAGRAM):   else do;
312043    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312044    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
312045    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312046    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312047    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
312048    +   end;
MPRINT(EM_DIAGRAM):   end;
312049    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312050    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
312051    +   end;
MPRINT(EM_DIAGRAM):   end;
312052    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312053    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
312054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312056    +   end;
MPRINT(EM_DIAGRAM):   end;
312057    +end;
MPRINT(EM_DIAGRAM):   end;
312058    +
312059    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
312060    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
312061    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
312062    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
312063    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312065    +end;
MPRINT(EM_DIAGRAM):   end;
312066    +else do;
MPRINT(EM_DIAGRAM):   else do;
312067    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312068    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
312069    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312070    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312071    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
312072    +   end;
MPRINT(EM_DIAGRAM):   end;
312073    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312074    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
312075    +   end;
MPRINT(EM_DIAGRAM):   end;
312076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312077    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
312078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312080    +   end;
MPRINT(EM_DIAGRAM):   end;
312081    +end;
MPRINT(EM_DIAGRAM):   end;
312082    +
312083    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
312084    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
312085    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
312086    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
312087    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312088    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312089    +end;
MPRINT(EM_DIAGRAM):   end;
312090    +else do;
MPRINT(EM_DIAGRAM):   else do;
312091    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312092    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
312093    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312094    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312095    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
312096    +   end;
MPRINT(EM_DIAGRAM):   end;
312097    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312098    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
312099    +   end;
MPRINT(EM_DIAGRAM):   end;
312100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312101    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
312102    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312103    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312104    +   end;
MPRINT(EM_DIAGRAM):   end;
312105    +end;
MPRINT(EM_DIAGRAM):   end;
312106    +
312107    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
312108    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
312109    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
312110    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
312111    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312112    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312113    +end;
MPRINT(EM_DIAGRAM):   end;
312114    +else do;
MPRINT(EM_DIAGRAM):   else do;
312115    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312116    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
312117    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312118    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
312119    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
312120    +   end;
MPRINT(EM_DIAGRAM):   end;
312121    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
312122    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
312123    +   end;
MPRINT(EM_DIAGRAM):   end;
312124    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312125    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
312126    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312127    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312128    +   end;
MPRINT(EM_DIAGRAM):   end;
312129    +end;
MPRINT(EM_DIAGRAM):   end;
312130    +
312131    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
312132    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
312133    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312134    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
312135    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
312136    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
312137    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
312138    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
312139    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
312140    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
312141    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
312142    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
312143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312145    +end;
MPRINT(EM_DIAGRAM):   end;
312146    +else do;
MPRINT(EM_DIAGRAM):   else do;
312147    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
312148    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
312149    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312150    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
312151    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
312152    +   end;
MPRINT(EM_DIAGRAM):   end;
312153    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
312154    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
312155    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
312156    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
312157    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
312158    +   end;
MPRINT(EM_DIAGRAM):   end;
312159    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
312160    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
312161    +   end;
MPRINT(EM_DIAGRAM):   end;
312162    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
312163    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
312164    +   end;
MPRINT(EM_DIAGRAM):   end;
312165    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
312166    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
312167    +   end;
MPRINT(EM_DIAGRAM):   end;
312168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312169    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
312170    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
312171    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
312172    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
312173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312175    +   end;
MPRINT(EM_DIAGRAM):   end;
312176    +end;
MPRINT(EM_DIAGRAM):   end;
312177    +
312178    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
312179    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
312180    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
312181    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312182    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
312183    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
312184    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
312185    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
312186    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
312187    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312188    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312189    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312190    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312193    +end;
MPRINT(EM_DIAGRAM):   end;
312194    +else do;
MPRINT(EM_DIAGRAM):   else do;
312195    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
312196    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
312197    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312198    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
312199    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
312200    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
312201    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
312202    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
312203    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312204    +         end;
MPRINT(EM_DIAGRAM):   end;
312205    +         else do;
MPRINT(EM_DIAGRAM):   else do;
312206    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
312207    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
312208    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312209    +            end;
MPRINT(EM_DIAGRAM):   end;
312210    +         end;
MPRINT(EM_DIAGRAM):   end;
312211    +      end;
MPRINT(EM_DIAGRAM):   end;
312212    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312213    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
312214    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
312215    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312216    +         end;
MPRINT(EM_DIAGRAM):   end;
312217    +      end;
MPRINT(EM_DIAGRAM):   end;
312218    +   end;
MPRINT(EM_DIAGRAM):   end;
312219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312220    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
312221    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
312222    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312223    +      end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
312224    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312225    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
312226    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
312227    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
312228    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
312229    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
312230    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312231    +         end;
MPRINT(EM_DIAGRAM):   end;
312232    +      end;
MPRINT(EM_DIAGRAM):   end;
312233    +   end;
MPRINT(EM_DIAGRAM):   end;
312234    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
312235    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312236    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312237    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312238    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312241    +   end;
MPRINT(EM_DIAGRAM):   end;
312242    +end;
MPRINT(EM_DIAGRAM):   end;
312243    +
312244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312245    +*** Checking missing input Interval
312246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
312247    +
312248    +IF NMISS(
312249    +   AcceptedCmpTotal ,
312250    +   Age ,
312251    +   Frq ,
312252    +   Income ,
312253    +   Kidhome ,
312254    +   Mnt ,
312255    +   MntFishProducts ,
312256    +   MntFruits ,
312257    +   MntGoldProds ,
312258    +   MntMeatProducts ,
312259    +   MntSweetProducts ,
312260    +   MntWines ,
312261    +   MonthsAsCustomer ,
312262    +   NumCatalogPurchases ,
312263    +   NumDealsPurchases ,
312264    +   NumDistPurchases ,
312265    +   NumStorePurchases ,
312266    +   NumWebPurchases ,
312267    +   NumWebVisitsMonth ,
312268    +   RFMstat ,
312269    +   RMntFrq ,
312270    +   Recency ,
312271    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
312272    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
312273    +
312274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312275    +END;
MPRINT(EM_DIAGRAM):   END;
312276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312277    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
312278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312279    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312280    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312281    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
312282    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
312283    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312284    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
312285    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
312286    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312287    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
312288    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
312289    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
312290    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
312291    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
312292    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312293    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
312294    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
312295    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
312296    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
312297    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
312298    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
312299    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
312300    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
312301    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312302    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
312303    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
312304    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
312305    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
312306    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
312307    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
312308    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
312309    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312310    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
312311    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
312312    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
312313    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312314    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
312315    +END;
MPRINT(EM_DIAGRAM):   END;
312316    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312317    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
312318    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312319    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
312320    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
312321    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
312322    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
312323    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312324    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
312325    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
312326    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
312327    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
312328    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
312329    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312330    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
312331    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
312332    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
312333    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
312334    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
312335    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
312336    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
312337    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
312338    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
312339    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
312340    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312341    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
312342    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
312343    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
312344    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
312345    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
312346    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
312347    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
312348    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
312349    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
312350    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
312351    +   ELSE S_NumCatalogPurchases
312352    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
312353    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
312354    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
312355    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312356    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
312357    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
312358    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
312359    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
312360    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
312361    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
312362    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
312363    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
312364    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
312365    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
312366    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
312367    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312368    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
312369    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
312370    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
312371    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
312372    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
312373    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
312374    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312375    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
312376    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
312377    +END;
MPRINT(EM_DIAGRAM):   END;
312378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312379    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
312380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312382    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
312383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312385    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
312386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312387    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312388    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
312389    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
312390    +        S_Income  +    -1.07615700855274 * S_Kidhome
312391    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
312392    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
312393    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
312394    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
312395    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
312396    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
312397    +          +      0.3429043319369 * S_NumDealsPurchases
312398    +          +     0.71313309767469 * S_NumDistPurchases
312399    +          +     0.06017757740083 * S_NumStorePurchases
312400    +          +    -0.19817724925068 * S_NumWebPurchases
312401    +          +     1.34164122205952 * S_NumWebVisitsMonth
312402    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
312403    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
312404    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
312405    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
312406    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
312407    +        S_Income  +     -0.0027232441092 * S_Kidhome
312408    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
312409    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
312410    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
312411    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
312412    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
312413    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
312414    +          +      0.4576973746858 * S_NumDealsPurchases
312415    +          +     0.15590877272659 * S_NumDistPurchases
312416    +          +    -0.33414539713736 * S_NumStorePurchases
312417    +          +    -0.39370244666257 * S_NumWebPurchases
312418    +          +     0.52596714886704 * S_NumWebVisitsMonth
312419    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
312420    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
312421    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
312422    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
312423    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
312424    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
312425    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
312426    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
312427    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
312428    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
312429    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
312430    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
312431    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
312432    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
312433    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
312434    +        EducationGraduation  +      -0.333138438339 * EducationMaster
312435    +          +      0.4663802937397 * Marital_StatusDivorced
312436    +          +    -1.27401898796099 * Marital_StatusMarried
312437    +          +      1.3125969368079 * Marital_StatusSingle
312438    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
312439    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
312440    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
312441    +        EducationGraduation  +     0.00771527138053 * EducationMaster
312442    +          +     0.07419179522004 * Marital_StatusDivorced
312443    +          +     0.00234615813337 * Marital_StatusMarried
312444    +          +    -0.00725460458412 * Marital_StatusSingle
312445    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
312446    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
312447    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
312448    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
312449    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
312450    +END;
MPRINT(EM_DIAGRAM):   END;
312451    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312452    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
312453    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
312454    +END;
MPRINT(EM_DIAGRAM):   END;
312455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312456    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
312457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312458    +
312459    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
312460    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
312461    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312462    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
312463    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
312464    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312465    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
312466    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312467    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312468    +end;
MPRINT(EM_DIAGRAM):   end;
312469    +else do;
MPRINT(EM_DIAGRAM):   else do;
312470    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
312471    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
312472    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
312473    +   end;
MPRINT(EM_DIAGRAM):   end;
312474    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
312475    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
312476    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
312477    +   end;
MPRINT(EM_DIAGRAM):   end;
312478    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312479    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312480    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312481    +   end;
MPRINT(EM_DIAGRAM):   end;
312482    +end;
MPRINT(EM_DIAGRAM):   end;
312483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312484    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
312485    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
312486    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
312487    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
312488    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312489    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
312490    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
312491    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
312492    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
312493    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
312494    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
312495    +END;
MPRINT(EM_DIAGRAM):   END;
312496    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312497    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
312498    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
312499    +END;
MPRINT(EM_DIAGRAM):   END;
312500    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
312501    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
312502    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
312503    +END;
MPRINT(EM_DIAGRAM):   END;
312504    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
312505    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
312506    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
312507    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
312508    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
312509    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
312510    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
312511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312512    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
312513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312514    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
312515    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
312516    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
312517    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
312518    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
312519    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
312520    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
312521    +END;
MPRINT(EM_DIAGRAM):   END;
312522    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312523    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
312524    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312525    +drop
312526    +H11
312527    +H12
312528    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
312529    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
312530    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
312531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312532    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
312533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312534    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
312535    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
312536    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
312537    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
312538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312539    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
312540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312541    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
312542    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
312543    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
312544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312545    +* Ensmbl28: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 3 of 5;
312546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312548    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
312549    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
312550    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
312551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312552    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312553    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
312554    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312555    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
312556    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
312557    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
312558    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
312559    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
312560    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
312561    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
312562    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
312563    +LENGTH _WARN_ $4
312564    +      F_DepVar  $ 12
312565    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
312566    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
312567    +
312568    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
312569    +
312570    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
312571    +
312572    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
312573    +
312574    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
312575    +
312576    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
312577    +
312578    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
312579    +
312580    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
312581    +
312582    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
312583    +
312584    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
312585    +
312586    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
312587    +
312588    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
312589    +
312590    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
312591    +
312592    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
312593    +
312594    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
312595    +
312596    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
312597    +
312598    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
312599    +
312600    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
312601    +
312602    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
312603    +
312604    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
312605    +
312606    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
312607    +
312608    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
312609    +
312610    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
312611    +
312612    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
312613    +
312614    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
312615    +
312616    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
312617    +
312618    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
312619    +
312620    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
312621    +
312622    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
312623    +
312624    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
312625    +
312626    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
312627    +
312628    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
312629    +
312630    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
312631    +
312632    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
312633    +
312634    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
312635    +
312636    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
312637    +
312638    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
312639    +
312640    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
312641    +
312642    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
312643    +
312644    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
312645    +
312646    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
312647    +
312648    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
312649    +
312650    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
312651    +
312652    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
312653    +
312654    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
312655    +
312656    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312657    +
312658    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
312659    +
312660    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
312661    +
312662    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
312663    +
312664    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
312665    +
312666    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
312667    +
312668    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
312669    +
312670    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
312671    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
312672    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
312673    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
312674    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312676    +end;
MPRINT(EM_DIAGRAM):   end;
312677    +else do;
MPRINT(EM_DIAGRAM):   else do;
312678    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312679    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
312680    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312681    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312682    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
312683    +   end;
MPRINT(EM_DIAGRAM):   end;
312684    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312685    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
312686    +   end;
MPRINT(EM_DIAGRAM):   end;
312687    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312688    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
312689    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312690    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312691    +   end;
MPRINT(EM_DIAGRAM):   end;
312692    +end;
MPRINT(EM_DIAGRAM):   end;
312693    +
312694    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
312695    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
312696    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
312697    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
312698    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312700    +end;
MPRINT(EM_DIAGRAM):   end;
312701    +else do;
MPRINT(EM_DIAGRAM):   else do;
312702    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312703    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
312704    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312705    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312706    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
312707    +   end;
MPRINT(EM_DIAGRAM):   end;
312708    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312709    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
312710    +   end;
MPRINT(EM_DIAGRAM):   end;
312711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312712    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
312713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312715    +   end;
MPRINT(EM_DIAGRAM):   end;
312716    +end;
MPRINT(EM_DIAGRAM):   end;
312717    +
312718    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
312719    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
312720    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
312721    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
312722    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312723    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312724    +end;
MPRINT(EM_DIAGRAM):   end;
312725    +else do;
MPRINT(EM_DIAGRAM):   else do;
312726    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312727    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
312728    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312729    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312730    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
312731    +   end;
MPRINT(EM_DIAGRAM):   end;
312732    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312733    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
312734    +   end;
MPRINT(EM_DIAGRAM):   end;
312735    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312736    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
312737    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312738    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312739    +   end;
MPRINT(EM_DIAGRAM):   end;
312740    +end;
MPRINT(EM_DIAGRAM):   end;
312741    +
312742    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
312743    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
312744    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
312745    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
312746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312748    +end;
MPRINT(EM_DIAGRAM):   end;
312749    +else do;
MPRINT(EM_DIAGRAM):   else do;
312750    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312751    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
312752    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312753    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312754    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
312755    +   end;
MPRINT(EM_DIAGRAM):   end;
312756    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312757    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
312758    +   end;
MPRINT(EM_DIAGRAM):   end;
312759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312760    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
312761    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312762    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312763    +   end;
MPRINT(EM_DIAGRAM):   end;
312764    +end;
MPRINT(EM_DIAGRAM):   end;
312765    +
312766    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
312767    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
312768    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
312769    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
312770    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312771    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312772    +end;
MPRINT(EM_DIAGRAM):   end;
312773    +else do;
MPRINT(EM_DIAGRAM):   else do;
312774    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312775    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
312776    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312777    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312778    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
312779    +   end;
MPRINT(EM_DIAGRAM):   end;
312780    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312781    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
312782    +   end;
MPRINT(EM_DIAGRAM):   end;
312783    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312784    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
312785    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312786    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312787    +   end;
MPRINT(EM_DIAGRAM):   end;
312788    +end;
MPRINT(EM_DIAGRAM):   end;
312789    +
312790    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
312791    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
312792    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
312793    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
312794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312796    +end;
MPRINT(EM_DIAGRAM):   end;
312797    +else do;
MPRINT(EM_DIAGRAM):   else do;
312798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312799    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
312800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312801    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
312802    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
312803    +   end;
MPRINT(EM_DIAGRAM):   end;
312804    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
312805    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
312806    +   end;
MPRINT(EM_DIAGRAM):   end;
312807    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312808    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
312809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312811    +   end;
MPRINT(EM_DIAGRAM):   end;
312812    +end;
MPRINT(EM_DIAGRAM):   end;
312813    +
312814    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
312815    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
312816    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
312817    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
312818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312820    +end;
MPRINT(EM_DIAGRAM):   end;
312821    +else do;
MPRINT(EM_DIAGRAM):   else do;
312822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
312823    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
312824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312825    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
312826    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
312827    +   end;
MPRINT(EM_DIAGRAM):   end;
312828    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
312829    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
312830    +   end;
MPRINT(EM_DIAGRAM):   end;
312831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312832    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
312833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312835    +   end;
MPRINT(EM_DIAGRAM):   end;
312836    +end;
MPRINT(EM_DIAGRAM):   end;
312837    +
312838    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
312839    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
312840    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312841    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
312842    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
312843    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
312844    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
312845    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
312846    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
312847    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
312848    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
312849    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
312850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312852    +end;
MPRINT(EM_DIAGRAM):   end;
312853    +else do;
MPRINT(EM_DIAGRAM):   else do;
312854    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
312855    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
312856    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312857    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
312858    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
312859    +   end;
MPRINT(EM_DIAGRAM):   end;
312860    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
312861    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
312862    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
312863    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
312864    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
312865    +   end;
MPRINT(EM_DIAGRAM):   end;
312866    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
312867    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
312868    +   end;
MPRINT(EM_DIAGRAM):   end;
312869    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
312870    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
312871    +   end;
MPRINT(EM_DIAGRAM):   end;
312872    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
312873    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
312874    +   end;
MPRINT(EM_DIAGRAM):   end;
312875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312876    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
312877    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
312878    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
312879    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
312880    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312881    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312882    +   end;
MPRINT(EM_DIAGRAM):   end;
312883    +end;
MPRINT(EM_DIAGRAM):   end;
312884    +
312885    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
312886    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
312887    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
312888    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312889    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
312890    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
312891    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
312892    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
312893    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
312894    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312895    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312896    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312897    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312900    +end;
MPRINT(EM_DIAGRAM):   end;
312901    +else do;
MPRINT(EM_DIAGRAM):   else do;
312902    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
312903    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
312904    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312905    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
312906    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
312907    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
312908    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
312909    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
312910    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312911    +         end;
MPRINT(EM_DIAGRAM):   end;
312912    +         else do;
MPRINT(EM_DIAGRAM):   else do;
312913    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
312914    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
312915    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312916    +            end;
MPRINT(EM_DIAGRAM):   end;
312917    +         end;
MPRINT(EM_DIAGRAM):   end;
312918    +      end;
MPRINT(EM_DIAGRAM):   end;
312919    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312920    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
312921    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
312922    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312923    +         end;
MPRINT(EM_DIAGRAM):   end;
312924    +      end;
MPRINT(EM_DIAGRAM):   end;
312925    +   end;
MPRINT(EM_DIAGRAM):   end;
312926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312927    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
312928    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
312929    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312930    +      end;
MPRINT(EM_DIAGRAM):   end;
312931    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312932    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
312933    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
312934    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
312935    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
312936    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
312937    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312938    +         end;
MPRINT(EM_DIAGRAM):   end;
312939    +      end;
MPRINT(EM_DIAGRAM):   end;
312940    +   end;
MPRINT(EM_DIAGRAM):   end;
312941    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
312942    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312943    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312944    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312945    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312946    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312947    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312948    +   end;
MPRINT(EM_DIAGRAM):   end;
312949    +end;
MPRINT(EM_DIAGRAM):   end;
312950    +
312951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312952    +*** Checking missing input Interval
312953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
312954    +
312955    +IF NMISS(
312956    +   AcceptedCmpTotal ,
312957    +   Age ,
312958    +   Frq ,
312959    +   Income ,
312960    +   Kidhome ,
312961    +   Mnt ,
312962    +   MntFishProducts ,
312963    +   MntFruits ,
312964    +   MntGoldProds ,
312965    +   MntMeatProducts ,
312966    +   MntSweetProducts ,
312967    +   MntWines ,
312968    +   MonthsAsCustomer ,
312969    +   NumCatalogPurchases ,
312970    +   NumDealsPurchases ,
312971    +   NumDistPurchases ,
312972    +   NumStorePurchases ,
312973    +   NumWebPurchases ,
312974    +   NumWebVisitsMonth ,
312975    +   RFMstat ,
312976    +   RMntFrq ,
312977    +   Recency ,
312978    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
312979    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
312980    +
312981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312982    +END;
MPRINT(EM_DIAGRAM):   END;
312983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312984    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
312985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312986    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312987    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312988    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
312989    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
312990    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312991    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
312992    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
312993    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312994    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
312995    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
312996    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
312997    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
312998    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
312999    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313000    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313001    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
313002    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
313003    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313004    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
313005    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
313006    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
313007    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
313008    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313009    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
313010    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313011    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313012    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
313013    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
313014    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
313015    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
313016    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313017    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
313018    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313019    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313020    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313021    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
313022    +END;
MPRINT(EM_DIAGRAM):   END;
313023    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313024    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
313025    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313026    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
313027    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
313028    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
313029    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
313030    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313031    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
313032    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
313033    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
313034    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
313035    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
313036    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313037    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
313038    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
313039    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
313040    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
313041    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
313042    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
313043    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
313044    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
313045    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
313046    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
313047    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313048    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313049    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
313050    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
313051    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
313052    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
313053    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313054    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
313055    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
313056    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
313057    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
313058    +   ELSE S_NumCatalogPurchases
313059    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
313060    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
313061    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
313062    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313063    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
313064    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
313065    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313066    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313067    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
313068    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
313069    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
313070    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
313071    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
313072    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
313073    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
313074    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313075    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
313076    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
313077    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313078    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
313079    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313080    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
313081    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313082    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
313083    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
313084    +END;
MPRINT(EM_DIAGRAM):   END;
313085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313086    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
313087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313089    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
313090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313092    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
313093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313095    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
313096    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
313097    +        S_Income  +    -0.14142658616971 * S_Kidhome
313098    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
313099    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
313100    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
313101    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
313102    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
313103    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
313104    +          +     0.96837841774168 * S_NumDealsPurchases
313105    +          +      0.2846105381881 * S_NumDistPurchases
313106    +          +    -0.69514041792943 * S_NumStorePurchases
313107    +          +    -0.96425407351749 * S_NumWebPurchases
313108    +          +     0.79545449599683 * S_NumWebVisitsMonth
313109    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
313110    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
313111    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
313112    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
313113    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
313114    +        S_Income  +    -0.55432195959203 * S_Kidhome
313115    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
313116    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
313117    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
313118    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
313119    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
313120    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
313121    +          +      0.2190184330724 * S_NumDealsPurchases
313122    +          +    -0.01682909442896 * S_NumDistPurchases
313123    +          +    -0.70244951048552 * S_NumStorePurchases
313124    +          +     -0.3057457659316 * S_NumWebPurchases
313125    +          +     0.95928538762715 * S_NumWebVisitsMonth
313126    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
313127    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
313128    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
313129    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
313130    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
313131    +        S_Income  +    -0.06354861159882 * S_Kidhome
313132    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
313133    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
313134    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
313135    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
313136    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
313137    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
313138    +          +    -0.21394230159696 * S_NumDealsPurchases
313139    +          +    -0.23833771124663 * S_NumDistPurchases
313140    +          +     0.45832031017813 * S_NumStorePurchases
313141    +          +    -0.30226952040179 * S_NumWebPurchases
313142    +          +    -0.29796387184481 * S_NumWebVisitsMonth
313143    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
313144    +        S_RMntFrq  +     0.87067423045258 * S_Recency
313145    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
313146    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
313147    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
313148    +        S_Income  +    -0.04839586846715 * S_Kidhome
313149    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
313150    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
313151    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
313152    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
313153    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
313154    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
313155    +          +    -0.43749647771198 * S_NumDealsPurchases
313156    +          +     0.21263473847472 * S_NumDistPurchases
313157    +          +     0.26102168039141 * S_NumStorePurchases
313158    +          +     0.54921725943657 * S_NumWebPurchases
313159    +          +    -0.75685843498122 * S_NumWebVisitsMonth
313160    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
313161    +        S_RMntFrq  +     0.80536256822347 * S_Recency
313162    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
313163    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
313164    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
313165    +        S_Income  +     0.71499527198653 * S_Kidhome
313166    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
313167    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
313168    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
313169    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
313170    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
313171    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
313172    +          +     0.09436067776126 * S_NumDealsPurchases
313173    +          +    -0.02824201859641 * S_NumDistPurchases
313174    +          +    -0.06770433780564 * S_NumStorePurchases
313175    +          +    -0.07177620319715 * S_NumWebPurchases
313176    +          +    -0.75589979685266 * S_NumWebVisitsMonth
313177    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
313178    +        S_RMntFrq  +     0.94408788011429 * S_Recency
313179    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
313180    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
313181    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
313182    +        S_Income  +    -0.63474522042341 * S_Kidhome
313183    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
313184    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
313185    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
313186    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
313187    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
313188    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
313189    +          +    -0.51154511343396 * S_NumDealsPurchases
313190    +          +    -0.52422915823572 * S_NumDistPurchases
313191    +          +     0.30305498422357 * S_NumStorePurchases
313192    +          +     0.12197321559338 * S_NumWebPurchases
313193    +          +    -0.10520335422769 * S_NumWebVisitsMonth
313194    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
313195    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
313196    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
313197    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
313198    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
313199    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
313200    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
313201    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
313202    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
313203    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
313204    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
313205    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
313206    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
313207    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
313208    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
313209    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
313210    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
313211    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
313212    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
313213    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
313214    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
313215    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
313216    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
313217    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
313218    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
313219    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
313220    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
313221    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
313222    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
313223    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
313224    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
313225    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
313226    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
313227    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
313228    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
313229    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
313230    +          +     0.10234616400375 * Marital_StatusDivorced
313231    +          +     0.27961650739075 * Marital_StatusMarried
313232    +          +    -0.40239488723767 * Marital_StatusSingle
313233    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
313234    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
313235    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
313236    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
313237    +          +     0.46385792428023 * Marital_StatusDivorced
313238    +          +    -0.62344590646391 * Marital_StatusMarried
313239    +          +     0.61767209252062 * Marital_StatusSingle
313240    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
313241    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
313242    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
313243    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
313244    +          +    -0.07839612590836 * Marital_StatusDivorced
313245    +          +     0.35316864062221 * Marital_StatusMarried
313246    +          +    -0.10730136429834 * Marital_StatusSingle
313247    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
313248    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
313249    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
313250    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
313251    +          +    -0.09942175269886 * Marital_StatusDivorced
313252    +          +     0.24385460865335 * Marital_StatusMarried
313253    +          +    -0.33658955096296 * Marital_StatusSingle
313254    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
313255    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
313256    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
313257    +        EducationGraduation  +     0.37352174719748 * EducationMaster
313258    +          +    -0.08047852561096 * Marital_StatusDivorced
313259    +          +     1.16485862694561 * Marital_StatusMarried
313260    +          +    -0.94140251178566 * Marital_StatusSingle
313261    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
313262    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
313263    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
313264    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
313265    +          +    -0.16621963893391 * Marital_StatusDivorced
313266    +          +    -0.44542186297324 * Marital_StatusMarried
313267    +          +     0.42176133228308 * Marital_StatusSingle
313268    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
313269    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
313270    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
313271    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
313272    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
313273    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
313274    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
313275    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
313276    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
313277    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
313278    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
313279    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
313280    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
313281    +END;
MPRINT(EM_DIAGRAM):   END;
313282    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313283    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
313284    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
313285    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
313286    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
313287    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
313288    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
313289    +END;
MPRINT(EM_DIAGRAM):   END;
313290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313291    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
313292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313293    +
313294    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
313295    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
313296    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
313297    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
313298    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
313299    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313300    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
313301    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
313302    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
313303    +end;
MPRINT(EM_DIAGRAM):   end;
313304    +else do;
MPRINT(EM_DIAGRAM):   else do;
313305    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
313306    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
313307    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
313308    +   end;
MPRINT(EM_DIAGRAM):   end;
313309    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
313310    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
313311    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
313312    +   end;
MPRINT(EM_DIAGRAM):   end;
313313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313314    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
313315    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
313316    +   end;
MPRINT(EM_DIAGRAM):   end;
313317    +end;
MPRINT(EM_DIAGRAM):   end;
313318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313319    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
313320    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
313321    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
313322    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
313323    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
313324    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
313325    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313326    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
313327    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
313328    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
313329    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
313330    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
313331    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
313332    +END;
MPRINT(EM_DIAGRAM):   END;
313333    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313334    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
313335    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
313336    +END;
MPRINT(EM_DIAGRAM):   END;
313337    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
313338    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
313339    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
313340    +END;
MPRINT(EM_DIAGRAM):   END;
313341    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
313342    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
313343    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
313344    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
313345    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
313346    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
313347    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
313348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313349    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
313350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313351    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
313352    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
313353    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
313354    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
313355    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
313356    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
313357    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
313358    +END;
MPRINT(EM_DIAGRAM):   END;
313359    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313360    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
313361    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313362    +drop
313363    +H11
313364    +H12
313365    +H13
313366    +H14
313367    +H15
313368    +H16
313369    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
313370    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
313371    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
313372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313373    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
313374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313375    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
313376    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
313377    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
313378    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
313379    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313380    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
313381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313382    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
313383    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
313384    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
313385    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313386    +* Ensmbl28: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 4 of 5;
313387    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313388    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313389    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
313390    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
313391    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
313392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313393    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313394    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
313395    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313396    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
313397    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
313398    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
313399    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
313400    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
313401    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
313402    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
313403    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
313404    +LENGTH _WARN_ $4
313405    +      F_DepVar  $ 12
313406    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
313407    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
313408    +
313409    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
313410    +
313411    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
313412    +
313413    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
313414    +
313415    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
313416    +
313417    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
313418    +
313419    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
313420    +
313421    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
313422    +
313423    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
313424    +
313425    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
313426    +
313427    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
313428    +
313429    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
313430    +
313431    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
313432    +
313433    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
313434    +
313435    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
313436    +
313437    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
313438    +
313439    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
313440    +
313441    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
313442    +
313443    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
313444    +
313445    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
313446    +
313447    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
313448    +
313449    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
313450    +
313451    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
313452    +
313453    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
313454    +
313455    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
313456    +
313457    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
313458    +
313459    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
313460    +
313461    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
313462    +
313463    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
313464    +
313465    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
313466    +
313467    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
313468    +
313469    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
313470    +
313471    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
313472    +
313473    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
313474    +
313475    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
313476    +
313477    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
313478    +
313479    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
313480    +
313481    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
313482    +
313483    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
313484    +
313485    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
313486    +
313487    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
313488    +
313489    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
313490    +
313491    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
313492    +
313493    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
313494    +
313495    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
313496    +
313497    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
313498    +
313499    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
313500    +
313501    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
313502    +
313503    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
313504    +
313505    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
313506    +
313507    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
313508    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
313509    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
313510    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
313511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313513    +end;
MPRINT(EM_DIAGRAM):   end;
313514    +else do;
MPRINT(EM_DIAGRAM):   else do;
313515    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313516    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
313517    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313518    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313519    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
313520    +   end;
MPRINT(EM_DIAGRAM):   end;
313521    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313522    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
313523    +   end;
MPRINT(EM_DIAGRAM):   end;
313524    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313525    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
313526    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313527    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313528    +   end;
MPRINT(EM_DIAGRAM):   end;
313529    +end;
MPRINT(EM_DIAGRAM):   end;
313530    +
313531    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
313532    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
313533    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
313534    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
313535    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313536    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313537    +end;
MPRINT(EM_DIAGRAM):   end;
313538    +else do;
MPRINT(EM_DIAGRAM):   else do;
313539    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313540    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
313541    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313542    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313543    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
313544    +   end;
MPRINT(EM_DIAGRAM):   end;
313545    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313546    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
313547    +   end;
MPRINT(EM_DIAGRAM):   end;
313548    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313549    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
313550    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313551    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313552    +   end;
MPRINT(EM_DIAGRAM):   end;
313553    +end;
MPRINT(EM_DIAGRAM):   end;
313554    +
313555    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
313556    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
313557    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
313558    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
313559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313561    +end;
MPRINT(EM_DIAGRAM):   end;
313562    +else do;
MPRINT(EM_DIAGRAM):   else do;
313563    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313564    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
313565    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313566    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313567    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
313568    +   end;
MPRINT(EM_DIAGRAM):   end;
313569    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313570    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
313571    +   end;
MPRINT(EM_DIAGRAM):   end;
313572    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313573    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
313574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313576    +   end;
MPRINT(EM_DIAGRAM):   end;
313577    +end;
MPRINT(EM_DIAGRAM):   end;
313578    +
313579    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
313580    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
313581    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
313582    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
313583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313585    +end;
MPRINT(EM_DIAGRAM):   end;
313586    +else do;
MPRINT(EM_DIAGRAM):   else do;
313587    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313588    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
313589    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313590    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313591    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
313592    +   end;
MPRINT(EM_DIAGRAM):   end;
313593    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313594    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
313595    +   end;
MPRINT(EM_DIAGRAM):   end;
313596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313597    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
313598    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313599    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313600    +   end;
MPRINT(EM_DIAGRAM):   end;
313601    +end;
MPRINT(EM_DIAGRAM):   end;
313602    +
313603    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
313604    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
313605    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
313606    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
313607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313609    +end;
MPRINT(EM_DIAGRAM):   end;
313610    +else do;
MPRINT(EM_DIAGRAM):   else do;
313611    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313612    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
313613    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313614    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313615    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
313616    +   end;
MPRINT(EM_DIAGRAM):   end;
313617    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313618    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
313619    +   end;
MPRINT(EM_DIAGRAM):   end;
313620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313621    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
313622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313624    +   end;
MPRINT(EM_DIAGRAM):   end;
313625    +end;
MPRINT(EM_DIAGRAM):   end;
313626    +
313627    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
313628    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
313629    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
313630    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
313631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313633    +end;
MPRINT(EM_DIAGRAM):   end;
313634    +else do;
MPRINT(EM_DIAGRAM):   else do;
313635    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313636    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
313637    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313638    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
313639    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
313640    +   end;
MPRINT(EM_DIAGRAM):   end;
313641    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313642    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
313643    +   end;
MPRINT(EM_DIAGRAM):   end;
313644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313645    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
313646    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313647    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313648    +   end;
MPRINT(EM_DIAGRAM):   end;
313649    +end;
MPRINT(EM_DIAGRAM):   end;
313650    +
313651    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
313652    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
313653    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
313654    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
313655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313657    +end;
MPRINT(EM_DIAGRAM):   end;
313658    +else do;
MPRINT(EM_DIAGRAM):   else do;
313659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313660    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
313661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313662    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
313663    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
313664    +   end;
MPRINT(EM_DIAGRAM):   end;
313665    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
313666    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
313667    +   end;
MPRINT(EM_DIAGRAM):   end;
313668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313669    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
313670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313672    +   end;
MPRINT(EM_DIAGRAM):   end;
313673    +end;
MPRINT(EM_DIAGRAM):   end;
313674    +
313675    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
313676    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
313677    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
313678    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
313679    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
313680    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
313681    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
313682    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
313683    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
313684    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
313685    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
313686    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
313687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313689    +end;
MPRINT(EM_DIAGRAM):   end;
313690    +else do;
MPRINT(EM_DIAGRAM):   else do;
313691    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
313692    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
313693    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313694    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
313695    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
313696    +   end;
MPRINT(EM_DIAGRAM):   end;
313697    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
313698    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
313699    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
313700    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
313701    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
313702    +   end;
MPRINT(EM_DIAGRAM):   end;
313703    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
313704    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
313705    +   end;
MPRINT(EM_DIAGRAM):   end;
313706    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
313707    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
313708    +   end;
MPRINT(EM_DIAGRAM):   end;
313709    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
313710    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
313711    +   end;
MPRINT(EM_DIAGRAM):   end;
313712    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313713    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
313714    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
313715    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
313716    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
313717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313719    +   end;
MPRINT(EM_DIAGRAM):   end;
313720    +end;
MPRINT(EM_DIAGRAM):   end;
313721    +
313722    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
313723    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
313724    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
313725    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
313726    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
313727    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
313728    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
313729    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
313730    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
313731    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
313732    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
313733    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
313734    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
313735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313737    +end;
MPRINT(EM_DIAGRAM):   end;
313738    +else do;
MPRINT(EM_DIAGRAM):   else do;
313739    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
313740    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
313741    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313742    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
313743    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
313744    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
313745    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
313746    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
313747    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313748    +         end;
MPRINT(EM_DIAGRAM):   end;
313749    +         else do;
MPRINT(EM_DIAGRAM):   else do;
313750    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
313751    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
313752    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313753    +            end;
MPRINT(EM_DIAGRAM):   end;
313754    +         end;
MPRINT(EM_DIAGRAM):   end;
313755    +      end;
MPRINT(EM_DIAGRAM):   end;
313756    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313757    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
313758    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
313759    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313760    +         end;
MPRINT(EM_DIAGRAM):   end;
313761    +      end;
MPRINT(EM_DIAGRAM):   end;
313762    +   end;
MPRINT(EM_DIAGRAM):   end;
313763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313764    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
313765    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
313766    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313767    +      end;
MPRINT(EM_DIAGRAM):   end;
313768    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313769    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
313770    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
313771    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
313772    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
313773    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
313774    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313775    +         end;
MPRINT(EM_DIAGRAM):   end;
313776    +      end;
MPRINT(EM_DIAGRAM):   end;
313777    +   end;
MPRINT(EM_DIAGRAM):   end;
313778    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
313779    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
313780    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
313781    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
313782    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
313783    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313784    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313785    +   end;
MPRINT(EM_DIAGRAM):   end;
313786    +end;
MPRINT(EM_DIAGRAM):   end;
313787    +
313788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313789    +*** Checking missing input Interval
313790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
313791    +
313792    +IF NMISS(
313793    +   AcceptedCmpTotal ,
313794    +   Age ,
313795    +   Frq ,
313796    +   Income ,
313797    +   Kidhome ,
313798    +   Mnt ,
313799    +   MntFishProducts ,
313800    +   MntFruits ,
313801    +   MntGoldProds ,
313802    +   MntMeatProducts ,
313803    +   MntSweetProducts ,
313804    +   MntWines ,
313805    +   MonthsAsCustomer ,
313806    +   NumCatalogPurchases ,
313807    +   NumDealsPurchases ,
313808    +   NumDistPurchases ,
313809    +   NumStorePurchases ,
313810    +   NumWebPurchases ,
313811    +   NumWebVisitsMonth ,
313812    +   RFMstat ,
313813    +   RMntFrq ,
313814    +   Recency ,
313815    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
313816    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
313817    +
313818    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313819    +END;
MPRINT(EM_DIAGRAM):   END;
313820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313821    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
313822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313823    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313824    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313825    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
313826    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
313827    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313828    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
313829    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
313830    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313831    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
313832    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
313833    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
313834    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
313835    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
313836    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313837    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313838    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
313839    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
313840    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313841    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
313842    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
313843    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
313844    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
313845    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313846    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
313847    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313848    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313849    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
313850    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
313851    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
313852    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
313853    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313854    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
313855    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313856    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313857    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313858    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
313859    +END;
MPRINT(EM_DIAGRAM):   END;
313860    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313861    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
313862    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313863    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
313864    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
313865    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
313866    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
313867    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313868    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
313869    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
313870    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
313871    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
313872    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
313873    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313874    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
313875    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
313876    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
313877    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
313878    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
313879    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
313880    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
313881    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
313882    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
313883    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
313884    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313885    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313886    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
313887    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
313888    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
313889    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
313890    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313891    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
313892    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
313893    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
313894    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
313895    +   ELSE S_NumCatalogPurchases
313896    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
313897    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
313898    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
313899    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313900    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
313901    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
313902    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313903    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313904    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
313905    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
313906    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
313907    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
313908    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
313909    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
313910    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
313911    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313912    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
313913    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
313914    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313915    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
313916    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313917    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
313918    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313919    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
313920    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
313921    +END;
MPRINT(EM_DIAGRAM):   END;
313922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313923    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
313924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313926    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
313927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313929    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
313930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313931    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313932    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
313933    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
313934    +        S_Income  +    -0.27053363011695 * S_Kidhome
313935    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
313936    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
313937    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
313938    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
313939    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
313940    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
313941    +          +    -1.35624485206227 * S_NumDealsPurchases
313942    +          +    -0.54646115734684 * S_NumDistPurchases
313943    +          +     1.29794225108321 * S_NumStorePurchases
313944    +          +      1.8453064081809 * S_NumWebPurchases
313945    +          +    -0.92747144824026 * S_NumWebVisitsMonth
313946    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
313947    +        S_RMntFrq  +     0.73207333681971 * S_Recency
313948    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
313949    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
313950    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
313951    +        S_Income  +    -0.79821220724157 * S_Kidhome
313952    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
313953    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
313954    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
313955    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
313956    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
313957    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
313958    +          +     0.72513216556859 * S_NumDealsPurchases
313959    +          +    -0.15566774650584 * S_NumDistPurchases
313960    +          +     -0.8847675798982 * S_NumStorePurchases
313961    +          +    -0.79405200318252 * S_NumWebPurchases
313962    +          +     1.74003779802254 * S_NumWebVisitsMonth
313963    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
313964    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
313965    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
313966    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
313967    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
313968    +        S_Income  +    -0.58596240450544 * S_Kidhome
313969    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
313970    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
313971    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
313972    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
313973    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
313974    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
313975    +          +     0.17466385502192 * S_NumDealsPurchases
313976    +          +    -0.06219545947203 * S_NumDistPurchases
313977    +          +     0.16637546838853 * S_NumStorePurchases
313978    +          +    -0.06908729397635 * S_NumWebPurchases
313979    +          +     1.44269772444244 * S_NumWebVisitsMonth
313980    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
313981    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
313982    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
313983    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
313984    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
313985    +        S_Income  +    -0.42454238091412 * S_Kidhome
313986    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
313987    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
313988    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
313989    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
313990    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
313991    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
313992    +          +     0.77329078721398 * S_NumDealsPurchases
313993    +          +     0.31693324305765 * S_NumDistPurchases
313994    +          +    -1.08524196373091 * S_NumStorePurchases
313995    +          +    -0.96945384922979 * S_NumWebPurchases
313996    +          +     1.24659288571587 * S_NumWebVisitsMonth
313997    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
313998    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
313999    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
314000    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
314001    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
314002    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
314003    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
314004    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
314005    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
314006    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
314007    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
314008    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
314009    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
314010    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
314011    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
314012    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
314013    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
314014    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
314015    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
314016    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
314017    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
314018    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
314019    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
314020    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
314021    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
314022    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
314023    +          +     0.36788499721115 * Marital_StatusDivorced
314024    +          +    -0.16988636986433 * Marital_StatusMarried
314025    +          +    -0.24560973256761 * Marital_StatusSingle
314026    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
314027    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
314028    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
314029    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
314030    +          +     0.24497797058028 * Marital_StatusDivorced
314031    +          +    -1.44410245434424 * Marital_StatusMarried
314032    +          +     1.47441310087392 * Marital_StatusSingle
314033    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
314034    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
314035    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
314036    +        EducationGraduation  +     0.04653963359475 * EducationMaster
314037    +          +     0.15823225296452 * Marital_StatusDivorced
314038    +          +    -0.39129434667884 * Marital_StatusMarried
314039    +          +     0.84414069966504 * Marital_StatusSingle
314040    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
314041    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
314042    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
314043    +        EducationGraduation  +     0.40030852414737 * EducationMaster
314044    +          +     1.22039169814542 * Marital_StatusDivorced
314045    +          +     0.91592976063128 * Marital_StatusMarried
314046    +          +    -1.51267332883308 * Marital_StatusSingle
314047    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
314048    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
314049    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
314050    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
314051    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
314052    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
314053    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
314054    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
314055    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
314056    +END;
MPRINT(EM_DIAGRAM):   END;
314057    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314058    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
314059    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
314060    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
314061    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
314062    +END;
MPRINT(EM_DIAGRAM):   END;
314063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314064    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
314065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314066    +
314067    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
314068    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
314069    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
314070    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
314071    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
314072    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314073    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
314074    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314075    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314076    +end;
MPRINT(EM_DIAGRAM):   end;
314077    +else do;
MPRINT(EM_DIAGRAM):   else do;
314078    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
314079    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
314080    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
314081    +   end;
MPRINT(EM_DIAGRAM):   end;
314082    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
314083    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
314084    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
314085    +   end;
MPRINT(EM_DIAGRAM):   end;
314086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314087    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314088    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314089    +   end;
MPRINT(EM_DIAGRAM):   end;
314090    +end;
MPRINT(EM_DIAGRAM):   end;
314091    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314092    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
314093    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
314094    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
314095    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
314096    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
314097    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
314098    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
314099    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
314100    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
314101    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
314102    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
314103    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
314104    +END;
MPRINT(EM_DIAGRAM):   END;
314105    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314106    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
314107    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
314108    +END;
MPRINT(EM_DIAGRAM):   END;
314109    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
314110    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
314111    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
314112    +END;
MPRINT(EM_DIAGRAM):   END;
314113    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
314114    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
314115    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
314116    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
314117    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
314118    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
314119    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
314120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314121    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
314122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314123    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
314124    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
314125    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
314126    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
314127    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
314128    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
314129    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
314130    +END;
MPRINT(EM_DIAGRAM):   END;
314131    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314132    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
314133    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314134    +drop
314135    +H11
314136    +H12
314137    +H13
314138    +H14
314139    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
314140    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
314141    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
314142    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314143    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
314144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314145    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
314146    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
314147    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
314148    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
314149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314150    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
314151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314152    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
314153    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
314154    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
314155    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314156    +* Ensmbl28: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Scoring Code of model 5 of 5;
314157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314159    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
314160    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
314161    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
314162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314163    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314164    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
314165    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314166    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
314167    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
314168    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
314169    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
314170    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
314171    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
314172    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
314173    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
314174    +LENGTH _WARN_ $4
314175    +      F_DepVar  $ 12
314176    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
314177    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
314178    +
314179    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
314180    +
314181    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
314182    +
314183    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
314184    +
314185    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
314186    +
314187    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
314188    +
314189    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
314190    +
314191    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
314192    +
314193    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
314194    +
314195    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
314196    +
314197    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
314198    +
314199    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
314200    +
314201    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
314202    +
314203    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
314204    +
314205    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
314206    +
314207    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
314208    +
314209    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
314210    +
314211    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
314212    +
314213    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
314214    +
314215    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
314216    +
314217    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
314218    +
314219    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
314220    +
314221    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
314222    +
314223    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
314224    +
314225    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
314226    +
314227    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
314228    +
314229    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
314230    +
314231    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
314232    +
314233    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
314234    +
314235    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
314236    +
314237    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
314238    +
314239    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
314240    +
314241    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
314242    +
314243    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
314244    +
314245    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
314246    +
314247    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
314248    +
314249    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
314250    +
314251    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
314252    +
314253    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
314254    +
314255    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
314256    +
314257    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
314258    +
314259    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
314260    +
314261    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
314262    +
314263    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
314264    +
314265    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
314266    +
314267    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
314268    +
314269    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
314270    +
314271    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
314272    +
314273    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
314274    +
314275    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
314276    +
314277    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
314278    +
314279    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
314280    +
314281    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
314282    +
314283    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
314284    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
314285    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
314286    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
314287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314289    +end;
MPRINT(EM_DIAGRAM):   end;
314290    +else do;
MPRINT(EM_DIAGRAM):   else do;
314291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314292    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
314293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314294    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314295    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
314296    +   end;
MPRINT(EM_DIAGRAM):   end;
314297    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314298    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
314299    +   end;
MPRINT(EM_DIAGRAM):   end;
314300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314301    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
314302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314304    +   end;
MPRINT(EM_DIAGRAM):   end;
314305    +end;
MPRINT(EM_DIAGRAM):   end;
314306    +
314307    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
314308    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
314309    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
314310    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
314311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314313    +end;
MPRINT(EM_DIAGRAM):   end;
314314    +else do;
MPRINT(EM_DIAGRAM):   else do;
314315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314316    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
314317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314318    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314319    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
314320    +   end;
MPRINT(EM_DIAGRAM):   end;
314321    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314322    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
314323    +   end;
MPRINT(EM_DIAGRAM):   end;
314324    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314325    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
314326    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314327    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314328    +   end;
MPRINT(EM_DIAGRAM):   end;
314329    +end;
MPRINT(EM_DIAGRAM):   end;
314330    +
314331    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
314332    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
314333    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
314334    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
314335    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314337    +end;
MPRINT(EM_DIAGRAM):   end;
314338    +else do;
MPRINT(EM_DIAGRAM):   else do;
314339    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314340    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
314341    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314342    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314343    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
314344    +   end;
MPRINT(EM_DIAGRAM):   end;
314345    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314346    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
314347    +   end;
MPRINT(EM_DIAGRAM):   end;
314348    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314349    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
314350    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314351    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314352    +   end;
MPRINT(EM_DIAGRAM):   end;
314353    +end;
MPRINT(EM_DIAGRAM):   end;
314354    +
314355    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
314356    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
314357    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
314358    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
314359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314361    +end;
MPRINT(EM_DIAGRAM):   end;
314362    +else do;
MPRINT(EM_DIAGRAM):   else do;
314363    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314364    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
314365    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314366    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314367    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
314368    +   end;
MPRINT(EM_DIAGRAM):   end;
314369    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314370    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
314371    +   end;
MPRINT(EM_DIAGRAM):   end;
314372    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314373    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
314374    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314375    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314376    +   end;
MPRINT(EM_DIAGRAM):   end;
314377    +end;
MPRINT(EM_DIAGRAM):   end;
314378    +
314379    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
314380    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
314381    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
314382    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
314383    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314384    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314385    +end;
MPRINT(EM_DIAGRAM):   end;
314386    +else do;
MPRINT(EM_DIAGRAM):   else do;
314387    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314388    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
314389    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314390    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314391    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
314392    +   end;
MPRINT(EM_DIAGRAM):   end;
314393    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314394    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
314395    +   end;
MPRINT(EM_DIAGRAM):   end;
314396    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314397    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
314398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314400    +   end;
MPRINT(EM_DIAGRAM):   end;
314401    +end;
MPRINT(EM_DIAGRAM):   end;
314402    +
314403    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
314404    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
314405    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
314406    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
314407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314409    +end;
MPRINT(EM_DIAGRAM):   end;
314410    +else do;
MPRINT(EM_DIAGRAM):   else do;
314411    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314412    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
314413    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314414    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
314415    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
314416    +   end;
MPRINT(EM_DIAGRAM):   end;
314417    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314418    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
314419    +   end;
MPRINT(EM_DIAGRAM):   end;
314420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314421    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
314422    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314423    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314424    +   end;
MPRINT(EM_DIAGRAM):   end;
314425    +end;
MPRINT(EM_DIAGRAM):   end;
314426    +
314427    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
314428    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
314429    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
314430    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
314431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314433    +end;
MPRINT(EM_DIAGRAM):   end;
314434    +else do;
MPRINT(EM_DIAGRAM):   else do;
314435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314436    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
314437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314438    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
314439    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
314440    +   end;
MPRINT(EM_DIAGRAM):   end;
314441    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
314442    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
314443    +   end;
MPRINT(EM_DIAGRAM):   end;
314444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314445    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
314446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314448    +   end;
MPRINT(EM_DIAGRAM):   end;
314449    +end;
MPRINT(EM_DIAGRAM):   end;
314450    +
314451    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
314452    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
314453    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
314454    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
314455    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
314456    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
314457    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
314458    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
314459    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
314460    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
314461    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
314462    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
314463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314465    +end;
MPRINT(EM_DIAGRAM):   end;
314466    +else do;
MPRINT(EM_DIAGRAM):   else do;
314467    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
314468    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
314469    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314470    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
314471    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
314472    +   end;
MPRINT(EM_DIAGRAM):   end;
314473    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
314474    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
314475    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
314476    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
314477    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
314478    +   end;
MPRINT(EM_DIAGRAM):   end;
314479    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
314480    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
314481    +   end;
MPRINT(EM_DIAGRAM):   end;
314482    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
314483    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
314484    +   end;
MPRINT(EM_DIAGRAM):   end;
314485    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
314486    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
314487    +   end;
MPRINT(EM_DIAGRAM):   end;
314488    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314489    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
314490    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
314491    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
314492    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
314493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314495    +   end;
MPRINT(EM_DIAGRAM):   end;
314496    +end;
MPRINT(EM_DIAGRAM):   end;
314497    +
314498    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
314499    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
314500    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
314501    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
314502    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
314503    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
314504    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
314505    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
314506    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
314507    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
314508    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
314509    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
314510    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
314511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314513    +end;
MPRINT(EM_DIAGRAM):   end;
314514    +else do;
MPRINT(EM_DIAGRAM):   else do;
314515    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
314516    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
314517    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314518    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
314519    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
314520    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
314521    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
314522    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
314523    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314524    +         end;
MPRINT(EM_DIAGRAM):   end;
314525    +         else do;
MPRINT(EM_DIAGRAM):   else do;
314526    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
314527    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
314528    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314529    +            end;
MPRINT(EM_DIAGRAM):   end;
314530    +         end;
MPRINT(EM_DIAGRAM):   end;
314531    +      end;
MPRINT(EM_DIAGRAM):   end;
314532    +      else do;
MPRINT(EM_DIAGRAM):   else do;
314533    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
314534    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
314535    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314536    +         end;
MPRINT(EM_DIAGRAM):   end;
314537    +      end;
MPRINT(EM_DIAGRAM):   end;
314538    +   end;
MPRINT(EM_DIAGRAM):   end;
314539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314540    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
314541    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
314542    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314543    +      end;
MPRINT(EM_DIAGRAM):   end;
314544    +      else do;
MPRINT(EM_DIAGRAM):   else do;
314545    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
314546    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
314547    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
314548    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
314549    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
314550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314551    +         end;
MPRINT(EM_DIAGRAM):   end;
314552    +      end;
MPRINT(EM_DIAGRAM):   end;
314553    +   end;
MPRINT(EM_DIAGRAM):   end;
314554    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
314555    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
314556    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
314557    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
314558    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
314559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314561    +   end;
MPRINT(EM_DIAGRAM):   end;
314562    +end;
MPRINT(EM_DIAGRAM):   end;
314563    +
314564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314565    +*** Checking missing input Interval
314566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
314567    +
314568    +IF NMISS(
314569    +   AcceptedCmpTotal ,
314570    +   Age ,
314571    +   Frq ,
314572    +   Income ,
314573    +   Kidhome ,
314574    +   Mnt ,
314575    +   MntFishProducts ,
314576    +   MntFruits ,
314577    +   MntGoldProds ,
314578    +   MntMeatProducts ,
314579    +   MntSweetProducts ,
314580    +   MntWines ,
314581    +   MonthsAsCustomer ,
314582    +   NumCatalogPurchases ,
314583    +   NumDealsPurchases ,
314584    +   NumDistPurchases ,
314585    +   NumStorePurchases ,
314586    +   NumWebPurchases ,
314587    +   NumWebVisitsMonth ,
314588    +   RFMstat ,
314589    +   RMntFrq ,
314590    +   Recency ,
314591    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
314592    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
314593    +
314594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314595    +END;
MPRINT(EM_DIAGRAM):   END;
314596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314597    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
314598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314599    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314600    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314601    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
314602    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
314603    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314604    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
314605    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
314606    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314607    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
314608    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
314609    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
314610    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
314611    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
314612    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314613    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
314614    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
314615    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
314616    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
314617    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
314618    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
314619    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
314620    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
314621    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
314622    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
314623    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
314624    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
314625    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
314626    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
314627    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
314628    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
314629    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
314630    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
314631    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
314632    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
314633    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314634    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
314635    +END;
MPRINT(EM_DIAGRAM):   END;
314636    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314637    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
314638    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314639    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
314640    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
314641    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
314642    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
314643    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314644    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
314645    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
314646    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
314647    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
314648    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
314649    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314650    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
314651    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
314652    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
314653    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
314654    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
314655    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
314656    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
314657    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
314658    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
314659    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
314660    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314661    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
314662    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
314663    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
314664    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
314665    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
314666    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
314667    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
314668    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
314669    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
314670    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
314671    +   ELSE S_NumCatalogPurchases
314672    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
314673    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
314674    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
314675    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
314676    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
314677    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
314678    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
314679    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
314680    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
314681    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
314682    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
314683    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
314684    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
314685    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
314686    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
314687    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
314688    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
314689    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
314690    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
314691    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
314692    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
314693    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
314694    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314695    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
314696    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
314697    +END;
MPRINT(EM_DIAGRAM):   END;
314698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314699    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
314700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314702    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
314703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314705    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
314706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314707    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314708    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
314709    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
314710    +        S_Income  +    -0.43070069114587 * S_Kidhome
314711    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
314712    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
314713    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
314714    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
314715    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
314716    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
314717    +          +    -0.21858146166244 * S_NumDealsPurchases
314718    +          +     0.18409991080913 * S_NumDistPurchases
314719    +          +     0.35683163455594 * S_NumStorePurchases
314720    +          +     0.24429183714976 * S_NumWebPurchases
314721    +          +     -0.1263739191616 * S_NumWebVisitsMonth
314722    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
314723    +        S_RMntFrq  +      0.3452503815146 * S_Recency
314724    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
314725    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
314726    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
314727    +        S_Income  +     0.24623934031778 * S_Kidhome
314728    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
314729    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
314730    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
314731    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
314732    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
314733    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
314734    +          +    -0.08125614129909 * S_NumDealsPurchases
314735    +          +     0.38003696656333 * S_NumDistPurchases
314736    +          +     0.22006494588298 * S_NumStorePurchases
314737    +          +     0.26217639358993 * S_NumWebPurchases
314738    +          +    -0.56905781005459 * S_NumWebVisitsMonth
314739    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
314740    +        S_RMntFrq  +     0.33060213336674 * S_Recency
314741    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
314742    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
314743    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
314744    +        S_Income  +     0.18597632724783 * S_Kidhome
314745    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
314746    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
314747    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
314748    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
314749    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
314750    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
314751    +          +     0.08121213946217 * S_NumDealsPurchases
314752    +          +    -0.04963282234139 * S_NumDistPurchases
314753    +          +    -0.09521586837775 * S_NumStorePurchases
314754    +          +     0.00630626523742 * S_NumWebPurchases
314755    +          +    -0.03891587920939 * S_NumWebVisitsMonth
314756    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
314757    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
314758    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
314759    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
314760    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
314761    +        S_Income  +     0.25356767518099 * S_Kidhome
314762    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
314763    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
314764    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
314765    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
314766    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
314767    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
314768    +          +     0.83749876944877 * S_NumDealsPurchases
314769    +          +     0.29636537008068 * S_NumDistPurchases
314770    +          +    -0.61202052257506 * S_NumStorePurchases
314771    +          +    -0.96921731415369 * S_NumWebPurchases
314772    +          +     0.10056455703323 * S_NumWebVisitsMonth
314773    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
314774    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
314775    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
314776    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
314777    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
314778    +        S_Income  +    -0.66239517276633 * S_Kidhome
314779    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
314780    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
314781    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
314782    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
314783    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
314784    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
314785    +          +     0.63122884753912 * S_NumDealsPurchases
314786    +          +     0.00285388491049 * S_NumDistPurchases
314787    +          +    -0.76222252593182 * S_NumStorePurchases
314788    +          +    -0.71485070772733 * S_NumWebPurchases
314789    +          +     1.59020450778179 * S_NumWebVisitsMonth
314790    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
314791    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
314792    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
314793    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
314794    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
314795    +        S_Income  +    -0.22662005590555 * S_Kidhome
314796    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
314797    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
314798    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
314799    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
314800    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
314801    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
314802    +          +    -0.28143084367284 * S_NumDealsPurchases
314803    +          +     0.09640746756361 * S_NumDistPurchases
314804    +          +      0.1754994442449 * S_NumStorePurchases
314805    +          +     0.14321475617403 * S_NumWebPurchases
314806    +          +     -0.1908048876137 * S_NumWebVisitsMonth
314807    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
314808    +        S_RMntFrq  +     0.02280616139018 * S_Recency
314809    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
314810    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
314811    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
314812    +        S_Income  +    -0.45643247613458 * S_Kidhome
314813    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
314814    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
314815    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
314816    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
314817    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
314818    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
314819    +          +    -0.14623073736275 * S_NumDealsPurchases
314820    +          +      0.1591142102614 * S_NumDistPurchases
314821    +          +     0.10364624011419 * S_NumStorePurchases
314822    +          +     0.21545343951201 * S_NumWebPurchases
314823    +          +     0.61096997379603 * S_NumWebVisitsMonth
314824    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
314825    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
314826    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
314827    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
314828    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
314829    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
314830    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
314831    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
314832    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
314833    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
314834    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
314835    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
314836    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
314837    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
314838    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
314839    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
314840    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
314841    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
314842    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
314843    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
314844    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
314845    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
314846    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
314847    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
314848    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
314849    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
314850    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
314851    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
314852    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
314853    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
314854    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
314855    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
314856    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
314857    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
314858    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
314859    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
314860    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
314861    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
314862    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
314863    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
314864    +        EducationGraduation  +     0.00389495660452 * EducationMaster
314865    +          +     0.39856598367829 * Marital_StatusDivorced
314866    +          +    -0.45922754552461 * Marital_StatusMarried
314867    +          +     0.41270195301891 * Marital_StatusSingle
314868    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
314869    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
314870    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
314871    +        EducationGraduation  +      0.2609956614651 * EducationMaster
314872    +          +     0.12002180366932 * Marital_StatusDivorced
314873    +          +     0.50693056076018 * Marital_StatusMarried
314874    +          +    -0.40828651697464 * Marital_StatusSingle
314875    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
314876    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
314877    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
314878    +        EducationGraduation  +     0.20017847825938 * EducationMaster
314879    +          +    -0.05075621283629 * Marital_StatusDivorced
314880    +          +     0.06731276969307 * Marital_StatusMarried
314881    +          +     0.20458391966582 * Marital_StatusSingle
314882    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
314883    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
314884    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
314885    +        EducationGraduation  +     0.28829384238085 * EducationMaster
314886    +          +    -0.37925185401218 * Marital_StatusDivorced
314887    +          +     0.62971134740586 * Marital_StatusMarried
314888    +          +    -0.36562351730859 * Marital_StatusSingle
314889    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
314890    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
314891    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
314892    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
314893    +          +     0.84382044664305 * Marital_StatusDivorced
314894    +          +    -0.84062627203871 * Marital_StatusMarried
314895    +          +     0.74100406031127 * Marital_StatusSingle
314896    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
314897    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
314898    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
314899    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
314900    +          +     -0.1195105091383 * Marital_StatusDivorced
314901    +          +    -0.13486422945269 * Marital_StatusMarried
314902    +          +     0.33592403429156 * Marital_StatusSingle
314903    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
314904    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
314905    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
314906    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
314907    +          +     0.14792293029589 * Marital_StatusDivorced
314908    +          +    -0.96003393582564 * Marital_StatusMarried
314909    +          +     0.64637652355384 * Marital_StatusSingle
314910    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
314911    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
314912    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
314913    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
314914    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
314915    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
314916    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
314917    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
314918    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
314919    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
314920    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
314921    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
314922    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
314923    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
314924    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
314925    +END;
MPRINT(EM_DIAGRAM):   END;
314926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314927    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
314928    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
314929    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
314930    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
314931    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
314932    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
314933    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
314934    +END;
MPRINT(EM_DIAGRAM):   END;
314935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314936    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
314937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314938    +
314939    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
314940    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
314941    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
314942    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
314943    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
314944    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314945    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
314946    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314947    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314948    +end;
MPRINT(EM_DIAGRAM):   end;
314949    +else do;
MPRINT(EM_DIAGRAM):   else do;
314950    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
314951    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
314952    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
314953    +   end;
MPRINT(EM_DIAGRAM):   end;
314954    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
314955    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
314956    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
314957    +   end;
MPRINT(EM_DIAGRAM):   end;
314958    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314959    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314960    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314961    +   end;
MPRINT(EM_DIAGRAM):   end;
314962    +end;
MPRINT(EM_DIAGRAM):   end;
314963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314964    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
314965    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
314966    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
314967    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
314968    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
314969    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
314970    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
314971    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
314972    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
314973    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
314974    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
314975    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
314976    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
314977    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
314978    +END;
MPRINT(EM_DIAGRAM):   END;
314979    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314980    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
314981    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
314982    +END;
MPRINT(EM_DIAGRAM):   END;
314983    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
314984    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
314985    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
314986    +END;
MPRINT(EM_DIAGRAM):   END;
314987    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
314988    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
314989    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
314990    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
314991    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
314992    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
314993    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
314994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314995    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
314996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314997    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
314998    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
314999    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315000    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315001    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315002    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315003    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315004    +END;
MPRINT(EM_DIAGRAM):   END;
315005    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315006    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315007    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315008    +drop
315009    +H11
315010    +H12
315011    +H13
315012    +H14
315013    +H15
315014    +H16
315015    +H17
315016    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
315017    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
315018    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
315019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315020    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
315021    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315022    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
315023    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
315024    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
315025    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
315026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315027    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
315028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315029    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
315030    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
315031    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
315032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315033    +* Ensmbl28: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Maximum Posteriors of 5 models;
315034    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315035    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
315036    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
315037    +P_DepVar1 = max(
315038    +Neural3_P_DepVar1 ,
315039    +Neural2_P_DepVar1 ,
315040    +Neural9_P_DepVar1 ,
315041    +Neural4_P_DepVar1 ,
315042    +Neural10_P_DepVar1
315043    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural3_P_DepVar1 , Neural2_P_DepVar1 , 
Neural9_P_DepVar1 , Neural4_P_DepVar1 , Neural10_P_DepVar1 );
315044    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
315045    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
315046    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
315047    +end;
MPRINT(EM_DIAGRAM):   end;
315048    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
315049    +P_DepVar0 = max(
315050    +Neural3_P_DepVar0 ,
315051    +Neural2_P_DepVar0 ,
315052    +Neural9_P_DepVar0 ,
315053    +Neural4_P_DepVar0 ,
315054    +Neural10_P_DepVar0
315055    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural3_P_DepVar0 , Neural2_P_DepVar0 , 
Neural9_P_DepVar0 , Neural4_P_DepVar0 , Neural10_P_DepVar0 );
315056    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
315057    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
315058    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
315059    +end;
MPRINT(EM_DIAGRAM):   end;
315060    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
315061    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315062    +* Ensmbl28: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Classification Vars;
315063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315064    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
315065    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
315066    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
315067    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
315068    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
315069    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
315070    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
315071    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
315072    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
315073    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
315074    +end;
MPRINT(EM_DIAGRAM):   end;
315075    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
315076    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
315077    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
315078    +end;
MPRINT(EM_DIAGRAM):   end;
315079    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315081    +* Ensmbl28: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Producing Unformatted variable;
315082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315083    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
315084    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
315085    +else
315086    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
315087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315088    +* Ensmbl28: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing _WARN_ Variable;
315089    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315090    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
315091    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
315092    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
315093    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
315094    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
315095    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
315096    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
315097    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
315098    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
315099    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
315100    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
315101    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
315102    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
315103    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
315104    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
315105    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
315106    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
315107    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
315108    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
315109    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
315109   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
315110    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
315110   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
315111    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
315111   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
315112    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
315112   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
315113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315114    +* Ensmbl28: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing Residual Vars;
315115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315116    +if
315117    +F_DepVar NE '1'
315118    +AND F_DepVar NE '0'
315119    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
315120    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
315121    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
315122    +end;
MPRINT(EM_DIAGRAM):   end;
315123    +else do;
MPRINT(EM_DIAGRAM):   else do;
315124    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
315125    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
315126    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
315127    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
315128    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
315129    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
315130    +END;
MPRINT(EM_DIAGRAM):   END;
315131    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315132     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL28_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL3_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315133     quit;
315134     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl28_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl28_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl28_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
315194     filename _pref
315194   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
315195     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315196     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
315197    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315198    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
315199    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315200    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
315201    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
315202    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
315203    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
315204    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
315205    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
315206    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
315207    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
315208    +LENGTH _WARN_ $4
315209    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
315210    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
315211    +
315212    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
315213    +
315214    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
315215    +
315216    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
315217    +
315218    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
315219    +
315220    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
315221    +
315222    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
315223    +
315224    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
315225    +
315226    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
315227    +
315228    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315229    +
315230    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
315231    +
315232    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
315233    +
315234    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
315235    +
315236    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315237    +
315238    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315239    +
315240    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
315241    +
315242    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
315243    +
315244    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
315245    +
315246    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315247    +
315248    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
315249    +
315250    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
315251    +
315252    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315253    +
315254    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
315255    +
315256    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
315257    +
315258    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
315259    +
315260    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
315261    +
315262    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
315263    +
315264    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
315265    +
315266    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
315267    +
315268    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
315269    +
315270    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
315271    +
315272    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
315273    +
315274    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
315275    +
315276    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
315277    +
315278    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315279    +
315280    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315281    +
315282    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315283    +
315284    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315285    +
315286    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
315287    +
315288    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
315289    +
315290    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
315291    +
315292    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
315293    +
315294    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
315295    +
315296    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
315297    +
315298    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
315299    +
315300    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315301    +
315302    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
315303    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
315304    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
315305    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
315306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315308    +end;
MPRINT(EM_DIAGRAM):   end;
315309    +else do;
MPRINT(EM_DIAGRAM):   else do;
315310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315311    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
315312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315313    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315314    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
315315    +   end;
MPRINT(EM_DIAGRAM):   end;
315316    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315317    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
315318    +   end;
MPRINT(EM_DIAGRAM):   end;
315319    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315320    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
315321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315323    +   end;
MPRINT(EM_DIAGRAM):   end;
315324    +end;
MPRINT(EM_DIAGRAM):   end;
315325    +
315326    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
315327    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
315328    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
315329    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
315330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315332    +end;
MPRINT(EM_DIAGRAM):   end;
315333    +else do;
MPRINT(EM_DIAGRAM):   else do;
315334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315335    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
315336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315337    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315338    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
315339    +   end;
MPRINT(EM_DIAGRAM):   end;
315340    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315341    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
315342    +   end;
MPRINT(EM_DIAGRAM):   end;
315343    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315344    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
315345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315347    +   end;
MPRINT(EM_DIAGRAM):   end;
315348    +end;
MPRINT(EM_DIAGRAM):   end;
315349    +
315350    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
315351    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
315352    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
315353    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
315354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315356    +end;
MPRINT(EM_DIAGRAM):   end;
315357    +else do;
MPRINT(EM_DIAGRAM):   else do;
315358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315359    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
315360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315361    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315362    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
315363    +   end;
MPRINT(EM_DIAGRAM):   end;
315364    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315365    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
315366    +   end;
MPRINT(EM_DIAGRAM):   end;
315367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315368    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
315369    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315370    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315371    +   end;
MPRINT(EM_DIAGRAM):   end;
315372    +end;
MPRINT(EM_DIAGRAM):   end;
315373    +
315374    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
315375    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
315376    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
315377    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
315378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315380    +end;
MPRINT(EM_DIAGRAM):   end;
315381    +else do;
MPRINT(EM_DIAGRAM):   else do;
315382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315383    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
315384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315385    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315386    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
315387    +   end;
MPRINT(EM_DIAGRAM):   end;
315388    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315389    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
315390    +   end;
MPRINT(EM_DIAGRAM):   end;
315391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315392    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
315393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315395    +   end;
MPRINT(EM_DIAGRAM):   end;
315396    +end;
MPRINT(EM_DIAGRAM):   end;
315397    +
315398    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
315399    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
315400    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
315401    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
315402    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315404    +end;
MPRINT(EM_DIAGRAM):   end;
315405    +else do;
MPRINT(EM_DIAGRAM):   else do;
315406    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315407    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
315408    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315409    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315410    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
315411    +   end;
MPRINT(EM_DIAGRAM):   end;
315412    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315413    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
315414    +   end;
MPRINT(EM_DIAGRAM):   end;
315415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315416    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
315417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315419    +   end;
MPRINT(EM_DIAGRAM):   end;
315420    +end;
MPRINT(EM_DIAGRAM):   end;
315421    +
315422    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
315423    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
315424    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
315425    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
315426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315428    +end;
MPRINT(EM_DIAGRAM):   end;
315429    +else do;
MPRINT(EM_DIAGRAM):   else do;
315430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315431    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
315432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315433    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315434    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
315435    +   end;
MPRINT(EM_DIAGRAM):   end;
315436    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315437    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
315438    +   end;
MPRINT(EM_DIAGRAM):   end;
315439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315440    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
315441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315443    +   end;
MPRINT(EM_DIAGRAM):   end;
315444    +end;
MPRINT(EM_DIAGRAM):   end;
315445    +
315446    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
315447    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
315448    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
315449    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
315450    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315452    +end;
MPRINT(EM_DIAGRAM):   end;
315453    +else do;
MPRINT(EM_DIAGRAM):   else do;
315454    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315455    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
315456    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315457    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
315458    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
315459    +   end;
MPRINT(EM_DIAGRAM):   end;
315460    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
315461    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
315462    +   end;
MPRINT(EM_DIAGRAM):   end;
315463    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315464    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
315465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315467    +   end;
MPRINT(EM_DIAGRAM):   end;
315468    +end;
MPRINT(EM_DIAGRAM):   end;
315469    +
315470    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
315471    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
315472    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315473    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
315474    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
315475    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
315476    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
315477    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
315478    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
315479    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
315480    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
315481    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
315482    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315483    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315484    +end;
MPRINT(EM_DIAGRAM):   end;
315485    +else do;
MPRINT(EM_DIAGRAM):   else do;
315486    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
315487    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
315488    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315489    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
315490    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
315491    +   end;
MPRINT(EM_DIAGRAM):   end;
315492    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
315493    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
315494    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
315495    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
315496    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
315497    +   end;
MPRINT(EM_DIAGRAM):   end;
315498    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
315499    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
315500    +   end;
MPRINT(EM_DIAGRAM):   end;
315501    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
315502    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
315503    +   end;
MPRINT(EM_DIAGRAM):   end;
315504    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
315505    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
315506    +   end;
MPRINT(EM_DIAGRAM):   end;
315507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315508    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
315509    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
315510    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
315511    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
315512    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315513    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315514    +   end;
MPRINT(EM_DIAGRAM):   end;
315515    +end;
MPRINT(EM_DIAGRAM):   end;
315516    +
315517    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
315518    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
315519    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
315520    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315521    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
315522    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
315523    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
315524    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
315525    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
315526    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315527    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315528    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315529    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315530    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315531    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315532    +end;
MPRINT(EM_DIAGRAM):   end;
315533    +else do;
MPRINT(EM_DIAGRAM):   else do;
315534    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
315535    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
315536    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315537    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
315538    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
315539    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
315540    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
315541    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
315542    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315543    +         end;
MPRINT(EM_DIAGRAM):   end;
315544    +         else do;
MPRINT(EM_DIAGRAM):   else do;
315545    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
315546    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
315547    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315548    +            end;
MPRINT(EM_DIAGRAM):   end;
315549    +         end;
MPRINT(EM_DIAGRAM):   end;
315550    +      end;
MPRINT(EM_DIAGRAM):   end;
315551    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315552    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
315553    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
315554    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315555    +         end;
MPRINT(EM_DIAGRAM):   end;
315556    +      end;
MPRINT(EM_DIAGRAM):   end;
315557    +   end;
MPRINT(EM_DIAGRAM):   end;
315558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315559    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
315560    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
315561    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315562    +      end;
MPRINT(EM_DIAGRAM):   end;
315563    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315564    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
315565    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
315566    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
315567    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
315568    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
315569    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315570    +         end;
MPRINT(EM_DIAGRAM):   end;
315571    +      end;
MPRINT(EM_DIAGRAM):   end;
315572    +   end;
MPRINT(EM_DIAGRAM):   end;
315573    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
315574    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315575    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315576    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315577    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315578    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315579    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315580    +   end;
MPRINT(EM_DIAGRAM):   end;
315581    +end;
MPRINT(EM_DIAGRAM):   end;
315582    +
315583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315584    +*** Checking missing input Interval
315585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
315586    +
315587    +IF NMISS(
315588    +   AcceptedCmpTotal ,
315589    +   Age ,
315590    +   Frq ,
315591    +   Income ,
315592    +   Kidhome ,
315593    +   Mnt ,
315594    +   MntFishProducts ,
315595    +   MntFruits ,
315596    +   MntGoldProds ,
315597    +   MntMeatProducts ,
315598    +   MntSweetProducts ,
315599    +   MntWines ,
315600    +   MonthsAsCustomer ,
315601    +   NumCatalogPurchases ,
315602    +   NumDealsPurchases ,
315603    +   NumDistPurchases ,
315604    +   NumStorePurchases ,
315605    +   NumWebPurchases ,
315606    +   NumWebVisitsMonth ,
315607    +   RFMstat ,
315608    +   RMntFrq ,
315609    +   Recency ,
315610    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
315611    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
315612    +
315613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315614    +END;
MPRINT(EM_DIAGRAM):   END;
315615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315616    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
315617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315618    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315619    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315620    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315621    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
315622    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315623    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315624    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
315625    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315626    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
315627    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
315628    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
315629    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315630    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
315631    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315632    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315633    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
315634    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
315635    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
315636    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
315637    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
315638    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
315639    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315640    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315641    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315642    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
315643    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
315644    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
315645    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
315646    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
315647    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
315648    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315649    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315650    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315651    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
315652    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315653    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315654    +END;
MPRINT(EM_DIAGRAM):   END;
315655    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315656    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
315657    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315658    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315659    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
315660    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
315661    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
315662    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315663    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
315664    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315665    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
315666    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
315667    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
315668    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315669    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
315670    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
315671    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
315672    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
315673    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
315674    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
315675    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
315676    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315677    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
315678    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
315679    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315680    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315681    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
315682    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
315683    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
315684    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
315685    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
315686    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
315687    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
315688    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
315689    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
315690    +   ELSE S_NumCatalogPurchases
315691    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
315692    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315693    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
315694    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315695    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315696    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
315697    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
315698    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
315699    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
315700    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
315701    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
315702    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
315703    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
315704    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
315705    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
315706    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315707    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315708    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
315709    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315710    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
315711    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
315712    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
315713    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315714    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
315715    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315716    +END;
MPRINT(EM_DIAGRAM):   END;
315717    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315718    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
315719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315721    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
315722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315724    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
315725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315726    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315727    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
315728    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
315729    +        S_Income  +     0.51123266106809 * S_Kidhome
315730    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
315731    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
315732    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
315733    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
315734    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
315735    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
315736    +          +     1.34095732961105 * S_NumDealsPurchases
315737    +          +     0.16605991333252 * S_NumDistPurchases
315738    +          +    -0.61746267736536 * S_NumStorePurchases
315739    +          +    -0.61812800689506 * S_NumWebPurchases
315740    +          +     1.44649145055387 * S_NumWebVisitsMonth
315741    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
315742    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
315743    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
315744    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
315745    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
315746    +        S_Income  +     0.52295323651199 * S_Kidhome
315747    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
315748    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
315749    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
315750    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
315751    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
315752    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
315753    +          +    -0.72543332317832 * S_NumDealsPurchases
315754    +          +    -0.05245472565117 * S_NumDistPurchases
315755    +          +     1.00667431585298 * S_NumStorePurchases
315756    +          +     1.02836701470962 * S_NumWebPurchases
315757    +          +    -1.25666606219201 * S_NumWebVisitsMonth
315758    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
315759    +        S_RMntFrq  +     1.50910531484632 * S_Recency
315760    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
315761    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
315762    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
315763    +        S_Income  +     0.58025720116696 * S_Kidhome
315764    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
315765    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
315766    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
315767    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
315768    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
315769    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
315770    +          +     0.12670438262487 * S_NumDealsPurchases
315771    +          +    -0.46113523834333 * S_NumDistPurchases
315772    +          +     0.07074818720567 * S_NumStorePurchases
315773    +          +    -0.05066645783537 * S_NumWebPurchases
315774    +          +    -0.65729410185804 * S_NumWebVisitsMonth
315775    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
315776    +        S_RMntFrq  +      1.4337242246086 * S_Recency
315777    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
315778    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
315779    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
315780    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
315781    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
315782    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
315783    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
315784    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
315785    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
315786    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
315787    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
315788    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
315789    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
315790    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
315791    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
315792    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
315793    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
315794    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
315795    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
315796    +          +     0.12692950862511 * Marital_StatusDivorced
315797    +          +     0.10026497666167 * Marital_StatusMarried
315798    +          +    -0.19893864592813 * Marital_StatusSingle
315799    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
315800    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
315801    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
315802    +        EducationGraduation  +     0.05580498138108 * EducationMaster
315803    +          +    -0.16785192490199 * Marital_StatusDivorced
315804    +          +     0.13153695130362 * Marital_StatusMarried
315805    +          +    -0.50411544587104 * Marital_StatusSingle
315806    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
315807    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
315808    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
315809    +        EducationGraduation  +     0.21882736952662 * EducationMaster
315810    +          +    -0.62654958087044 * Marital_StatusDivorced
315811    +          +     1.86250132393341 * Marital_StatusMarried
315812    +          +    -1.37067556451928 * Marital_StatusSingle
315813    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
315814    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
315815    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
315816    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
315817    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
315818    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
315819    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
315820    +END;
MPRINT(EM_DIAGRAM):   END;
315821    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315822    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
315823    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
315824    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
315825    +END;
MPRINT(EM_DIAGRAM):   END;
315826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315827    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
315828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315829    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315830    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
315831    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
315832    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
315833    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
315834    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
315835    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315836    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
315837    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
315838    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
315839    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
315840    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
315841    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
315842    +END;
MPRINT(EM_DIAGRAM):   END;
315843    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315844    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
315845    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
315846    +END;
MPRINT(EM_DIAGRAM):   END;
315847    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
315848    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
315849    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
315850    +END;
MPRINT(EM_DIAGRAM):   END;
315851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315852    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
315853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315854    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
315855    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
315856    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315857    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315858    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315859    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315860    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315861    +END;
MPRINT(EM_DIAGRAM):   END;
315862    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315863    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315864    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315865    +drop
315866    +H11
315867    +H12
315868    +H13
315869    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
315870    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315871     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315872     quit;
315873     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315874     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315875     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315876     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
315877     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315878     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315879     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315880     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

315882     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
315883     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315885     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315886     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315887     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315889     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
315890     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

315891     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315892     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315893     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315894     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315895     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315896     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315897     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

315898     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315899     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315899   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

315900     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315901     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
315902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315903     filename _pref
315903   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
315904     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315905     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
315906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315907    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
315908    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315909    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
315910    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
315911    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315912     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315913     quit;
315914     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315915     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315916     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315917     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
315918     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315919     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315920     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315921     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315922     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315923     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
315924     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315926     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315927     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315928     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315930     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
315931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315932     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315935     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315936     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315938     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315939     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315940     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315940   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

315941     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315942     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
315943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315944     filename _pref
315944   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
315945     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315946     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
315947    +
315948    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
315949    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
315949   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
315950    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
315951    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
315952    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
315953    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
315954    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315955     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315956     quit;
315957     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315958     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315959     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315960     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
315961     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

315963     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315964     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315966     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
315967     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315969     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315970     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315971     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315972     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315973     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
315974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315975     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315977     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315978     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315979     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315980     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315981     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315982     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315983     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315983   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

315984     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315985     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
315986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315987     filename _pref
315987   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
315988     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315989     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
315990    +
315991    +
315992    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
315993    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
315994    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
315995    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
315996    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
315997    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315998    +
315999    +
316000    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
316001    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
316002    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
316003    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
316004    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
316005    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316006    +
316007    +
316008    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
316009    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
316010    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
316011    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
316012    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
316013    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316014    +
316015    +
316016    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
316017    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
316018    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
316019    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
316020    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
316021    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316022    +
316023    +
316024    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
316025    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
316026    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
316027    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
316028    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
316029    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316030    +
316031    +
316032    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
316033    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
316034    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
316035    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
316036    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
316037    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316038    +
316039    +
316040    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
316041    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
316042    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
316043    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
316044    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
316045    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316046    +
316047    +
316048    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
316049    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
316050    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
316051    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
316052    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
316053    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316054    +if
316055    +_FILTERNORM1 not in ( '.')
316056    + and
316057    +_FILTERNORM2 not in ( '.')
316058    + and
316059    +_FILTERNORM3 not in ( '.')
316060    + and
316061    +_FILTERNORM4 not in ( '.')
316062    + and
316063    +_FILTERNORM5 not in ( '.')
316064    + and
316065    +_FILTERNORM6 not in ( '.')
316066    + and
316067    +_FILTERNORM7 not in ( ' ')
316068    + and
316069    +_FILTERNORM8 not in ( ' ')
316070    +and
316071    +( Dt_Customer ne .)
316072    +and ( Income ne . and (Income<=107000))
316073    +and ( Kidhome ne .)
316074    +and ( MntFishProducts ne .)
316075    +and ( MntFruits ne .)
316076    +and ( MntGoldProds ne .)
316077    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
316078    +and ( MntSweetProducts ne .)
316079    +and ( MntWines ne .)
316080    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
316081    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
316082    +and ( NumStorePurchases ne .)
316083    +and ( NumWebPurchases ne .)
316084    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
316085    +and ( Recency ne .)
316086    +and ( Teenhome ne .)
316087    +and ( Year_Birth ne .)
316088    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
316089    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
316090    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
316091    +end;
MPRINT(EM_DIAGRAM):   end;
316092    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
316093    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316094     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
316095     quit;
316096     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316097     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316098     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316099     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
316100     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316102     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316103     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316105     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
316106     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316108     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316109     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316110     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316112     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
316113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

316114     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316115     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316116     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316117     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316118     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316119     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316120     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316121     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316122     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316122   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

316123     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316124     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
316125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316126     %macro varDept(fcmpdata=,id=);
316127     %global nobs&id scoreFlag&id;
316128     %let scoreFlag&id = 0;
316129     %if &id=1 or ^&fcmpStart %then %do;
316130     proc sort data=&fcmpdata out=_temp&id nodupkey;
316131     by NAME;
316132     where id=&id and LHS in( %let j=1;
316133     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
316134     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
316135     "&var" %let j = %eval(&j+1);
316136     %end;
316137     );
316138     run;
316139     %let dsid = %sysfunc(open(_temp&id));
316140     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316141     %let dsid = %sysfunc(close(&dsid));
316142     %if &&nobs&id %then %do;
316143     %let scoreFlag&id = 1;
316144     %let fcmpStart = 1;
316145     %end;
316146     %else %let fcmpStart = 0;
316147     %end;
316148     %else %do;
316149     proc sort data=&fcmpdata out=_tempid;
316150     where id=&id;
316151     by LHS;
316152     run;
316153     %let dsid = %sysfunc(open(_tempid));
316154     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316155     %let dsid = %sysfunc(close(&dsid));
316156     %if ^&&nobs&id %then %do;
316157     proc datasets lib=work nolist;
316158     delete _tempid;
316159     run;
316160     quit;
316161     %end;
316162     %else %do;
316163     data _tempAll;
316164     set %let j=%eval(&id-1);
316165     %do x=1 %to &j;
316166     %if &&nobs&x %then %do;
316167     _temp&x %end;
316168     %end;
316169     ;
316170     run;
316171     proc sql;
316172     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
316172   ! work._tempid p2 where p.name=p2.lhs;
316173     quit;
316174     data _temp&id;
316175     set _temp&id;
316176     where LHS ne '' and NAME ne '' and Node ne '';
316177     run;
316178     proc datasets lib=work nolist;
316179     delete _tempAll;
316180     run;
316181     %let dsid = %sysfunc(open(_temp&id));
316182     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316183     %let dsid = %sysfunc(close(&dsid));
316184     %if ^&&nobs&id %then %do;
316185     proc datasets lib=work nolist;
316186     delete _temp&id;
316187     run;
316188     quit;
316189     %end;
316190     %else %do;
316191     %let scoreFlag&id = 1;
316192     data _temp&id;
316193     set _temp&id;
316194     where LHS ne NAME and node ne '';
316195     run;
316196     %let dsid = %sysfunc(open(_temp&id));
316197     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316198     %let dsid = %sysfunc(close(&dsid));
316199     %if ^&&nobs&id %then %do;
316200     proc datasets lib=work nolist;
316201     delete _temp&id;
316202     run;
316203     quit;
316204     %end;
316205     %else %do;
316206     proc sort data=_temp&id nodupkey;
316207     by LHS NAME;
316208     run;
316209     %end;
316210     %end;
316211     %end;
316212     %end;
316213     %mend varDept;
316214     %macro optCode(outdata=fcmpdata);
316215     %global fcmpStart;
316216     %let fcmpStart = 0;
316217     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
316218     %let NumNodes=9;
316219     %do k=1 %to &NumNodes;
316220     %vardept(fcmpdata=&outdata, id=&k);
316221     %end;
316222     %mend optCode;
316223     %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

316224     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
316225     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
316226     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
316227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316228     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
316229     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
316230     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
316231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

316232     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316233     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
316233   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

316234     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316235     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
316236     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
316237     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316238     filename _pref
316238   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
316239     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316240     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
316241    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316242    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
316243    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316244    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
316245    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
316246    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
316247    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
316248    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
316249    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
316250    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
316251    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
316252    +LENGTH _WARN_ $4
316253    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
316254    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
316255    +
316256    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
316257    +
316258    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
316259    +
316260    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
316261    +
316262    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
316263    +
316264    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
316265    +
316266    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
316267    +
316268    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
316269    +
316270    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
316271    +
316272    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
316273    +
316274    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
316275    +
316276    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
316277    +
316278    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
316279    +
316280    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
316281    +
316282    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
316283    +
316284    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
316285    +
316286    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
316287    +
316288    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
316289    +
316290    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
316291    +
316292    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
316293    +
316294    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
316295    +
316296    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
316297    +
316298    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
316299    +
316300    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
316301    +
316302    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
316303    +
316304    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
316305    +
316306    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
316307    +
316308    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
316309    +
316310    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
316311    +
316312    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
316313    +
316314    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
316315    +
316316    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
316317    +
316318    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
316319    +
316320    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
316321    +
316322    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
316323    +
316324    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
316325    +
316326    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
316327    +
316328    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
316329    +
316330    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
316331    +
316332    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
316333    +
316334    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
316335    +
316336    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
316337    +
316338    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
316339    +
316340    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
316341    +
316342    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
316343    +
316344    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
316345    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
316346    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
316347    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
316348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316350    +end;
MPRINT(EM_DIAGRAM):   end;
316351    +else do;
MPRINT(EM_DIAGRAM):   else do;
316352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316353    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
316354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316355    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316356    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
316357    +   end;
MPRINT(EM_DIAGRAM):   end;
316358    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316359    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
316360    +   end;
MPRINT(EM_DIAGRAM):   end;
316361    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316362    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
316363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316365    +   end;
MPRINT(EM_DIAGRAM):   end;
316366    +end;
MPRINT(EM_DIAGRAM):   end;
316367    +
316368    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
316369    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
316370    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
316371    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
316372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316374    +end;
MPRINT(EM_DIAGRAM):   end;
316375    +else do;
MPRINT(EM_DIAGRAM):   else do;
316376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316377    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
316378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316379    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316380    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
316381    +   end;
MPRINT(EM_DIAGRAM):   end;
316382    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316383    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
316384    +   end;
MPRINT(EM_DIAGRAM):   end;
316385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316386    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
316387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316389    +   end;
MPRINT(EM_DIAGRAM):   end;
316390    +end;
MPRINT(EM_DIAGRAM):   end;
316391    +
316392    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
316393    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
316394    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
316395    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
316396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316398    +end;
MPRINT(EM_DIAGRAM):   end;
316399    +else do;
MPRINT(EM_DIAGRAM):   else do;
316400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316401    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
316402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316403    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316404    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
316405    +   end;
MPRINT(EM_DIAGRAM):   end;
316406    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316407    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
316408    +   end;
MPRINT(EM_DIAGRAM):   end;
316409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316410    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
316411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316413    +   end;
MPRINT(EM_DIAGRAM):   end;
316414    +end;
MPRINT(EM_DIAGRAM):   end;
316415    +
316416    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
316417    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
316418    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
316419    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
316420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316422    +end;
MPRINT(EM_DIAGRAM):   end;
316423    +else do;
MPRINT(EM_DIAGRAM):   else do;
316424    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316425    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
316426    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316427    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316428    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
316429    +   end;
MPRINT(EM_DIAGRAM):   end;
316430    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316431    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
316432    +   end;
MPRINT(EM_DIAGRAM):   end;
316433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316434    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
316435    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316436    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316437    +   end;
MPRINT(EM_DIAGRAM):   end;
316438    +end;
MPRINT(EM_DIAGRAM):   end;
316439    +
316440    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
316441    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
316442    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
316443    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
316444    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316445    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316446    +end;
MPRINT(EM_DIAGRAM):   end;
316447    +else do;
MPRINT(EM_DIAGRAM):   else do;
316448    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316449    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
316450    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316451    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316452    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
316453    +   end;
MPRINT(EM_DIAGRAM):   end;
316454    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316455    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
316456    +   end;
MPRINT(EM_DIAGRAM):   end;
316457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316458    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
316459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316461    +   end;
MPRINT(EM_DIAGRAM):   end;
316462    +end;
MPRINT(EM_DIAGRAM):   end;
316463    +
316464    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
316465    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
316466    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
316467    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
316468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316470    +end;
MPRINT(EM_DIAGRAM):   end;
316471    +else do;
MPRINT(EM_DIAGRAM):   else do;
316472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316473    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
316474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316475    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316476    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
316477    +   end;
MPRINT(EM_DIAGRAM):   end;
316478    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316479    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
316480    +   end;
MPRINT(EM_DIAGRAM):   end;
316481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316482    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
316483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316485    +   end;
MPRINT(EM_DIAGRAM):   end;
316486    +end;
MPRINT(EM_DIAGRAM):   end;
316487    +
316488    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
316489    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
316490    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
316491    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
316492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316494    +end;
MPRINT(EM_DIAGRAM):   end;
316495    +else do;
MPRINT(EM_DIAGRAM):   else do;
316496    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316497    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
316498    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316499    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
316500    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
316501    +   end;
MPRINT(EM_DIAGRAM):   end;
316502    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
316503    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
316504    +   end;
MPRINT(EM_DIAGRAM):   end;
316505    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316506    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
316507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316509    +   end;
MPRINT(EM_DIAGRAM):   end;
316510    +end;
MPRINT(EM_DIAGRAM):   end;
316511    +
316512    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
316513    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
316514    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316515    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
316516    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
316517    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
316518    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
316519    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
316520    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
316521    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
316522    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
316523    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
316524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316526    +end;
MPRINT(EM_DIAGRAM):   end;
316527    +else do;
MPRINT(EM_DIAGRAM):   else do;
316528    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
316529    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
316530    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316531    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
316532    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
316533    +   end;
MPRINT(EM_DIAGRAM):   end;
316534    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
316535    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
316536    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
316537    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
316538    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
316539    +   end;
MPRINT(EM_DIAGRAM):   end;
316540    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
316541    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
316542    +   end;
MPRINT(EM_DIAGRAM):   end;
316543    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
316544    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
316545    +   end;
MPRINT(EM_DIAGRAM):   end;
316546    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
316547    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
316548    +   end;
MPRINT(EM_DIAGRAM):   end;
316549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316550    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
316551    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
316552    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
316553    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
316554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316556    +   end;
MPRINT(EM_DIAGRAM):   end;
316557    +end;
MPRINT(EM_DIAGRAM):   end;
316558    +
316559    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
316560    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
316561    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
316562    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316563    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
316564    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
316565    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
316566    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
316567    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
316568    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316569    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316570    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316571    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316572    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316573    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316574    +end;
MPRINT(EM_DIAGRAM):   end;
316575    +else do;
MPRINT(EM_DIAGRAM):   else do;
316576    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
316577    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
316578    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316579    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
316580    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
316581    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
316582    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
316583    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
316584    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316585    +         end;
MPRINT(EM_DIAGRAM):   end;
316586    +         else do;
MPRINT(EM_DIAGRAM):   else do;
316587    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
316588    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
316589    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316590    +            end;
MPRINT(EM_DIAGRAM):   end;
316591    +         end;
MPRINT(EM_DIAGRAM):   end;
316592    +      end;
MPRINT(EM_DIAGRAM):   end;
316593    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316594    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
316595    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
316596    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316597    +         end;
MPRINT(EM_DIAGRAM):   end;
316598    +      end;
MPRINT(EM_DIAGRAM):   end;
316599    +   end;
MPRINT(EM_DIAGRAM):   end;
316600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316601    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
316602    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
316603    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316604    +      end;
MPRINT(EM_DIAGRAM):   end;
316605    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316606    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
316607    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
316608    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
316609    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
316610    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
316611    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316612    +         end;
MPRINT(EM_DIAGRAM):   end;
316613    +      end;
MPRINT(EM_DIAGRAM):   end;
316614    +   end;
MPRINT(EM_DIAGRAM):   end;
316615    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
316616    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316617    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316618    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316619    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316620    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316621    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316622    +   end;
MPRINT(EM_DIAGRAM):   end;
316623    +end;
MPRINT(EM_DIAGRAM):   end;
316624    +
316625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316626    +*** Checking missing input Interval
316627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
316628    +
316629    +IF NMISS(
316630    +   AcceptedCmpTotal ,
316631    +   Age ,
316632    +   Frq ,
316633    +   Income ,
316634    +   Kidhome ,
316635    +   Mnt ,
316636    +   MntFishProducts ,
316637    +   MntFruits ,
316638    +   MntGoldProds ,
316639    +   MntMeatProducts ,
316640    +   MntSweetProducts ,
316641    +   MntWines ,
316642    +   MonthsAsCustomer ,
316643    +   NumCatalogPurchases ,
316644    +   NumDealsPurchases ,
316645    +   NumDistPurchases ,
316646    +   NumStorePurchases ,
316647    +   NumWebPurchases ,
316648    +   NumWebVisitsMonth ,
316649    +   RFMstat ,
316650    +   RMntFrq ,
316651    +   Recency ,
316652    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
316653    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
316654    +
316655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316656    +END;
MPRINT(EM_DIAGRAM):   END;
316657    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316658    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
316659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316660    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316661    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316662    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
316663    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
316664    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316665    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316666    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316667    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316668    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316669    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316670    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316671    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316672    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
316673    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316674    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316675    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316676    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316677    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316678    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
316679    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
316680    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
316681    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316682    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316683    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316684    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
316685    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
316686    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316687    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316688    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316689    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316690    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316691    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316692    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
316693    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
316694    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316695    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316696    +END;
MPRINT(EM_DIAGRAM):   END;
316697    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316698    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
316699    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316700    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
316701    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
316702    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
316703    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
316704    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316705    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
316706    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316707    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
316708    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316709    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
316710    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316711    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
316712    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316713    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316714    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
316715    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
316716    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316717    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
316718    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316719    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
316720    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
316721    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316722    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316723    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
316724    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316725    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316726    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
316727    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316728    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
316729    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
316730    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
316731    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
316732    +   ELSE S_NumCatalogPurchases
316733    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
316734    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316735    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
316736    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316737    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316738    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
316739    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
316740    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
316741    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
316742    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316743    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316744    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
316745    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316746    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316747    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
316748    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316749    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316750    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
316751    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
316752    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
316753    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
316754    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
316755    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316756    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
316757    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316758    +END;
MPRINT(EM_DIAGRAM):   END;
316759    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316760    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
316761    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316763    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
316764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316766    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
316767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316769    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
316770    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
316771    +        S_Income  +    -1.07615700855274 * S_Kidhome
316772    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
316773    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
316774    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
316775    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
316776    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
316777    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
316778    +          +      0.3429043319369 * S_NumDealsPurchases
316779    +          +     0.71313309767469 * S_NumDistPurchases
316780    +          +     0.06017757740083 * S_NumStorePurchases
316781    +          +    -0.19817724925068 * S_NumWebPurchases
316782    +          +     1.34164122205952 * S_NumWebVisitsMonth
316783    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
316784    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
316785    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
316786    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
316787    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
316788    +        S_Income  +     -0.0027232441092 * S_Kidhome
316789    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
316790    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
316791    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
316792    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
316793    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
316794    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
316795    +          +      0.4576973746858 * S_NumDealsPurchases
316796    +          +     0.15590877272659 * S_NumDistPurchases
316797    +          +    -0.33414539713736 * S_NumStorePurchases
316798    +          +    -0.39370244666257 * S_NumWebPurchases
316799    +          +     0.52596714886704 * S_NumWebVisitsMonth
316800    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
316801    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
316802    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
316803    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
316804    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
316805    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
316806    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
316807    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
316808    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
316809    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
316810    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
316811    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
316812    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
316813    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
316814    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
316815    +        EducationGraduation  +      -0.333138438339 * EducationMaster
316816    +          +      0.4663802937397 * Marital_StatusDivorced
316817    +          +    -1.27401898796099 * Marital_StatusMarried
316818    +          +      1.3125969368079 * Marital_StatusSingle
316819    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
316820    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
316821    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
316822    +        EducationGraduation  +     0.00771527138053 * EducationMaster
316823    +          +     0.07419179522004 * Marital_StatusDivorced
316824    +          +     0.00234615813337 * Marital_StatusMarried
316825    +          +    -0.00725460458412 * Marital_StatusSingle
316826    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
316827    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
316828    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
316829    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
316830    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
316831    +END;
MPRINT(EM_DIAGRAM):   END;
316832    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316833    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
316834    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
316835    +END;
MPRINT(EM_DIAGRAM):   END;
316836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316837    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
316838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316840    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
316841    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
316842    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
316843    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
316844    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
316845    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
316846    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
316847    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
316848    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
316849    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
316850    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
316851    +END;
MPRINT(EM_DIAGRAM):   END;
316852    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316853    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
316854    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
316855    +END;
MPRINT(EM_DIAGRAM):   END;
316856    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
316857    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
316858    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
316859    +END;
MPRINT(EM_DIAGRAM):   END;
316860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316861    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
316862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316863    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
316864    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
316865    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
316866    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
316867    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
316868    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
316869    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
316870    +END;
MPRINT(EM_DIAGRAM):   END;
316871    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316872    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
316873    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316874    +drop
316875    +H11
316876    +H12
316877    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
316878    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316879     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
316880     quit;
316881     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316882     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316883     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316884     retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
316885     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

316887     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316888     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316890     proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
316891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316893     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316894     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316895     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316896     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316897     proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
316898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316899     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316900     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316901     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316902     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316903     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316904     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316905     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316906     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316907     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316907   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

316908     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316909     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
316910     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

316911     filename _pref
316911   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
316912     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316913     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
316914    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316915    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
316916    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316917    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
316918    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
316919    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316920     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
316921     quit;
316922     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316923     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316924     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316925     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
316926     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316928     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316929     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316931     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
316932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316934     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316935     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316936     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316938     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
316939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316940     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316941     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316943     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316944     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316945     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316946     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316947     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316948     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316948   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

316949     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316950     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
316951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316952     filename _pref
316952   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
316953     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316954     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
316955    +
316956    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
316957    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
316957   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
316958    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
316959    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
316960    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
316961    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
316962    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316963     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
316964     quit;
316965     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316966     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316967     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316968     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
316969     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316971     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316972     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316974     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
316975     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

316977     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316978     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316979     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316980     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316981     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
316982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316983     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316984     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316986     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316987     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316988     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316989     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316990     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316991     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316991   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

316992     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

316993     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
316994     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316995     filename _pref
316995   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
316996     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316997     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
316998    +
316999    +
317000    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
317001    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
317002    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
317003    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
317004    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
317005    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317006    +
317007    +
317008    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
317009    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
317010    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
317011    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
317012    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
317013    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317014    +
317015    +
317016    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
317017    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
317018    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
317019    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
317020    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
317021    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317022    +
317023    +
317024    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
317025    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
317026    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
317027    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
317028    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
317029    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317030    +
317031    +
317032    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
317033    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
317034    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
317035    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
317036    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
317037    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317038    +
317039    +
317040    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
317041    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
The SAS System

317042    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
317043    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
317044    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
317045    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317046    +
317047    +
317048    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
317049    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
317050    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
317051    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
317052    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
317053    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317054    +
317055    +
317056    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
317057    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
317058    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
317059    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
317060    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
317061    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317062    +if
317063    +_FILTERNORM1 not in ( '.')
317064    + and
317065    +_FILTERNORM2 not in ( '.')
317066    + and
317067    +_FILTERNORM3 not in ( '.')
317068    + and
317069    +_FILTERNORM4 not in ( '.')
317070    + and
317071    +_FILTERNORM5 not in ( '.')
317072    + and
317073    +_FILTERNORM6 not in ( '.')
317074    + and
317075    +_FILTERNORM7 not in ( ' ')
317076    + and
317077    +_FILTERNORM8 not in ( ' ')
317078    +and
317079    +( Dt_Customer ne .)
317080    +and ( Income ne . and (Income<=107000))
317081    +and ( Kidhome ne .)
317082    +and ( MntFishProducts ne .)
317083    +and ( MntFruits ne .)
317084    +and ( MntGoldProds ne .)
317085    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
317086    +and ( MntSweetProducts ne .)
317087    +and ( MntWines ne .)
317088    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
317089    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
317090    +and ( NumStorePurchases ne .)
317091    +and ( NumWebPurchases ne .)
317092    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
317093    +and ( Recency ne .)
317094    +and ( Teenhome ne .)
317095    +and ( Year_Birth ne .)
317096    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
317097    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
317098    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
317099    +end;
MPRINT(EM_DIAGRAM):   end;
317100    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
317101    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317102     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
317103     quit;
317104     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317105     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317106     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317107     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
317108     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317110     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317113     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
317114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317116     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317117     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317118     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

317120     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
317121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

317122     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317123     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

317125     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317126     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317127     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317128     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317129     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317130     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317130   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

317131     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317132     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
317133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317134     %macro varDept(fcmpdata=,id=);
317135     %global nobs&id scoreFlag&id;
317136     %let scoreFlag&id = 0;
317137     %if &id=1 or ^&fcmpStart %then %do;
317138     proc sort data=&fcmpdata out=_temp&id nodupkey;
317139     by NAME;
317140     where id=&id and LHS in( %let j=1;
317141     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
317142     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
317143     "&var" %let j = %eval(&j+1);
317144     %end;
317145     );
317146     run;
317147     %let dsid = %sysfunc(open(_temp&id));
317148     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317149     %let dsid = %sysfunc(close(&dsid));
317150     %if &&nobs&id %then %do;
317151     %let scoreFlag&id = 1;
317152     %let fcmpStart = 1;
317153     %end;
317154     %else %let fcmpStart = 0;
317155     %end;
317156     %else %do;
317157     proc sort data=&fcmpdata out=_tempid;
317158     where id=&id;
317159     by LHS;
317160     run;
317161     %let dsid = %sysfunc(open(_tempid));
317162     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317163     %let dsid = %sysfunc(close(&dsid));
317164     %if ^&&nobs&id %then %do;
317165     proc datasets lib=work nolist;
317166     delete _tempid;
317167     run;
317168     quit;
317169     %end;
317170     %else %do;
317171     data _tempAll;
317172     set %let j=%eval(&id-1);
317173     %do x=1 %to &j;
317174     %if &&nobs&x %then %do;
317175     _temp&x %end;
317176     %end;
317177     ;
317178     run;
317179     proc sql;
317180     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
317180   ! work._tempid p2 where p.name=p2.lhs;
317181     quit;
317182     data _temp&id;
317183     set _temp&id;
317184     where LHS ne '' and NAME ne '' and Node ne '';
317185     run;
317186     proc datasets lib=work nolist;
317187     delete _tempAll;
317188     run;
317189     %let dsid = %sysfunc(open(_temp&id));
317190     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317191     %let dsid = %sysfunc(close(&dsid));
317192     %if ^&&nobs&id %then %do;
317193     proc datasets lib=work nolist;
317194     delete _temp&id;
317195     run;
317196     quit;
317197     %end;
317198     %else %do;
317199     %let scoreFlag&id = 1;
317200     data _temp&id;
317201     set _temp&id;
317202     where LHS ne NAME and node ne '';
317203     run;
317204     %let dsid = %sysfunc(open(_temp&id));
317205     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317206     %let dsid = %sysfunc(close(&dsid));
317207     %if ^&&nobs&id %then %do;
317208     proc datasets lib=work nolist;
317209     delete _temp&id;
317210     run;
317211     quit;
317212     %end;
317213     %else %do;
317214     proc sort data=_temp&id nodupkey;
317215     by LHS NAME;
317216     run;
317217     %end;
317218     %end;
317219     %end;
317220     %end;
317221     %mend varDept;
317222     %macro optCode(outdata=fcmpdata);
317223     %global fcmpStart;
317224     %let fcmpStart = 0;
317225     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
317226     %let NumNodes=9;
317227     %do k=1 %to &NumNodes;
317228     %vardept(fcmpdata=&outdata, id=&k);
317229     %end;
317230     %mend optCode;
317231     %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

317232     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
317233     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
317234     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
317235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317236     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
317237     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
317238     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
317239     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

317240     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317241     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
317241   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

317242     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317243     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
317244     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
317245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

317246     filename _pref
317246   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
317247     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
317248     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
317249    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317250    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
317251    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317252    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
317253    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
317254    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
317255    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
317256    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
317257    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
317258    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
317259    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
317260    +LENGTH _WARN_ $4
317261    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
317262    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
317263    +
317264    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
317265    +
317266    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
317267    +
317268    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
317269    +
317270    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
317271    +
317272    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
317273    +
317274    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
317275    +
317276    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
317277    +
317278    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
317279    +
317280    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
317281    +
317282    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
317283    +
317284    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
317285    +
317286    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
317287    +
317288    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
317289    +
317290    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
317291    +
317292    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
317293    +
317294    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
317295    +
317296    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
317297    +
317298    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
317299    +
317300    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
317301    +
317302    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
317303    +
317304    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
317305    +
317306    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
317307    +
317308    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
317309    +
317310    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
317311    +
317312    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
317313    +
317314    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
317315    +
317316    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
317317    +
317318    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
317319    +
317320    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
317321    +
317322    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
317323    +
317324    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
317325    +
317326    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
317327    +
317328    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
317329    +
317330    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
317331    +
317332    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
317333    +
317334    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
317335    +
317336    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
317337    +
317338    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
317339    +
317340    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
317341    +
317342    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
317343    +
317344    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
317345    +
317346    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
317347    +
317348    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
317349    +
317350    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
317351    +
317352    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
317353    +
317354    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
317355    +
317356    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
317357    +
317358    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
317359    +
317360    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
317361    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
317362    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
317363    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
317364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317366    +end;
MPRINT(EM_DIAGRAM):   end;
317367    +else do;
MPRINT(EM_DIAGRAM):   else do;
317368    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317369    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
317370    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317371    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317372    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
317373    +   end;
MPRINT(EM_DIAGRAM):   end;
317374    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317375    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
317376    +   end;
MPRINT(EM_DIAGRAM):   end;
317377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317378    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
317379    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317380    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317381    +   end;
MPRINT(EM_DIAGRAM):   end;
317382    +end;
MPRINT(EM_DIAGRAM):   end;
317383    +
317384    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
317385    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
317386    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
317387    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317388    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317389    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317390    +end;
MPRINT(EM_DIAGRAM):   end;
317391    +else do;
MPRINT(EM_DIAGRAM):   else do;
317392    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317393    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
317394    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317395    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317396    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
317397    +   end;
MPRINT(EM_DIAGRAM):   end;
317398    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317399    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
317400    +   end;
MPRINT(EM_DIAGRAM):   end;
317401    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317402    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317403    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317404    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317405    +   end;
MPRINT(EM_DIAGRAM):   end;
317406    +end;
MPRINT(EM_DIAGRAM):   end;
317407    +
317408    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
317409    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
317410    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
317411    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317412    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317413    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317414    +end;
MPRINT(EM_DIAGRAM):   end;
317415    +else do;
MPRINT(EM_DIAGRAM):   else do;
317416    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317417    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
317418    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317419    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317420    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
317421    +   end;
MPRINT(EM_DIAGRAM):   end;
317422    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317423    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
317424    +   end;
MPRINT(EM_DIAGRAM):   end;
317425    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317426    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317429    +   end;
MPRINT(EM_DIAGRAM):   end;
317430    +end;
MPRINT(EM_DIAGRAM):   end;
317431    +
317432    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
317433    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
317434    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
317435    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317436    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317437    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317438    +end;
MPRINT(EM_DIAGRAM):   end;
317439    +else do;
MPRINT(EM_DIAGRAM):   else do;
317440    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317441    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
317442    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317443    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317444    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
317445    +   end;
MPRINT(EM_DIAGRAM):   end;
317446    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317447    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
317448    +   end;
MPRINT(EM_DIAGRAM):   end;
317449    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317450    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317451    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317452    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317453    +   end;
MPRINT(EM_DIAGRAM):   end;
317454    +end;
MPRINT(EM_DIAGRAM):   end;
317455    +
317456    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
317457    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
317458    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
317459    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317460    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317461    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317462    +end;
MPRINT(EM_DIAGRAM):   end;
317463    +else do;
MPRINT(EM_DIAGRAM):   else do;
317464    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317465    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
317466    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317467    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317468    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
317469    +   end;
MPRINT(EM_DIAGRAM):   end;
317470    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317471    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
317472    +   end;
MPRINT(EM_DIAGRAM):   end;
317473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317474    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317475    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317476    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317477    +   end;
MPRINT(EM_DIAGRAM):   end;
317478    +end;
MPRINT(EM_DIAGRAM):   end;
317479    +
317480    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
317481    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
317482    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
317483    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317486    +end;
MPRINT(EM_DIAGRAM):   end;
317487    +else do;
MPRINT(EM_DIAGRAM):   else do;
317488    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317489    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
317490    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317491    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317492    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
317493    +   end;
MPRINT(EM_DIAGRAM):   end;
317494    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317495    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
317496    +   end;
MPRINT(EM_DIAGRAM):   end;
317497    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317498    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317499    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317500    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317501    +   end;
MPRINT(EM_DIAGRAM):   end;
317502    +end;
MPRINT(EM_DIAGRAM):   end;
317503    +
317504    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
317505    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
317506    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
317507    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317510    +end;
MPRINT(EM_DIAGRAM):   end;
317511    +else do;
MPRINT(EM_DIAGRAM):   else do;
317512    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317513    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
317514    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317515    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
317516    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
317517    +   end;
MPRINT(EM_DIAGRAM):   end;
317518    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
317519    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
317520    +   end;
MPRINT(EM_DIAGRAM):   end;
317521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317522    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317523    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317524    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317525    +   end;
MPRINT(EM_DIAGRAM):   end;
317526    +end;
MPRINT(EM_DIAGRAM):   end;
317527    +
317528    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
317529    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
317530    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317531    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
317532    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
317533    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
317534    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
317535    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
317536    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317537    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317538    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317539    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317540    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317542    +end;
MPRINT(EM_DIAGRAM):   end;
317543    +else do;
MPRINT(EM_DIAGRAM):   else do;
317544    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
317545    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
317546    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317547    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
317548    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
317549    +   end;
MPRINT(EM_DIAGRAM):   end;
317550    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
317551    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
317552    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
317553    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
317554    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
317555    +   end;
MPRINT(EM_DIAGRAM):   end;
317556    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
317557    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
317558    +   end;
MPRINT(EM_DIAGRAM):   end;
317559    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
317560    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
317561    +   end;
MPRINT(EM_DIAGRAM):   end;
317562    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
317563    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
317564    +   end;
MPRINT(EM_DIAGRAM):   end;
317565    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317566    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317567    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317568    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317569    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317572    +   end;
MPRINT(EM_DIAGRAM):   end;
317573    +end;
MPRINT(EM_DIAGRAM):   end;
317574    +
317575    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
317576    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
317577    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
317578    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317579    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
317580    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
317581    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
317582    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
317583    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
317584    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317585    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317586    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317587    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317588    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317590    +end;
MPRINT(EM_DIAGRAM):   end;
317591    +else do;
MPRINT(EM_DIAGRAM):   else do;
317592    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
317593    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
317594    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317595    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
317596    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
317597    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
317598    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
317599    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
317600    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317601    +         end;
MPRINT(EM_DIAGRAM):   end;
317602    +         else do;
MPRINT(EM_DIAGRAM):   else do;
317603    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
317604    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
317605    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317606    +            end;
MPRINT(EM_DIAGRAM):   end;
317607    +         end;
MPRINT(EM_DIAGRAM):   end;
317608    +      end;
MPRINT(EM_DIAGRAM):   end;
317609    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317610    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
317611    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
317612    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317613    +         end;
MPRINT(EM_DIAGRAM):   end;
317614    +      end;
MPRINT(EM_DIAGRAM):   end;
317615    +   end;
MPRINT(EM_DIAGRAM):   end;
317616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317617    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
317618    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
317619    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317620    +      end;
MPRINT(EM_DIAGRAM):   end;
317621    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317622    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
317623    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
317624    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
317625    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
317626    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
317627    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317628    +         end;
MPRINT(EM_DIAGRAM):   end;
317629    +      end;
MPRINT(EM_DIAGRAM):   end;
317630    +   end;
MPRINT(EM_DIAGRAM):   end;
317631    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
317632    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317633    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317634    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317635    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317636    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317637    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317638    +   end;
MPRINT(EM_DIAGRAM):   end;
317639    +end;
MPRINT(EM_DIAGRAM):   end;
317640    +
317641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317642    +*** Checking missing input Interval
317643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
317644    +
317645    +IF NMISS(
317646    +   AcceptedCmpTotal ,
317647    +   Age ,
317648    +   Frq ,
317649    +   Income ,
317650    +   Kidhome ,
317651    +   Mnt ,
317652    +   MntFishProducts ,
317653    +   MntFruits ,
317654    +   MntGoldProds ,
317655    +   MntMeatProducts ,
317656    +   MntSweetProducts ,
317657    +   MntWines ,
317658    +   MonthsAsCustomer ,
317659    +   NumCatalogPurchases ,
317660    +   NumDealsPurchases ,
317661    +   NumDistPurchases ,
317662    +   NumStorePurchases ,
317663    +   NumWebPurchases ,
317664    +   NumWebVisitsMonth ,
317665    +   RFMstat ,
317666    +   RMntFrq ,
317667    +   Recency ,
317668    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
317669    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
317670    +
317671    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317672    +END;
MPRINT(EM_DIAGRAM):   END;
317673    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317674    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
317675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317676    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317677    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317678    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
317679    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
317680    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317681    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
317682    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
317683    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317684    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
317685    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
317686    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
317687    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
317688    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
317689    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317690    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
317691    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
317692    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
317693    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
317694    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
317695    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
317696    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
317697    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
317698    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317699    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
317700    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
317701    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
317702    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
317703    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
317704    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
317705    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
317706    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317707    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
317708    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
317709    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
317710    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317711    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
317712    +END;
MPRINT(EM_DIAGRAM):   END;
317713    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317714    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
317715    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317716    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
317717    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
317718    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
317719    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
317720    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317721    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
317722    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
317723    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
317724    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
317725    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
317726    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317727    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
317728    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
317729    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
317730    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
317731    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
317732    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
317733    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
317734    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
317735    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
317736    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
317737    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317738    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
317739    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
317740    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
317741    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
317742    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
317743    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
317744    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
317745    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
317746    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
317747    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
317748    +   ELSE S_NumCatalogPurchases
317749    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
317750    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
317751    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
317752    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317753    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
317754    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
317755    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
317756    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
317757    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
317758    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
317759    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
317760    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
317761    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
317762    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
317763    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
317764    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317765    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
317766    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
317767    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
317768    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
317769    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
317770    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
317771    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317772    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
317773    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
317774    +END;
MPRINT(EM_DIAGRAM):   END;
317775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317776    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
317777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317779    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
317780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317782    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
317783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317784    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317785    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
317786    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
317787    +        S_Income  +    -0.14142658616971 * S_Kidhome
317788    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
317789    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
317790    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
317791    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
317792    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
317793    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
317794    +          +     0.96837841774168 * S_NumDealsPurchases
317795    +          +      0.2846105381881 * S_NumDistPurchases
317796    +          +    -0.69514041792943 * S_NumStorePurchases
317797    +          +    -0.96425407351749 * S_NumWebPurchases
317798    +          +     0.79545449599683 * S_NumWebVisitsMonth
317799    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
317800    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
317801    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
317802    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
317803    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
317804    +        S_Income  +    -0.55432195959203 * S_Kidhome
317805    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
317806    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
317807    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
317808    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
317809    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
317810    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
317811    +          +      0.2190184330724 * S_NumDealsPurchases
317812    +          +    -0.01682909442896 * S_NumDistPurchases
317813    +          +    -0.70244951048552 * S_NumStorePurchases
317814    +          +     -0.3057457659316 * S_NumWebPurchases
317815    +          +     0.95928538762715 * S_NumWebVisitsMonth
317816    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
317817    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
317818    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
317819    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
317820    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
317821    +        S_Income  +    -0.06354861159882 * S_Kidhome
317822    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
317823    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
317824    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
317825    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
317826    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
317827    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
317828    +          +    -0.21394230159696 * S_NumDealsPurchases
317829    +          +    -0.23833771124663 * S_NumDistPurchases
317830    +          +     0.45832031017813 * S_NumStorePurchases
317831    +          +    -0.30226952040179 * S_NumWebPurchases
317832    +          +    -0.29796387184481 * S_NumWebVisitsMonth
317833    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
317834    +        S_RMntFrq  +     0.87067423045258 * S_Recency
317835    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
317836    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
317837    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
317838    +        S_Income  +    -0.04839586846715 * S_Kidhome
317839    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
317840    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
317841    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
317842    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
317843    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
317844    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
317845    +          +    -0.43749647771198 * S_NumDealsPurchases
317846    +          +     0.21263473847472 * S_NumDistPurchases
317847    +          +     0.26102168039141 * S_NumStorePurchases
317848    +          +     0.54921725943657 * S_NumWebPurchases
317849    +          +    -0.75685843498122 * S_NumWebVisitsMonth
317850    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
317851    +        S_RMntFrq  +     0.80536256822347 * S_Recency
317852    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
317853    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
317854    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
317855    +        S_Income  +     0.71499527198653 * S_Kidhome
317856    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
317857    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
317858    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
317859    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
317860    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
317861    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
317862    +          +     0.09436067776126 * S_NumDealsPurchases
317863    +          +    -0.02824201859641 * S_NumDistPurchases
317864    +          +    -0.06770433780564 * S_NumStorePurchases
317865    +          +    -0.07177620319715 * S_NumWebPurchases
317866    +          +    -0.75589979685266 * S_NumWebVisitsMonth
317867    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
317868    +        S_RMntFrq  +     0.94408788011429 * S_Recency
317869    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
317870    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
317871    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
317872    +        S_Income  +    -0.63474522042341 * S_Kidhome
317873    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
317874    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
317875    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
317876    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
317877    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
317878    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
317879    +          +    -0.51154511343396 * S_NumDealsPurchases
317880    +          +    -0.52422915823572 * S_NumDistPurchases
317881    +          +     0.30305498422357 * S_NumStorePurchases
317882    +          +     0.12197321559338 * S_NumWebPurchases
317883    +          +    -0.10520335422769 * S_NumWebVisitsMonth
317884    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
317885    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
317886    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
317887    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
317888    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
317889    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
317890    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
317891    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
317892    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
317893    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
317894    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
317895    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
317896    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
317897    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
317898    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
317899    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
317900    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
317901    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
317902    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
317903    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
317904    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
317905    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
317906    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
317907    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
317908    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
317909    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
317910    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
317911    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
317912    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
317913    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
317914    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
317915    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
317916    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
317917    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
317918    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
317919    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
317920    +          +     0.10234616400375 * Marital_StatusDivorced
317921    +          +     0.27961650739075 * Marital_StatusMarried
317922    +          +    -0.40239488723767 * Marital_StatusSingle
317923    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
317924    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
317925    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
317926    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
317927    +          +     0.46385792428023 * Marital_StatusDivorced
317928    +          +    -0.62344590646391 * Marital_StatusMarried
317929    +          +     0.61767209252062 * Marital_StatusSingle
317930    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
317931    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
317932    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
317933    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
317934    +          +    -0.07839612590836 * Marital_StatusDivorced
317935    +          +     0.35316864062221 * Marital_StatusMarried
317936    +          +    -0.10730136429834 * Marital_StatusSingle
317937    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
317938    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
317939    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
317940    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
317941    +          +    -0.09942175269886 * Marital_StatusDivorced
317942    +          +     0.24385460865335 * Marital_StatusMarried
317943    +          +    -0.33658955096296 * Marital_StatusSingle
317944    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
317945    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
317946    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
317947    +        EducationGraduation  +     0.37352174719748 * EducationMaster
317948    +          +    -0.08047852561096 * Marital_StatusDivorced
317949    +          +     1.16485862694561 * Marital_StatusMarried
317950    +          +    -0.94140251178566 * Marital_StatusSingle
317951    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
317952    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
317953    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
317954    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
317955    +          +    -0.16621963893391 * Marital_StatusDivorced
317956    +          +    -0.44542186297324 * Marital_StatusMarried
317957    +          +     0.42176133228308 * Marital_StatusSingle
317958    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
317959    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
317960    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
317961    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
317962    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
317963    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
317964    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
317965    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
317966    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
317967    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
317968    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
317969    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
317970    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
317971    +END;
MPRINT(EM_DIAGRAM):   END;
317972    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317973    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
317974    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
317975    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
317976    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
317977    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
317978    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
317979    +END;
MPRINT(EM_DIAGRAM):   END;
317980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317981    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
317982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317983    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317984    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
317985    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
317986    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
317987    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
317988    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
317989    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
317990    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
317991    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
317992    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
317993    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
317994    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
317995    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
317996    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
317997    +END;
MPRINT(EM_DIAGRAM):   END;
317998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317999    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
318000    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
318001    +END;
MPRINT(EM_DIAGRAM):   END;
318002    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
318003    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
318004    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
318005    +END;
MPRINT(EM_DIAGRAM):   END;
318006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318007    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
318008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318009    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
318010    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
318011    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
318012    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
318013    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
318014    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
318015    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
318016    +END;
MPRINT(EM_DIAGRAM):   END;
318017    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318018    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
318019    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318020    +drop
318021    +H11
318022    +H12
318023    +H13
318024    +H14
318025    +H15
318026    +H16
318027    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
318028    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318029     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
318030     quit;
318031     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318032     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318033     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318034     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
318035     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318037     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318038     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318040     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
318041     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318043     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318044     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318045     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318047     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
318048     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

318049     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318050     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318051     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318052     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318053     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318054     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318055     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318056     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318057     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318057   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

318058     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318059     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
318060     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318061     filename _pref
318061   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
318062     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318063     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
318064    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
318065    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
318066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
318067    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
318068    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
318069    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318070     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
318071     quit;
318072     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318073     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318074     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318075     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
318076     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318078     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318079     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318080     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318081     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
318082     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318084     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318085     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318086     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318088     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
318089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

318090     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318091     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318092     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318093     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318094     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318096     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318097     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318098     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318098   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

318099     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318100     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
318101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318102     filename _pref
318102   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
318103     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318104     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
318105    +
318106    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
318107    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
318107   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
318108    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
318109    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
318110    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
318111    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
318112    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318113     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
318114     quit;
318115     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318116     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318117     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318118     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
318119     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318121     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318122     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318123     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318124     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
318125     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318126     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318127     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318128     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318129     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318131     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
318132     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318133     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318134     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318136     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318137     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318138     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318139     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318140     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318141     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318141   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

318142     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318143     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
318144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318145     filename _pref
318145   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
318146     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318147     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
318148    +
318149    +
318150    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
318151    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
318152    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
318153    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
318154    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
318155    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318156    +
318157    +
318158    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
318159    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
318160    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
318161    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
318162    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
318163    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318164    +
318165    +
318166    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
318167    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
318168    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
318169    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
318170    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
318171    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318172    +
318173    +
318174    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
318175    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
318176    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
318177    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
318178    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
318179    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318180    +
318181    +
318182    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
318183    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
318184    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
318185    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
318186    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
318187    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318188    +
318189    +
318190    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
318191    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
318192    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
318193    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
318194    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
318195    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318196    +
318197    +
318198    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
318199    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
318200    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
318201    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
318202    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
318203    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318204    +
318205    +
318206    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
318207    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
318208    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
318209    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
318210    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
318211    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318212    +if
318213    +_FILTERNORM1 not in ( '.')
318214    + and
318215    +_FILTERNORM2 not in ( '.')
318216    + and
318217    +_FILTERNORM3 not in ( '.')
318218    + and
318219    +_FILTERNORM4 not in ( '.')
318220    + and
318221    +_FILTERNORM5 not in ( '.')
318222    + and
318223    +_FILTERNORM6 not in ( '.')
318224    + and
318225    +_FILTERNORM7 not in ( ' ')
318226    + and
318227    +_FILTERNORM8 not in ( ' ')
318228    +and
318229    +( Dt_Customer ne .)
318230    +and ( Income ne . and (Income<=107000))
318231    +and ( Kidhome ne .)
318232    +and ( MntFishProducts ne .)
318233    +and ( MntFruits ne .)
318234    +and ( MntGoldProds ne .)
318235    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
318236    +and ( MntSweetProducts ne .)
318237    +and ( MntWines ne .)
318238    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
318239    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
318240    +and ( NumStorePurchases ne .)
318241    +and ( NumWebPurchases ne .)
318242    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
318243    +and ( Recency ne .)
318244    +and ( Teenhome ne .)
318245    +and ( Year_Birth ne .)
318246    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
318247    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
318248    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
318249    +end;
MPRINT(EM_DIAGRAM):   end;
318250    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
318251    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318252     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
318253     quit;
318254     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318255     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318256     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318257     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
318258     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318260     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318261     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318263     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
318264     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318266     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318267     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318268     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318269     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318270     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
318271     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

318272     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318273     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318274     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318275     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318276     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318277     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318278     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318279     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318280     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318280   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

318281     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318282     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
318283     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318284     %macro varDept(fcmpdata=,id=);
318285     %global nobs&id scoreFlag&id;
318286     %let scoreFlag&id = 0;
318287     %if &id=1 or ^&fcmpStart %then %do;
318288     proc sort data=&fcmpdata out=_temp&id nodupkey;
318289     by NAME;
318290     where id=&id and LHS in( %let j=1;
318291     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
318292     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
318293     "&var" %let j = %eval(&j+1);
318294     %end;
318295     );
318296     run;
318297     %let dsid = %sysfunc(open(_temp&id));
318298     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
318299     %let dsid = %sysfunc(close(&dsid));
318300     %if &&nobs&id %then %do;
318301     %let scoreFlag&id = 1;
318302     %let fcmpStart = 1;
318303     %end;
318304     %else %let fcmpStart = 0;
318305     %end;
318306     %else %do;
318307     proc sort data=&fcmpdata out=_tempid;
318308     where id=&id;
318309     by LHS;
318310     run;
318311     %let dsid = %sysfunc(open(_tempid));
318312     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
318313     %let dsid = %sysfunc(close(&dsid));
318314     %if ^&&nobs&id %then %do;
318315     proc datasets lib=work nolist;
318316     delete _tempid;
318317     run;
318318     quit;
318319     %end;
318320     %else %do;
318321     data _tempAll;
318322     set %let j=%eval(&id-1);
318323     %do x=1 %to &j;
318324     %if &&nobs&x %then %do;
318325     _temp&x %end;
318326     %end;
318327     ;
318328     run;
318329     proc sql;
318330     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
318330   ! work._tempid p2 where p.name=p2.lhs;
318331     quit;
318332     data _temp&id;
318333     set _temp&id;
318334     where LHS ne '' and NAME ne '' and Node ne '';
318335     run;
318336     proc datasets lib=work nolist;
318337     delete _tempAll;
318338     run;
318339     %let dsid = %sysfunc(open(_temp&id));
318340     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
318341     %let dsid = %sysfunc(close(&dsid));
318342     %if ^&&nobs&id %then %do;
318343     proc datasets lib=work nolist;
318344     delete _temp&id;
318345     run;
318346     quit;
318347     %end;
318348     %else %do;
318349     %let scoreFlag&id = 1;
318350     data _temp&id;
318351     set _temp&id;
318352     where LHS ne NAME and node ne '';
318353     run;
318354     %let dsid = %sysfunc(open(_temp&id));
318355     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
318356     %let dsid = %sysfunc(close(&dsid));
318357     %if ^&&nobs&id %then %do;
318358     proc datasets lib=work nolist;
318359     delete _temp&id;
318360     run;
318361     quit;
318362     %end;
318363     %else %do;
318364     proc sort data=_temp&id nodupkey;
318365     by LHS NAME;
318366     run;
318367     %end;
318368     %end;
318369     %end;
318370     %end;
318371     %mend varDept;
318372     %macro optCode(outdata=fcmpdata);
318373     %global fcmpStart;
318374     %let fcmpStart = 0;
318375     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
318376     %let NumNodes=9;
318377     %do k=1 %to &NumNodes;
318378     %vardept(fcmpdata=&outdata, id=&k);
318379     %end;
318380     %mend optCode;
318381     %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

318382     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
318383     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
318384     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
318385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318386     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
318387     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
318388     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
318389     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318390     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318391     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
318391   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

318392     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

318393     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
318394     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
318395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318396     filename _pref
318396   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
318397     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318398     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
318399    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
318400    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
318401    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
318402    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
318403    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
318404    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
318405    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
318406    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
318407    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
318408    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
318409    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
318410    +LENGTH _WARN_ $4
318411    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
318412    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
318413    +
318414    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
318415    +
318416    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
318417    +
318418    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
318419    +
318420    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
318421    +
318422    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
318423    +
318424    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
318425    +
318426    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
318427    +
318428    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
318429    +
318430    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
318431    +
318432    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
318433    +
318434    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
318435    +
318436    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
318437    +
318438    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
318439    +
318440    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
318441    +
318442    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
318443    +
318444    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
318445    +
318446    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
318447    +
318448    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
318449    +
318450    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
318451    +
318452    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
318453    +
318454    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
318455    +
318456    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
318457    +
318458    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
318459    +
318460    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
318461    +
318462    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
318463    +
318464    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
318465    +
318466    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
318467    +
318468    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
318469    +
318470    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
318471    +
318472    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
318473    +
318474    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
318475    +
318476    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
318477    +
318478    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
318479    +
318480    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
318481    +
318482    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
318483    +
318484    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
318485    +
318486    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
318487    +
318488    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
318489    +
318490    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
318491    +
318492    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
318493    +
318494    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
318495    +
318496    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
318497    +
318498    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
318499    +
318500    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
318501    +
318502    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
318503    +
318504    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
318505    +
318506    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
318507    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
318508    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
318509    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
318510    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318511    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318512    +end;
MPRINT(EM_DIAGRAM):   end;
318513    +else do;
MPRINT(EM_DIAGRAM):   else do;
318514    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318515    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
318516    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318517    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318518    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
318519    +   end;
MPRINT(EM_DIAGRAM):   end;
318520    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318521    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
318522    +   end;
MPRINT(EM_DIAGRAM):   end;
318523    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318524    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
318525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318527    +   end;
MPRINT(EM_DIAGRAM):   end;
318528    +end;
MPRINT(EM_DIAGRAM):   end;
318529    +
318530    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
318531    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
318532    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
318533    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
318534    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318535    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318536    +end;
MPRINT(EM_DIAGRAM):   end;
318537    +else do;
MPRINT(EM_DIAGRAM):   else do;
318538    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318539    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
318540    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318541    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318542    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
318543    +   end;
MPRINT(EM_DIAGRAM):   end;
318544    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318545    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
318546    +   end;
MPRINT(EM_DIAGRAM):   end;
318547    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318548    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
318549    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318550    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318551    +   end;
MPRINT(EM_DIAGRAM):   end;
318552    +end;
MPRINT(EM_DIAGRAM):   end;
318553    +
318554    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
318555    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
318556    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
318557    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
318558    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318559    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318560    +end;
MPRINT(EM_DIAGRAM):   end;
318561    +else do;
MPRINT(EM_DIAGRAM):   else do;
318562    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318563    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
318564    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318565    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318566    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
318567    +   end;
MPRINT(EM_DIAGRAM):   end;
318568    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318569    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
318570    +   end;
MPRINT(EM_DIAGRAM):   end;
318571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318572    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
318573    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318574    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318575    +   end;
MPRINT(EM_DIAGRAM):   end;
318576    +end;
MPRINT(EM_DIAGRAM):   end;
318577    +
318578    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
318579    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
318580    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
318581    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
318582    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318583    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318584    +end;
MPRINT(EM_DIAGRAM):   end;
318585    +else do;
MPRINT(EM_DIAGRAM):   else do;
318586    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318587    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
318588    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318589    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318590    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
318591    +   end;
MPRINT(EM_DIAGRAM):   end;
318592    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318593    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
318594    +   end;
MPRINT(EM_DIAGRAM):   end;
318595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318596    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
318597    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318598    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318599    +   end;
MPRINT(EM_DIAGRAM):   end;
318600    +end;
MPRINT(EM_DIAGRAM):   end;
318601    +
318602    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
318603    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
318604    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
318605    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
318606    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318607    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318608    +end;
MPRINT(EM_DIAGRAM):   end;
318609    +else do;
MPRINT(EM_DIAGRAM):   else do;
318610    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318611    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
318612    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318613    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318614    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
318615    +   end;
MPRINT(EM_DIAGRAM):   end;
318616    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318617    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
318618    +   end;
MPRINT(EM_DIAGRAM):   end;
318619    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318620    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
318621    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318622    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318623    +   end;
MPRINT(EM_DIAGRAM):   end;
318624    +end;
MPRINT(EM_DIAGRAM):   end;
318625    +
318626    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
318627    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
318628    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
318629    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
318630    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318631    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318632    +end;
MPRINT(EM_DIAGRAM):   end;
318633    +else do;
MPRINT(EM_DIAGRAM):   else do;
318634    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318635    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
318636    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318637    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
318638    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
318639    +   end;
MPRINT(EM_DIAGRAM):   end;
318640    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
318641    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
318642    +   end;
MPRINT(EM_DIAGRAM):   end;
318643    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318644    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
318645    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318646    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318647    +   end;
MPRINT(EM_DIAGRAM):   end;
318648    +end;
MPRINT(EM_DIAGRAM):   end;
318649    +
318650    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
318651    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
318652    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
318653    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
318654    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318656    +end;
MPRINT(EM_DIAGRAM):   end;
318657    +else do;
MPRINT(EM_DIAGRAM):   else do;
318658    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
318659    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
318660    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318661    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
318662    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
318663    +   end;
MPRINT(EM_DIAGRAM):   end;
318664    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
318665    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
318666    +   end;
MPRINT(EM_DIAGRAM):   end;
318667    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318668    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
318669    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318670    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318671    +   end;
MPRINT(EM_DIAGRAM):   end;
318672    +end;
MPRINT(EM_DIAGRAM):   end;
318673    +
318674    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
318675    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
318676    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
318677    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
318678    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
318679    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
318680    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
318681    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
318682    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
318683    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
318684    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
318685    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
318686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318688    +end;
MPRINT(EM_DIAGRAM):   end;
318689    +else do;
MPRINT(EM_DIAGRAM):   else do;
318690    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
318691    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
318692    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318693    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
318694    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
318695    +   end;
MPRINT(EM_DIAGRAM):   end;
318696    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
318697    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
318698    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
318699    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
318700    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
318701    +   end;
MPRINT(EM_DIAGRAM):   end;
318702    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
318703    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
318704    +   end;
MPRINT(EM_DIAGRAM):   end;
318705    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
318706    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
318707    +   end;
MPRINT(EM_DIAGRAM):   end;
318708    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
318709    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
318710    +   end;
MPRINT(EM_DIAGRAM):   end;
318711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318712    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
318713    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
318714    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
318715    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
318716    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318717    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318718    +   end;
MPRINT(EM_DIAGRAM):   end;
318719    +end;
MPRINT(EM_DIAGRAM):   end;
318720    +
318721    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
318722    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
318723    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
318724    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
318725    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
318726    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
318727    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
318728    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
318729    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
318730    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318731    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318732    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318733    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318734    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318735    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318736    +end;
MPRINT(EM_DIAGRAM):   end;
318737    +else do;
MPRINT(EM_DIAGRAM):   else do;
318738    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
318739    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
318740    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318741    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
318742    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
318743    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
318744    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
318745    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
318746    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318747    +         end;
MPRINT(EM_DIAGRAM):   end;
318748    +         else do;
MPRINT(EM_DIAGRAM):   else do;
318749    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
318750    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
318751    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318752    +            end;
MPRINT(EM_DIAGRAM):   end;
318753    +         end;
MPRINT(EM_DIAGRAM):   end;
318754    +      end;
MPRINT(EM_DIAGRAM):   end;
318755    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318756    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
318757    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
318758    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318759    +         end;
MPRINT(EM_DIAGRAM):   end;
318760    +      end;
MPRINT(EM_DIAGRAM):   end;
318761    +   end;
MPRINT(EM_DIAGRAM):   end;
318762    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318763    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
318764    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
318765    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318766    +      end;
MPRINT(EM_DIAGRAM):   end;
318767    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318768    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
318769    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
318770    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
318771    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
318772    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
318773    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318774    +         end;
MPRINT(EM_DIAGRAM):   end;
318775    +      end;
MPRINT(EM_DIAGRAM):   end;
318776    +   end;
MPRINT(EM_DIAGRAM):   end;
318777    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
318778    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318779    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318780    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318781    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318782    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318783    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318784    +   end;
MPRINT(EM_DIAGRAM):   end;
318785    +end;
MPRINT(EM_DIAGRAM):   end;
318786    +
318787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318788    +*** Checking missing input Interval
318789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
318790    +
318791    +IF NMISS(
318792    +   AcceptedCmpTotal ,
318793    +   Age ,
318794    +   Frq ,
318795    +   Income ,
318796    +   Kidhome ,
318797    +   Mnt ,
318798    +   MntFishProducts ,
318799    +   MntFruits ,
318800    +   MntGoldProds ,
318801    +   MntMeatProducts ,
318802    +   MntSweetProducts ,
318803    +   MntWines ,
318804    +   MonthsAsCustomer ,
318805    +   NumCatalogPurchases ,
318806    +   NumDealsPurchases ,
318807    +   NumDistPurchases ,
318808    +   NumStorePurchases ,
318809    +   NumWebPurchases ,
318810    +   NumWebVisitsMonth ,
318811    +   RFMstat ,
318812    +   RMntFrq ,
318813    +   Recency ,
318814    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
318815    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
318816    +
318817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318818    +END;
MPRINT(EM_DIAGRAM):   END;
318819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318820    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
318821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318822    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318823    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318824    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
318825    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
318826    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318827    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
318828    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
318829    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318830    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
318831    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
318832    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
318833    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
318834    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
318835    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318836    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
318837    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
318838    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
318839    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
318840    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
318841    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
318842    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
318843    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
318844    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318845    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
318846    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
318847    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
318848    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
318849    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
318850    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
318851    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
318852    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318853    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
318854    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
318855    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
318856    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318857    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
318858    +END;
MPRINT(EM_DIAGRAM):   END;
318859    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318860    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
318861    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318862    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
318863    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
318864    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
318865    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
318866    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318867    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
318868    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
318869    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
318870    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
318871    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
318872    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318873    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
318874    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
318875    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
318876    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
318877    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
318878    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
318879    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
318880    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
318881    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
318882    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
318883    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318884    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
318885    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
318886    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
318887    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
318888    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
318889    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
318890    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
318891    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
318892    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
318893    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
318894    +   ELSE S_NumCatalogPurchases
318895    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
318896    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
318897    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
318898    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318899    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
318900    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
318901    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
318902    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
318903    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
318904    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
318905    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
318906    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
318907    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
318908    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
318909    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
318910    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318911    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
318912    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
318913    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
318914    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
318915    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
318916    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
318917    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318918    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
318919    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
318920    +END;
MPRINT(EM_DIAGRAM):   END;
318921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318922    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
318923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318925    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
318926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318928    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
318929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318930    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318931    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
318932    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
318933    +        S_Income  +    -0.27053363011695 * S_Kidhome
318934    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
318935    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
318936    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
318937    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
318938    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
318939    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
318940    +          +    -1.35624485206227 * S_NumDealsPurchases
318941    +          +    -0.54646115734684 * S_NumDistPurchases
318942    +          +     1.29794225108321 * S_NumStorePurchases
318943    +          +      1.8453064081809 * S_NumWebPurchases
318944    +          +    -0.92747144824026 * S_NumWebVisitsMonth
318945    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
318946    +        S_RMntFrq  +     0.73207333681971 * S_Recency
318947    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
318948    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
318949    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
318950    +        S_Income  +    -0.79821220724157 * S_Kidhome
318951    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
318952    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
318953    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
318954    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
318955    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
318956    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
318957    +          +     0.72513216556859 * S_NumDealsPurchases
318958    +          +    -0.15566774650584 * S_NumDistPurchases
318959    +          +     -0.8847675798982 * S_NumStorePurchases
318960    +          +    -0.79405200318252 * S_NumWebPurchases
318961    +          +     1.74003779802254 * S_NumWebVisitsMonth
318962    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
318963    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
318964    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
318965    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
318966    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
318967    +        S_Income  +    -0.58596240450544 * S_Kidhome
318968    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
318969    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
318970    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
318971    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
318972    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
318973    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
318974    +          +     0.17466385502192 * S_NumDealsPurchases
318975    +          +    -0.06219545947203 * S_NumDistPurchases
318976    +          +     0.16637546838853 * S_NumStorePurchases
318977    +          +    -0.06908729397635 * S_NumWebPurchases
318978    +          +     1.44269772444244 * S_NumWebVisitsMonth
318979    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
318980    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
318981    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
318982    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
318983    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
318984    +        S_Income  +    -0.42454238091412 * S_Kidhome
318985    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
318986    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
318987    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
318988    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
318989    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
318990    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
318991    +          +     0.77329078721398 * S_NumDealsPurchases
318992    +          +     0.31693324305765 * S_NumDistPurchases
318993    +          +    -1.08524196373091 * S_NumStorePurchases
318994    +          +    -0.96945384922979 * S_NumWebPurchases
318995    +          +     1.24659288571587 * S_NumWebVisitsMonth
318996    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
318997    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
318998    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
318999    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
319000    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
319001    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
319002    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
319003    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
319004    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
319005    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
319006    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
319007    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
319008    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
319009    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
319010    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
319011    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
319012    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
319013    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
319014    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
319015    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
319016    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
319017    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
319018    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
319019    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
319020    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
319021    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
319022    +          +     0.36788499721115 * Marital_StatusDivorced
319023    +          +    -0.16988636986433 * Marital_StatusMarried
319024    +          +    -0.24560973256761 * Marital_StatusSingle
319025    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
319026    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
319027    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
319028    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
319029    +          +     0.24497797058028 * Marital_StatusDivorced
319030    +          +    -1.44410245434424 * Marital_StatusMarried
319031    +          +     1.47441310087392 * Marital_StatusSingle
319032    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
319033    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
319034    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
319035    +        EducationGraduation  +     0.04653963359475 * EducationMaster
319036    +          +     0.15823225296452 * Marital_StatusDivorced
319037    +          +    -0.39129434667884 * Marital_StatusMarried
319038    +          +     0.84414069966504 * Marital_StatusSingle
319039    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
319040    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
319041    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
319042    +        EducationGraduation  +     0.40030852414737 * EducationMaster
319043    +          +     1.22039169814542 * Marital_StatusDivorced
319044    +          +     0.91592976063128 * Marital_StatusMarried
319045    +          +    -1.51267332883308 * Marital_StatusSingle
319046    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
319047    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
319048    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
319049    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
319050    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
319051    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
319052    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
319053    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
319054    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
319055    +END;
MPRINT(EM_DIAGRAM):   END;
319056    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
319057    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
319058    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
319059    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
319060    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
319061    +END;
MPRINT(EM_DIAGRAM):   END;
319062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319063    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
319064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319065    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
319066    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
319067    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
319068    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
319069    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
319070    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
319071    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
319072    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
319073    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
319074    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
319075    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
319076    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
319077    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
319078    +END;
MPRINT(EM_DIAGRAM):   END;
319079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
319080    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
319081    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
319082    +END;
MPRINT(EM_DIAGRAM):   END;
319083    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
319084    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
319085    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
319086    +END;
MPRINT(EM_DIAGRAM):   END;
319087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319088    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
319089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319090    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
319091    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
319092    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
319093    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
319094    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
319095    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
319096    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
319097    +END;
MPRINT(EM_DIAGRAM):   END;
319098    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
319099    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
319100    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
319101    +drop
319102    +H11
319103    +H12
319104    +H13
319105    +H14
319106    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
319107    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
319108     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
319109     quit;
319110     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
319111     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
319112     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
319113     retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
319114     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
319115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319116     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
319117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319119     proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
319120     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319122     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319123     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
319124     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
319125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319126     proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
319127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

319128     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
319129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319131     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319132     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
319133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319134     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319135     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319136     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
319136   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

319137     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319138     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
319139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319140     filename _pref
319140   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
319141     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
319142     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
319143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
319144    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
319145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
319146    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
319147    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
319148    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
319149     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
319150     quit;
319151     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
319152     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
319153     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
319154     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
319155     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
319156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319157     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
319158     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319160     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
319161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319162     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319163     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319164     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
319165     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
319166     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319167     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
319168     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

319169     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
319170     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319172     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319173     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
319174     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319175     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319176     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319177     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
319177   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

319178     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319179     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
319180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319181     filename _pref
319181   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
319182     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
319183     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
319184    +
319185    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
319186    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
319186   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
319187    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
319188    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
319189    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
319190    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
319191    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
319192     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
319193     quit;
319194     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
319195     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
319196     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
319197     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
319198     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
319199     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319200     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
319201     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319203     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
319204     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319205     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319206     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319207     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
319208     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
319209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319210     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
319211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319212     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
319213     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319214     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319215     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319216     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
319217     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319218     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319219     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319220     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
319220   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

319221     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319222     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
319223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319224     filename _pref
319224   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
319225     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
319226     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
319227    +
319228    +
319229    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
319230    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
319231    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
319232    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
319233    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
319234    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319235    +
319236    +
319237    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
319238    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
319239    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
319240    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
319241    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
319242    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319243    +
319244    +
319245    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
319246    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
319247    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
319248    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
319249    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
319250    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319251    +
319252    +
319253    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
319254    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
319255    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
319256    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
319257    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
319258    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319259    +
319260    +
319261    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
319262    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
319263    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
319264    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
319265    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
319266    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319267    +
319268    +
319269    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
319270    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
319271    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
319272    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
319273    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
319274    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319275    +
319276    +
319277    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
319278    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
319279    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
319280    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
319281    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
319282    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319283    +
319284    +
319285    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
319286    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
319287    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
319288    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
319289    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
319290    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319291    +if
319292    +_FILTERNORM1 not in ( '.')
319293    + and
319294    +_FILTERNORM2 not in ( '.')
319295    + and
319296    +_FILTERNORM3 not in ( '.')
319297    + and
319298    +_FILTERNORM4 not in ( '.')
319299    + and
319300    +_FILTERNORM5 not in ( '.')
319301    + and
319302    +_FILTERNORM6 not in ( '.')
319303    + and
319304    +_FILTERNORM7 not in ( ' ')
319305    + and
319306    +_FILTERNORM8 not in ( ' ')
319307    +and
319308    +( Dt_Customer ne .)
319309    +and ( Income ne . and (Income<=107000))
319310    +and ( Kidhome ne .)
319311    +and ( MntFishProducts ne .)
319312    +and ( MntFruits ne .)
319313    +and ( MntGoldProds ne .)
319314    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
319315    +and ( MntSweetProducts ne .)
319316    +and ( MntWines ne .)
319317    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
319318    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
319319    +and ( NumStorePurchases ne .)
319320    +and ( NumWebPurchases ne .)
319321    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
319322    +and ( Recency ne .)
319323    +and ( Teenhome ne .)
319324    +and ( Year_Birth ne .)
319325    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
319326    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
319327    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
319328    +end;
MPRINT(EM_DIAGRAM):   end;
319329    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
319330    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
319331     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
319332     quit;
319333     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
319334     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
319335     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
319336     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
319337     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
319338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319339     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
319340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319342     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
319343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319345     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319346     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
319347     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
319348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319349     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
319350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319351     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
319352     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319353     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

319354     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319355     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
319356     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319357     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319358     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319359     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
319359   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

319360     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319361     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
319362     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319363     %macro varDept(fcmpdata=,id=);
319364     %global nobs&id scoreFlag&id;
319365     %let scoreFlag&id = 0;
319366     %if &id=1 or ^&fcmpStart %then %do;
319367     proc sort data=&fcmpdata out=_temp&id nodupkey;
319368     by NAME;
319369     where id=&id and LHS in( %let j=1;
319370     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
319371     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
319372     "&var" %let j = %eval(&j+1);
319373     %end;
319374     );
319375     run;
319376     %let dsid = %sysfunc(open(_temp&id));
319377     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319378     %let dsid = %sysfunc(close(&dsid));
319379     %if &&nobs&id %then %do;
319380     %let scoreFlag&id = 1;
319381     %let fcmpStart = 1;
319382     %end;
319383     %else %let fcmpStart = 0;
319384     %end;
319385     %else %do;
319386     proc sort data=&fcmpdata out=_tempid;
319387     where id=&id;
319388     by LHS;
319389     run;
319390     %let dsid = %sysfunc(open(_tempid));
319391     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319392     %let dsid = %sysfunc(close(&dsid));
319393     %if ^&&nobs&id %then %do;
319394     proc datasets lib=work nolist;
319395     delete _tempid;
319396     run;
319397     quit;
319398     %end;
319399     %else %do;
319400     data _tempAll;
319401     set %let j=%eval(&id-1);
319402     %do x=1 %to &j;
319403     %if &&nobs&x %then %do;
319404     _temp&x %end;
319405     %end;
319406     ;
319407     run;
319408     proc sql;
319409     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
319409   ! work._tempid p2 where p.name=p2.lhs;
319410     quit;
319411     data _temp&id;
319412     set _temp&id;
319413     where LHS ne '' and NAME ne '' and Node ne '';
319414     run;
319415     proc datasets lib=work nolist;
319416     delete _tempAll;
319417     run;
319418     %let dsid = %sysfunc(open(_temp&id));
319419     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319420     %let dsid = %sysfunc(close(&dsid));
319421     %if ^&&nobs&id %then %do;
319422     proc datasets lib=work nolist;
319423     delete _temp&id;
319424     run;
319425     quit;
319426     %end;
319427     %else %do;
319428     %let scoreFlag&id = 1;
319429     data _temp&id;
319430     set _temp&id;
319431     where LHS ne NAME and node ne '';
319432     run;
319433     %let dsid = %sysfunc(open(_temp&id));
319434     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319435     %let dsid = %sysfunc(close(&dsid));
319436     %if ^&&nobs&id %then %do;
319437     proc datasets lib=work nolist;
319438     delete _temp&id;
319439     run;
319440     quit;
319441     %end;
319442     %else %do;
319443     proc sort data=_temp&id nodupkey;
319444     by LHS NAME;
319445     run;
319446     %end;
319447     %end;
319448     %end;
319449     %end;
319450     %mend varDept;
319451     %macro optCode(outdata=fcmpdata);
319452     %global fcmpStart;
319453     %let fcmpStart = 0;
319454     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
319455     %let NumNodes=9;
319456     %do k=1 %to &NumNodes;
319457     %vardept(fcmpdata=&outdata, id=&k);
319458     %end;
319459     %mend optCode;
319460     %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

319461     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
319462     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
319463     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
319464     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319465     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
319466     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
319467     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
319468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319469     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319470     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
319470   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

319471     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

319472     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
319473     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
319474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

319475     filename _pref
319475   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
319476     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
319477     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
319478    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
319479    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
319480    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
319481    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
319482    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
319483    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
319484    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
319485    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
319486    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
319487    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
319488    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
319489    +LENGTH _WARN_ $4
319490    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
319491    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
319492    +
319493    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
319494    +
319495    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
319496    +
319497    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
319498    +
319499    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
319500    +
319501    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
319502    +
319503    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
319504    +
319505    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
319506    +
319507    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
319508    +
319509    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
319510    +
319511    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
319512    +
319513    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
319514    +
319515    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
319516    +
319517    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
319518    +
319519    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
319520    +
319521    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
319522    +
319523    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
319524    +
319525    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
319526    +
319527    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
319528    +
319529    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
319530    +
319531    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
319532    +
319533    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
319534    +
319535    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
319536    +
319537    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
319538    +
319539    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
319540    +
319541    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
319542    +
319543    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
319544    +
319545    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
319546    +
319547    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
319548    +
319549    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
319550    +
319551    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
319552    +
319553    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
319554    +
319555    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
319556    +
319557    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
319558    +
319559    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
319560    +
319561    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
319562    +
319563    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
319564    +
319565    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
319566    +
319567    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
319568    +
319569    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
319570    +
319571    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
319572    +
319573    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
319574    +
319575    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
319576    +
319577    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
319578    +
319579    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
319580    +
319581    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
319582    +
319583    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
319584    +
319585    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
319586    +
319587    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
319588    +
319589    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
319590    +
319591    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
319592    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
319593    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
319594    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
319595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319597    +end;
MPRINT(EM_DIAGRAM):   end;
319598    +else do;
MPRINT(EM_DIAGRAM):   else do;
319599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319600    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
319601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319602    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319603    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
319604    +   end;
MPRINT(EM_DIAGRAM):   end;
319605    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319606    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
319607    +   end;
MPRINT(EM_DIAGRAM):   end;
319608    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319609    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
319610    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319611    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319612    +   end;
MPRINT(EM_DIAGRAM):   end;
319613    +end;
MPRINT(EM_DIAGRAM):   end;
319614    +
319615    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
319616    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
319617    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
319618    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
319619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319621    +end;
MPRINT(EM_DIAGRAM):   end;
319622    +else do;
MPRINT(EM_DIAGRAM):   else do;
319623    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319624    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
319625    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319626    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319627    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
319628    +   end;
MPRINT(EM_DIAGRAM):   end;
319629    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319630    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
319631    +   end;
MPRINT(EM_DIAGRAM):   end;
319632    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319633    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
319634    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319635    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319636    +   end;
MPRINT(EM_DIAGRAM):   end;
319637    +end;
MPRINT(EM_DIAGRAM):   end;
319638    +
319639    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
319640    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
319641    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
319642    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
319643    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319644    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319645    +end;
MPRINT(EM_DIAGRAM):   end;
319646    +else do;
MPRINT(EM_DIAGRAM):   else do;
319647    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319648    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
319649    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319650    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319651    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
319652    +   end;
MPRINT(EM_DIAGRAM):   end;
319653    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319654    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
319655    +   end;
MPRINT(EM_DIAGRAM):   end;
319656    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319657    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
319658    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319659    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319660    +   end;
MPRINT(EM_DIAGRAM):   end;
319661    +end;
MPRINT(EM_DIAGRAM):   end;
319662    +
319663    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
319664    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
319665    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
319666    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
319667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319669    +end;
MPRINT(EM_DIAGRAM):   end;
319670    +else do;
MPRINT(EM_DIAGRAM):   else do;
319671    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319672    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
319673    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319674    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319675    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
319676    +   end;
MPRINT(EM_DIAGRAM):   end;
319677    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319678    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
319679    +   end;
MPRINT(EM_DIAGRAM):   end;
319680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319681    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
319682    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319683    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319684    +   end;
MPRINT(EM_DIAGRAM):   end;
319685    +end;
MPRINT(EM_DIAGRAM):   end;
319686    +
319687    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
319688    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
319689    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
319690    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
319691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319693    +end;
MPRINT(EM_DIAGRAM):   end;
319694    +else do;
MPRINT(EM_DIAGRAM):   else do;
319695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319696    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
319697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319698    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319699    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
319700    +   end;
MPRINT(EM_DIAGRAM):   end;
319701    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319702    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
319703    +   end;
MPRINT(EM_DIAGRAM):   end;
319704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319705    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
319706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319708    +   end;
MPRINT(EM_DIAGRAM):   end;
319709    +end;
MPRINT(EM_DIAGRAM):   end;
319710    +
319711    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
319712    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
319713    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
319714    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
319715    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319716    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319717    +end;
MPRINT(EM_DIAGRAM):   end;
319718    +else do;
MPRINT(EM_DIAGRAM):   else do;
319719    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319720    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
319721    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319722    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
319723    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
319724    +   end;
MPRINT(EM_DIAGRAM):   end;
319725    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
319726    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
319727    +   end;
MPRINT(EM_DIAGRAM):   end;
319728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319729    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
319730    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319731    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319732    +   end;
MPRINT(EM_DIAGRAM):   end;
319733    +end;
MPRINT(EM_DIAGRAM):   end;
319734    +
319735    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
319736    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
319737    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
319738    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
319739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319741    +end;
MPRINT(EM_DIAGRAM):   end;
319742    +else do;
MPRINT(EM_DIAGRAM):   else do;
319743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
319744    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
319745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319746    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
319747    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
319748    +   end;
MPRINT(EM_DIAGRAM):   end;
319749    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
319750    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
319751    +   end;
MPRINT(EM_DIAGRAM):   end;
319752    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319753    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
319754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319756    +   end;
MPRINT(EM_DIAGRAM):   end;
319757    +end;
MPRINT(EM_DIAGRAM):   end;
319758    +
319759    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
319760    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
319761    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
319762    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
319763    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
319764    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
319765    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
319766    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
319767    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
319768    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
319769    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
319770    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
319771    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319773    +end;
MPRINT(EM_DIAGRAM):   end;
319774    +else do;
MPRINT(EM_DIAGRAM):   else do;
319775    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
319776    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
319777    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319778    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
319779    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
319780    +   end;
MPRINT(EM_DIAGRAM):   end;
319781    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
319782    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
319783    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
319784    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
319785    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
319786    +   end;
MPRINT(EM_DIAGRAM):   end;
319787    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
319788    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
319789    +   end;
MPRINT(EM_DIAGRAM):   end;
319790    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
319791    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
319792    +   end;
MPRINT(EM_DIAGRAM):   end;
319793    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
319794    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
319795    +   end;
MPRINT(EM_DIAGRAM):   end;
319796    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319797    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
319798    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
319799    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
319800    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
319801    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319802    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319803    +   end;
MPRINT(EM_DIAGRAM):   end;
319804    +end;
MPRINT(EM_DIAGRAM):   end;
319805    +
319806    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
319807    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
319808    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
319809    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
319810    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
319811    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
319812    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
319813    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
319814    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
319815    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
319816    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
319817    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
319818    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
319819    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
319820    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319821    +end;
MPRINT(EM_DIAGRAM):   end;
319822    +else do;
MPRINT(EM_DIAGRAM):   else do;
319823    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
319824    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
319825    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
319826    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
319827    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
319828    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
319829    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
319830    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
319831    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
319832    +         end;
MPRINT(EM_DIAGRAM):   end;
319833    +         else do;
MPRINT(EM_DIAGRAM):   else do;
319834    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
319835    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
319836    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
319837    +            end;
MPRINT(EM_DIAGRAM):   end;
319838    +         end;
MPRINT(EM_DIAGRAM):   end;
319839    +      end;
MPRINT(EM_DIAGRAM):   end;
319840    +      else do;
MPRINT(EM_DIAGRAM):   else do;
319841    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
319842    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
319843    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
319844    +         end;
MPRINT(EM_DIAGRAM):   end;
319845    +      end;
MPRINT(EM_DIAGRAM):   end;
319846    +   end;
MPRINT(EM_DIAGRAM):   end;
319847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
319848    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
319849    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
319850    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
319851    +      end;
MPRINT(EM_DIAGRAM):   end;
319852    +      else do;
MPRINT(EM_DIAGRAM):   else do;
319853    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
319854    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
319855    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
319856    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
319857    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
319858    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
319859    +         end;
MPRINT(EM_DIAGRAM):   end;
319860    +      end;
MPRINT(EM_DIAGRAM):   end;
319861    +   end;
MPRINT(EM_DIAGRAM):   end;
319862    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
319863    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
319864    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
319865    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
319866    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
319867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
319868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319869    +   end;
MPRINT(EM_DIAGRAM):   end;
319870    +end;
MPRINT(EM_DIAGRAM):   end;
319871    +
319872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319873    +*** Checking missing input Interval
319874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
319875    +
319876    +IF NMISS(
319877    +   AcceptedCmpTotal ,
319878    +   Age ,
319879    +   Frq ,
319880    +   Income ,
319881    +   Kidhome ,
319882    +   Mnt ,
319883    +   MntFishProducts ,
319884    +   MntFruits ,
319885    +   MntGoldProds ,
319886    +   MntMeatProducts ,
319887    +   MntSweetProducts ,
319888    +   MntWines ,
319889    +   MonthsAsCustomer ,
319890    +   NumCatalogPurchases ,
319891    +   NumDealsPurchases ,
319892    +   NumDistPurchases ,
319893    +   NumStorePurchases ,
319894    +   NumWebPurchases ,
319895    +   NumWebVisitsMonth ,
319896    +   RFMstat ,
319897    +   RMntFrq ,
319898    +   Recency ,
319899    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
319900    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
319901    +
319902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
319903    +END;
MPRINT(EM_DIAGRAM):   END;
319904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319905    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
319906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
319907    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
319908    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
319909    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
319910    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
319911    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
319912    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
319913    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
319914    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
319915    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
319916    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
319917    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
319918    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
319919    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
319920    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
319921    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
319922    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
319923    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
319924    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
319925    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
319926    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
319927    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
319928    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
319929    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
319930    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
319931    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
319932    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
319933    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
319934    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
319935    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
319936    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
319937    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
319938    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
319939    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
319940    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
319941    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
319942    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
319943    +END;
MPRINT(EM_DIAGRAM):   END;
319944    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
319945    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
319946    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
319947    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
319948    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
319949    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
319950    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
319951    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
319952    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
319953    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
319954    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
319955    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
319956    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
319957    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
319958    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
319959    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
319960    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
319961    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
319962    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
319963    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
319964    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
319965    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
319966    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
319967    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
319968    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
319969    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
319970    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
319971    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
319972    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
319973    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
319974    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
319975    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
319976    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
319977    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
319978    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
319979    +   ELSE S_NumCatalogPurchases
319980    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
319981    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
319982    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
319983    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
319984    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
319985    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
319986    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
319987    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
319988    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
319989    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
319990    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
319991    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
319992    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
319993    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
319994    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
319995    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
319996    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
319997    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
319998    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
319999    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
320000    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
320001    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
320002    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
320003    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
320004    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
320005    +END;
MPRINT(EM_DIAGRAM):   END;
320006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320007    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
320008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320010    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
320011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320013    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
320014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320015    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
320016    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
320017    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
320018    +        S_Income  +    -0.43070069114587 * S_Kidhome
320019    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
320020    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
320021    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
320022    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
320023    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
320024    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
320025    +          +    -0.21858146166244 * S_NumDealsPurchases
320026    +          +     0.18409991080913 * S_NumDistPurchases
320027    +          +     0.35683163455594 * S_NumStorePurchases
320028    +          +     0.24429183714976 * S_NumWebPurchases
320029    +          +     -0.1263739191616 * S_NumWebVisitsMonth
320030    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
320031    +        S_RMntFrq  +      0.3452503815146 * S_Recency
320032    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
320033    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
320034    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
320035    +        S_Income  +     0.24623934031778 * S_Kidhome
320036    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
320037    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
320038    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
320039    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
320040    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
320041    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
320042    +          +    -0.08125614129909 * S_NumDealsPurchases
320043    +          +     0.38003696656333 * S_NumDistPurchases
320044    +          +     0.22006494588298 * S_NumStorePurchases
320045    +          +     0.26217639358993 * S_NumWebPurchases
320046    +          +    -0.56905781005459 * S_NumWebVisitsMonth
320047    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
320048    +        S_RMntFrq  +     0.33060213336674 * S_Recency
320049    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
320050    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
320051    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
320052    +        S_Income  +     0.18597632724783 * S_Kidhome
320053    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
320054    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
320055    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
320056    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
320057    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
320058    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
320059    +          +     0.08121213946217 * S_NumDealsPurchases
320060    +          +    -0.04963282234139 * S_NumDistPurchases
320061    +          +    -0.09521586837775 * S_NumStorePurchases
320062    +          +     0.00630626523742 * S_NumWebPurchases
320063    +          +    -0.03891587920939 * S_NumWebVisitsMonth
320064    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
320065    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
320066    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
320067    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
320068    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
320069    +        S_Income  +     0.25356767518099 * S_Kidhome
320070    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
320071    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
320072    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
320073    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
320074    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
320075    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
320076    +          +     0.83749876944877 * S_NumDealsPurchases
320077    +          +     0.29636537008068 * S_NumDistPurchases
320078    +          +    -0.61202052257506 * S_NumStorePurchases
320079    +          +    -0.96921731415369 * S_NumWebPurchases
320080    +          +     0.10056455703323 * S_NumWebVisitsMonth
320081    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
320082    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
320083    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
320084    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
320085    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
320086    +        S_Income  +    -0.66239517276633 * S_Kidhome
320087    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
320088    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
320089    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
320090    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
320091    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
320092    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
320093    +          +     0.63122884753912 * S_NumDealsPurchases
320094    +          +     0.00285388491049 * S_NumDistPurchases
320095    +          +    -0.76222252593182 * S_NumStorePurchases
320096    +          +    -0.71485070772733 * S_NumWebPurchases
320097    +          +     1.59020450778179 * S_NumWebVisitsMonth
320098    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
320099    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
320100    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
320101    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
320102    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
320103    +        S_Income  +    -0.22662005590555 * S_Kidhome
320104    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
320105    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
320106    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
320107    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
320108    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
320109    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
320110    +          +    -0.28143084367284 * S_NumDealsPurchases
320111    +          +     0.09640746756361 * S_NumDistPurchases
320112    +          +      0.1754994442449 * S_NumStorePurchases
320113    +          +     0.14321475617403 * S_NumWebPurchases
320114    +          +     -0.1908048876137 * S_NumWebVisitsMonth
320115    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
320116    +        S_RMntFrq  +     0.02280616139018 * S_Recency
320117    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
320118    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
320119    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
320120    +        S_Income  +    -0.45643247613458 * S_Kidhome
320121    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
320122    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
320123    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
320124    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
320125    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
320126    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
320127    +          +    -0.14623073736275 * S_NumDealsPurchases
320128    +          +      0.1591142102614 * S_NumDistPurchases
320129    +          +     0.10364624011419 * S_NumStorePurchases
320130    +          +     0.21545343951201 * S_NumWebPurchases
320131    +          +     0.61096997379603 * S_NumWebVisitsMonth
320132    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
320133    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
320134    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
320135    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
320136    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
320137    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
320138    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
320139    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
320140    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
320141    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
320142    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
320143    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
320144    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
320145    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
320146    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
320147    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
320148    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
320149    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
320150    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
320151    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
320152    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
320153    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
320154    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
320155    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
320156    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
320157    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
320158    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
320159    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
320160    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
320161    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
320162    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
320163    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
320164    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
320165    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
320166    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
320167    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
320168    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
320169    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
320170    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
320171    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
320172    +        EducationGraduation  +     0.00389495660452 * EducationMaster
320173    +          +     0.39856598367829 * Marital_StatusDivorced
320174    +          +    -0.45922754552461 * Marital_StatusMarried
320175    +          +     0.41270195301891 * Marital_StatusSingle
320176    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
320177    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
320178    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
320179    +        EducationGraduation  +      0.2609956614651 * EducationMaster
320180    +          +     0.12002180366932 * Marital_StatusDivorced
320181    +          +     0.50693056076018 * Marital_StatusMarried
320182    +          +    -0.40828651697464 * Marital_StatusSingle
320183    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
320184    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
320185    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
320186    +        EducationGraduation  +     0.20017847825938 * EducationMaster
320187    +          +    -0.05075621283629 * Marital_StatusDivorced
320188    +          +     0.06731276969307 * Marital_StatusMarried
320189    +          +     0.20458391966582 * Marital_StatusSingle
320190    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
320191    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
320192    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
320193    +        EducationGraduation  +     0.28829384238085 * EducationMaster
320194    +          +    -0.37925185401218 * Marital_StatusDivorced
320195    +          +     0.62971134740586 * Marital_StatusMarried
320196    +          +    -0.36562351730859 * Marital_StatusSingle
320197    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
320198    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
320199    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
320200    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
320201    +          +     0.84382044664305 * Marital_StatusDivorced
320202    +          +    -0.84062627203871 * Marital_StatusMarried
320203    +          +     0.74100406031127 * Marital_StatusSingle
320204    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
320205    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
320206    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
320207    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
320208    +          +     -0.1195105091383 * Marital_StatusDivorced
320209    +          +    -0.13486422945269 * Marital_StatusMarried
320210    +          +     0.33592403429156 * Marital_StatusSingle
320211    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
320212    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
320213    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
320214    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
320215    +          +     0.14792293029589 * Marital_StatusDivorced
320216    +          +    -0.96003393582564 * Marital_StatusMarried
320217    +          +     0.64637652355384 * Marital_StatusSingle
320218    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
320219    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
320220    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
320221    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
320222    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
320223    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
320224    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
320225    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
320226    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
320227    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
320228    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
320229    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
320230    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
320231    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
320232    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
320233    +END;
MPRINT(EM_DIAGRAM):   END;
320234    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
320235    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
320236    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
320237    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
320238    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
320239    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
320240    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
320241    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
320242    +END;
MPRINT(EM_DIAGRAM):   END;
320243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320244    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
320245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320246    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
320247    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
320248    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
320249    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
320250    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
320251    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
320252    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
320253    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
320254    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
320255    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
320256    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
320257    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
320258    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
320259    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
320260    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
320261    +END;
MPRINT(EM_DIAGRAM):   END;
320262    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
320263    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
320264    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
320265    +END;
MPRINT(EM_DIAGRAM):   END;
320266    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
320267    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
320268    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
320269    +END;
MPRINT(EM_DIAGRAM):   END;
320270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320271    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
320272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
320273    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
320274    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
320275    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
320276    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
320277    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
320278    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
320279    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
320280    +END;
MPRINT(EM_DIAGRAM):   END;
320281    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
320282    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
320283    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
320284    +drop
320285    +H11
320286    +H12
320287    +H13
320288    +H14
320289    +H15
320290    +H16
320291    +H17
320292    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
320293    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
320294     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
320295     quit;
320296     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
320297     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
320298     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
320299     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
320300     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
320301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320302     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
320303     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320305     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
320306     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320307     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320308     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320309     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
320310     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
320311     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320312     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
320313     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

320314     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
320315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320317     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320318     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
320319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320320     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320321     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
320322     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
320322   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

320323     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320324     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
320325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320326     filename _pref
320326   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
320327     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
320328     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
320329    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
320330    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
320331    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
320332    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
320333    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
320334    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
320335     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
320336     quit;
320337     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
320338     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
320339     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
320340     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
320341     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
320342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320343     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
320344     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320345     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320346     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
320347     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

320349     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320350     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
320351     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
320352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320353     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
320354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320355     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
320356     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320357     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320358     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320359     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
320360     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320361     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320362     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
320363     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
320363   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

320364     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320365     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
320366     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320367     filename _pref
320367   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
320368     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
320369     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
320370    +
320371    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
320372    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
320372   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
320373    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
320374    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
320375    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
320376    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
320377    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
320378     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
320379     quit;
320380     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
320381     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
320382     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
320383     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
320384     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
320385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320386     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
320387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320389     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
320390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320392     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320393     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
320394     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
320395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320396     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
320397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320398     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
320399     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320401     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320402     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
320403     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320404     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320405     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
320406     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
320406   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

320407     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320408     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
320409     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320410     filename _pref
320410   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
320411     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
320412     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
320413    +
320414    +
320415    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
320416    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
320417    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
320418    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
320419    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
320420    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320421    +
320422    +
320423    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
320424    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
320425    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
320426    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
320427    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
320428    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320429    +
320430    +
320431    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
320432    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
320433    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
320434    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
320435    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
320436    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320437    +
320438    +
320439    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
320440    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
320441    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
320442    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
320443    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
320444    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320445    +
320446    +
320447    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
320448    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
320449    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
320450    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
320451    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
320452    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320453    +
320454    +
320455    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
320456    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
320457    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
320458    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
320459    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
320460    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320461    +
320462    +
320463    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
320464    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
320465    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
320466    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
320467    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
320468    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320469    +
320470    +
320471    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
320472    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
320473    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
320474    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
320475    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
320476    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
320477    +if
320478    +_FILTERNORM1 not in ( '.')
320479    + and
320480    +_FILTERNORM2 not in ( '.')
320481    + and
320482    +_FILTERNORM3 not in ( '.')
320483    + and
320484    +_FILTERNORM4 not in ( '.')
320485    + and
320486    +_FILTERNORM5 not in ( '.')
320487    + and
320488    +_FILTERNORM6 not in ( '.')
320489    + and
320490    +_FILTERNORM7 not in ( ' ')
320491    + and
320492    +_FILTERNORM8 not in ( ' ')
320493    +and
320494    +( Dt_Customer ne .)
320495    +and ( Income ne . and (Income<=107000))
320496    +and ( Kidhome ne .)
320497    +and ( MntFishProducts ne .)
320498    +and ( MntFruits ne .)
320499    +and ( MntGoldProds ne .)
320500    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
320501    +and ( MntSweetProducts ne .)
320502    +and ( MntWines ne .)
320503    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
320504    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
320505    +and ( NumStorePurchases ne .)
320506    +and ( NumWebPurchases ne .)
320507    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
320508    +and ( Recency ne .)
320509    +and ( Teenhome ne .)
320510    +and ( Year_Birth ne .)
320511    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
320512    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
320513    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
320514    +end;
MPRINT(EM_DIAGRAM):   end;
320515    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
320516    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
320517     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
320518     quit;
320519     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
320520     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
320521     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
320522     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
320523     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
320524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320525     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
320526     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320527     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320528     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
320529     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320530     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

320531     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320532     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
320533     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
320534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320535     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
320536     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320537     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
320538     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320539     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320540     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
320541     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
320542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
320543     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320544     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
320545     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
320545   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

320546     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320547     proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl28_FCMP data=_tempx;
320548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL28_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL28_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320549     %macro varDept(fcmpdata=,id=);
320550     %global nobs&id scoreFlag&id;
320551     %let scoreFlag&id = 0;
320552     %if &id=1 or ^&fcmpStart %then %do;
320553     proc sort data=&fcmpdata out=_temp&id nodupkey;
320554     by NAME;
320555     where id=&id and LHS in( %let j=1;
320556     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
320557     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
320558     "&var" %let j = %eval(&j+1);
320559     %end;
320560     );
320561     run;
320562     %let dsid = %sysfunc(open(_temp&id));
320563     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
320564     %let dsid = %sysfunc(close(&dsid));
320565     %if &&nobs&id %then %do;
320566     %let scoreFlag&id = 1;
320567     %let fcmpStart = 1;
320568     %end;
320569     %else %let fcmpStart = 0;
320570     %end;
320571     %else %do;
320572     proc sort data=&fcmpdata out=_tempid;
320573     where id=&id;
320574     by LHS;
320575     run;
320576     %let dsid = %sysfunc(open(_tempid));
320577     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
320578     %let dsid = %sysfunc(close(&dsid));
320579     %if ^&&nobs&id %then %do;
320580     proc datasets lib=work nolist;
320581     delete _tempid;
320582     run;
320583     quit;
320584     %end;
320585     %else %do;
320586     data _tempAll;
320587     set %let j=%eval(&id-1);
320588     %do x=1 %to &j;
320589     %if &&nobs&x %then %do;
320590     _temp&x %end;
320591     %end;
320592     ;
320593     run;
320594     proc sql;
320595     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
320595   ! work._tempid p2 where p.name=p2.lhs;
320596     quit;
320597     data _temp&id;
320598     set _temp&id;
320599     where LHS ne '' and NAME ne '' and Node ne '';
320600     run;
320601     proc datasets lib=work nolist;
320602     delete _tempAll;
320603     run;
320604     %let dsid = %sysfunc(open(_temp&id));
320605     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
320606     %let dsid = %sysfunc(close(&dsid));
320607     %if ^&&nobs&id %then %do;
320608     proc datasets lib=work nolist;
320609     delete _temp&id;
320610     run;
320611     quit;
320612     %end;
320613     %else %do;
320614     %let scoreFlag&id = 1;
320615     data _temp&id;
320616     set _temp&id;
320617     where LHS ne NAME and node ne '';
320618     run;
320619     %let dsid = %sysfunc(open(_temp&id));
320620     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
320621     %let dsid = %sysfunc(close(&dsid));
320622     %if ^&&nobs&id %then %do;
320623     proc datasets lib=work nolist;
320624     delete _temp&id;
320625     run;
320626     quit;
320627     %end;
320628     %else %do;
320629     proc sort data=_temp&id nodupkey;
320630     by LHS NAME;
320631     run;
320632     %end;
320633     %end;
320634     %end;
320635     %end;
320636     %mend varDept;
320637     %macro optCode(outdata=fcmpdata);
320638     %global fcmpStart;
320639     %let fcmpStart = 0;
320640     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
320641     %let NumNodes=9;
320642     %do k=1 %to &NumNodes;
320643     %vardept(fcmpdata=&outdata, id=&k);
320644     %end;
320645     %mend optCode;
320646     %optcode(outData=EMWS8.Ensmbl28_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl28_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL28_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

320647     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
320648     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
320649     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
320650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320651     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
320652     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
320653     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
320654     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320655     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
320656     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
320656   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

320657     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

320658     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
320659     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
320660     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320661     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
320662     * Ensmbl28: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Computing metadata for TRAIN data;
320663     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL28_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl28\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl28_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl28_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl28_TRAIN out=WORK.M0H0YE2R noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0H0YE2R;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0H0YE2R(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0H0YE2R;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0H0YE2R;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3WV8I6B NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04FNKGL(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WV8I6B;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl28";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl28";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl28: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl28";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
320975     data EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl28_EMINFO;
320976     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
320977     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
320978     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
320982     run;
320983     proc sort data = EMWS8.Ensmbl28_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl28_EMINFO NOTHREADS;
320984     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
320985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL28_EMINFO.
NOTE: The data set EMWS8.ENSMBL28_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

320986     proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
320987     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
320988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.00 seconds
      

320989     proc sort data = EMWS8.Ensmbl28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
320990     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
320991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL28_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320992     data EMWS8.Ensmbl28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl28_EMINFO;
320993     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
320994     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
320995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL28_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

320996     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
320997     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
320998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
320999     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL28_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL28_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
