*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.01 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O01BSHJZ "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O01BSHJZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
75379      proc freq data=EMWS8.Varsel_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Varsel_VariableSet noprint;
75380      table ROLE*LEVEL/out=WORK.VarselMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.VarselMETA;
75381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK.VARSELMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
75382      proc print data=WORK.VarselMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.VarselMETA label noobs;
75383      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
75384      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
75385      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
75386      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
75387      run;
 
NOTE: There were 4 observations read from the data set WORK.VARSELMETA.
NOTE: The PROCEDURE PRINT printed page 54.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
75388      title10;
MPRINT(EM_DIAGRAM):   title10;
75389      data WORK.M1RWCA4L;
MPRINT(EM_DIAGRAM):    data WORK.M1RWCA4L;
75390      set WORK.M1RWCA4L;
MPRINT(EM_DIAGRAM):   set WORK.M1RWCA4L;
75391      if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
75392      role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
75393      output;
MPRINT(EM_DIAGRAM):   output;
75394      end;
MPRINT(EM_DIAGRAM):   end;
75395      if role = 'INPUT' and use in ('Y','D','N') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D','N') then do;
75396      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
75397      output;
MPRINT(EM_DIAGRAM):   output;
75398      end;
MPRINT(EM_DIAGRAM):   end;
75399      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
75400      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
75401      output;
MPRINT(EM_DIAGRAM):   output;
75402      end;
MPRINT(EM_DIAGRAM):   end;
75403      if role = 'FREQ' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' and use in ('Y', 'D') then do;
75404      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
75405      output;
MPRINT(EM_DIAGRAM):   output;
75406      end;
MPRINT(EM_DIAGRAM):   end;
75407      if role = 'REJECTED' and use in ('N', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then do;
75408      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
75409      output;
MPRINT(EM_DIAGRAM):   output;
75410      end;
MPRINT(EM_DIAGRAM):   end;
75411      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK.M1RWCA4L.
NOTE: The data set WORK.M1RWCA4L has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
75412      /*by pass cmeta */
75413      data WORK.M1RWCA4L;
MPRINT(EM_DIAGRAM):    data WORK.M1RWCA4L;
75414      set WORK.M1RWCA4L;
MPRINT(EM_DIAGRAM):   set WORK.M1RWCA4L;
75415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK.M1RWCA4L.
NOTE: The data set WORK.M1RWCA4L has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
75416      data WORK.M1W36TP1;
MPRINT(EM_DIAGRAM):    data WORK.M1W36TP1;
75417      set WORK.M1W36TP1;
MPRINT(EM_DIAGRAM):   set WORK.M1W36TP1;
75418      if role = 'INPUT' and use in ('N') then delete;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('N') then delete;
75419      if role = 'REJECTED' and use in ('N', 'D') then delete;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then delete;
75420      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK.M1W36TP1.
NOTE: The data set WORK.M1W36TP1 has 33 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Run proc dmdb with the specified maxlevel criterion.
75421      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
75422      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
75423      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
75424      %macro DMDBClass;
75425          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
75426         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
75427         HigherEducationBinary(ASC) Marital_Status(ASC)
75428      %mend DMDBClass;
75429      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
75430      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
75431      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
75432      %macro DMDBVar;
75433          AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
75434         MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
75435         NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
75436         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
75437      %mend DMDBVar;
75438      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75439      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
75440      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75441      libname _spdslib SPDE "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD17204_WN7LF-LEAVE_\Prc2";
MPRINT(EM_DIAGRAM):   libname _spdslib SPDE "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD17204_WN7LF-LEAVE_\Prc2";
NOTE: Libref _SPDSLIB was successfully assigned as follows:
      Engine:        SPDE
      Physical Name: C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD17204_WN7LF-LEAVE_\Prc2\
75442      proc dmdb batch data=EMWS8.Part_TRAIN
75443      dmdbcat=WORK.EM_DMDB
75444      maxlevel = 101
75445      out=_spdslib.EM_DMDB
75446      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Part_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 101 out=_spdslib.EM_DMDB ;
MPRINT(EM_DIAGRAM):   class
75447      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
75448      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
75449      target
75450      DepVar
75451      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
75452      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set _SPDSLIB.EM_DMDB has 2374 observations and 33 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
75453      quit;
 
75454      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
75455      * Varsel: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Input Variables Macro ;
75456      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
75457      %macro INPUTS;
75458                     ACCEPTEDCMP1 ACCEPTEDCMP2 ACCEPTEDCMP3 ACCEPTEDCMP4 ACCEPTEDCMP5
75459                    AcceptedCmpTotal AGE COMPLAIN EDUCATION FRQ HIGHEREDUCATIONBINARY INCOME
75460                    Kidhome MARITAL_STATUS MNT MNTFISHPRODUCTS MNTFRUITS MNTGOLDPRODS
75461                    MntMeatProducts MNTSWEETPRODUCTS MNTWINES MONTHSASCUSTOMER NUMCATALOGPURCHASES
75462                    NumDealsPurchases NUMDISTPURCHASES NUMSTOREPURCHASES NUMWEBPURCHASES
75463         NumWebVisitsMonth RFMSTAT RMNTFRQ RECENCY TEENHOME
75464      %mend INPUTS;
75465      proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB
75466      minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS8.Varsel_OUTGROUP outest=EMWS8.Varsel_OUTESTDMINE outeffect=EMWS8.Varsel_OUTEFFECT outrsquare =EMWS8.Varsel_OUTRSQUARE
75467      NOMONITOR
75468      PSHORT
75469      ;
MPRINT(EM_DIAGRAM):   proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS8.Varsel_OUTGROUP outest=EMWS8.Varsel_OUTESTDMINE outeffect=EMWS8.Varsel_OUTEFFECT outrsquare
=EMWS8.Varsel_OUTRSQUARE NOMONITOR PSHORT ;
MPRINT(EM_DIAGRAM):   var
75470      var %INPUTS;
MPRINT(INPUTS):   ACCEPTEDCMP1 ACCEPTEDCMP2 ACCEPTEDCMP3 ACCEPTEDCMP4 ACCEPTEDCMP5 AcceptedCmpTotal AGE COMPLAIN EDUCATION FRQ HIGHEREDUCATIONBINARY INCOME Kidhome MARITAL_STATUS MNT MNTFISHPRODUCTS MNTFRUITS MNTGOLDPRODS MntMeatProducts MNTSWEETPRODUCTS
MNTWINES MONTHSASCUSTOMER NUMCATALOGPURCHASES NumDealsPurchases NUMDISTPURCHASES NUMSTOREPURCHASES NUMWEBPURCHASES NumWebVisitsMonth RFMSTAT RMNTFRQ RECENCY TEENHOME
MPRINT(EM_DIAGRAM):  ;
75471      target DepVar;
MPRINT(EM_DIAGRAM):   target DepVar;
75472      code file="C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
75473      code file="C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas";
75474      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
NOTE: Number of threads reset to 1 because of fewer partitions.
 
Initial pass to compute R2s for all targets
2374 records read
NOTE: The full X'X matrix has 31 rows and columns.
 
Building X'X  for target: DepVar rows=32 memory=0.00 meg.
2374 records read
2374 records read
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas opened.
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas opened.
NOTE: There were 2374 observations read from the data set _SPDSLIB.EM_DMDB.
NOTE: The data set EMWS8.VARSEL_OUTGROUP has 5 observations and 8 variables.
NOTE: The data set EMWS8.VARSEL_OUTESTDMINE has 18 observations and 23 variables.
NOTE: The data set EMWS8.VARSEL_OUTEFFECT has 15 observations and 6 variables.
NOTE: The data set EMWS8.VARSEL_OUTRSQUARE has 57 observations and 4 variables.
NOTE: The PROCEDURE DMINE printed pages 55-60.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
75475      quit;
75476      proc print data =EMWS8.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   proc print data =EMWS8.Varsel_OUTEFFECT;
 
NOTE: There were 15 observations read from the data set EMWS8.VARSEL_OUTEFFECT.
NOTE: The PROCEDURE PRINT printed page 61.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
75477      proc print data =EMWS8.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   proc print data =EMWS8.Varsel_OUTRSQUARE;
75478      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set EMWS8.VARSEL_OUTRSQUARE.
NOTE: The PROCEDURE PRINT printed page 62.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
75479      data EMWS8.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_OUTESTDMINE;
75480      set EMWS8.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTESTDMINE;
75481      _uname_=upcase(_name_);
MPRINT(EM_DIAGRAM):   _uname_=upcase(_name_);
75482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.VARSEL_OUTESTDMINE.
NOTE: The data set EMWS8.VARSEL_OUTESTDMINE has 18 observations and 24 variables.
NOTE: DATA statement used (Total process time):
The SAS System
 
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
75483      proc sql;
MPRINT(EM_DIAGRAM):    proc sql;
75484      create table _tmpoutgroup as select distinct VARIABLE from EMWS8.Varsel_OUTGROUP where VARTYPE='GROUP';
MPRINT(EM_DIAGRAM):   create table _tmpoutgroup as select distinct VARIABLE from EMWS8.Varsel_OUTGROUP where VARTYPE='GROUP';
NOTE: Table WORK._TMPOUTGROUP created, with 1 rows and 1 columns.
 
75485      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
75486      run;
 
TAILEE=========================  applyRsq  Y
75487      data EMWS8.Varsel_OUTAOV16;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_OUTAOV16;
75488      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
75489      if STRIP(VARTYPE) eq 'AOV16' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'AOV16' then output;
75490      DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
75491      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
75492      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
75493      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
75494      label BIN = "Bin Cutoff";
MPRINT(EM_DIAGRAM):   label BIN = "Bin Cutoff";
75495      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTAOV16 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
75496      data EMWS8.Varsel_OUTGINT;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_OUTGINT;
75497      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
75498      if STRIP(VARTYPE) eq 'GINTER' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GINTER' then output;
75499      DROP VARTYPE BIN;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN;
75500      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
75501      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
75502      label VARIABLE = "Variable 1";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable 1";
75503      label VARIABLE2 = "Variable 2";
MPRINT(EM_DIAGRAM):   label VARIABLE2 = "Variable 2";
75504      label LEVEL = "Level 1";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level 1";
75505      label LEVEL2 = "Level 2";
MPRINT(EM_DIAGRAM):   label LEVEL2 = "Level 2";
75506      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTGINT has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
75507      data EMWS8.Varsel_OUTGVAR;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_OUTGVAR;
75508      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
75509      if STRIP(VARTYPE) eq 'GROUP' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GROUP' then output;
75510      DROP VARTYPE BIN VARIABLE2 LEVEL2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN VARIABLE2 LEVEL2;
75511      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
75512      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
75513      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
75514      label LEVEL = "Level";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level";
75515      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTGVAR has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
75516      quit;
 
75517      options nonotes nosource;
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put "Summary of Variable Selection from Training";
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Target Name : DepVar";
MPRINT(EM_DIAGRAM):   put "Target Level : BINARY";
MPRINT(EM_DIAGRAM):   put "Variable Selection Model : R-Square";
MPRINT(EM_DIAGRAM):   put '  ';
MPRINT(EM_DIAGRAM):   put "Total number of inputs : 33";
MPRINT(EM_DIAGRAM):   put "Total number of used inputs : 32";
MPRINT(EM_DIAGRAM):   put "Total number of unused inputs : 1";
MPRINT(EM_DIAGRAM):   put "Total number of rejected inputs : 20";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum missing percentage : 50";
MPRINT(EM_DIAGRAM):   put "NOTE: There is no rejected variable by maximum missing percentage";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum class level : 100";
MPRINT(EM_DIAGRAM):   put "NOTE:There is no rejected variable by maximum class level";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "NOTE: 1 variable has been rejected by unused variable rejection option";
MPRINT(EM_DIAGRAM):   put "NOTE: 1 group variable has been created";
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
75544      run;
 
NOTE: 16 lines were written to file PRINT.
NOTE: The DATA step printed page 63.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
75545      data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_RESULTEDVARS;
75546      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS8.VARSEL_RESULTEDVARS has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
75547      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
NOTE: Libref _SPDSLIB has been deassigned.
75548      *;
MPRINT(EM_DIAGRAM):    *;
75549      data EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_EMSCOREVAR;
75550      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
75551      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
75552      name = "G_Marital_Status";
MPRINT(EM_DIAGRAM):   name = "G_Marital_Status";
75553      file="VARSELCODE\G_Marital_Status.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Marital_Status.sas";
75554      output;
MPRINT(EM_DIAGRAM):   output;
75555      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: The data set EMWS8.VARSEL_EMSCOREVAR has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FWI34L "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FWI34L new;
MPRINT(EM_DIAGRAM):   run;
75657      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75658      *------------------------------------------------------------*;
75659      * Varsel: Scoring DATA data;
75660      *------------------------------------------------------------*;
75661      data EMWS8.Varsel_TRAIN
75662      / view=EMWS8.Varsel_TRAIN
75663      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_TRAIN / view=EMWS8.Varsel_TRAIN ;
75664      set EMWS8.Part_TRAIN
75665      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Part_TRAIN ;
75666      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
75667     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
75668     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
75669     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
75670     +
75671     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
75672     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
75673     +
75674     +
75675     +/*----G_Marital_Status begin----*/
75676     +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
75677     +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
75678     +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75679     +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
75680     +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
75681     +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
75682     +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
75683     +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
75684     +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
75685     +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
75686     +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
75687     +end;
MPRINT(EM_DIAGRAM):   end;
75688     +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
75689     +/*----G_Marital_Status end----*/
75690     +
75691     +
75692     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
75693     +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
75694     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75695      run;
 
NOTE: DATA STEP view saved on file EMWS8.VARSEL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
75696      quit;
75697      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
75698      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75699      *------------------------------------------------------------*;
75700      * Varsel: Scoring VALIDATE data;
75701      *------------------------------------------------------------*;
75702      data EMWS8.Varsel_VALIDATE
75703      / view=EMWS8.Varsel_VALIDATE
75704      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_VALIDATE / view=EMWS8.Varsel_VALIDATE ;
75705      set EMWS8.Part_VALIDATE
75706      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Part_VALIDATE ;
75707      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
75708     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
75709     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
75710     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
75711     +
75712     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
75713     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
75714     +
75715     +
75716     +/*----G_Marital_Status begin----*/
75717     +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
75718     +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
75719     +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75720     +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
75721     +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
75722     +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
75723     +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
75724     +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
75725     +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
75726     +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
75727     +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
75728     +end;
MPRINT(EM_DIAGRAM):   end;
75729     +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
75730     +/*----G_Marital_Status end----*/
75731     +
75732     +
75733     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
75734     +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
75735     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75736      run;
 
NOTE: DATA STEP view saved on file EMWS8.VARSEL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
75737      quit;
75738      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
75739      options nosource;
MPRINT(EM_DIAGRAM):    options nosource;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   label RSquare = "R-Square";
MPRINT(EM_DIAGRAM):   rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   if Type="AOV16" then delete;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set EMWS8.VARSEL_OUTRSQUARE.
NOTE: The data set EMWS8.VARSEL_R2DS has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_R2DS.
NOTE: The data set EMWS8.VARSEL_R2DS has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   label RSquare = "Sequential R-Square";
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   Rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.VARSEL_OUTEFFECT.
NOTE: The data set EMWS8.VARSEL_EFFECTDS has 15 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.VARSEL_EFFECTDS.
NOTE: The data set EMWS8.VARSEL_EFFECTDS has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Varsel_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Varsel_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Varsel_TRAIN out=WORK.M2N8RPJI noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2N8RPJI;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2N8RPJI(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2N8RPJI;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2N8RPJI;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1RTEC0J NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26MFAV1(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RTEC0J;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Varsel";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'ACCEPTEDCMP1' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP2' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP3' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP4' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP5' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'AGE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'COMPLAIN' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EDUCATION' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HIGHEREDUCATIONBINARY' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'KIDHOME' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MARITAL_STATUS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MNTFISHPRODUCTS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MNTWINES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MONTHSASCUSTOMER' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMDEALSPURCHASES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMDISTPURCHASES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMSTOREPURCHASES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMWEBVISITSMONTH' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'TEENHOME' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'YEAR_BIRTH' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_MARITAL_STATUS" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_RESULTEDVARS(keep = NAME ROLE LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   length COMMENT $300;
MPRINT(EM_DIAGRAM):   label COMMENT = "Reasons for Rejection";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'ACCEPTEDCMP1' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP2' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP3' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP4' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'ACCEPTEDCMP5' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'AGE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'COMPLAIN' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EDUCATION' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HIGHEREDUCATIONBINARY' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'KIDHOME' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MARITAL_STATUS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MNTFISHPRODUCTS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MNTWINES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MONTHSASCUSTOMER' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMDEALSPURCHASES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMDISTPURCHASES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMSTOREPURCHASES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NUMWEBVISITSMONTH' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'TEENHOME' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'YEAR_BIRTH' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Unused variable";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   if ROLE not in ('REJECTED' 'INPUT') then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = "YEAR_BIRTH" and role = 'INPUT' then COMMENT = "Varsel :Unused Input";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_UNUSEDINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'YEAR_BIRTH' then output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'YEAR_BIRTH' then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
76205      run;
 
76206      data EMWS8.Varsel_CMETA_NONREJECTS EMWS8.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_CMETA_NONREJECTS EMWS8.Varsel_CMETA_REJECTS;
76207      set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
76208      if ROLE ='REJECTED' then output EMWS8.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):   if ROLE ='REJECTED' then output EMWS8.Varsel_CMETA_REJECTS;
76209      else output EMWS8.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   else output EMWS8.Varsel_CMETA_NONREJECTS;
76210      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set EMWS8.VARSEL_CMETA_NONREJECTS has 18 observations and 20 variables.
NOTE: The data set EMWS8.VARSEL_CMETA_REJECTS has 20 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
76211      data EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_CMETA_TRAIN;
76212      set EMWS8.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_NONREJECTS;
76213      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.VARSEL_CMETA_NONREJECTS.
NOTE: The data set EMWS8.VARSEL_CMETA_TRAIN has 18 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
76214      data WORK._tmp_meta_;
MPRINT(EM_DIAGRAM):    data WORK._tmp_meta_;
76215      set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
76216      if ROLE ^= 'INPUT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^= 'INPUT' then delete;
76217      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK._TMP_META_ has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O236582U "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O236582U new;
MPRINT(EM_DIAGRAM):   run;
76241      %em_getActionStatus(emlib=EMWS8, nodeid=Varsel);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
76242      %let em_Train = Y;
76243      %let em_Report = Y;
76244      %let em_Score = Y;
76245      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
