*------------------------------------------------------------*
User:                VM-SAS
Date:                10 de Março de 2016
Time:                06H10m
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                10 de Março de 2016
Time:                06H10m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1F1EUFR "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1F1EUFR new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
45263      proc freq data=EMWS8.Varsel_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Varsel_VariableSet noprint;
45264      table ROLE*LEVEL/out=WORK.VarselMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.VarselMETA;
45265      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK.VARSELMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
45266      proc print data=WORK.VarselMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.VarselMETA label noobs;
45267      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
45268      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
45269      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
45270      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
45271      run;
 
NOTE: There were 4 observations read from the data set WORK.VARSELMETA.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45272      title10;
MPRINT(EM_DIAGRAM):   title10;
45273      data WORK.M3SHHPC7;
MPRINT(EM_DIAGRAM):    data WORK.M3SHHPC7;
45274      set WORK.M3SHHPC7;
MPRINT(EM_DIAGRAM):   set WORK.M3SHHPC7;
45275      if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
45276      role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
45277      output;
MPRINT(EM_DIAGRAM):   output;
45278      end;
MPRINT(EM_DIAGRAM):   end;
45279      if role = 'INPUT' and use in ('Y','D','N') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D','N') then do;
45280      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
45281      output;
MPRINT(EM_DIAGRAM):   output;
45282      end;
MPRINT(EM_DIAGRAM):   end;
45283      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
45284      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
45285      output;
MPRINT(EM_DIAGRAM):   output;
45286      end;
MPRINT(EM_DIAGRAM):   end;
45287      if role = 'FREQ' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' and use in ('Y', 'D') then do;
45288      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
45289      output;
MPRINT(EM_DIAGRAM):   output;
45290      end;
MPRINT(EM_DIAGRAM):   end;
45291      if role = 'REJECTED' and use in ('N', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then do;
45292      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
45293      output;
MPRINT(EM_DIAGRAM):   output;
45294      end;
MPRINT(EM_DIAGRAM):   end;
45295      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M3SHHPC7.
NOTE: The data set WORK.M3SHHPC7 has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45296      /*by pass cmeta */
45297      data WORK.M3SHHPC7;
MPRINT(EM_DIAGRAM):    data WORK.M3SHHPC7;
45298      set WORK.M3SHHPC7;
MPRINT(EM_DIAGRAM):   set WORK.M3SHHPC7;
45299      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M3SHHPC7.
NOTE: The data set WORK.M3SHHPC7 has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45300      data WORK.M3HH03J3;
MPRINT(EM_DIAGRAM):    data WORK.M3HH03J3;
45301      set WORK.M3HH03J3;
MPRINT(EM_DIAGRAM):   set WORK.M3HH03J3;
45302      if role = 'INPUT' and use in ('N') then delete;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('N') then delete;
45303      if role = 'REJECTED' and use in ('N', 'D') then delete;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then delete;
45304      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M3HH03J3.
NOTE: The data set WORK.M3HH03J3 has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Run proc dmdb with the specified maxlevel criterion.
45305      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
45306      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
45307      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45308      %macro DMDBClass;
45309          DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
45310      %mend DMDBClass;
45311      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45312      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
45313      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45314      %macro DMDBVar;
45315          Age Age_Exmpl2 CatPurchase Clothes Frq HigherEducation HouseKeeping Income
45316         Kitchen Mnt MonthsAsCustomer NetPurchase RMntFrq RMntFrq_Exmpl2 Rcn
45317         Recomendation SmallAppliances Toys
45318      %mend DMDBVar;
45319      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45320      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
45321      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45322      libname _spdslib SPDE "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD1700_VM-SAS-PC_\Prc2";
MPRINT(EM_DIAGRAM):   libname _spdslib SPDE "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD1700_VM-SAS-PC_\Prc2";
NOTE: Libref _SPDSLIB was successfully assigned as follows:
      Engine:        SPDE
      Physical Name: C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD1700_VM-SAS-PC_\Prc2\
45323      proc dmdb batch data=EMWS8.Part_TRAIN
45324      dmdbcat=WORK.EM_DMDB
45325      maxlevel = 101
45326      out=_spdslib.EM_DMDB
45327      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Part_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 101 out=_spdslib.EM_DMDB ;
MPRINT(EM_DIAGRAM):   class
45328      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
45329      var %DMDBVar;
MPRINT(DMDBVAR):   Age Age_Exmpl2 CatPurchase Clothes Frq HigherEducation HouseKeeping Income Kitchen Mnt MonthsAsCustomer NetPurchase RMntFrq RMntFrq_Exmpl2 Rcn Recomendation SmallAppliances Toys
MPRINT(EM_DIAGRAM):  ;
45330      target
45331      DepVar
45332      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
45333      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 1631   Memory used = 511K.
NOTE: There were 1631 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set _SPDSLIB.EM_DMDB has 1631 observations and 23 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45334      quit;
 
45335      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
45336      * Varsel: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Input Variables Macro ;
45337      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
45338      %macro INPUTS;
45339                     AGE AGE_EXMPL2 CATPURCHASE CLOTHES DEPENDENTS EDUCATION FRQ GENDER
45340                    HigherEducation HOUSEKEEPING INCOME KITCHEN MARITAL_STATUS MNT MONTHSASCUSTOMER
45341         NetPurchase RMNTFRQ RMNTFRQ_EXMPL2 RCN RECOMENDATION SMALLAPPLIANCES TOYS
45342      %mend INPUTS;
45343      proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB
45344      minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS8.Varsel_OUTGROUP outest=EMWS8.Varsel_OUTESTDMINE outeffect=EMWS8.Varsel_OUTEFFECT outrsquare =EMWS8.Varsel_OUTRSQUARE
45345      NOMONITOR
45346      PSHORT
45347      ;
MPRINT(EM_DIAGRAM):   proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS8.Varsel_OUTGROUP outest=EMWS8.Varsel_OUTESTDMINE outeffect=EMWS8.Varsel_OUTEFFECT outrsquare
=EMWS8.Varsel_OUTRSQUARE NOMONITOR PSHORT ;
MPRINT(EM_DIAGRAM):   var
45348      var %INPUTS;
MPRINT(INPUTS):   AGE AGE_EXMPL2 CATPURCHASE CLOTHES DEPENDENTS EDUCATION FRQ GENDER HigherEducation HOUSEKEEPING INCOME KITCHEN MARITAL_STATUS MNT MONTHSASCUSTOMER NetPurchase RMNTFRQ RMNTFRQ_EXMPL2 RCN RECOMENDATION SMALLAPPLIANCES TOYS
MPRINT(EM_DIAGRAM):  ;
45349      target DepVar;
MPRINT(EM_DIAGRAM):   target DepVar;
45350      code file="E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
45351      code file="E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas";
45352      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
NOTE: Number of threads reset to 1 because of fewer partitions.
 
Initial pass to compute R2s for all targets
1631 records read
NOTE: The full X'X matrix has 20 rows and columns.
 
Building X'X  for target: DepVar rows=21 memory=0.00 meg.
1631 records read
1631 records read
NOTE: External file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas opened.
NOTE: External file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMPUBLISHSCORE.sas opened.
NOTE: There were 1631 observations read from the data set _SPDSLIB.EM_DMDB.
NOTE: The data set EMWS8.VARSEL_OUTGROUP has 10 observations and 8 variables.
NOTE: The data set EMWS8.VARSEL_OUTESTDMINE has 13 observations and 23 variables.
NOTE: The data set EMWS8.VARSEL_OUTEFFECT has 9 observations and 6 variables.
NOTE: The data set EMWS8.VARSEL_OUTRSQUARE has 42 observations and 4 variables.
NOTE: The PROCEDURE DMINE printed pages 12-17.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.28 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45353      quit;
45354      proc print data =EMWS8.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   proc print data =EMWS8.Varsel_OUTEFFECT;
 
NOTE: There were 9 observations read from the data set EMWS8.VARSEL_OUTEFFECT.
NOTE: The PROCEDURE PRINT printed page 18.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45355      proc print data =EMWS8.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   proc print data =EMWS8.Varsel_OUTRSQUARE;
45356      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set EMWS8.VARSEL_OUTRSQUARE.
NOTE: The PROCEDURE PRINT printed page 19.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45357      data EMWS8.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_OUTESTDMINE;
45358      set EMWS8.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTESTDMINE;
45359      _uname_=upcase(_name_);
MPRINT(EM_DIAGRAM):   _uname_=upcase(_name_);
45360      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.VARSEL_OUTESTDMINE.
NOTE: The data set EMWS8.VARSEL_OUTESTDMINE has 13 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
45361      proc sql;
MPRINT(EM_DIAGRAM):    proc sql;
45362      create table _tmpoutgroup as select distinct VARIABLE from EMWS8.Varsel_OUTGROUP where VARTYPE='GROUP';
MPRINT(EM_DIAGRAM):   create table _tmpoutgroup as select distinct VARIABLE from EMWS8.Varsel_OUTGROUP where VARTYPE='GROUP';
NOTE: Table WORK._TMPOUTGROUP created, with 2 rows and 1 columns.
 
45363      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
45364      run;
 
TAILEE=========================  applyRsq  Y
45365      data EMWS8.Varsel_OUTAOV16;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_OUTAOV16;
45366      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
45367      if STRIP(VARTYPE) eq 'AOV16' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'AOV16' then output;
45368      DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
45369      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
45370      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
45371      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
45372      label BIN = "Bin Cutoff";
MPRINT(EM_DIAGRAM):   label BIN = "Bin Cutoff";
45373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTAOV16 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
45374      data EMWS8.Varsel_OUTGINT;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_OUTGINT;
45375      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
45376      if STRIP(VARTYPE) eq 'GINTER' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GINTER' then output;
45377      DROP VARTYPE BIN;
The SAS System
 
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN;
45378      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
45379      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
45380      label VARIABLE = "Variable 1";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable 1";
45381      label VARIABLE2 = "Variable 2";
MPRINT(EM_DIAGRAM):   label VARIABLE2 = "Variable 2";
45382      label LEVEL = "Level 1";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level 1";
45383      label LEVEL2 = "Level 2";
MPRINT(EM_DIAGRAM):   label LEVEL2 = "Level 2";
45384      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTGINT has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
45385      data EMWS8.Varsel_OUTGVAR;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_OUTGVAR;
45386      set EMWS8.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTGROUP;
45387      if STRIP(VARTYPE) eq 'GROUP' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GROUP' then output;
45388      DROP VARTYPE BIN VARIABLE2 LEVEL2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN VARIABLE2 LEVEL2;
45389      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
45390      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
45391      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
45392      label LEVEL = "Level";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level";
45393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_OUTGROUP.
NOTE: The data set EMWS8.VARSEL_OUTGVAR has 10 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45394      quit;
 
45395      options nonotes nosource;
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put "Summary of Variable Selection from Training";
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Target Name : DepVar";
MPRINT(EM_DIAGRAM):   put "Target Level : BINARY";
MPRINT(EM_DIAGRAM):   put "Variable Selection Model : R-Square";
MPRINT(EM_DIAGRAM):   put '  ';
MPRINT(EM_DIAGRAM):   put "Total number of inputs : 22";
MPRINT(EM_DIAGRAM):   put "Total number of used inputs : 22";
MPRINT(EM_DIAGRAM):   put "Total number of unused inputs : 0";
MPRINT(EM_DIAGRAM):   put "Total number of rejected inputs : 16";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum missing percentage : 50";
MPRINT(EM_DIAGRAM):   put "NOTE: There is no rejected variable by maximum missing percentage";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum class level : 100";
MPRINT(EM_DIAGRAM):   put "NOTE:There is no rejected variable by maximum class level";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "NOTE: 2 group variables have been created";
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
45421      run;
 
NOTE: 15 lines were written to file PRINT.
NOTE: The DATA step printed page 20.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45422      data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_RESULTEDVARS;
45423      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS8.VARSEL_RESULTEDVARS has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
45424      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
NOTE: Libref _SPDSLIB has been deassigned.
45425      *;
MPRINT(EM_DIAGRAM):    *;
45426      data EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_EMSCOREVAR;
45427      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
45428      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
45429      name = "G_Marital_Status";
MPRINT(EM_DIAGRAM):   name = "G_Marital_Status";
45430      file="VARSELCODE\G_Marital_Status.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Marital_Status.sas";
45431      output;
MPRINT(EM_DIAGRAM):   output;
45432      name = "G_Education";
MPRINT(EM_DIAGRAM):   name = "G_Education";
45433      file="VARSELCODE\G_Education.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Education.sas";
45434      output;
MPRINT(EM_DIAGRAM):   output;
45435      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: The data set EMWS8.VARSEL_EMSCOREVAR has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H10m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FFENBW "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FFENBW new;
MPRINT(EM_DIAGRAM):   run;
45537      filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45538      *------------------------------------------------------------*;
45539      * Varsel: Scoring DATA data;
45540      *------------------------------------------------------------*;
45541      data EMWS8.Varsel_TRAIN
45542      / view=EMWS8.Varsel_TRAIN
45543      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_TRAIN / view=EMWS8.Varsel_TRAIN ;
45544      set EMWS8.Part_TRAIN
45545      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Part_TRAIN ;
45546      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
45547     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
45548     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
45549     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
45550     +
45551     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
45552     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
45553     +
45554     +
45555     +/*----G_Marital_Status begin----*/
45556     +length _NORM12 $ 12;
MPRINT(EM_DIAGRAM):   length _NORM12 $ 12;
45557     +_NORM12 = put( Marital_Status , $12. );
MPRINT(EM_DIAGRAM):   _NORM12 = put( Marital_Status , $12. );
45558     +%DMNORMIP( _NORM12 )
MPRINT(DMNORMIP):   call dmnorm(_NORM12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   drop _NORM12;
MPRINT(EM_DIAGRAM):   select(_NORM12);
MPRINT(EM_DIAGRAM):   when("DIVORCED    " ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("MARRIED     " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("SINGLE      " ) G_Marital_Status = 3;
45559     +drop _NORM12;
MPRINT(EM_DIAGRAM):   when("TOGETHER    " ) G_Marital_Status = 2;
45560     +select(_NORM12);
MPRINT(EM_DIAGRAM):   when("WIDOW       " ) G_Marital_Status = 0;
45561     +  when("DIVORCED    " ) G_Marital_Status = 1;
45562     +  when("MARRIED     " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
45563     +  when("SINGLE      " ) G_Marital_Status = 3;
MPRINT(EM_DIAGRAM):   end;
45564     +  when("TOGETHER    " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
45565     +  when("WIDOW       " ) G_Marital_Status = 0;
45566     +  otherwise substr(_WARN_, 2, 1) = 'U';
45567     +end;
45568     +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
45569     +/*----G_Marital_Status end----*/
MPRINT(EM_DIAGRAM):   _NORM10 = put( Education , $10. );
45570     +
45571     +/*----G_Education begin----*/
45572     +length _NORM10 $ 10;
MPRINT(DMNORMIP):   call dmnorm(_NORM10,
45573     +_NORM10 = put( Education , $10. );
45574     +%DMNORMIP( _NORM10 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   drop _NORM10;
MPRINT(EM_DIAGRAM):   select(_NORM10);
MPRINT(EM_DIAGRAM):   when("2N CYCLE  " ) G_Education = 1;
MPRINT(EM_DIAGRAM):   when("BASIC     " ) G_Education = 2;
MPRINT(EM_DIAGRAM):   when("GRADUATION" ) G_Education = 2;
45575     +drop _NORM10;
MPRINT(EM_DIAGRAM):   when("MASTER    " ) G_Education = 0;
45576     +select(_NORM10);
MPRINT(EM_DIAGRAM):   when("PHD       " ) G_Education = 2;
45577     +  when("2N CYCLE  " ) G_Education = 1;
45578     +  when("BASIC     " ) G_Education = 2;
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
45579     +  when("GRADUATION" ) G_Education = 2;
MPRINT(EM_DIAGRAM):   end;
45580     +  when("MASTER    " ) G_Education = 0;
MPRINT(EM_DIAGRAM):   label G_Education= "Grouped Levels for Education";
45581     +  when("PHD       " ) G_Education = 2;
45582     +  otherwise substr(_WARN_, 2, 1) = 'U';
45583     +end;
45584     +label G_Education="Grouped Levels for Education";
MPRINT(EM_DIAGRAM):   ****************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
45585     +/*----G_Education end----*/
MPRINT(EM_DIAGRAM):   ****************************************;
45586     +
45587     +
45588     +****************************************;
45589     +*** End Scoring Code from PROC DMINE ***;
45590     +****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45591      run;
 
NOTE: DATA STEP view saved on file EMWS8.VARSEL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45592      quit;
45593      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
45594      filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45595      *------------------------------------------------------------*;
45596      * Varsel: Scoring VALIDATE data;
45597      *------------------------------------------------------------*;
45598      data EMWS8.Varsel_VALIDATE
45599      / view=EMWS8.Varsel_VALIDATE
45600      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_VALIDATE / view=EMWS8.Varsel_VALIDATE ;
45601      set EMWS8.Part_VALIDATE
45602      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Part_VALIDATE ;
45603      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
45604     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
45605     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
45606     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
45607     +
45608     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
45609     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
45610     +
45611     +
45612     +/*----G_Marital_Status begin----*/
45613     +length _NORM12 $ 12;
MPRINT(EM_DIAGRAM):   length _NORM12 $ 12;
45614     +_NORM12 = put( Marital_Status , $12. );
MPRINT(EM_DIAGRAM):   _NORM12 = put( Marital_Status , $12. );
45615     +%DMNORMIP( _NORM12 )
MPRINT(DMNORMIP):   call dmnorm(_NORM12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45616     +drop _NORM12;
MPRINT(EM_DIAGRAM):   drop _NORM12;
45617     +select(_NORM12);
MPRINT(EM_DIAGRAM):   select(_NORM12);
45618     +  when("DIVORCED    " ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED    " ) G_Marital_Status = 1;
45619     +  when("MARRIED     " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED     " ) G_Marital_Status = 2;
45620     +  when("SINGLE      " ) G_Marital_Status = 3;
MPRINT(EM_DIAGRAM):   when("SINGLE      " ) G_Marital_Status = 3;
45621     +  when("TOGETHER    " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER    " ) G_Marital_Status = 2;
45622     +  when("WIDOW       " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW       " ) G_Marital_Status = 0;
45623     +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
45624     +end;
MPRINT(EM_DIAGRAM):   end;
45625     +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
45626     +/*----G_Marital_Status end----*/
45627     +
45628     +/*----G_Education begin----*/
45629     +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
45630     +_NORM10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _NORM10 = put( Education , $10. );
45631     +%DMNORMIP( _NORM10 )
MPRINT(DMNORMIP):   call dmnorm(_NORM10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45632     +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
45633     +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
45634     +  when("2N CYCLE  " ) G_Education = 1;
MPRINT(EM_DIAGRAM):   when("2N CYCLE  " ) G_Education = 1;
45635     +  when("BASIC     " ) G_Education = 2;
MPRINT(EM_DIAGRAM):   when("BASIC     " ) G_Education = 2;
45636     +  when("GRADUATION" ) G_Education = 2;
MPRINT(EM_DIAGRAM):   when("GRADUATION" ) G_Education = 2;
45637     +  when("MASTER    " ) G_Education = 0;
MPRINT(EM_DIAGRAM):   when("MASTER    " ) G_Education = 0;
45638     +  when("PHD       " ) G_Education = 2;
MPRINT(EM_DIAGRAM):   when("PHD       " ) G_Education = 2;
45639     +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
45640     +end;
MPRINT(EM_DIAGRAM):   end;
45641     +label G_Education="Grouped Levels for Education";
MPRINT(EM_DIAGRAM):   label G_Education= "Grouped Levels for Education";
45642     +/*----G_Education end----*/
45643     +
45644     +
45645     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
45646     +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
45647     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45648      run;
 
NOTE: DATA STEP view saved on file EMWS8.VARSEL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45649      quit;
45650      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
45651      options nosource;
MPRINT(EM_DIAGRAM):    options nosource;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   label RSquare = "R-Square";
MPRINT(EM_DIAGRAM):   rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   if Type="AOV16" then delete;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set EMWS8.VARSEL_OUTRSQUARE.
NOTE: The data set EMWS8.VARSEL_R2DS has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS8.VARSEL_R2DS.
NOTE: The data set EMWS8.VARSEL_R2DS has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   label RSquare = "Sequential R-Square";
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   Rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.VARSEL_OUTEFFECT.
NOTE: The data set EMWS8.VARSEL_EFFECTDS has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.VARSEL_EFFECTDS.
NOTE: The data set EMWS8.VARSEL_EFFECTDS has 9 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Varsel_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Varsel_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Varsel_TRAIN out=WORK.M31STXMF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31STXMF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M31STXMF(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31STXMF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M31STXMF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1HFTJSD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03LJFMZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HFTJSD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Varsel";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'AGE_EXMPL2' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'CLOTHES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DEPENDENTS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EDUCATION' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GENDER' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HIGHEREDUCATION' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HOUSEKEEPING' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'KITCHEN' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MARITAL_STATUS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MONTHSASCUSTOMER' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NETPURCHASE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RMNTFRQ' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RCN' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'SMALLAPPLIANCES' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'TOYS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_MARITAL_STATUS" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_EDUCATION" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_RESULTEDVARS(keep = NAME ROLE LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   length COMMENT $300;
MPRINT(EM_DIAGRAM):   label COMMENT = "Reasons for Rejection";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'AGE_EXMPL2' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'CLOTHES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DEPENDENTS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EDUCATION' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GENDER' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HIGHEREDUCATION' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HOUSEKEEPING' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'KITCHEN' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MARITAL_STATUS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MONTHSASCUSTOMER' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'NETPURCHASE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RMNTFRQ' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RCN' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'SMALLAPPLIANCES' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'TOYS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   if ROLE not in ('REJECTED' 'INPUT') then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_UNUSEDINPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
46090      run;
 
46091      data EMWS8.Varsel_CMETA_NONREJECTS EMWS8.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_CMETA_NONREJECTS EMWS8.Varsel_CMETA_REJECTS;
46092      set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
46093      if ROLE ='REJECTED' then output EMWS8.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):   if ROLE ='REJECTED' then output EMWS8.Varsel_CMETA_REJECTS;
46094      else output EMWS8.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   else output EMWS8.Varsel_CMETA_NONREJECTS;
46095      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set EMWS8.VARSEL_CMETA_NONREJECTS has 12 observations and 20 variables.
NOTE: The data set EMWS8.VARSEL_CMETA_REJECTS has 16 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
46096      data EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Varsel_CMETA_TRAIN;
46097      set EMWS8.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_NONREJECTS;
46098      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS8.VARSEL_CMETA_NONREJECTS.
NOTE: The data set EMWS8.VARSEL_CMETA_TRAIN has 12 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
46099      data WORK._tmp_meta_;
MPRINT(EM_DIAGRAM):    data WORK._tmp_meta_;
46100      set EMWS8.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_CMETA_TRAIN;
46101      if ROLE ^= 'INPUT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^= 'INPUT' then delete;
46102      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK._TMP_META_ has 8 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                10 de Março de 2016
Time:                06H10m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O28HOEMP "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O28HOEMP new;
MPRINT(EM_DIAGRAM):   run;
46126      %em_getActionStatus(emlib=EMWS8, nodeid=Varsel);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
46127      %let em_Train = Y;
46128      %let em_Report = Y;
46129      %let em_Score = Y;
46130      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
