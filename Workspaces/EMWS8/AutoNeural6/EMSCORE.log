MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0MA9NXN 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0MA9NXN new;
MPRINT(EM_DIAGRAM):   run;
316862     filename emflow
316862   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316863     *------------------------------------------------------------*;
316864     * AutoNeural6: Scoring DATA data;
316865     *------------------------------------------------------------*;
316866     data EMWS8.AutoNeural6_TRAIN
316867     / view=EMWS8.AutoNeural6_TRAIN
316868     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_TRAIN / view=EMWS8.AutoNeural6_TRAIN ;
316869     set EMWS8.Meta_TRAIN
316870     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
316871     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas.
316872    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316873    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
316874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316875    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
316876    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
316877    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
316878    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
316879    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
316880    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
316881    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
316882    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
316883    +LENGTH _WARN_ $4
316884    +      F_DepVar  $ 12
316885    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
316886    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
316887    +
316888    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
316889    +
316890    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
316891    +
316892    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
316893    +
316894    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
316895    +
316896    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
316897    +
316898    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
316899    +
316900    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
316901    +
316902    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
316903    +
316904    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
316905    +
316906    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
316907    +
316908    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
316909    +
316910    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
316911    +
316912    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
316913    +
316914    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
316915    +
316916    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
316917    +
316918    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
316919    +
316920    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
316921    +
316922    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
316923    +
316924    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
316925    +
316926    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
316927    +
316928    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
316929    +
316930    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
316931    +
316932    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
316933    +
316934    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
316935    +
316936    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
316937    +
316938    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
316939    +
316940    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
316941    +
316942    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
316943    +
316944    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
316945    +
316946    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
316947    +
316948    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
316949    +
316950    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
316951    +
316952    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
316953    +
316954    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
316955    +
316956    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
316957    +
316958    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
316959    +
316960    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
316961    +
316962    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
316963    +
316964    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
316965    +
316966    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
316967    +
316968    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
316969    +
316970    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
316971    +
316972    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
316973    +
316974    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
316975    +
316976    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
316977    +
316978    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
316979    +
316980    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
316981    +
316982    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
316983    +
316984    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
316985    +
316986    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
316987    +
316988    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
316989    +
316990    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
316991    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
316992    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
316993    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
316994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316996    +end;
MPRINT(EM_DIAGRAM):   end;
316997    +else do;
MPRINT(EM_DIAGRAM):   else do;
316998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316999    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
317000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317001    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317002    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
317003    +   end;
MPRINT(EM_DIAGRAM):   end;
317004    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317005    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
317006    +   end;
MPRINT(EM_DIAGRAM):   end;
317007    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317008    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
317009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317011    +   end;
MPRINT(EM_DIAGRAM):   end;
317012    +end;
MPRINT(EM_DIAGRAM):   end;
317013    +
317014    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
317015    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
317016    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
317017    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317020    +end;
MPRINT(EM_DIAGRAM):   end;
317021    +else do;
MPRINT(EM_DIAGRAM):   else do;
317022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317023    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
317024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317025    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317026    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
317027    +   end;
MPRINT(EM_DIAGRAM):   end;
317028    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317029    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
317030    +   end;
MPRINT(EM_DIAGRAM):   end;
317031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317032    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317035    +   end;
MPRINT(EM_DIAGRAM):   end;
317036    +end;
MPRINT(EM_DIAGRAM):   end;
317037    +
317038    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
317039    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
317040    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
317041    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317044    +end;
MPRINT(EM_DIAGRAM):   end;
317045    +else do;
MPRINT(EM_DIAGRAM):   else do;
317046    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317047    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
317048    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317049    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317050    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
317051    +   end;
MPRINT(EM_DIAGRAM):   end;
317052    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317053    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
317054    +   end;
MPRINT(EM_DIAGRAM):   end;
317055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317056    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317059    +   end;
MPRINT(EM_DIAGRAM):   end;
317060    +end;
MPRINT(EM_DIAGRAM):   end;
317061    +
317062    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
317063    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
317064    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
317065    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317068    +end;
MPRINT(EM_DIAGRAM):   end;
317069    +else do;
MPRINT(EM_DIAGRAM):   else do;
317070    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317071    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
317072    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317073    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317074    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
317075    +   end;
MPRINT(EM_DIAGRAM):   end;
317076    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317077    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
317078    +   end;
MPRINT(EM_DIAGRAM):   end;
317079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317080    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317083    +   end;
MPRINT(EM_DIAGRAM):   end;
317084    +end;
MPRINT(EM_DIAGRAM):   end;
317085    +
317086    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
317087    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
317088    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
317089    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317090    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317092    +end;
MPRINT(EM_DIAGRAM):   end;
317093    +else do;
MPRINT(EM_DIAGRAM):   else do;
317094    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317095    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
317096    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317097    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317098    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
317099    +   end;
MPRINT(EM_DIAGRAM):   end;
317100    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317101    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
317102    +   end;
MPRINT(EM_DIAGRAM):   end;
317103    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317104    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317105    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317106    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317107    +   end;
MPRINT(EM_DIAGRAM):   end;
317108    +end;
MPRINT(EM_DIAGRAM):   end;
317109    +
317110    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
317111    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
317112    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
317113    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317114    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317115    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317116    +end;
MPRINT(EM_DIAGRAM):   end;
317117    +else do;
MPRINT(EM_DIAGRAM):   else do;
317118    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317119    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
317120    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317121    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317122    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
317123    +   end;
MPRINT(EM_DIAGRAM):   end;
317124    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317125    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
317126    +   end;
MPRINT(EM_DIAGRAM):   end;
317127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317128    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317129    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317130    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317131    +   end;
MPRINT(EM_DIAGRAM):   end;
317132    +end;
MPRINT(EM_DIAGRAM):   end;
317133    +
317134    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
317135    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
317136    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
317137    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317138    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317139    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317140    +end;
MPRINT(EM_DIAGRAM):   end;
317141    +else do;
MPRINT(EM_DIAGRAM):   else do;
317142    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317143    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
317144    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317145    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
317146    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
317147    +   end;
MPRINT(EM_DIAGRAM):   end;
317148    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
317149    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
317150    +   end;
MPRINT(EM_DIAGRAM):   end;
317151    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317152    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317155    +   end;
MPRINT(EM_DIAGRAM):   end;
317156    +end;
MPRINT(EM_DIAGRAM):   end;
317157    +
317158    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
317159    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
317160    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317161    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
317162    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
317163    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
317164    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
317165    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
317166    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317167    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317168    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317169    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317170    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317171    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317172    +end;
MPRINT(EM_DIAGRAM):   end;
317173    +else do;
MPRINT(EM_DIAGRAM):   else do;
317174    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
317175    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
317176    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317177    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
317178    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
317179    +   end;
MPRINT(EM_DIAGRAM):   end;
317180    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
317181    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
317182    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
317183    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
317184    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
317185    +   end;
MPRINT(EM_DIAGRAM):   end;
317186    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
317187    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
317188    +   end;
MPRINT(EM_DIAGRAM):   end;
317189    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
317190    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
317191    +   end;
MPRINT(EM_DIAGRAM):   end;
317192    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
317193    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
317194    +   end;
MPRINT(EM_DIAGRAM):   end;
317195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317196    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317197    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317198    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317199    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317202    +   end;
MPRINT(EM_DIAGRAM):   end;
317203    +end;
MPRINT(EM_DIAGRAM):   end;
317204    +
317205    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
317206    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
317207    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
317208    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317209    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
317210    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
317211    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
317212    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
317213    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
317214    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317215    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317216    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317217    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317218    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317220    +end;
MPRINT(EM_DIAGRAM):   end;
317221    +else do;
MPRINT(EM_DIAGRAM):   else do;
317222    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
317223    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
317224    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317225    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
317226    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
317227    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
317228    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
317229    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
317230    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317231    +         end;
MPRINT(EM_DIAGRAM):   end;
317232    +         else do;
MPRINT(EM_DIAGRAM):   else do;
317233    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
317234    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
317235    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317236    +            end;
MPRINT(EM_DIAGRAM):   end;
317237    +         end;
MPRINT(EM_DIAGRAM):   end;
317238    +      end;
MPRINT(EM_DIAGRAM):   end;
317239    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317240    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
317241    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
317242    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317243    +         end;
MPRINT(EM_DIAGRAM):   end;
317244    +      end;
MPRINT(EM_DIAGRAM):   end;
317245    +   end;
MPRINT(EM_DIAGRAM):   end;
317246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317247    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
317248    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
317249    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317250    +      end;
MPRINT(EM_DIAGRAM):   end;
317251    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317252    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
317253    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
317254    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
317255    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
317256    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
317257    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317258    +         end;
MPRINT(EM_DIAGRAM):   end;
317259    +      end;
MPRINT(EM_DIAGRAM):   end;
317260    +   end;
MPRINT(EM_DIAGRAM):   end;
317261    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
317262    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317263    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317264    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317265    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317268    +   end;
MPRINT(EM_DIAGRAM):   end;
317269    +end;
MPRINT(EM_DIAGRAM):   end;
317270    +
317271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317272    +*** Checking missing input Interval
317273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
317274    +
317275    +IF NMISS(
317276    +   AcceptedCmpTotal ,
317277    +   Age ,
317278    +   Frq ,
317279    +   Income ,
317280    +   Kidhome ,
317281    +   Mnt ,
317282    +   MntFishProducts ,
317283    +   MntFruits ,
317284    +   MntGoldProds ,
317285    +   MntMeatProducts ,
317286    +   MntSweetProducts ,
317287    +   MntWines ,
317288    +   MonthsAsCustomer ,
317289    +   NumCatalogPurchases ,
317290    +   NumDealsPurchases ,
317291    +   NumDistPurchases ,
317292    +   NumStorePurchases ,
317293    +   NumWebPurchases ,
317294    +   NumWebVisitsMonth ,
317295    +   RFMstat ,
317296    +   RMntFrq ,
317297    +   Recency ,
317298    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
317299    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
317300    +
317301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317302    +END;
MPRINT(EM_DIAGRAM):   END;
317303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317304    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
317305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317306    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317307    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317308    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
317309    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
317310    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317311    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
317312    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
317313    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317314    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
317315    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
317316    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
317317    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
317318    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
317319    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317320    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
317321    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
317322    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
317323    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
317324    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
317325    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
317326    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
317327    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
317328    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317329    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
317330    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
317331    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
317332    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
317333    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
317334    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
317335    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
317336    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317337    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
317338    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
317339    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
317340    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317341    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
317342    +END;
MPRINT(EM_DIAGRAM):   END;
317343    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317344    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
317345    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317346    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
317347    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
317348    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
317349    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
317350    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317351    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
317352    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
317353    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
317354    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
317355    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
317356    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317357    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
317358    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
317359    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
317360    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
317361    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
317362    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
317363    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
317364    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
317365    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
317366    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
317367    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317368    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
317369    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
317370    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
317371    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
317372    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
317373    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
317374    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
317375    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
317376    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
317377    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
317378    +   ELSE S_NumCatalogPurchases
317379    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
317380    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
317381    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
317382    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317383    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
317384    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
317385    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
317386    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
317387    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
317388    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
317389    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
317390    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
317391    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
317392    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
317393    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
317394    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317395    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
317396    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
317397    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
317398    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
317399    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
317400    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
317401    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317402    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
317403    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
317404    +END;
MPRINT(EM_DIAGRAM):   END;
317405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317406    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
317407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317409    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
317410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317412    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
317413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317414    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317415    +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
317416    +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
317417    +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
317418    +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
317419    +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
317420    +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
317421    +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
317422    +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
317423    +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
317424    +          +    -1.19682864242203 * S_NumDealsPurchases
317425    +          +     0.18491015618084 * S_NumDistPurchases
317426    +          +     1.22999585210812 * S_NumStorePurchases
317427    +          +     1.21627782358382 * S_NumWebPurchases
317428    +          +    -0.64580024249846 * S_NumWebVisitsMonth
317429    +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
317430    +        S_RMntFrq  +     0.46175359879811 * S_Recency
317431    +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 * 
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 * 
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007 
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts + 
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 * 
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 * 
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 * 
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 * 
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq + 
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
317432    +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
317433    +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
317434    +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
317435    +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
317436    +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 * 
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 + 
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 * 
HigherEducationBinary0 ;
317437    +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
317438    +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
317439    +        EducationGraduation  +     0.09891975371592 * EducationMaster
317440    +          +     0.22010007588989 * Marital_StatusDivorced
317441    +          +    -0.15233151420698 * Marital_StatusMarried
317442    +          +    -0.03753447021411 * Marital_StatusSingle
317443    +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle + 
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation + 
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced + 
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle + 
-0.12393264098828 * Marital_StatusTogether ;
317444    +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
317445    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317446    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317447    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
317448    +END;
MPRINT(EM_DIAGRAM):   END;
317449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317450    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
317451    +END;
MPRINT(EM_DIAGRAM):   END;
317452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317453    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
317454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317455    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317456    +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
317457    +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
317458    +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
317459    +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
317460    +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
317461    +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
317462    +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
317463    +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
317464    +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
317465    +          +    -0.66146733174161 * S_NumDealsPurchases
317466    +          +     1.52784459399302 * S_NumDistPurchases
317467    +          +     1.49997699453958 * S_NumStorePurchases
317468    +          +     0.63969125024997 * S_NumWebPurchases
317469    +          +    -2.09769625435387 * S_NumWebVisitsMonth
317470    +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
317471    +        S_RMntFrq  +     2.03378172701659 * S_Recency
317472    +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 * 
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome 
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 * 
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts + 
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 * 
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 * 
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 * 
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 * 
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq + 
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
317473    +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
317474    +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
317475    +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
317476    +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
317477    +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946 
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 + 
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 * 
HigherEducationBinary0 ;
317478    +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
317479    +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
317480    +        EducationGraduation  +     0.29783240130451 * EducationMaster
317481    +          +    -0.26556711862055 * Marital_StatusDivorced
317482    +          +     1.14529440208202 * Marital_StatusMarried
317483    +          +    -1.05822467297368 * Marital_StatusSingle
317484    +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle + 
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451 
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 * 
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 * 
Marital_StatusTogether ;
317485    +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
317486    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317487    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317488    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
317489    +END;
MPRINT(EM_DIAGRAM):   END;
317490    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317491    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
317492    +END;
MPRINT(EM_DIAGRAM):   END;
317493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317494    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
317495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317496    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317497    +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
317498    +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
317499    +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
317500    +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
317501    +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
317502    +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
317503    +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
317504    +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
317505    +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
317506    +          +    -1.65571629915953 * S_NumDealsPurchases
317507    +          +     0.44850418598185 * S_NumDistPurchases
317508    +          +    -1.85103994085543 * S_NumStorePurchases
317509    +          +    -1.98087140874692 * S_NumWebPurchases
317510    +          +    -1.35538649504681 * S_NumWebVisitsMonth
317511    +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
317512    +        S_RMntFrq  +     2.19147176593719 * S_Recency
317513    +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 * 
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome 
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 * 
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts + 
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 * 
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 * 
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 * 
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 * 
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq + 
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
317514    +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
317515    +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
317516    +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
317517    +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
317518    +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 * 
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 + 
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 * 
HigherEducationBinary0 ;
317519    +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
317520    +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
317521    +        EducationGraduation  +     1.03845439880266 * EducationMaster
317522    +          +     0.50400969719731 * Marital_StatusDivorced
317523    +          +    -1.34220391092458 * Marital_StatusMarried
317524    +          +    -0.55428853923129 * Marital_StatusSingle
317525    +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle + 
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266 
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 * 
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 * 
Marital_StatusTogether ;
317526    +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
317527    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317528    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317529    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
317530    +END;
MPRINT(EM_DIAGRAM):   END;
317531    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317532    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
317533    +END;
MPRINT(EM_DIAGRAM):   END;
317534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317535    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
317536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317537    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317538    +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
317539    +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
317540    +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
317541    +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
317542    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317543    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317544    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
317545    +END;
MPRINT(EM_DIAGRAM):   END;
317546    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317547    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
317548    +END;
MPRINT(EM_DIAGRAM):   END;
317549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317550    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
317551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317552    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317553    +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
317554    +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
317555    +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
317556    +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
317557    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317558    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317559    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
317560    +END;
MPRINT(EM_DIAGRAM):   END;
317561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317562    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
317563    +END;
MPRINT(EM_DIAGRAM):   END;
317564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317565    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
317566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317567    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317568    +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
317569    +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
317570    +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
317571    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317572    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317573    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
317574    +END;
MPRINT(EM_DIAGRAM):   END;
317575    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317576    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
317577    +END;
MPRINT(EM_DIAGRAM):   END;
317578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317579    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
317580    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317581    +
317582    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
317583    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
317584    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
317585    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
317586    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
317587    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317588    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
317589    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
317590    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
317591    +end;
MPRINT(EM_DIAGRAM):   end;
317592    +else do;
MPRINT(EM_DIAGRAM):   else do;
317593    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
317594    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
317595    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
317596    +   end;
MPRINT(EM_DIAGRAM):   end;
317597    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
317598    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
317599    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
317600    +   end;
MPRINT(EM_DIAGRAM):   end;
317601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317602    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
317603    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
317604    +   end;
MPRINT(EM_DIAGRAM):   end;
317605    +end;
MPRINT(EM_DIAGRAM):   end;
317606    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317607    +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
317608    +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
317609    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
317610    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
317611    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
317612    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
317613    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
317614    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
317615    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
317616    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
317617    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
317618    +END;
MPRINT(EM_DIAGRAM):   END;
317619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317620    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
317621    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
317622    +END;
MPRINT(EM_DIAGRAM):   END;
317623    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
317624    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
317625    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
317626    +END;
MPRINT(EM_DIAGRAM):   END;
317627    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
317628    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
317629    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
317630    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
317631    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
317632    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
317633    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
317634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317635    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
317636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317637    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
317638    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
317639    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
317640    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
317641    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
317642    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
317643    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
317644    +END;
MPRINT(EM_DIAGRAM):   END;
317645    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317646    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
317647    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317648    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317649     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
317650     quit;
317651     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
317652     filename emflow
317652   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
317653     *------------------------------------------------------------*;
317654     * AutoNeural6: Scoring VALIDATE data;
317655     *------------------------------------------------------------*;
317656     data EMWS8.AutoNeural6_VALIDATE
317657     / view=EMWS8.AutoNeural6_VALIDATE
317658     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_VALIDATE / view=EMWS8.AutoNeural6_VALIDATE ;
317659     set EMWS8.Meta_VALIDATE
317660     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
317661     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas.
317662    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317663    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
317664    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317665    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
317666    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
317667    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
317668    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
317669    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
317670    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
317671    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
317672    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
317673    +LENGTH _WARN_ $4
317674    +      F_DepVar  $ 12
317675    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
317676    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
317677    +
317678    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
317679    +
317680    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
317681    +
317682    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
317683    +
317684    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
317685    +
317686    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
317687    +
317688    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
317689    +
317690    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
317691    +
317692    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
317693    +
317694    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
317695    +
317696    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
317697    +
317698    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
317699    +
317700    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
317701    +
317702    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
317703    +
317704    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
317705    +
317706    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
317707    +
317708    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
317709    +
317710    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
317711    +
317712    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
317713    +
317714    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
317715    +
317716    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
317717    +
317718    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
317719    +
317720    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
317721    +
317722    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
317723    +
317724    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
317725    +
317726    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
317727    +
317728    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
317729    +
317730    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
317731    +
317732    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
317733    +
317734    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
317735    +
317736    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
317737    +
317738    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
317739    +
317740    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
317741    +
317742    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
317743    +
317744    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
317745    +
317746    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
317747    +
317748    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
317749    +
317750    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
317751    +
317752    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
317753    +
317754    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
317755    +
317756    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
317757    +
317758    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
317759    +
317760    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
317761    +
317762    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
317763    +
317764    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
317765    +
317766    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
317767    +
317768    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
317769    +
317770    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
317771    +
317772    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
317773    +
317774    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
317775    +
317776    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
317777    +
317778    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
317779    +
317780    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
317781    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
317782    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
317783    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
317784    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317786    +end;
MPRINT(EM_DIAGRAM):   end;
317787    +else do;
MPRINT(EM_DIAGRAM):   else do;
317788    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317789    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
317790    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317791    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317792    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
317793    +   end;
MPRINT(EM_DIAGRAM):   end;
317794    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317795    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
317796    +   end;
MPRINT(EM_DIAGRAM):   end;
317797    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317798    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
317799    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317800    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317801    +   end;
MPRINT(EM_DIAGRAM):   end;
317802    +end;
MPRINT(EM_DIAGRAM):   end;
317803    +
317804    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
317805    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
317806    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
317807    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317808    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317809    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317810    +end;
MPRINT(EM_DIAGRAM):   end;
317811    +else do;
MPRINT(EM_DIAGRAM):   else do;
317812    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317813    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
317814    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317815    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317816    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
317817    +   end;
MPRINT(EM_DIAGRAM):   end;
317818    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317819    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
317820    +   end;
MPRINT(EM_DIAGRAM):   end;
317821    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317822    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
317823    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317824    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317825    +   end;
MPRINT(EM_DIAGRAM):   end;
317826    +end;
MPRINT(EM_DIAGRAM):   end;
317827    +
317828    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
317829    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
317830    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
317831    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317832    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317833    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317834    +end;
MPRINT(EM_DIAGRAM):   end;
317835    +else do;
MPRINT(EM_DIAGRAM):   else do;
317836    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317837    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
317838    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317839    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317840    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
317841    +   end;
MPRINT(EM_DIAGRAM):   end;
317842    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317843    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
317844    +   end;
MPRINT(EM_DIAGRAM):   end;
317845    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317846    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
317847    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317848    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317849    +   end;
MPRINT(EM_DIAGRAM):   end;
317850    +end;
MPRINT(EM_DIAGRAM):   end;
317851    +
317852    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
317853    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
317854    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
317855    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317856    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317857    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317858    +end;
MPRINT(EM_DIAGRAM):   end;
317859    +else do;
MPRINT(EM_DIAGRAM):   else do;
317860    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317861    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
317862    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317863    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317864    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
317865    +   end;
MPRINT(EM_DIAGRAM):   end;
317866    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317867    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
317868    +   end;
MPRINT(EM_DIAGRAM):   end;
317869    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317870    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
317871    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317872    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317873    +   end;
MPRINT(EM_DIAGRAM):   end;
317874    +end;
MPRINT(EM_DIAGRAM):   end;
317875    +
317876    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
317877    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
317878    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
317879    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317880    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317881    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317882    +end;
MPRINT(EM_DIAGRAM):   end;
317883    +else do;
MPRINT(EM_DIAGRAM):   else do;
317884    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317885    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
317886    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317887    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317888    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
317889    +   end;
MPRINT(EM_DIAGRAM):   end;
317890    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317891    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
317892    +   end;
MPRINT(EM_DIAGRAM):   end;
317893    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317894    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
317895    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317896    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317897    +   end;
MPRINT(EM_DIAGRAM):   end;
317898    +end;
MPRINT(EM_DIAGRAM):   end;
317899    +
317900    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
317901    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
317902    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
317903    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317906    +end;
MPRINT(EM_DIAGRAM):   end;
317907    +else do;
MPRINT(EM_DIAGRAM):   else do;
317908    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317909    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
317910    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317911    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
317912    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
317913    +   end;
MPRINT(EM_DIAGRAM):   end;
317914    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
317915    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
317916    +   end;
MPRINT(EM_DIAGRAM):   end;
317917    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317918    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
317919    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317920    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317921    +   end;
MPRINT(EM_DIAGRAM):   end;
317922    +end;
MPRINT(EM_DIAGRAM):   end;
317923    +
317924    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
317925    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
317926    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
317927    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317930    +end;
MPRINT(EM_DIAGRAM):   end;
317931    +else do;
MPRINT(EM_DIAGRAM):   else do;
317932    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
317933    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
317934    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317935    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
317936    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
317937    +   end;
MPRINT(EM_DIAGRAM):   end;
317938    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
317939    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
317940    +   end;
MPRINT(EM_DIAGRAM):   end;
317941    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317942    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
317943    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317944    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317945    +   end;
MPRINT(EM_DIAGRAM):   end;
317946    +end;
MPRINT(EM_DIAGRAM):   end;
317947    +
317948    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
317949    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
317950    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317951    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
317952    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
317953    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
317954    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
317955    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
317956    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317957    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317958    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317959    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317960    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317961    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317962    +end;
MPRINT(EM_DIAGRAM):   end;
317963    +else do;
MPRINT(EM_DIAGRAM):   else do;
317964    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
317965    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
317966    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317967    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
317968    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
317969    +   end;
MPRINT(EM_DIAGRAM):   end;
317970    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
317971    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
317972    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
317973    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
317974    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
317975    +   end;
MPRINT(EM_DIAGRAM):   end;
317976    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
317977    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
317978    +   end;
MPRINT(EM_DIAGRAM):   end;
317979    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
317980    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
317981    +   end;
MPRINT(EM_DIAGRAM):   end;
317982    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
317983    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
317984    +   end;
MPRINT(EM_DIAGRAM):   end;
317985    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317986    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
317987    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
317988    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
317989    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
317990    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317991    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317992    +   end;
MPRINT(EM_DIAGRAM):   end;
317993    +end;
MPRINT(EM_DIAGRAM):   end;
317994    +
317995    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
317996    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
317997    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
317998    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317999    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
318000    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
318001    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
318002    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
318003    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
318004    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318005    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318006    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318007    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318008    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318009    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318010    +end;
MPRINT(EM_DIAGRAM):   end;
318011    +else do;
MPRINT(EM_DIAGRAM):   else do;
318012    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
318013    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
318014    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318015    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
318016    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
318017    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
318018    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
318019    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
318020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318021    +         end;
MPRINT(EM_DIAGRAM):   end;
318022    +         else do;
MPRINT(EM_DIAGRAM):   else do;
318023    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
318024    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
318025    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318026    +            end;
MPRINT(EM_DIAGRAM):   end;
318027    +         end;
MPRINT(EM_DIAGRAM):   end;
318028    +      end;
MPRINT(EM_DIAGRAM):   end;
318029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318030    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
318031    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
318032    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318033    +         end;
MPRINT(EM_DIAGRAM):   end;
318034    +      end;
MPRINT(EM_DIAGRAM):   end;
318035    +   end;
MPRINT(EM_DIAGRAM):   end;
318036    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318037    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
318038    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
318039    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318040    +      end;
MPRINT(EM_DIAGRAM):   end;
318041    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318042    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
318043    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
318044    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
318045    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
318046    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
318047    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318048    +         end;
MPRINT(EM_DIAGRAM):   end;
318049    +      end;
MPRINT(EM_DIAGRAM):   end;
318050    +   end;
MPRINT(EM_DIAGRAM):   end;
318051    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
318052    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318053    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318054    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318055    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318056    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318057    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318058    +   end;
MPRINT(EM_DIAGRAM):   end;
318059    +end;
MPRINT(EM_DIAGRAM):   end;
318060    +
318061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318062    +*** Checking missing input Interval
318063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
318064    +
318065    +IF NMISS(
318066    +   AcceptedCmpTotal ,
318067    +   Age ,
318068    +   Frq ,
318069    +   Income ,
318070    +   Kidhome ,
318071    +   Mnt ,
318072    +   MntFishProducts ,
318073    +   MntFruits ,
318074    +   MntGoldProds ,
318075    +   MntMeatProducts ,
318076    +   MntSweetProducts ,
318077    +   MntWines ,
318078    +   MonthsAsCustomer ,
318079    +   NumCatalogPurchases ,
318080    +   NumDealsPurchases ,
318081    +   NumDistPurchases ,
318082    +   NumStorePurchases ,
318083    +   NumWebPurchases ,
318084    +   NumWebVisitsMonth ,
318085    +   RFMstat ,
318086    +   RMntFrq ,
318087    +   Recency ,
318088    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
318089    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
318090    +
318091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318092    +END;
MPRINT(EM_DIAGRAM):   END;
318093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318094    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
318095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318096    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318097    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318098    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
318099    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
318100    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318101    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
318102    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
318103    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318104    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
318105    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
318106    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
318107    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
318108    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
318109    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318110    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
318111    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
318112    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
318113    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
318114    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
318115    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
318116    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
318117    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
318118    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318119    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
318120    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
318121    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
318122    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
318123    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
318124    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
318125    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
318126    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318127    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
318128    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
318129    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
318130    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318131    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
318132    +END;
MPRINT(EM_DIAGRAM):   END;
318133    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318134    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
318135    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318136    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
318137    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
318138    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
318139    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
318140    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318141    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
318142    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
318143    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
318144    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
318145    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
318146    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318147    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
318148    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
318149    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
318150    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
318151    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
318152    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
318153    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
318154    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
318155    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
318156    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
318157    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318158    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
318159    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
318160    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
318161    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
318162    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
318163    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
318164    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
318165    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
318166    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
318167    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
318168    +   ELSE S_NumCatalogPurchases
318169    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
318170    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
318171    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
318172    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318173    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
318174    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
318175    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
318176    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
318177    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
318178    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
318179    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
318180    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
318181    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
318182    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
318183    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
318184    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318185    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
318186    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
318187    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
318188    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
318189    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
318190    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
318191    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318192    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
318193    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
318194    +END;
MPRINT(EM_DIAGRAM):   END;
318195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318196    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
318197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318199    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
318200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318202    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
318203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318204    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318205    +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
318206    +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
318207    +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
318208    +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
318209    +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
318210    +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
318211    +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
318212    +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
318213    +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
318214    +          +    -1.19682864242203 * S_NumDealsPurchases
318215    +          +     0.18491015618084 * S_NumDistPurchases
318216    +          +     1.22999585210812 * S_NumStorePurchases
318217    +          +     1.21627782358382 * S_NumWebPurchases
318218    +          +    -0.64580024249846 * S_NumWebVisitsMonth
318219    +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
318220    +        S_RMntFrq  +     0.46175359879811 * S_Recency
318221    +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 * 
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 * 
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007 
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts + 
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 * 
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 * 
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 * 
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 * 
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq + 
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
318222    +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
318223    +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
318224    +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
318225    +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
318226    +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 * 
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 + 
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 * 
HigherEducationBinary0 ;
318227    +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
318228    +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
318229    +        EducationGraduation  +     0.09891975371592 * EducationMaster
318230    +          +     0.22010007588989 * Marital_StatusDivorced
318231    +          +    -0.15233151420698 * Marital_StatusMarried
318232    +          +    -0.03753447021411 * Marital_StatusSingle
318233    +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle + 
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation + 
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced + 
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle + 
-0.12393264098828 * Marital_StatusTogether ;
318234    +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
318235    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318236    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318237    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
318238    +END;
MPRINT(EM_DIAGRAM):   END;
318239    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318240    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
318241    +END;
MPRINT(EM_DIAGRAM):   END;
318242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318243    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
318244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318245    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318246    +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
318247    +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
318248    +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
318249    +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
318250    +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
318251    +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
318252    +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
318253    +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
318254    +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
318255    +          +    -0.66146733174161 * S_NumDealsPurchases
318256    +          +     1.52784459399302 * S_NumDistPurchases
318257    +          +     1.49997699453958 * S_NumStorePurchases
318258    +          +     0.63969125024997 * S_NumWebPurchases
318259    +          +    -2.09769625435387 * S_NumWebVisitsMonth
318260    +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
318261    +        S_RMntFrq  +     2.03378172701659 * S_Recency
318262    +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 * 
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome 
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 * 
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts + 
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 * 
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 * 
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 * 
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 * 
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq + 
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
318263    +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
318264    +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
318265    +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
318266    +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
318267    +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946 
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 + 
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 * 
HigherEducationBinary0 ;
318268    +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
318269    +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
318270    +        EducationGraduation  +     0.29783240130451 * EducationMaster
318271    +          +    -0.26556711862055 * Marital_StatusDivorced
318272    +          +     1.14529440208202 * Marital_StatusMarried
318273    +          +    -1.05822467297368 * Marital_StatusSingle
318274    +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle + 
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451 
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 * 
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 * 
Marital_StatusTogether ;
318275    +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
318276    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318277    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318278    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
318279    +END;
MPRINT(EM_DIAGRAM):   END;
318280    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318281    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
318282    +END;
MPRINT(EM_DIAGRAM):   END;
318283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318284    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
318285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318286    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318287    +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
318288    +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
318289    +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
318290    +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
318291    +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
318292    +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
318293    +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
318294    +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
318295    +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
318296    +          +    -1.65571629915953 * S_NumDealsPurchases
318297    +          +     0.44850418598185 * S_NumDistPurchases
318298    +          +    -1.85103994085543 * S_NumStorePurchases
318299    +          +    -1.98087140874692 * S_NumWebPurchases
318300    +          +    -1.35538649504681 * S_NumWebVisitsMonth
318301    +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
318302    +        S_RMntFrq  +     2.19147176593719 * S_Recency
318303    +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 * 
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome 
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 * 
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts + 
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 * 
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 * 
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 * 
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 * 
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq + 
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
318304    +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
318305    +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
318306    +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
318307    +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
318308    +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 * 
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 + 
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 * 
HigherEducationBinary0 ;
318309    +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
318310    +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
318311    +        EducationGraduation  +     1.03845439880266 * EducationMaster
318312    +          +     0.50400969719731 * Marital_StatusDivorced
318313    +          +    -1.34220391092458 * Marital_StatusMarried
318314    +          +    -0.55428853923129 * Marital_StatusSingle
318315    +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle + 
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266 
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 * 
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 * 
Marital_StatusTogether ;
318316    +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
318317    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318318    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318319    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
318320    +END;
MPRINT(EM_DIAGRAM):   END;
318321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318322    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
318323    +END;
MPRINT(EM_DIAGRAM):   END;
318324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318325    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
318326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318327    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318328    +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
318329    +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
318330    +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
318331    +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
318332    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318333    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318334    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
318335    +END;
MPRINT(EM_DIAGRAM):   END;
318336    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318337    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
318338    +END;
MPRINT(EM_DIAGRAM):   END;
318339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318340    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
318341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318342    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318343    +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
318344    +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
318345    +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
318346    +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
318347    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318348    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318349    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
318350    +END;
MPRINT(EM_DIAGRAM):   END;
318351    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318352    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
318353    +END;
MPRINT(EM_DIAGRAM):   END;
318354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318355    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
318356    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318357    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318358    +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
318359    +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
318360    +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
318361    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318362    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318363    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
318364    +END;
MPRINT(EM_DIAGRAM):   END;
318365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318366    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
318367    +END;
MPRINT(EM_DIAGRAM):   END;
318368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318369    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
318370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318371    +
318372    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
318373    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
318374    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
318375    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
318376    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
318377    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318378    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
318379    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
318380    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
318381    +end;
MPRINT(EM_DIAGRAM):   end;
318382    +else do;
MPRINT(EM_DIAGRAM):   else do;
318383    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
318384    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
318385    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
318386    +   end;
MPRINT(EM_DIAGRAM):   end;
318387    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
318388    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
318389    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
318390    +   end;
MPRINT(EM_DIAGRAM):   end;
318391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318392    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
318393    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
318394    +   end;
MPRINT(EM_DIAGRAM):   end;
318395    +end;
MPRINT(EM_DIAGRAM):   end;
318396    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318397    +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
318398    +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
318399    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
318400    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
318401    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
318402    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
318403    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
318404    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
318405    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
318406    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
318407    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
318408    +END;
MPRINT(EM_DIAGRAM):   END;
318409    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318410    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
318411    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
318412    +END;
MPRINT(EM_DIAGRAM):   END;
318413    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
318414    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
318415    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
318416    +END;
MPRINT(EM_DIAGRAM):   END;
318417    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
318418    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
318419    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
318420    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
318421    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
318422    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
318423    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
318424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318425    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
318426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318427    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
318428    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
318429    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
318430    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
318431    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
318432    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
318433    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
318434    +END;
MPRINT(EM_DIAGRAM):   END;
318435    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318436    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
318437    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318438    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318439     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
318440     quit;
318441     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
318442     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
318443     * AutoNeural6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Computing metadata for TRAIN data;
318444     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural6_TRAIN out=WORK.M2D92QK4 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D92QK4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D92QK4(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D92QK4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D92QK4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1L7YXM4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2U6ICBV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L7YXM4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
318756     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
318757     set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
318758     where DATA='AutoNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
318759     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE (DATA='AutoNeural6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318760     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural6_EMINFO;
318761     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
318762     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
318763     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
318767     run;
318768     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_EMINFO;
318769     set EMWS8.AutoNeural6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO WORK.MODELTEMP_INFO;
318770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318771     proc sort data = EMWS8.AutoNeural6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO NOTHREADS;
318772     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
318773     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318774     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
318775     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
318776     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318777     proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
318778     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
318779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318780     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_EMINFO;
318781     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
318782     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
318783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

318784     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
318785     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
318786     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
318787     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
