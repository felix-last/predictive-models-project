MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15HETF6 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15HETF6 new;
MPRINT(EM_DIAGRAM):   run;
553598     filename emflow
553598   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
553599     *------------------------------------------------------------*;
553600     * AutoNeural6: Scoring DATA data;
553601     *------------------------------------------------------------*;
553602     data EMWS8.AutoNeural6_TRAIN
553603     / view=EMWS8.AutoNeural6_TRAIN
553604     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_TRAIN / view=EMWS8.AutoNeural6_TRAIN ;
553605     set EMWS8.Meta_TRAIN
553606     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
553607     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas.
553608    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
553609    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
553610    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
553611    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
553612    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
553613    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
553614    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
553615    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
553616    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
553617    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
553618    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
553619    +LENGTH _WARN_ $4
553620    +      F_DepVar  $ 12
553621    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
553622    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
553623    +
553624    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
553625    +
553626    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
553627    +
553628    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
553629    +
553630    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
553631    +
553632    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
553633    +
553634    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
553635    +
553636    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
553637    +
553638    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
553639    +
553640    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
553641    +
553642    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
553643    +
553644    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
553645    +
553646    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
553647    +
553648    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
553649    +
553650    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
553651    +
553652    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
553653    +
553654    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
553655    +
553656    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
553657    +
553658    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
553659    +
553660    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
553661    +
553662    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
553663    +
553664    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
553665    +
553666    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
553667    +
553668    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
553669    +
553670    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
553671    +
553672    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
553673    +
553674    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
553675    +
553676    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
553677    +
553678    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
553679    +
553680    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
553681    +
553682    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
553683    +
553684    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
553685    +
553686    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
553687    +
553688    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
553689    +
553690    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
553691    +
553692    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
553693    +
553694    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
553695    +
553696    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
553697    +
553698    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
553699    +
553700    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
553701    +
553702    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
553703    +
553704    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
553705    +
553706    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
553707    +
553708    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
553709    +
553710    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
553711    +
553712    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
553713    +
553714    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
553715    +
553716    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
553717    +
553718    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
553719    +
553720    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
553721    +
553722    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
553723    +
553724    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
553725    +
553726    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
553727    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
553728    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
553729    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
553730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553732    +end;
MPRINT(EM_DIAGRAM):   end;
553733    +else do;
MPRINT(EM_DIAGRAM):   else do;
553734    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553735    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
553736    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553737    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553738    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
553739    +   end;
MPRINT(EM_DIAGRAM):   end;
553740    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553741    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
553742    +   end;
MPRINT(EM_DIAGRAM):   end;
553743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553744    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
553745    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553746    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553747    +   end;
MPRINT(EM_DIAGRAM):   end;
553748    +end;
MPRINT(EM_DIAGRAM):   end;
553749    +
553750    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
553751    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
553752    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
553753    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
553754    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553755    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553756    +end;
MPRINT(EM_DIAGRAM):   end;
553757    +else do;
MPRINT(EM_DIAGRAM):   else do;
553758    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553759    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
553760    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553761    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553762    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
553763    +   end;
MPRINT(EM_DIAGRAM):   end;
553764    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553765    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
553766    +   end;
MPRINT(EM_DIAGRAM):   end;
553767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553768    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
553769    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553770    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553771    +   end;
MPRINT(EM_DIAGRAM):   end;
553772    +end;
MPRINT(EM_DIAGRAM):   end;
553773    +
553774    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
553775    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
553776    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
553777    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
553778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553780    +end;
MPRINT(EM_DIAGRAM):   end;
553781    +else do;
MPRINT(EM_DIAGRAM):   else do;
553782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553783    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
553784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553786    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
553787    +   end;
MPRINT(EM_DIAGRAM):   end;
553788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553789    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
553790    +   end;
MPRINT(EM_DIAGRAM):   end;
553791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553792    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
553793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553795    +   end;
MPRINT(EM_DIAGRAM):   end;
553796    +end;
MPRINT(EM_DIAGRAM):   end;
553797    +
553798    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
553799    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
553800    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
553801    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
553802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553804    +end;
MPRINT(EM_DIAGRAM):   end;
553805    +else do;
MPRINT(EM_DIAGRAM):   else do;
553806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553807    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
553808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553810    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
553811    +   end;
MPRINT(EM_DIAGRAM):   end;
553812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553813    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
553814    +   end;
MPRINT(EM_DIAGRAM):   end;
553815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553816    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
553817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553819    +   end;
MPRINT(EM_DIAGRAM):   end;
553820    +end;
MPRINT(EM_DIAGRAM):   end;
553821    +
553822    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
553823    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
553824    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
553825    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
553826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553828    +end;
MPRINT(EM_DIAGRAM):   end;
553829    +else do;
MPRINT(EM_DIAGRAM):   else do;
553830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553831    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
553832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553834    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
553835    +   end;
MPRINT(EM_DIAGRAM):   end;
553836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553837    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
553838    +   end;
MPRINT(EM_DIAGRAM):   end;
553839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553840    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
553841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553843    +   end;
MPRINT(EM_DIAGRAM):   end;
553844    +end;
MPRINT(EM_DIAGRAM):   end;
553845    +
553846    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
553847    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
553848    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
553849    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
553850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553852    +end;
MPRINT(EM_DIAGRAM):   end;
553853    +else do;
MPRINT(EM_DIAGRAM):   else do;
553854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553855    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
553856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553857    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
553858    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
553859    +   end;
MPRINT(EM_DIAGRAM):   end;
553860    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
553861    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
553862    +   end;
MPRINT(EM_DIAGRAM):   end;
553863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553864    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
553865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553867    +   end;
MPRINT(EM_DIAGRAM):   end;
553868    +end;
MPRINT(EM_DIAGRAM):   end;
553869    +
553870    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
553871    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
553872    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
553873    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
553874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553876    +end;
MPRINT(EM_DIAGRAM):   end;
553877    +else do;
MPRINT(EM_DIAGRAM):   else do;
553878    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
553879    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
553880    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553881    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
553882    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
553883    +   end;
MPRINT(EM_DIAGRAM):   end;
553884    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
553885    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
553886    +   end;
MPRINT(EM_DIAGRAM):   end;
553887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553888    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
553889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553891    +   end;
MPRINT(EM_DIAGRAM):   end;
553892    +end;
MPRINT(EM_DIAGRAM):   end;
553893    +
553894    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
553895    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
553896    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
553897    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
553898    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
553899    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
553900    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
553901    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
553902    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
553903    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
553904    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
553905    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
553906    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553908    +end;
MPRINT(EM_DIAGRAM):   end;
553909    +else do;
MPRINT(EM_DIAGRAM):   else do;
553910    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
553911    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
553912    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553913    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
553914    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
553915    +   end;
MPRINT(EM_DIAGRAM):   end;
553916    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
553917    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
553918    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
553919    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
553920    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
553921    +   end;
MPRINT(EM_DIAGRAM):   end;
553922    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
553923    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
553924    +   end;
MPRINT(EM_DIAGRAM):   end;
553925    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
553926    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
553927    +   end;
MPRINT(EM_DIAGRAM):   end;
553928    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
553929    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
553930    +   end;
MPRINT(EM_DIAGRAM):   end;
553931    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553932    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
553933    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
553934    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
553935    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
553936    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
553937    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553938    +   end;
MPRINT(EM_DIAGRAM):   end;
553939    +end;
MPRINT(EM_DIAGRAM):   end;
553940    +
553941    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
553942    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
553943    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
553944    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
553945    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
553946    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
553947    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
553948    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
553949    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
553950    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
553951    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
553952    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
553953    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
553954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
553955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
553956    +end;
MPRINT(EM_DIAGRAM):   end;
553957    +else do;
MPRINT(EM_DIAGRAM):   else do;
553958    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
553959    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
553960    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
553961    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
553962    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
553963    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
553964    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
553965    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
553966    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
553967    +         end;
MPRINT(EM_DIAGRAM):   end;
553968    +         else do;
MPRINT(EM_DIAGRAM):   else do;
553969    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
553970    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
553971    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
553972    +            end;
MPRINT(EM_DIAGRAM):   end;
553973    +         end;
MPRINT(EM_DIAGRAM):   end;
553974    +      end;
MPRINT(EM_DIAGRAM):   end;
553975    +      else do;
MPRINT(EM_DIAGRAM):   else do;
553976    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
553977    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
553978    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
553979    +         end;
MPRINT(EM_DIAGRAM):   end;
553980    +      end;
MPRINT(EM_DIAGRAM):   end;
553981    +   end;
MPRINT(EM_DIAGRAM):   end;
553982    +   else do;
MPRINT(EM_DIAGRAM):   else do;
553983    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
553984    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
553985    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
553986    +      end;
MPRINT(EM_DIAGRAM):   end;
553987    +      else do;
MPRINT(EM_DIAGRAM):   else do;
553988    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
553989    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
553990    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
553991    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
553992    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
553993    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
553994    +         end;
MPRINT(EM_DIAGRAM):   end;
553995    +      end;
MPRINT(EM_DIAGRAM):   end;
553996    +   end;
MPRINT(EM_DIAGRAM):   end;
553997    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
553998    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
553999    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
554000    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
554001    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
554002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554004    +   end;
MPRINT(EM_DIAGRAM):   end;
554005    +end;
MPRINT(EM_DIAGRAM):   end;
554006    +
554007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554008    +*** Checking missing input Interval
554009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
554010    +
554011    +IF NMISS(
554012    +   AcceptedCmpTotal ,
554013    +   Age ,
554014    +   Frq ,
554015    +   Income ,
554016    +   Kidhome ,
554017    +   Mnt ,
554018    +   MntFishProducts ,
554019    +   MntFruits ,
554020    +   MntGoldProds ,
554021    +   MntMeatProducts ,
554022    +   MntSweetProducts ,
554023    +   MntWines ,
554024    +   MonthsAsCustomer ,
554025    +   NumCatalogPurchases ,
554026    +   NumDealsPurchases ,
554027    +   NumDistPurchases ,
554028    +   NumStorePurchases ,
554029    +   NumWebPurchases ,
554030    +   NumWebVisitsMonth ,
554031    +   RFMstat ,
554032    +   RMntFrq ,
554033    +   Recency ,
554034    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
554035    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
554036    +
554037    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554038    +END;
MPRINT(EM_DIAGRAM):   END;
554039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554040    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
554041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554042    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554043    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
554044    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
554045    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
554046    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
554047    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
554048    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
554049    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
554050    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
554051    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
554052    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
554053    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
554054    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
554055    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
554056    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
554057    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
554058    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
554059    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
554060    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
554061    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
554062    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
554063    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
554064    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
554065    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
554066    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
554067    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
554068    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
554069    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
554070    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
554071    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
554072    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
554073    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
554074    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
554075    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
554076    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
554077    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
554078    +END;
MPRINT(EM_DIAGRAM):   END;
554079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554080    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
554081    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
554082    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
554083    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
554084    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
554085    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
554086    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
554087    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
554088    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
554089    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
554090    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
554091    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
554092    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
554093    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
554094    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
554095    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
554096    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
554097    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
554098    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
554099    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
554100    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
554101    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
554102    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
554103    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
554104    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
554105    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
554106    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
554107    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
554108    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
554109    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
554110    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
554111    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
554112    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
554113    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
554114    +   ELSE S_NumCatalogPurchases
554115    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
554116    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
554117    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
554118    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
554119    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
554120    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
554121    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
554122    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
554123    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
554124    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
554125    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
554126    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
554127    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
554128    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
554129    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
554130    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
554131    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
554132    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
554133    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
554134    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
554135    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
554136    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
554137    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
554138    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
554139    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
554140    +END;
MPRINT(EM_DIAGRAM):   END;
554141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554142    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
554143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554145    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
554146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554148    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
554149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554150    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554151    +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
554152    +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
554153    +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
554154    +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
554155    +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
554156    +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
554157    +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
554158    +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
554159    +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
554160    +          +     -0.4295354470932 * S_NumDealsPurchases
554161    +          +    -0.08226280459837 * S_NumDistPurchases
554162    +          +      0.2932815275833 * S_NumStorePurchases
554163    +          +     0.19049189042599 * S_NumWebPurchases
554164    +          +    -0.98799339280673 * S_NumWebVisitsMonth
554165    +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
554166    +        S_RMntFrq  +     1.04348870032296 * S_Recency
554167    +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 * 
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome 
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 * 
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts + 
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 * 
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 * 
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 * 
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 * 
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq + 
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
554168    +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
554169    +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
554170    +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
554171    +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
554172    +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 * 
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 + 
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 * 
HigherEducationBinary0 ;
554173    +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
554174    +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
554175    +        EducationGraduation  +    -0.06446100461656 * EducationMaster
554176    +          +    -0.78551174413278 * Marital_StatusDivorced
554177    +          +     1.14162836709205 * Marital_StatusMarried
554178    +          +    -0.85471695548675 * Marital_StatusSingle
554179    +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle + 
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656 
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 * 
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 * 
Marital_StatusTogether ;
554180    +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
554181    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
554182    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
554183    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
554184    +END;
MPRINT(EM_DIAGRAM):   END;
554185    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554186    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
554187    +END;
MPRINT(EM_DIAGRAM):   END;
554188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554189    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
554190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554191    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554192    +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
554193    +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
554194    +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
554195    +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
554196    +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
554197    +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
554198    +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
554199    +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
554200    +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
554201    +          +      0.1710743409836 * S_NumDealsPurchases
554202    +          +     1.10019178495427 * S_NumDistPurchases
554203    +          +     0.06701301620472 * S_NumStorePurchases
554204    +          +    -1.47240374003368 * S_NumWebPurchases
554205    +          +     0.38443387640949 * S_NumWebVisitsMonth
554206    +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
554207    +        S_RMntFrq  +    -0.01383257292281 * S_Recency
554208    +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 * 
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 * 
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts + 
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 * 
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines + 
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases + 
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases + 
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases + 
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 * 
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
554209    +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
554210    +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
554211    +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
554212    +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
554213    +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 * 
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 + 
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 * 
HigherEducationBinary0 ;
554214    +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
554215    +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
554216    +        EducationGraduation  +    -0.84396607413409 * EducationMaster
554217    +          +    -0.36835980184757 * Marital_StatusDivorced
554218    +          +     0.71718933679692 * Marital_StatusMarried
554219    +          +    -0.35767236657055 * Marital_StatusSingle
554220    +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle + 
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation + 
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced + 
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle + 
0.87230634846649 * Marital_StatusTogether ;
554221    +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
554222    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
554223    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
554224    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
554225    +END;
MPRINT(EM_DIAGRAM):   END;
554226    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554227    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
554228    +END;
MPRINT(EM_DIAGRAM):   END;
554229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554230    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
554231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554233    +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
554234    +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
554235    +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
554236    +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
554237    +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
554238    +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
554239    +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
554240    +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
554241    +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
554242    +          +    -1.99858075809796 * S_NumDealsPurchases
554243    +          +    -0.37353682448701 * S_NumDistPurchases
554244    +          +     1.16275863071649 * S_NumStorePurchases
554245    +          +       -0.75936809253 * S_NumWebPurchases
554246    +          +     2.17936226306026 * S_NumWebVisitsMonth
554247    +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
554248    +        S_RMntFrq  +    -1.06566929523903 * S_Recency
554249    +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 * 
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome 
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 * 
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts + 
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 * 
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 * 
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 * 
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 * 
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq + 
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
554250    +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
554251    +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
554252    +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
554253    +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
554254    +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 * 
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 + 
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 * 
HigherEducationBinary0 ;
554255    +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
554256    +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
554257    +        EducationGraduation  +    -0.90489876056203 * EducationMaster
554258    +          +     0.60036315441483 * Marital_StatusDivorced
554259    +          +    -0.94084946353672 * Marital_StatusMarried
554260    +          +     0.34594388147374 * Marital_StatusSingle
554261    +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle + 
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203 
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 * 
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 * 
Marital_StatusTogether ;
554262    +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
554263    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
554264    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
554265    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
554266    +END;
MPRINT(EM_DIAGRAM):   END;
554267    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554268    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
554269    +END;
MPRINT(EM_DIAGRAM):   END;
554270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554271    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
554272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554273    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554274    +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
554275    +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
554276    +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
554277    +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
554278    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
554279    +END;
MPRINT(EM_DIAGRAM):   END;
554280    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554281    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
554282    +END;
MPRINT(EM_DIAGRAM):   END;
554283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554284    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
554285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554286    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554287    +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
554288    +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
554289    +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
554290    +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
554291    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
554292    +END;
MPRINT(EM_DIAGRAM):   END;
554293    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554294    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
554295    +END;
MPRINT(EM_DIAGRAM):   END;
554296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554297    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
554298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554299    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554300    +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
554301    +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
554302    +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
554303    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
554304    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
554305    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
554306    +END;
MPRINT(EM_DIAGRAM):   END;
554307    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554308    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
554309    +END;
MPRINT(EM_DIAGRAM):   END;
554310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554311    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
554312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554313    +
554314    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
554315    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
554316    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
554317    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
554318    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
554319    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554320    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
554321    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
554322    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
554323    +end;
MPRINT(EM_DIAGRAM):   end;
554324    +else do;
MPRINT(EM_DIAGRAM):   else do;
554325    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
554326    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
554327    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
554328    +   end;
MPRINT(EM_DIAGRAM):   end;
554329    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
554330    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
554331    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
554332    +   end;
MPRINT(EM_DIAGRAM):   end;
554333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554334    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
554335    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
554336    +   end;
MPRINT(EM_DIAGRAM):   end;
554337    +end;
MPRINT(EM_DIAGRAM):   end;
554338    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554339    +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
554340    +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
554341    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
554342    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
554343    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
554344    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
554345    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
554346    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
554347    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
554348    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
554349    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
554350    +END;
MPRINT(EM_DIAGRAM):   END;
554351    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554352    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
554353    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
554354    +END;
MPRINT(EM_DIAGRAM):   END;
554355    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
554356    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
554357    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
554358    +END;
MPRINT(EM_DIAGRAM):   END;
554359    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
554360    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
554361    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
554362    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
554363    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
554364    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
554365    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
554366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554367    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
554368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554369    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
554370    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
554371    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
554372    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
554373    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
554374    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
554375    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
554376    +END;
MPRINT(EM_DIAGRAM):   END;
554377    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
554378    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
554379    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
554380    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
554381     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
554382     quit;
554383     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
554384     filename emflow
554384   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
554385     *------------------------------------------------------------*;
554386     * AutoNeural6: Scoring VALIDATE data;
554387     *------------------------------------------------------------*;
554388     data EMWS8.AutoNeural6_VALIDATE
554389     / view=EMWS8.AutoNeural6_VALIDATE
554390     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_VALIDATE / view=EMWS8.AutoNeural6_VALIDATE ;
554391     set EMWS8.Meta_VALIDATE
554392     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
554393     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMFLOWSCORE.sas.
554394    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
554395    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
554396    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
554397    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
554398    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
554399    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
554400    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
554401    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
554402    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
554403    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
554404    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
554405    +LENGTH _WARN_ $4
554406    +      F_DepVar  $ 12
554407    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
554408    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
554409    +
554410    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
554411    +
554412    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
554413    +
554414    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
554415    +
554416    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
554417    +
554418    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
554419    +
554420    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
554421    +
554422    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
554423    +
554424    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
554425    +
554426    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
554427    +
554428    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
554429    +
554430    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
554431    +
554432    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
554433    +
554434    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
554435    +
554436    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
554437    +
554438    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
554439    +
554440    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
554441    +
554442    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
554443    +
554444    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
554445    +
554446    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
554447    +
554448    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
554449    +
554450    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
554451    +
554452    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
554453    +
554454    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
554455    +
554456    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
554457    +
554458    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
554459    +
554460    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
554461    +
554462    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
554463    +
554464    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
554465    +
554466    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
554467    +
554468    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
554469    +
554470    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
554471    +
554472    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
554473    +
554474    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
554475    +
554476    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
554477    +
554478    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
554479    +
554480    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
554481    +
554482    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
554483    +
554484    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
554485    +
554486    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
554487    +
554488    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
554489    +
554490    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
554491    +
554492    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
554493    +
554494    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
554495    +
554496    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
554497    +
554498    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
554499    +
554500    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
554501    +
554502    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
554503    +
554504    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
554505    +
554506    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
554507    +
554508    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
554509    +
554510    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
554511    +
554512    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
554513    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
554514    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
554515    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
554516    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554517    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554518    +end;
MPRINT(EM_DIAGRAM):   end;
554519    +else do;
MPRINT(EM_DIAGRAM):   else do;
554520    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554521    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
554522    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554523    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554524    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
554525    +   end;
MPRINT(EM_DIAGRAM):   end;
554526    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554527    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
554528    +   end;
MPRINT(EM_DIAGRAM):   end;
554529    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554530    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
554531    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554532    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554533    +   end;
MPRINT(EM_DIAGRAM):   end;
554534    +end;
MPRINT(EM_DIAGRAM):   end;
554535    +
554536    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
554537    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
554538    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
554539    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
554540    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554542    +end;
MPRINT(EM_DIAGRAM):   end;
554543    +else do;
MPRINT(EM_DIAGRAM):   else do;
554544    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554545    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
554546    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554547    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554548    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
554549    +   end;
MPRINT(EM_DIAGRAM):   end;
554550    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554551    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
554552    +   end;
MPRINT(EM_DIAGRAM):   end;
554553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554554    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
554555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554557    +   end;
MPRINT(EM_DIAGRAM):   end;
554558    +end;
MPRINT(EM_DIAGRAM):   end;
554559    +
554560    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
554561    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
554562    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
554563    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
554564    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554565    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554566    +end;
MPRINT(EM_DIAGRAM):   end;
554567    +else do;
MPRINT(EM_DIAGRAM):   else do;
554568    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554569    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
554570    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554571    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554572    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
554573    +   end;
MPRINT(EM_DIAGRAM):   end;
554574    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554575    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
554576    +   end;
MPRINT(EM_DIAGRAM):   end;
554577    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554578    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
554579    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554580    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554581    +   end;
MPRINT(EM_DIAGRAM):   end;
554582    +end;
MPRINT(EM_DIAGRAM):   end;
554583    +
554584    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
554585    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
554586    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
554587    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
554588    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554590    +end;
MPRINT(EM_DIAGRAM):   end;
554591    +else do;
MPRINT(EM_DIAGRAM):   else do;
554592    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554593    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
554594    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554595    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554596    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
554597    +   end;
MPRINT(EM_DIAGRAM):   end;
554598    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554599    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
554600    +   end;
MPRINT(EM_DIAGRAM):   end;
554601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554602    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
554603    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554604    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554605    +   end;
MPRINT(EM_DIAGRAM):   end;
554606    +end;
MPRINT(EM_DIAGRAM):   end;
554607    +
554608    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
554609    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
554610    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
554611    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
554612    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554614    +end;
MPRINT(EM_DIAGRAM):   end;
554615    +else do;
MPRINT(EM_DIAGRAM):   else do;
554616    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554617    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
554618    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554619    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554620    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
554621    +   end;
MPRINT(EM_DIAGRAM):   end;
554622    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554623    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
554624    +   end;
MPRINT(EM_DIAGRAM):   end;
554625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554626    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
554627    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554628    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554629    +   end;
MPRINT(EM_DIAGRAM):   end;
554630    +end;
MPRINT(EM_DIAGRAM):   end;
554631    +
554632    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
554633    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
554634    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
554635    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
554636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554638    +end;
MPRINT(EM_DIAGRAM):   end;
554639    +else do;
MPRINT(EM_DIAGRAM):   else do;
554640    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554641    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
554642    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554643    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
554644    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
554645    +   end;
MPRINT(EM_DIAGRAM):   end;
554646    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
554647    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
554648    +   end;
MPRINT(EM_DIAGRAM):   end;
554649    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554650    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
554651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554653    +   end;
MPRINT(EM_DIAGRAM):   end;
554654    +end;
MPRINT(EM_DIAGRAM):   end;
554655    +
554656    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
554657    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
554658    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
554659    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
554660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554662    +end;
MPRINT(EM_DIAGRAM):   end;
554663    +else do;
MPRINT(EM_DIAGRAM):   else do;
554664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
554665    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
554666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554667    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
554668    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
554669    +   end;
MPRINT(EM_DIAGRAM):   end;
554670    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
554671    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
554672    +   end;
MPRINT(EM_DIAGRAM):   end;
554673    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554674    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
554675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554677    +   end;
MPRINT(EM_DIAGRAM):   end;
554678    +end;
MPRINT(EM_DIAGRAM):   end;
554679    +
554680    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
554681    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
554682    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
554683    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
554684    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
554685    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
554686    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
554687    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
554688    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
554689    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
554690    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
554691    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
554692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554694    +end;
MPRINT(EM_DIAGRAM):   end;
554695    +else do;
MPRINT(EM_DIAGRAM):   else do;
554696    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
554697    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
554698    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554699    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
554700    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
554701    +   end;
MPRINT(EM_DIAGRAM):   end;
554702    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
554703    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
554704    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
554705    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
554706    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
554707    +   end;
MPRINT(EM_DIAGRAM):   end;
554708    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
554709    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
554710    +   end;
MPRINT(EM_DIAGRAM):   end;
554711    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
554712    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
554713    +   end;
MPRINT(EM_DIAGRAM):   end;
554714    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
554715    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
554716    +   end;
MPRINT(EM_DIAGRAM):   end;
554717    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554718    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
554719    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
554720    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
554721    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
554722    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554723    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554724    +   end;
MPRINT(EM_DIAGRAM):   end;
554725    +end;
MPRINT(EM_DIAGRAM):   end;
554726    +
554727    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
554728    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
554729    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
554730    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
554731    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
554732    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
554733    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
554734    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
554735    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
554736    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
554737    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
554738    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
554739    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
554740    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
554741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554742    +end;
MPRINT(EM_DIAGRAM):   end;
554743    +else do;
MPRINT(EM_DIAGRAM):   else do;
554744    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
554745    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
554746    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
554747    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
554748    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
554749    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
554750    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
554751    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
554752    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
554753    +         end;
MPRINT(EM_DIAGRAM):   end;
554754    +         else do;
MPRINT(EM_DIAGRAM):   else do;
554755    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
554756    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
554757    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
554758    +            end;
MPRINT(EM_DIAGRAM):   end;
554759    +         end;
MPRINT(EM_DIAGRAM):   end;
554760    +      end;
MPRINT(EM_DIAGRAM):   end;
554761    +      else do;
MPRINT(EM_DIAGRAM):   else do;
554762    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
554763    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
554764    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
554765    +         end;
MPRINT(EM_DIAGRAM):   end;
554766    +      end;
MPRINT(EM_DIAGRAM):   end;
554767    +   end;
MPRINT(EM_DIAGRAM):   end;
554768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
554769    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
554770    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
554771    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
554772    +      end;
MPRINT(EM_DIAGRAM):   end;
554773    +      else do;
MPRINT(EM_DIAGRAM):   else do;
554774    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
554775    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
554776    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
554777    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
554778    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
554779    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
554780    +         end;
MPRINT(EM_DIAGRAM):   end;
554781    +      end;
MPRINT(EM_DIAGRAM):   end;
554782    +   end;
MPRINT(EM_DIAGRAM):   end;
554783    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
554784    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
554785    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
554786    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
554787    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
554788    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
554789    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554790    +   end;
MPRINT(EM_DIAGRAM):   end;
554791    +end;
MPRINT(EM_DIAGRAM):   end;
554792    +
554793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554794    +*** Checking missing input Interval
554795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
554796    +
554797    +IF NMISS(
554798    +   AcceptedCmpTotal ,
554799    +   Age ,
554800    +   Frq ,
554801    +   Income ,
554802    +   Kidhome ,
554803    +   Mnt ,
554804    +   MntFishProducts ,
554805    +   MntFruits ,
554806    +   MntGoldProds ,
554807    +   MntMeatProducts ,
554808    +   MntSweetProducts ,
554809    +   MntWines ,
554810    +   MonthsAsCustomer ,
554811    +   NumCatalogPurchases ,
554812    +   NumDealsPurchases ,
554813    +   NumDistPurchases ,
554814    +   NumStorePurchases ,
554815    +   NumWebPurchases ,
554816    +   NumWebVisitsMonth ,
554817    +   RFMstat ,
554818    +   RMntFrq ,
554819    +   Recency ,
554820    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
554821    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
554822    +
554823    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
554824    +END;
MPRINT(EM_DIAGRAM):   END;
554825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554826    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
554827    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554828    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554829    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
554830    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
554831    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
554832    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
554833    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
554834    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
554835    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
554836    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
554837    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
554838    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
554839    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
554840    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
554841    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
554842    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
554843    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
554844    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
554845    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
554846    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
554847    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
554848    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
554849    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
554850    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
554851    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
554852    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
554853    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
554854    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
554855    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
554856    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
554857    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
554858    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
554859    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
554860    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
554861    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
554862    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
554863    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
554864    +END;
MPRINT(EM_DIAGRAM):   END;
554865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554866    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
554867    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
554868    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
554869    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
554870    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
554871    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
554872    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
554873    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
554874    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
554875    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
554876    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
554877    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
554878    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
554879    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
554880    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
554881    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
554882    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
554883    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
554884    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
554885    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
554886    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
554887    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
554888    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
554889    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
554890    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
554891    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
554892    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
554893    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
554894    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
554895    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
554896    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
554897    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
554898    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
554899    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
554900    +   ELSE S_NumCatalogPurchases
554901    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
554902    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
554903    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
554904    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
554905    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
554906    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
554907    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
554908    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
554909    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
554910    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
554911    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
554912    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
554913    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
554914    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
554915    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
554916    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
554917    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
554918    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
554919    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
554920    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
554921    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
554922    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
554923    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
554924    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
554925    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
554926    +END;
MPRINT(EM_DIAGRAM):   END;
554927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554928    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
554929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554931    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
554932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554934    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
554935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554936    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554937    +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
554938    +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
554939    +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
554940    +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
554941    +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
554942    +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
554943    +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
554944    +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
554945    +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
554946    +          +     -0.4295354470932 * S_NumDealsPurchases
554947    +          +    -0.08226280459837 * S_NumDistPurchases
554948    +          +      0.2932815275833 * S_NumStorePurchases
554949    +          +     0.19049189042599 * S_NumWebPurchases
554950    +          +    -0.98799339280673 * S_NumWebVisitsMonth
554951    +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
554952    +        S_RMntFrq  +     1.04348870032296 * S_Recency
554953    +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 * 
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome 
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 * 
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts + 
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 * 
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 * 
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 * 
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 * 
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq + 
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
554954    +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
554955    +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
554956    +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
554957    +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
554958    +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 * 
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 + 
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 * 
HigherEducationBinary0 ;
554959    +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
554960    +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
554961    +        EducationGraduation  +    -0.06446100461656 * EducationMaster
554962    +          +    -0.78551174413278 * Marital_StatusDivorced
554963    +          +     1.14162836709205 * Marital_StatusMarried
554964    +          +    -0.85471695548675 * Marital_StatusSingle
554965    +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle + 
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656 
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 * 
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 * 
Marital_StatusTogether ;
554966    +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
554967    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
554968    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
554969    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
554970    +END;
MPRINT(EM_DIAGRAM):   END;
554971    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
554972    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
554973    +END;
MPRINT(EM_DIAGRAM):   END;
554974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554975    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
554976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
554977    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
554978    +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
554979    +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
554980    +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
554981    +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
554982    +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
554983    +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
554984    +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
554985    +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
554986    +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
554987    +          +      0.1710743409836 * S_NumDealsPurchases
554988    +          +     1.10019178495427 * S_NumDistPurchases
554989    +          +     0.06701301620472 * S_NumStorePurchases
554990    +          +    -1.47240374003368 * S_NumWebPurchases
554991    +          +     0.38443387640949 * S_NumWebVisitsMonth
554992    +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
554993    +        S_RMntFrq  +    -0.01383257292281 * S_Recency
554994    +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 * 
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 * 
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts + 
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 * 
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines + 
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases + 
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases + 
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases + 
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 * 
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
554995    +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
554996    +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
554997    +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
554998    +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
554999    +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 * 
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 + 
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 * 
HigherEducationBinary0 ;
555000    +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
555001    +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
555002    +        EducationGraduation  +    -0.84396607413409 * EducationMaster
555003    +          +    -0.36835980184757 * Marital_StatusDivorced
555004    +          +     0.71718933679692 * Marital_StatusMarried
555005    +          +    -0.35767236657055 * Marital_StatusSingle
555006    +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle + 
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation + 
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced + 
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle + 
0.87230634846649 * Marital_StatusTogether ;
555007    +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
555008    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
555009    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
555010    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
555011    +END;
MPRINT(EM_DIAGRAM):   END;
555012    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555013    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
555014    +END;
MPRINT(EM_DIAGRAM):   END;
555015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555016    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
555017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555018    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
555019    +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
555020    +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
555021    +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
555022    +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
555023    +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
555024    +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
555025    +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
555026    +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
555027    +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
555028    +          +    -1.99858075809796 * S_NumDealsPurchases
555029    +          +    -0.37353682448701 * S_NumDistPurchases
555030    +          +     1.16275863071649 * S_NumStorePurchases
555031    +          +       -0.75936809253 * S_NumWebPurchases
555032    +          +     2.17936226306026 * S_NumWebVisitsMonth
555033    +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
555034    +        S_RMntFrq  +    -1.06566929523903 * S_Recency
555035    +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 * 
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome 
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 * 
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts + 
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 * 
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 * 
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 * 
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 * 
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq + 
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
555036    +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
555037    +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
555038    +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
555039    +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
555040    +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 * 
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 + 
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 * 
HigherEducationBinary0 ;
555041    +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
555042    +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
555043    +        EducationGraduation  +    -0.90489876056203 * EducationMaster
555044    +          +     0.60036315441483 * Marital_StatusDivorced
555045    +          +    -0.94084946353672 * Marital_StatusMarried
555046    +          +     0.34594388147374 * Marital_StatusSingle
555047    +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle + 
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203 
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 * 
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 * 
Marital_StatusTogether ;
555048    +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
555049    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
555050    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
555051    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
555052    +END;
MPRINT(EM_DIAGRAM):   END;
555053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555054    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
555055    +END;
MPRINT(EM_DIAGRAM):   END;
555056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555057    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
555058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555059    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
555060    +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
555061    +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
555062    +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
555063    +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
555064    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
555065    +END;
MPRINT(EM_DIAGRAM):   END;
555066    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555067    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
555068    +END;
MPRINT(EM_DIAGRAM):   END;
555069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555070    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
555071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555072    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
555073    +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
555074    +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
555075    +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
555076    +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
555077    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
555078    +END;
MPRINT(EM_DIAGRAM):   END;
555079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555080    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
555081    +END;
MPRINT(EM_DIAGRAM):   END;
555082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555083    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
555084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555085    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
555086    +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
555087    +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
555088    +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
555089    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
555090    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
555091    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
555092    +END;
MPRINT(EM_DIAGRAM):   END;
555093    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555094    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
555095    +END;
MPRINT(EM_DIAGRAM):   END;
555096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555097    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
555098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555099    +
555100    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
555101    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
555102    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
555103    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
555104    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
555105    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
555106    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
555107    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
555108    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
555109    +end;
MPRINT(EM_DIAGRAM):   end;
555110    +else do;
MPRINT(EM_DIAGRAM):   else do;
555111    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
555112    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
555113    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
555114    +   end;
MPRINT(EM_DIAGRAM):   end;
555115    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
555116    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
555117    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
555118    +   end;
MPRINT(EM_DIAGRAM):   end;
555119    +   else do;
MPRINT(EM_DIAGRAM):   else do;
555120    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
555121    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
555122    +   end;
MPRINT(EM_DIAGRAM):   end;
555123    +end;
MPRINT(EM_DIAGRAM):   end;
555124    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
555125    +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
555126    +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
555127    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
555128    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
555129    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
555130    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
555131    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
555132    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
555133    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
555134    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
555135    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
555136    +END;
MPRINT(EM_DIAGRAM):   END;
555137    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
555138    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
555139    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
555140    +END;
MPRINT(EM_DIAGRAM):   END;
555141    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
555142    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
555143    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
555144    +END;
MPRINT(EM_DIAGRAM):   END;
555145    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
555146    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
555147    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
555148    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
555149    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
555150    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
555151    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
555152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555153    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
555154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
555155    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
555156    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
555157    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
555158    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
555159    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
555160    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
555161    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
555162    +END;
MPRINT(EM_DIAGRAM):   END;
555163    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
555164    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
555165    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
555166    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
555167     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
555168     quit;
555169     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
555170     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
555171     * AutoNeural6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Computing metadata for TRAIN data;
555172     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural6_TRAIN out=WORK.M3MVSGXL 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MVSGXL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MVSGXL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MVSGXL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MVSGXL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1LOHQRE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UZBK14(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LOHQRE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
555484     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
555485     set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
555486     where DATA='AutoNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
555487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE (DATA='AutoNeural6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

555488     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural6_EMINFO;
555489     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
555490     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
555491     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
555495     run;
555496     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_EMINFO;
555497     set EMWS8.AutoNeural6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO WORK.MODELTEMP_INFO;
555498     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

555499     proc sort data = EMWS8.AutoNeural6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO NOTHREADS;
555500     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
555501     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

555502     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
555503     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
555504     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

555505     proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
555506     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
555507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

555508     data EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural6_EMINFO;
555509     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
555510     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
555511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

555512     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
555513     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
555514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
555515     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
