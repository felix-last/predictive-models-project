MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 
2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H10m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3O_QA1F 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3O_QA1F new;
MPRINT(EM_DIAGRAM):   run;
91491      filename emflow
91491    ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91492      *------------------------------------------------------------*;
91493      * Tree: Scoring DATA data;
91494      *------------------------------------------------------------*;
91495      data EMWS8.Tree_TRAIN
91496      / view=EMWS8.Tree_TRAIN
91497      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree_TRAIN / view=EMWS8.Tree_TRAIN ;
91498      set EMWS8.Meta_TRAIN
91499      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
91500      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas.
91501     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91502     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
91503     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91504     +
91505     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
91506     +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
91507     +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
91508     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
91509     +
91510     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
91511     +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
91512     +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
91513     +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
91514     +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
91515     +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
91516     +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
91517     +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
91518     +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
91519     +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
91520     +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
91521     +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
91522     +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
91523     +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
91524     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
91525     +
91526     +
91527     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
91528     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
91529     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
91530     +
91531     +
91532     +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
91533     + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
91534     +
91535     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
91536     +IF  NOT MISSING(Mnt ) AND
91537     +               1603.16 <= Mnt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 1603.16 <= Mnt THEN DO;
91538     +  IF  NOT MISSING(Mnt ) AND
91539     +                 2348.84 <= Mnt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 2348.84 <= Mnt THEN DO;
91540     +    IF  NOT MISSING(HouseKeeping ) AND
91541     +      HouseKeeping  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(HouseKeeping ) AND HouseKeeping < 3.5 THEN DO;
91542     +      _NODE_  =                   10;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
91543     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
91544     +      P_DepVar0  =               0.0625;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.0625;
91545     +      P_DepVar1  =               0.9375;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9375;
91546     +      Q_DepVar0  =               0.0625;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.0625;
91547     +      Q_DepVar1  =               0.9375;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.9375;
91548     +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
91549     +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
91550     +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
91551     +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91552     +      END;
MPRINT(EM_DIAGRAM):   END;
91553     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91554     +      IF  NOT MISSING(Rcn ) AND
91555     +        Rcn  <                 61.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Rcn ) AND Rcn < 61.5 THEN DO;
91556     +        _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
91557     +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
91558     +        P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
91559     +        P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
91560     +        Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
91561     +        Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
91562     +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
91563     +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
91564     +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91565     +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91566     +        END;
MPRINT(EM_DIAGRAM):   END;
91567     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91568     +        _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
91569     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
91570     +        P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
91571     +        P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
91572     +        Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
91573     +        Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
91574     +        V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
91575     +        V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
91576     +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
91577     +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91578     +        END;
MPRINT(EM_DIAGRAM):   END;
91579     +      END;
MPRINT(EM_DIAGRAM):   END;
91580     +    END;
MPRINT(EM_DIAGRAM):   END;
91581     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91582     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
91583     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
91584     +    P_DepVar0  =     0.67272727272727;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.67272727272727;
91585     +    P_DepVar1  =     0.32727272727272;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.32727272727272;
91586     +    Q_DepVar0  =     0.67272727272727;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.67272727272727;
91587     +    Q_DepVar1  =     0.32727272727272;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.32727272727272;
91588     +    V_DepVar0  =     0.73239436619718;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.73239436619718;
91589     +    V_DepVar1  =     0.26760563380281;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.26760563380281;
91590     +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91591     +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91592     +    END;
MPRINT(EM_DIAGRAM):   END;
91593     +  END;
MPRINT(EM_DIAGRAM):   END;
91594     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91595     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
91596     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
91597     +  P_DepVar0  =     0.97487787857641;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.97487787857641;
91598     +  P_DepVar1  =     0.02512212142358;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02512212142358;
91599     +  Q_DepVar0  =     0.97487787857641;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.97487787857641;
91600     +  Q_DepVar1  =     0.02512212142358;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.02512212142358;
91601     +  V_DepVar0  =     0.96290322580645;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96290322580645;
91602     +  V_DepVar1  =     0.03709677419354;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03709677419354;
91603     +  I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91604     +  U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91605     +  END;
MPRINT(EM_DIAGRAM):   END;
91606     +
91607     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
91608     +IF  F_DepVar  NE '0'
91609     +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
91610     +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
91611     +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
91612     + END;
MPRINT(EM_DIAGRAM):   END;
91613     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91614     +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
91615     +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
91616     +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
91617     +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
91618     +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
91619     +       END;
MPRINT(EM_DIAGRAM):   END;
91620     + END;
MPRINT(EM_DIAGRAM):   END;
91621     +
91622     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91623     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
91624     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91625     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
91626      run;

NOTE: DATA STEP view saved on file EMWS8.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
91627      quit;
91628      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
91629      filename emflow
91629    ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91630      *------------------------------------------------------------*;
91631      * Tree: Scoring VALIDATE data;
91632      *------------------------------------------------------------*;
91633      data EMWS8.Tree_VALIDATE
91634      / view=EMWS8.Tree_VALIDATE
91635      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree_VALIDATE / view=EMWS8.Tree_VALIDATE ;
91636      set EMWS8.Meta_VALIDATE
91637      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
91638      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\EMFLOWSCORE.sas.
91639     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91640     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
91641     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91642     +
91643     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
91644     +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
91645     +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
91646     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
91647     +
91648     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
91649     +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
91650     +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
91651     +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
91652     +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
91653     +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
91654     +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
91655     +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
91656     +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
91657     +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
91658     +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
91659     +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
91660     +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
91661     +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
91662     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
91663     +
91664     +
91665     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
91666     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
91667     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
91668     +
91669     +
91670     +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
91671     + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
91672     +
91673     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
91674     +IF  NOT MISSING(Mnt ) AND
91675     +               1603.16 <= Mnt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 1603.16 <= Mnt THEN DO;
91676     +  IF  NOT MISSING(Mnt ) AND
91677     +                 2348.84 <= Mnt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 2348.84 <= Mnt THEN DO;
91678     +    IF  NOT MISSING(HouseKeeping ) AND
91679     +      HouseKeeping  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(HouseKeeping ) AND HouseKeeping < 3.5 THEN DO;
91680     +      _NODE_  =                   10;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
91681     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
91682     +      P_DepVar0  =               0.0625;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.0625;
91683     +      P_DepVar1  =               0.9375;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9375;
91684     +      Q_DepVar0  =               0.0625;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.0625;
91685     +      Q_DepVar1  =               0.9375;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.9375;
91686     +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
91687     +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
91688     +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
91689     +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91690     +      END;
MPRINT(EM_DIAGRAM):   END;
91691     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91692     +      IF  NOT MISSING(Rcn ) AND
91693     +        Rcn  <                 61.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Rcn ) AND Rcn < 61.5 THEN DO;
91694     +        _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
91695     +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
91696     +        P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
91697     +        P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
91698     +        Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
91699     +        Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
91700     +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
91701     +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
91702     +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91703     +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91704     +        END;
MPRINT(EM_DIAGRAM):   END;
91705     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91706     +        _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
91707     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
91708     +        P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
91709     +        P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
91710     +        Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
91711     +        Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
91712     +        V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
91713     +        V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
91714     +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
91715     +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91716     +        END;
MPRINT(EM_DIAGRAM):   END;
91717     +      END;
MPRINT(EM_DIAGRAM):   END;
91718     +    END;
MPRINT(EM_DIAGRAM):   END;
91719     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91720     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
91721     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
91722     +    P_DepVar0  =     0.67272727272727;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.67272727272727;
91723     +    P_DepVar1  =     0.32727272727272;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.32727272727272;
91724     +    Q_DepVar0  =     0.67272727272727;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.67272727272727;
91725     +    Q_DepVar1  =     0.32727272727272;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.32727272727272;
91726     +    V_DepVar0  =     0.73239436619718;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.73239436619718;
91727     +    V_DepVar1  =     0.26760563380281;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.26760563380281;
91728     +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91729     +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91730     +    END;
MPRINT(EM_DIAGRAM):   END;
91731     +  END;
MPRINT(EM_DIAGRAM):   END;
91732     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91733     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
91734     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
91735     +  P_DepVar0  =     0.97487787857641;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.97487787857641;
91736     +  P_DepVar1  =     0.02512212142358;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02512212142358;
91737     +  Q_DepVar0  =     0.97487787857641;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.97487787857641;
91738     +  Q_DepVar1  =     0.02512212142358;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.02512212142358;
91739     +  V_DepVar0  =     0.96290322580645;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96290322580645;
91740     +  V_DepVar1  =     0.03709677419354;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03709677419354;
91741     +  I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
91742     +  U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91743     +  END;
MPRINT(EM_DIAGRAM):   END;
91744     +
91745     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
91746     +IF  F_DepVar  NE '0'
91747     +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
91748     +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
91749     +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
91750     + END;
MPRINT(EM_DIAGRAM):   END;
91751     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91752     +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
91753     +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
91754     +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
91755     +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
91756     +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
91757     +       END;
MPRINT(EM_DIAGRAM):   END;
91758     + END;
MPRINT(EM_DIAGRAM):   END;
91759     +
91760     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91761     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
91762     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
91763     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
91764      run;

NOTE: DATA STEP view saved on file EMWS8.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
91765      quit;
91766      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
91767      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
91768      * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
91769      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Tree_TRAIN out=WORK.M3B0KNFS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B0KNFS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B0KNFS(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B0KNFS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B0KNFS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1H1NZ3V NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I42F26(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H1NZ3V;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if name = '_NODE_' then do;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'MNT' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RCN' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'HOUSEKEEPING' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'RECOMENDATION' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'CATPURCHASE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'CLOTHES' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DEPENDENTS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'SMALLAPPLIANCES' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'TOYS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'MARITAL_STATUS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar1' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar0' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
92127      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
92128      set EMWS8.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree_EMINFO;
92129      where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
92130      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

92131      data EMWS8.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Tree_EMINFO;
92132      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
92133      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
92134      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
92138      run;
92139      data EMWS8.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree_EMINFO;
92140      set EMWS8.Tree_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree_EMINFO WORK.MODELTEMP_INFO;
92141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

92142      proc sort data = EMWS8.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Tree_EMINFO NOTHREADS;
92143      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
92144      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE_EMINFO.
NOTE: The data set EMWS8.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

92145      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
92146      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
92147      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

92148      proc sort data = EMWS8.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
92149      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
92150      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

92151      data EMWS8.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree_EMINFO;
92152      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
92153      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
92154      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.TREE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

92155      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
92156      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
92157      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
92158      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
