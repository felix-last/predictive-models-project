MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O00QF6E3 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O00QF6E3 new;
MPRINT(EM_DIAGRAM):   run;
1184499    filename emflow
1184499  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL12_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184500    *------------------------------------------------------------*;
1184501    * Ensmbl43: Scoring AUTONEURAL12_TRAIN data;
1184502    *------------------------------------------------------------*;
1184503    data EMWS8.Ensmbl43_TRAIN
1184504    / view=EMWS8.Ensmbl43_TRAIN
1184505    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_TRAIN / view=EMWS8.Ensmbl43_TRAIN ;
1184506    set EMWS8.AutoNeural12_TRAIN
1184507    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_TRAIN ;
1184508    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
1184509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184510   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
1184511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184512   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
1184513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184515   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1184516   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1184517   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1184518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184520   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1184521   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1184522   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1184523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184525   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1184526   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1184527   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1184528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184530   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1184531   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1184532   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1184533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184534   +
1184535   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1184536   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1184536  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1184537   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1184538   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1184539   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1184540   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1184541   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1184542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184543   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1184544   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1184545   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1184546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184548   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1184549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184550   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1184551   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1184552   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1184553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184554   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1184555   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1184556   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1184557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184559   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1184560   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1184561   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1184562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184564   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1184565   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1184566   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1184567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184568   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1184569   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1184570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1184571   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1184572   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1184573   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1184574   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1184575   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1184576   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1184577   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1184578   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1184579   +LENGTH _WARN_ $4
1184580   +      F_DepVar  $ 12
1184581   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1184582   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1184583   +
1184584   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1184585   +
1184586   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1184587   +
1184588   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1184589   +
1184590   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1184591   +
1184592   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1184593   +
1184594   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1184595   +
1184596   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1184597   +
1184598   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1184599   +
1184600   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1184601   +
1184602   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1184603   +
1184604   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1184605   +
1184606   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1184607   +
1184608   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1184609   +
1184610   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1184611   +
1184612   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1184613   +
1184614   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1184615   +
1184616   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1184617   +
1184618   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1184619   +
1184620   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1184621   +
1184622   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1184623   +
1184624   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1184625   +
1184626   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1184627   +
1184628   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1184629   +
1184630   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1184631   +
1184632   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1184633   +
1184634   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1184635   +
1184636   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1184637   +
1184638   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1184639   +
1184640   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1184641   +
1184642   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1184643   +
1184644   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1184645   +
1184646   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1184647   +
1184648   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1184649   +
1184650   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1184651   +
1184652   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1184653   +
1184654   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1184655   +
1184656   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1184657   +
1184658   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1184659   +
1184660   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1184661   +
1184662   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1184663   +
1184664   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1184665   +
1184666   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1184667   +
1184668   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1184669   +
1184670   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1184671   +
1184672   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1184673   +
1184674   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1184675   +
1184676   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1184677   +
1184678   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1184679   +
1184680   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1184681   +
1184682   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1184683   +
1184684   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1184685   +
1184686   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1184687   +
1184688   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1184689   +
1184690   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1184691   +
1184692   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1184693   +
1184694   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1184695   +
1184696   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1184697   +
1184698   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1184699   +
1184700   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1184701   +
1184702   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1184703   +
1184704   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1184705   +
1184706   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1184707   +
1184708   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1184709   +
1184710   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1184711   +
1184712   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1184713   +
1184714   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1184715   +
1184716   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1184717   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1184718   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1184719   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1184720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184722   +end;
MPRINT(EM_DIAGRAM):   end;
1184723   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184725   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1184726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184727   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184728   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1184729   +   end;
MPRINT(EM_DIAGRAM):   end;
1184730   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184731   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1184732   +   end;
MPRINT(EM_DIAGRAM):   end;
1184733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184734   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1184735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184737   +   end;
MPRINT(EM_DIAGRAM):   end;
1184738   +end;
MPRINT(EM_DIAGRAM):   end;
1184739   +
1184740   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1184741   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1184742   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1184743   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1184744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184746   +end;
MPRINT(EM_DIAGRAM):   end;
1184747   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184749   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1184750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184751   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184752   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1184753   +   end;
MPRINT(EM_DIAGRAM):   end;
1184754   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184755   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1184756   +   end;
MPRINT(EM_DIAGRAM):   end;
1184757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184758   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1184759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184761   +   end;
MPRINT(EM_DIAGRAM):   end;
1184762   +end;
MPRINT(EM_DIAGRAM):   end;
1184763   +
1184764   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1184765   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1184766   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1184767   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1184768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184770   +end;
MPRINT(EM_DIAGRAM):   end;
1184771   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184772   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184773   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1184774   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184775   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184776   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1184777   +   end;
MPRINT(EM_DIAGRAM):   end;
1184778   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184779   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1184780   +   end;
MPRINT(EM_DIAGRAM):   end;
1184781   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184782   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1184783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184785   +   end;
MPRINT(EM_DIAGRAM):   end;
1184786   +end;
MPRINT(EM_DIAGRAM):   end;
1184787   +
1184788   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1184789   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1184790   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1184791   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1184792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184794   +end;
MPRINT(EM_DIAGRAM):   end;
1184795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184797   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1184798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184800   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1184801   +   end;
MPRINT(EM_DIAGRAM):   end;
1184802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184803   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1184804   +   end;
MPRINT(EM_DIAGRAM):   end;
1184805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184806   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1184807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184809   +   end;
MPRINT(EM_DIAGRAM):   end;
1184810   +end;
MPRINT(EM_DIAGRAM):   end;
1184811   +
1184812   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1184813   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1184814   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1184815   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1184816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184818   +end;
MPRINT(EM_DIAGRAM):   end;
1184819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184821   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1184822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184823   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184824   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1184825   +   end;
MPRINT(EM_DIAGRAM):   end;
1184826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184827   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1184828   +   end;
MPRINT(EM_DIAGRAM):   end;
1184829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184830   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1184831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184833   +   end;
MPRINT(EM_DIAGRAM):   end;
1184834   +end;
MPRINT(EM_DIAGRAM):   end;
1184835   +
1184836   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1184837   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1184838   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1184839   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1184840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184842   +end;
MPRINT(EM_DIAGRAM):   end;
1184843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184845   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1184846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184848   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1184849   +   end;
MPRINT(EM_DIAGRAM):   end;
1184850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184851   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1184852   +   end;
MPRINT(EM_DIAGRAM):   end;
1184853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184854   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1184855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184857   +   end;
MPRINT(EM_DIAGRAM):   end;
1184858   +end;
MPRINT(EM_DIAGRAM):   end;
1184859   +
1184860   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1184861   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1184862   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1184863   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1184864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184866   +end;
MPRINT(EM_DIAGRAM):   end;
1184867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184869   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1184870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184871   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1184872   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1184873   +   end;
MPRINT(EM_DIAGRAM):   end;
1184874   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1184875   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1184876   +   end;
MPRINT(EM_DIAGRAM):   end;
1184877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184878   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1184879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184881   +   end;
MPRINT(EM_DIAGRAM):   end;
1184882   +end;
MPRINT(EM_DIAGRAM):   end;
1184883   +
1184884   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1184885   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1184886   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1184887   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1184888   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1184889   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1184890   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1184891   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1184892   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1184893   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1184894   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1184895   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1184896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184898   +end;
MPRINT(EM_DIAGRAM):   end;
1184899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184900   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1184901   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1184902   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184903   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1184904   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1184905   +   end;
MPRINT(EM_DIAGRAM):   end;
1184906   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1184907   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1184908   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1184909   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1184910   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1184911   +   end;
MPRINT(EM_DIAGRAM):   end;
1184912   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1184913   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1184914   +   end;
MPRINT(EM_DIAGRAM):   end;
1184915   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1184916   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1184917   +   end;
MPRINT(EM_DIAGRAM):   end;
1184918   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1184919   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1184920   +   end;
MPRINT(EM_DIAGRAM):   end;
1184921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184922   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1184923   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1184924   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1184925   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1184926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184928   +   end;
MPRINT(EM_DIAGRAM):   end;
1184929   +end;
MPRINT(EM_DIAGRAM):   end;
1184930   +
1184931   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1184932   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1184933   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1184934   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1184935   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1184936   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1184937   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1184938   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1184939   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1184940   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1184941   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1184942   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1184943   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1184944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184946   +end;
MPRINT(EM_DIAGRAM):   end;
1184947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184948   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1184949   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1184950   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184951   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1184952   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1184953   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1184954   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1184955   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1184956   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184957   +         end;
MPRINT(EM_DIAGRAM):   end;
1184958   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1184959   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1184960   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1184961   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184962   +            end;
MPRINT(EM_DIAGRAM):   end;
1184963   +         end;
MPRINT(EM_DIAGRAM):   end;
1184964   +      end;
MPRINT(EM_DIAGRAM):   end;
1184965   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1184966   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1184967   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1184968   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184969   +         end;
MPRINT(EM_DIAGRAM):   end;
1184970   +      end;
MPRINT(EM_DIAGRAM):   end;
1184971   +   end;
MPRINT(EM_DIAGRAM):   end;
1184972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184973   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1184974   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1184975   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184976   +      end;
MPRINT(EM_DIAGRAM):   end;
1184977   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1184978   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1184979   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1184980   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1184981   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1184982   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1184983   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184984   +         end;
MPRINT(EM_DIAGRAM):   end;
1184985   +      end;
MPRINT(EM_DIAGRAM):   end;
1184986   +   end;
MPRINT(EM_DIAGRAM):   end;
1184987   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1184988   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1184989   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1184990   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1184991   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1184992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184994   +   end;
MPRINT(EM_DIAGRAM):   end;
1184995   +end;
MPRINT(EM_DIAGRAM):   end;
1184996   +
1184997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184998   +*** Checking missing input Interval
1184999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1185000   +
1185001   +IF NMISS(
1185002   +   AcceptedCmpTotal ,
1185003   +   Age ,
1185004   +   Frq ,
1185005   +   Income ,
1185006   +   Kidhome ,
1185007   +   Mnt ,
1185008   +   MntFishProducts ,
1185009   +   MntFruits ,
1185010   +   MntGoldProds ,
1185011   +   MntMeatProducts ,
1185012   +   MntSweetProducts ,
1185013   +   MntWines ,
1185014   +   MonthsAsCustomer ,
1185015   +   NumCatalogPurchases ,
1185016   +   NumDealsPurchases ,
1185017   +   NumDistPurchases ,
1185018   +   NumStorePurchases ,
1185019   +   NumWebPurchases ,
1185020   +   NumWebVisitsMonth ,
1185021   +   RFMstat ,
1185022   +   RMntFrq ,
1185023   +   Recency ,
1185024   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1185025   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1185026   +
1185027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185028   +END;
MPRINT(EM_DIAGRAM):   END;
1185029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185030   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1185031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185033   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1185034   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1185035   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1185036   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1185037   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1185038   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1185039   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1185040   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1185041   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1185042   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1185043   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1185044   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1185045   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1185046   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1185047   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1185048   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1185049   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1185050   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1185051   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1185052   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1185053   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1185054   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1185055   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1185056   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1185057   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1185058   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1185059   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1185060   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1185061   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1185062   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1185063   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1185064   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1185065   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1185066   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1185067   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1185068   +END;
MPRINT(EM_DIAGRAM):   END;
1185069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185070   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1185071   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1185072   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1185073   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1185074   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1185075   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1185076   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1185077   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1185078   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1185079   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1185080   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1185081   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1185082   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1185083   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1185084   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1185085   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1185086   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1185087   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1185088   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1185089   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1185090   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1185091   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1185092   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1185093   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1185094   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1185095   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1185096   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1185097   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1185098   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1185099   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1185100   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1185101   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1185102   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1185103   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1185104   +   ELSE S_NumCatalogPurchases
1185105   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1185106   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1185107   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1185108   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1185109   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1185110   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1185111   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1185112   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1185113   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1185114   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1185115   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1185116   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1185117   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1185118   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1185119   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1185120   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1185121   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1185122   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1185123   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1185124   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1185125   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1185126   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1185127   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1185128   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1185129   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1185130   +END;
MPRINT(EM_DIAGRAM):   END;
1185131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185132   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1185133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185135   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1185136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185138   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1185139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185140   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185141   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1185142   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1185143   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1185144   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1185145   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1185146   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1185147   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1185148   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1185149   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1185150   +          +     1.17276395296242 * S_NumDealsPurchases
1185151   +          +     0.26632768295477 * S_NumDistPurchases
1185152   +          +    -1.26575615903579 * S_NumStorePurchases
1185153   +          +    -0.95316107557927 * S_NumWebPurchases
1185154   +          +     1.01828574356487 * S_NumWebVisitsMonth
1185155   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1185156   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1185157   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1185158   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1185159   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1185160   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1185161   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1185162   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1185163   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1185164   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1185165   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1185166   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1185167   +          +     1.14485571201233 * S_NumDealsPurchases
1185168   +          +     0.21414266588987 * S_NumDistPurchases
1185169   +          +    -0.10530090074297 * S_NumStorePurchases
1185170   +          +    -0.41712321238458 * S_NumWebPurchases
1185171   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1185172   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1185173   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1185174   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1185175   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1185176   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1185177   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1185178   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1185179   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1185180   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1185181   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1185182   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1185183   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1185184   +          +      0.7196418967437 * S_NumDealsPurchases
1185185   +          +     0.69035286374177 * S_NumDistPurchases
1185186   +          +     0.38027656631135 * S_NumStorePurchases
1185187   +          +    -0.18878358997924 * S_NumWebPurchases
1185188   +          +     1.61962062004798 * S_NumWebVisitsMonth
1185189   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1185190   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1185191   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1185192   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1185193   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1185194   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1185195   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1185196   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1185197   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1185198   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1185199   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1185200   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1185201   +          +    -0.00642902007204 * S_NumDealsPurchases
1185202   +          +     0.29785069480367 * S_NumDistPurchases
1185203   +          +    -0.42243322063147 * S_NumStorePurchases
1185204   +          +     0.54880896338383 * S_NumWebPurchases
1185205   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1185206   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1185207   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1185208   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1185209   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1185210   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1185211   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1185212   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1185213   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1185214   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1185215   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1185216   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1185217   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1185218   +          +    -0.48404738328225 * S_NumDealsPurchases
1185219   +          +    -0.02464180457879 * S_NumDistPurchases
1185220   +          +     1.17201831082067 * S_NumStorePurchases
1185221   +          +     0.57453655167516 * S_NumWebPurchases
1185222   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1185223   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1185224   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1185225   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1185226   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1185227   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1185228   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1185229   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1185230   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1185231   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1185232   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1185233   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1185234   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1185235   +          +    -1.49850531967483 * S_NumDealsPurchases
1185236   +          +    -0.82105466264223 * S_NumDistPurchases
1185237   +          +     0.29984603642824 * S_NumStorePurchases
1185238   +          +     0.06557123721611 * S_NumWebPurchases
1185239   +          +     1.04754749365002 * S_NumWebVisitsMonth
1185240   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1185241   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1185242   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1185243   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1185244   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1185245   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1185246   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1185247   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1185248   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1185249   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1185250   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1185251   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1185252   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1185253   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1185254   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1185255   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1185256   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1185257   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1185258   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1185259   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1185260   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1185261   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1185262   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1185263   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1185264   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1185265   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1185266   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1185267   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1185268   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1185269   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1185270   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1185271   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1185272   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1185273   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1185274   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1185275   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1185276   +          +     0.24583509957712 * Marital_StatusDivorced
1185277   +          +    -0.22681931588361 * Marital_StatusMarried
1185278   +          +    -0.12924106229536 * Marital_StatusSingle
1185279   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1185280   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1185281   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1185282   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1185283   +          +    -0.12585334311068 * Marital_StatusDivorced
1185284   +          +    -0.20835502467207 * Marital_StatusMarried
1185285   +          +    -0.13839534449368 * Marital_StatusSingle
1185286   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1185287   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1185288   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1185289   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1185290   +          +     0.35106363238113 * Marital_StatusDivorced
1185291   +          +     -1.3414808583918 * Marital_StatusMarried
1185292   +          +     1.40835320798486 * Marital_StatusSingle
1185293   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1185294   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1185295   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1185296   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1185297   +          +     0.48174546958393 * Marital_StatusDivorced
1185298   +          +    -0.41416978858191 * Marital_StatusMarried
1185299   +          +    -0.23376801546265 * Marital_StatusSingle
1185300   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1185301   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1185302   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1185303   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1185304   +          +    -0.67557643774246 * Marital_StatusDivorced
1185305   +          +     1.63844045917367 * Marital_StatusMarried
1185306   +          +    -0.70320960247699 * Marital_StatusSingle
1185307   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1185308   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1185309   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1185310   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1185311   +          +    -0.11371453086883 * Marital_StatusDivorced
1185312   +          +    -0.34226997176291 * Marital_StatusMarried
1185313   +          +    -1.01568676685754 * Marital_StatusSingle
1185314   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1185315   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1185316   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1185317   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1185318   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1185319   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1185320   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1185321   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1185322   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1185323   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1185324   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1185325   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1185326   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1185327   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1185328   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1185329   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1185330   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1185331   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1185332   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1185333   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1185334   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1185335   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1185336   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1185337   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1185338   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1185339   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1185340   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1185341   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1185342   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1185343   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1185344   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1185345   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1185346   +END;
MPRINT(EM_DIAGRAM):   END;
1185347   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185348   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1185349   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1185350   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1185351   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1185352   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1185353   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1185354   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1185355   +END;
MPRINT(EM_DIAGRAM):   END;
1185356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185357   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1185358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185359   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185360   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1185361   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1185362   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1185363   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1185364   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1185365   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1185366   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1185367   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1185368   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1185369   +          +    -0.87259051567474 * S_NumDealsPurchases
1185370   +          +    -0.36454149529139 * S_NumDistPurchases
1185371   +          +     0.12447759925061 * S_NumStorePurchases
1185372   +          +    -1.08133487947367 * S_NumWebPurchases
1185373   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1185374   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1185375   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1185376   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1185377   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1185378   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1185379   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1185380   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1185381   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1185382   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1185383   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1185384   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1185385   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1185386   +          +     2.23121497416403 * S_NumDealsPurchases
1185387   +          +    -0.48674842191071 * S_NumDistPurchases
1185388   +          +     1.77510728607544 * S_NumStorePurchases
1185389   +          +     0.14647433155436 * S_NumWebPurchases
1185390   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1185391   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1185392   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1185393   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1185394   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1185395   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1185396   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1185397   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1185398   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1185399   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1185400   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1185401   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1185402   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1185403   +          +     0.14338855349611 * S_NumDealsPurchases
1185404   +          +    -2.21071010829235 * S_NumDistPurchases
1185405   +          +    -0.21795889348002 * S_NumStorePurchases
1185406   +          +     1.98825087883535 * S_NumWebPurchases
1185407   +          +     1.02482442531149 * S_NumWebVisitsMonth
1185408   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1185409   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1185410   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1185411   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1185412   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1185413   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1185414   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1185415   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1185416   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1185417   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1185418   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1185419   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1185420   +          +     0.30041205661012 * S_NumDealsPurchases
1185421   +          +    -0.63499849986918 * S_NumDistPurchases
1185422   +          +    -0.34155713433714 * S_NumStorePurchases
1185423   +          +    -1.14183354933936 * S_NumWebPurchases
1185424   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1185425   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1185426   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1185427   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1185428   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1185429   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1185430   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1185431   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1185432   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1185433   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1185434   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1185435   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1185436   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1185437   +          +    -0.21237915559831 * S_NumDealsPurchases
1185438   +          +     0.48256923764182 * S_NumDistPurchases
1185439   +          +    -0.45553093140641 * S_NumStorePurchases
1185440   +          +      0.5593655963659 * S_NumWebPurchases
1185441   +          +     0.27943768691188 * S_NumWebVisitsMonth
1185442   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1185443   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1185444   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1185445   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1185446   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1185447   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1185448   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1185449   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1185450   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1185451   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1185452   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1185453   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1185454   +          +     2.38967021388062 * S_NumDealsPurchases
1185455   +          +    -0.97722398866481 * S_NumDistPurchases
1185456   +          +     1.57612333191312 * S_NumStorePurchases
1185457   +          +    -0.75968679115983 * S_NumWebPurchases
1185458   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1185459   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1185460   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1185461   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1185462   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1185463   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1185464   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1185465   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1185466   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1185467   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1185468   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1185469   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1185470   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1185471   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1185472   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1185473   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1185474   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1185475   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1185476   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1185477   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1185478   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1185479   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1185480   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1185481   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1185482   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1185483   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1185484   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1185485   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1185486   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1185487   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1185488   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1185489   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1185490   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1185491   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1185492   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1185493   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1185494   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1185495   +          +     0.96470902298142 * Marital_StatusDivorced
1185496   +          +     0.94805959268314 * Marital_StatusMarried
1185497   +          +     -0.6523948769616 * Marital_StatusSingle
1185498   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1185499   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1185500   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1185501   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1185502   +          +      0.3918249505531 * Marital_StatusDivorced
1185503   +          +    -0.00968091979586 * Marital_StatusMarried
1185504   +          +     0.84615379885071 * Marital_StatusSingle
1185505   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1185506   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1185507   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1185508   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1185509   +          +     1.14335160313191 * Marital_StatusDivorced
1185510   +          +     0.50580517192175 * Marital_StatusMarried
1185511   +          +     0.17264295020921 * Marital_StatusSingle
1185512   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1185513   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1185514   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1185515   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1185516   +          +    -0.11238504444225 * Marital_StatusDivorced
1185517   +          +    -0.81348274043749 * Marital_StatusMarried
1185518   +          +     0.46075415610001 * Marital_StatusSingle
1185519   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1185520   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1185521   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1185522   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1185523   +          +    -0.46342068701431 * Marital_StatusDivorced
1185524   +          +    -0.41667845270204 * Marital_StatusMarried
1185525   +          +    -0.47166707496281 * Marital_StatusSingle
1185526   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1185527   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1185528   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1185529   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1185530   +          +    -0.45376613787812 * Marital_StatusDivorced
1185531   +          +     0.01337046049801 * Marital_StatusMarried
1185532   +          +    -0.92811489484121 * Marital_StatusSingle
1185533   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1185534   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1185535   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1185536   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1185537   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1185538   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1185539   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1185540   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1185541   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1185542   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1185543   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1185544   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1185545   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1185546   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1185547   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1185548   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1185549   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1185550   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1185551   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1185552   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1185553   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1185554   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1185555   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1185556   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1185557   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1185558   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1185559   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1185560   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1185561   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1185562   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1185563   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1185564   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1185565   +END;
MPRINT(EM_DIAGRAM):   END;
1185566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185567   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1185568   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1185569   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1185570   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1185571   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1185572   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1185573   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1185574   +END;
MPRINT(EM_DIAGRAM):   END;
1185575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185576   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1185577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185578   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185579   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1185580   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1185581   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1185582   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1185583   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1185584   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1185585   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1185586   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1185587   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1185588   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1185589   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1185590   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1185591   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1185592   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1185593   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1185594   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1185595   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1185596   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1185597   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1185598   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1185599   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1185600   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1185601   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1185602   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1185603   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1185604   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1185605   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1185606   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1185607   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1185608   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1185609   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1185610   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1185611   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1185612   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1185613   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1185614   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1185615   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1185616   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1185617   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1185618   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1185619   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1185620   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1185621   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1185622   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1185623   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1185624   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1185625   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1185626   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1185627   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1185628   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1185629   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1185630   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1185631   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1185632   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1185633   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1185634   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1185635   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1185636   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1185637   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1185638   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1185639   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1185640   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1185641   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1185642   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1185643   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1185644   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1185645   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1185646   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1185647   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1185648   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1185649   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1185650   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1185651   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1185652   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1185653   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1185654   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1185655   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1185656   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1185657   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1185658   +END;
MPRINT(EM_DIAGRAM):   END;
1185659   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185660   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1185661   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1185662   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1185663   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1185664   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1185665   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1185666   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1185667   +END;
MPRINT(EM_DIAGRAM):   END;
1185668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185669   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1185670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185671   +
1185672   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1185673   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1185674   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1185675   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1185676   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1185677   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185678   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1185679   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1185680   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1185681   +end;
MPRINT(EM_DIAGRAM):   end;
1185682   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185683   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1185684   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1185685   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1185686   +   end;
MPRINT(EM_DIAGRAM):   end;
1185687   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1185688   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1185689   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1185690   +   end;
MPRINT(EM_DIAGRAM):   end;
1185691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185692   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1185693   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1185694   +   end;
MPRINT(EM_DIAGRAM):   end;
1185695   +end;
MPRINT(EM_DIAGRAM):   end;
1185696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185697   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1185698   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1185699   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1185700   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1185701   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1185702   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1185703   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1185704   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1185705   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1185706   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1185707   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1185708   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1185709   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1185710   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1185711   +END;
MPRINT(EM_DIAGRAM):   END;
1185712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185713   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1185714   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1185715   +END;
MPRINT(EM_DIAGRAM):   END;
1185716   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1185717   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1185718   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1185719   +END;
MPRINT(EM_DIAGRAM):   END;
1185720   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1185721   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1185722   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1185723   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1185724   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1185725   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1185726   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1185727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185728   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1185729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185730   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1185731   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1185732   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1185733   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1185734   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1185735   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1185736   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185737   +END;
MPRINT(EM_DIAGRAM):   END;
1185738   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1185739   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1185740   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1185741   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1185742   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1185743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185744   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1185745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185746   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1185747   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1185748   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1185749   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1185750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185751   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1185752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185753   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1185754   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1185755   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1185756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185757   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
1185758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185760   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1185761   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1185762   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1185763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185764   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185765   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1185766   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185767   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1185768   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1185769   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1185770   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1185771   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1185772   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1185773   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1185774   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1185775   +LENGTH _WARN_ $4
1185776   +      F_DepVar  $ 12
1185777   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1185778   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1185779   +
1185780   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1185781   +
1185782   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1185783   +
1185784   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1185785   +
1185786   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1185787   +
1185788   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1185789   +
1185790   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1185791   +
1185792   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1185793   +
1185794   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1185795   +
1185796   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1185797   +
1185798   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1185799   +
1185800   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1185801   +
1185802   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1185803   +
1185804   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1185805   +
1185806   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1185807   +
1185808   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1185809   +
1185810   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1185811   +
1185812   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1185813   +
1185814   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1185815   +
1185816   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1185817   +
1185818   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1185819   +
1185820   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1185821   +
1185822   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1185823   +
1185824   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1185825   +
1185826   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1185827   +
1185828   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1185829   +
1185830   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1185831   +
1185832   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1185833   +
1185834   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1185835   +
1185836   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1185837   +
1185838   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1185839   +
1185840   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1185841   +
1185842   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1185843   +
1185844   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1185845   +
1185846   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1185847   +
1185848   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1185849   +
1185850   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1185851   +
1185852   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1185853   +
1185854   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1185855   +
1185856   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1185857   +
1185858   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1185859   +
1185860   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1185861   +
1185862   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1185863   +
1185864   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1185865   +
1185866   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1185867   +
1185868   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1185869   +
1185870   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1185871   +
1185872   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1185873   +
1185874   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1185875   +
1185876   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1185877   +
1185878   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1185879   +
1185880   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1185881   +
1185882   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1185883   +
1185884   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1185885   +
1185886   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1185887   +
1185888   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1185889   +
1185890   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1185891   +
1185892   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1185893   +
1185894   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1185895   +
1185896   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1185897   +
1185898   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1185899   +
1185900   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1185901   +
1185902   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1185903   +
1185904   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1185905   +
1185906   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1185907   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1185908   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1185909   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1185910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185912   +end;
MPRINT(EM_DIAGRAM):   end;
1185913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185915   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1185916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185918   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1185919   +   end;
MPRINT(EM_DIAGRAM):   end;
1185920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185921   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1185922   +   end;
MPRINT(EM_DIAGRAM):   end;
1185923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185924   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1185925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185927   +   end;
MPRINT(EM_DIAGRAM):   end;
1185928   +end;
MPRINT(EM_DIAGRAM):   end;
1185929   +
1185930   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1185931   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1185932   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1185933   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1185934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185936   +end;
MPRINT(EM_DIAGRAM):   end;
1185937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185939   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1185940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185942   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1185943   +   end;
MPRINT(EM_DIAGRAM):   end;
1185944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185945   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1185946   +   end;
MPRINT(EM_DIAGRAM):   end;
1185947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185948   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1185949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185951   +   end;
MPRINT(EM_DIAGRAM):   end;
1185952   +end;
MPRINT(EM_DIAGRAM):   end;
1185953   +
1185954   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1185955   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1185956   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1185957   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1185958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185960   +end;
MPRINT(EM_DIAGRAM):   end;
1185961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185963   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1185964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185966   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1185967   +   end;
MPRINT(EM_DIAGRAM):   end;
1185968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185969   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1185970   +   end;
MPRINT(EM_DIAGRAM):   end;
1185971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185972   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1185973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185975   +   end;
MPRINT(EM_DIAGRAM):   end;
1185976   +end;
MPRINT(EM_DIAGRAM):   end;
1185977   +
1185978   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1185979   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1185980   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1185981   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1185982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185984   +end;
MPRINT(EM_DIAGRAM):   end;
1185985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185987   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1185988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185990   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1185991   +   end;
MPRINT(EM_DIAGRAM):   end;
1185992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185993   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1185994   +   end;
MPRINT(EM_DIAGRAM):   end;
1185995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185996   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1185997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185999   +   end;
MPRINT(EM_DIAGRAM):   end;
1186000   +end;
MPRINT(EM_DIAGRAM):   end;
1186001   +
1186002   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1186003   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1186004   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1186005   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186008   +end;
MPRINT(EM_DIAGRAM):   end;
1186009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186011   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1186012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186014   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1186015   +   end;
MPRINT(EM_DIAGRAM):   end;
1186016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186017   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1186018   +   end;
MPRINT(EM_DIAGRAM):   end;
1186019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186020   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186023   +   end;
MPRINT(EM_DIAGRAM):   end;
1186024   +end;
MPRINT(EM_DIAGRAM):   end;
1186025   +
1186026   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1186027   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1186028   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1186029   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186032   +end;
MPRINT(EM_DIAGRAM):   end;
1186033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186035   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1186036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186038   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1186039   +   end;
MPRINT(EM_DIAGRAM):   end;
1186040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186041   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1186042   +   end;
MPRINT(EM_DIAGRAM):   end;
1186043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186044   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186047   +   end;
MPRINT(EM_DIAGRAM):   end;
1186048   +end;
MPRINT(EM_DIAGRAM):   end;
1186049   +
1186050   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1186051   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1186052   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1186053   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186056   +end;
MPRINT(EM_DIAGRAM):   end;
1186057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186059   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1186060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186061   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1186062   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1186063   +   end;
MPRINT(EM_DIAGRAM):   end;
1186064   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1186065   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1186066   +   end;
MPRINT(EM_DIAGRAM):   end;
1186067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186068   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186071   +   end;
MPRINT(EM_DIAGRAM):   end;
1186072   +end;
MPRINT(EM_DIAGRAM):   end;
1186073   +
1186074   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1186075   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1186076   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186077   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1186078   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1186079   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1186080   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1186081   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1186082   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186083   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186084   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186085   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186088   +end;
MPRINT(EM_DIAGRAM):   end;
1186089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186090   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1186091   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1186092   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186093   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1186094   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1186095   +   end;
MPRINT(EM_DIAGRAM):   end;
1186096   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1186097   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1186098   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1186099   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1186100   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1186101   +   end;
MPRINT(EM_DIAGRAM):   end;
1186102   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1186103   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1186104   +   end;
MPRINT(EM_DIAGRAM):   end;
1186105   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1186106   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1186107   +   end;
MPRINT(EM_DIAGRAM):   end;
1186108   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1186109   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1186110   +   end;
MPRINT(EM_DIAGRAM):   end;
1186111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186112   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186113   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186114   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186115   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186118   +   end;
MPRINT(EM_DIAGRAM):   end;
1186119   +end;
MPRINT(EM_DIAGRAM):   end;
1186120   +
1186121   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1186122   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1186123   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1186124   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186125   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1186126   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1186127   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1186128   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1186129   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1186130   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186131   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186132   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186133   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186136   +end;
MPRINT(EM_DIAGRAM):   end;
1186137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186138   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1186139   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1186140   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186141   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1186142   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1186143   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1186144   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1186145   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1186146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186147   +         end;
MPRINT(EM_DIAGRAM):   end;
1186148   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1186149   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1186150   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1186151   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186152   +            end;
MPRINT(EM_DIAGRAM):   end;
1186153   +         end;
MPRINT(EM_DIAGRAM):   end;
1186154   +      end;
MPRINT(EM_DIAGRAM):   end;
1186155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186156   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1186157   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1186158   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186159   +         end;
MPRINT(EM_DIAGRAM):   end;
1186160   +      end;
MPRINT(EM_DIAGRAM):   end;
1186161   +   end;
MPRINT(EM_DIAGRAM):   end;
1186162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186163   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1186164   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1186165   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186166   +      end;
MPRINT(EM_DIAGRAM):   end;
1186167   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186168   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1186169   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1186170   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1186171   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1186172   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1186173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186174   +         end;
MPRINT(EM_DIAGRAM):   end;
1186175   +      end;
MPRINT(EM_DIAGRAM):   end;
1186176   +   end;
MPRINT(EM_DIAGRAM):   end;
1186177   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1186178   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186179   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186180   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186181   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186184   +   end;
MPRINT(EM_DIAGRAM):   end;
1186185   +end;
MPRINT(EM_DIAGRAM):   end;
1186186   +
1186187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186188   +*** Checking missing input Interval
1186189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1186190   +
1186191   +IF NMISS(
1186192   +   AcceptedCmpTotal ,
1186193   +   Age ,
1186194   +   Frq ,
1186195   +   Income ,
1186196   +   Kidhome ,
1186197   +   Mnt ,
1186198   +   MntFishProducts ,
1186199   +   MntFruits ,
1186200   +   MntGoldProds ,
1186201   +   MntMeatProducts ,
1186202   +   MntSweetProducts ,
1186203   +   MntWines ,
1186204   +   MonthsAsCustomer ,
1186205   +   NumCatalogPurchases ,
1186206   +   NumDealsPurchases ,
1186207   +   NumDistPurchases ,
1186208   +   NumStorePurchases ,
1186209   +   NumWebPurchases ,
1186210   +   NumWebVisitsMonth ,
1186211   +   RFMstat ,
1186212   +   RMntFrq ,
1186213   +   Recency ,
1186214   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1186215   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1186216   +
1186217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186218   +END;
MPRINT(EM_DIAGRAM):   END;
1186219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186220   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1186221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186222   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186223   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186224   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186225   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186226   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186227   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186228   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186229   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1186230   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186231   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186232   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186233   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1186235   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1186236   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1186237   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186238   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186239   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1186240   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1186241   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1186242   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1186243   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1186244   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186245   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186246   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1186247   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1186248   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1186249   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1186250   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1186251   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1186252   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186253   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186254   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186255   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186256   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186257   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186258   +END;
MPRINT(EM_DIAGRAM):   END;
1186259   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186260   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1186261   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186262   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186263   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1186264   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186265   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1186266   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186267   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1186268   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186269   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1186270   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186271   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1186272   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1186273   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1186274   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186275   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186276   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1186277   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1186278   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186279   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1186280   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186281   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1186282   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1186283   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1186284   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1186285   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1186286   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186287   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186288   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1186289   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1186290   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1186291   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1186292   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1186293   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1186294   +   ELSE S_NumCatalogPurchases
1186295   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1186296   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1186297   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1186298   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186299   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186300   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1186301   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1186302   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1186303   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1186304   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1186305   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1186306   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1186307   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1186308   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1186309   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1186310   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186311   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186312   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1186313   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186314   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1186315   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186316   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1186317   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186318   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1186319   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186320   +END;
MPRINT(EM_DIAGRAM):   END;
1186321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186322   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1186323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186325   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1186326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186328   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1186329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186330   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186331   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1186332   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1186333   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1186334   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1186335   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1186336   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1186337   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1186338   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1186339   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1186340   +          +     0.89422627895323 * S_NumDealsPurchases
1186341   +          +    -0.13304125929765 * S_NumDistPurchases
1186342   +          +    -1.04568442570811 * S_NumStorePurchases
1186343   +          +    -0.28677765126751 * S_NumWebPurchases
1186344   +          +      1.2327638737509 * S_NumWebVisitsMonth
1186345   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1186346   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1186347   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1186348   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1186349   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1186350   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1186351   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1186352   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1186353   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1186354   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1186355   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1186356   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1186357   +          +     0.04224590196535 * S_NumDealsPurchases
1186358   +          +     0.76554742700113 * S_NumDistPurchases
1186359   +          +    -0.49155496870812 * S_NumStorePurchases
1186360   +          +     0.59606812744403 * S_NumWebPurchases
1186361   +          +     1.86809286276405 * S_NumWebVisitsMonth
1186362   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1186363   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1186364   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1186365   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1186366   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1186367   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1186368   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1186369   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1186370   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1186371   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1186372   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1186373   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1186374   +          +    -0.04866536993486 * S_NumDealsPurchases
1186375   +          +    -0.53535979020214 * S_NumDistPurchases
1186376   +          +     2.20634071253676 * S_NumStorePurchases
1186377   +          +      0.6164564989007 * S_NumWebPurchases
1186378   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1186379   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1186380   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1186381   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1186382   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1186383   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1186384   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1186385   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1186386   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1186387   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1186388   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1186389   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1186390   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1186391   +          +     1.37461255707863 * S_NumDealsPurchases
1186392   +          +    -0.17684775000818 * S_NumDistPurchases
1186393   +          +    -0.62755623855535 * S_NumStorePurchases
1186394   +          +    -1.46551649022657 * S_NumWebPurchases
1186395   +          +     3.35784247878638 * S_NumWebVisitsMonth
1186396   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1186397   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1186398   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1186399   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1186400   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1186401   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1186402   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1186403   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1186404   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1186405   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1186406   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1186407   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1186408   +          +    -0.76256677907121 * S_NumDealsPurchases
1186409   +          +    -0.31591571751692 * S_NumDistPurchases
1186410   +          +      0.0506832614089 * S_NumStorePurchases
1186411   +          +      1.4636796923764 * S_NumWebPurchases
1186412   +          +     0.37743519705036 * S_NumWebVisitsMonth
1186413   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1186414   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1186415   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1186416   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1186417   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1186418   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1186419   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1186420   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1186421   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1186422   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1186423   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1186424   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1186425   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1186426   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1186427   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1186428   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1186429   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1186430   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1186431   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1186432   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1186433   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1186434   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1186435   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1186436   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1186437   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1186438   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1186439   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1186440   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1186441   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1186442   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1186443   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1186444   +          +     0.68641668264565 * Marital_StatusDivorced
1186445   +          +    -0.81586871439732 * Marital_StatusMarried
1186446   +          +     0.63758920518451 * Marital_StatusSingle
1186447   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1186448   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1186449   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1186450   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1186451   +          +     0.05137560133238 * Marital_StatusDivorced
1186452   +          +    -2.24401993266209 * Marital_StatusMarried
1186453   +          +     1.57359386216115 * Marital_StatusSingle
1186454   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1186455   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1186456   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1186457   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1186458   +          +     -1.0649987815942 * Marital_StatusDivorced
1186459   +          +     0.76065111692388 * Marital_StatusMarried
1186460   +          +    -0.21694149754801 * Marital_StatusSingle
1186461   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1186462   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1186463   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1186464   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1186465   +          +     2.02155453548328 * Marital_StatusDivorced
1186466   +          +    -2.60190649735306 * Marital_StatusMarried
1186467   +          +     1.09149388354927 * Marital_StatusSingle
1186468   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1186469   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1186470   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1186471   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1186472   +          +     0.66315970650309 * Marital_StatusDivorced
1186473   +          +    -1.20476729758152 * Marital_StatusMarried
1186474   +          +     0.56175027826397 * Marital_StatusSingle
1186475   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1186476   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1186477   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1186478   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1186479   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1186480   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1186481   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1186482   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1186483   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1186484   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1186485   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1186486   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1186487   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1186488   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1186489   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1186490   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1186491   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1186492   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1186493   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1186494   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1186495   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1186496   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1186497   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1186498   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1186499   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1186500   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1186501   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1186502   +END;
MPRINT(EM_DIAGRAM):   END;
1186503   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186504   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1186505   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1186506   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1186507   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1186508   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1186509   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1186510   +END;
MPRINT(EM_DIAGRAM):   END;
1186511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186512   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1186513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186514   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186515   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1186516   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1186517   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1186518   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1186519   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1186520   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1186521   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1186522   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1186523   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1186524   +          +     1.50005927423985 * S_NumDealsPurchases
1186525   +          +      0.5590536933569 * S_NumDistPurchases
1186526   +          +    -0.61757824339318 * S_NumStorePurchases
1186527   +          +     0.37259686538158 * S_NumWebPurchases
1186528   +          +     2.59725437895564 * S_NumWebVisitsMonth
1186529   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1186530   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1186531   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1186532   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1186533   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1186534   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1186535   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1186536   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1186537   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1186538   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1186539   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1186540   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1186541   +          +    -0.09282222088797 * S_NumDealsPurchases
1186542   +          +     0.10726247938321 * S_NumDistPurchases
1186543   +          +     -1.1235971458527 * S_NumStorePurchases
1186544   +          +    -0.78304387839877 * S_NumWebPurchases
1186545   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1186546   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1186547   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1186548   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1186549   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1186550   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1186551   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1186552   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1186553   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1186554   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1186555   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1186556   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1186557   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1186558   +          +     0.35349185459988 * S_NumDealsPurchases
1186559   +          +     0.06853677714859 * S_NumDistPurchases
1186560   +          +    -1.47546012999338 * S_NumStorePurchases
1186561   +          +     0.20926435398916 * S_NumWebPurchases
1186562   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1186563   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1186564   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1186565   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1186566   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1186567   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1186568   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1186569   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1186570   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1186571   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1186572   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1186573   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1186574   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1186575   +          +      0.3873586120272 * S_NumDealsPurchases
1186576   +          +     0.25911651157596 * S_NumDistPurchases
1186577   +          +     1.58922489084287 * S_NumStorePurchases
1186578   +          +     0.49041797743368 * S_NumWebPurchases
1186579   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1186580   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1186581   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1186582   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1186583   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1186584   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1186585   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1186586   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1186587   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1186588   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1186589   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1186590   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1186591   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1186592   +          +    -0.60830880287865 * S_NumDealsPurchases
1186593   +          +      0.0745331267194 * S_NumDistPurchases
1186594   +          +    -1.39472448256952 * S_NumStorePurchases
1186595   +          +     1.95372179969087 * S_NumWebPurchases
1186596   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1186597   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1186598   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1186599   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1186600   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1186601   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1186602   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1186603   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1186604   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1186605   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1186606   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1186607   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1186608   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1186609   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1186610   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1186611   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1186612   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1186613   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1186614   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1186615   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1186616   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1186617   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1186618   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1186619   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1186620   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1186621   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1186622   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1186623   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1186624   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1186625   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1186626   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1186627   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1186628   +          +    -1.33377871643323 * Marital_StatusDivorced
1186629   +          +    -0.87184228840898 * Marital_StatusMarried
1186630   +          +     1.41223186340257 * Marital_StatusSingle
1186631   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1186632   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1186633   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1186634   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1186635   +          +    -0.21479890935233 * Marital_StatusDivorced
1186636   +          +     -0.0025459519579 * Marital_StatusMarried
1186637   +          +     1.33900491702264 * Marital_StatusSingle
1186638   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1186639   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1186640   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1186641   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1186642   +          +    -0.38307267471999 * Marital_StatusDivorced
1186643   +          +     0.97088969451415 * Marital_StatusMarried
1186644   +          +    -0.28578224473381 * Marital_StatusSingle
1186645   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1186646   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1186647   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1186648   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1186649   +          +    -1.42229401093569 * Marital_StatusDivorced
1186650   +          +      0.7234508382397 * Marital_StatusMarried
1186651   +          +    -0.29062202974628 * Marital_StatusSingle
1186652   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1186653   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1186654   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1186655   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1186656   +          +    -0.99067637207205 * Marital_StatusDivorced
1186657   +          +    -0.50245902142079 * Marital_StatusMarried
1186658   +          +     0.54214494533793 * Marital_StatusSingle
1186659   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1186660   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1186661   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1186662   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1186663   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1186664   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1186665   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1186666   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1186667   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1186668   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1186669   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1186670   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1186671   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1186672   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1186673   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1186674   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1186675   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1186676   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1186677   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1186678   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1186679   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1186680   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1186681   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1186682   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1186683   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1186684   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1186685   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1186686   +END;
MPRINT(EM_DIAGRAM):   END;
1186687   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186688   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1186689   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1186690   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1186691   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1186692   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1186693   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1186694   +END;
MPRINT(EM_DIAGRAM):   END;
1186695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186696   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1186697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186698   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186699   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1186700   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1186701   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1186702   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1186703   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1186704   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1186705   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1186706   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1186707   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1186708   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1186709   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1186710   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1186711   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1186712   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1186713   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1186714   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1186715   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1186716   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1186717   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1186718   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1186719   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1186720   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1186721   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1186722   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1186723   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1186724   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1186725   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1186726   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1186727   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1186728   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1186729   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1186730   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1186731   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1186732   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1186733   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1186734   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1186735   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1186736   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1186737   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1186738   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1186739   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1186740   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1186741   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1186742   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1186743   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1186744   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1186745   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1186746   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1186747   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1186748   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1186749   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1186750   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1186751   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1186752   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1186753   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1186754   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1186755   +END;
MPRINT(EM_DIAGRAM):   END;
1186756   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186757   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1186758   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1186759   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1186760   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1186761   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1186762   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1186763   +END;
MPRINT(EM_DIAGRAM):   END;
1186764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186765   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1186766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186767   +
1186768   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1186769   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1186770   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1186771   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1186772   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1186773   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186774   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1186775   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1186776   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1186777   +end;
MPRINT(EM_DIAGRAM):   end;
1186778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186779   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1186780   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1186781   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1186782   +   end;
MPRINT(EM_DIAGRAM):   end;
1186783   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1186784   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1186785   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1186786   +   end;
MPRINT(EM_DIAGRAM):   end;
1186787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186788   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1186789   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1186790   +   end;
MPRINT(EM_DIAGRAM):   end;
1186791   +end;
MPRINT(EM_DIAGRAM):   end;
1186792   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186793   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1186794   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1186795   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1186796   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1186797   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1186798   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1186799   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1186800   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1186801   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1186802   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1186803   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1186804   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1186805   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1186806   +END;
MPRINT(EM_DIAGRAM):   END;
1186807   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186808   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1186809   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1186810   +END;
MPRINT(EM_DIAGRAM):   END;
1186811   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1186812   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1186813   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1186814   +END;
MPRINT(EM_DIAGRAM):   END;
1186815   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1186816   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1186817   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1186818   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1186819   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1186820   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1186821   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1186822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186823   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1186824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186825   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1186826   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1186827   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1186828   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1186829   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1186830   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1186831   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1186832   +END;
MPRINT(EM_DIAGRAM):   END;
1186833   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186834   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1186835   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186836   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1186837   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1186838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186839   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1186840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186841   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1186842   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1186843   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1186844   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1186845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186846   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1186847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186848   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1186849   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1186850   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1186851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186852   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
1186853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186855   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1186856   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1186857   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1186858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186859   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186860   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1186861   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186862   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1186863   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1186864   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1186865   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1186866   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1186867   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1186868   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1186869   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1186870   +LENGTH _WARN_ $4
1186871   +      F_DepVar  $ 12
1186872   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1186873   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1186874   +
1186875   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1186876   +
1186877   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1186878   +
1186879   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1186880   +
1186881   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1186882   +
1186883   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1186884   +
1186885   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1186886   +
1186887   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1186888   +
1186889   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1186890   +
1186891   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1186892   +
1186893   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1186894   +
1186895   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1186896   +
1186897   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1186898   +
1186899   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1186900   +
1186901   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1186902   +
1186903   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1186904   +
1186905   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1186906   +
1186907   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1186908   +
1186909   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1186910   +
1186911   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1186912   +
1186913   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1186914   +
1186915   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1186916   +
1186917   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1186918   +
1186919   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1186920   +
1186921   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1186922   +
1186923   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1186924   +
1186925   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1186926   +
1186927   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1186928   +
1186929   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1186930   +
1186931   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1186932   +
1186933   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1186934   +
1186935   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1186936   +
1186937   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1186938   +
1186939   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1186940   +
1186941   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1186942   +
1186943   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1186944   +
1186945   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1186946   +
1186947   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1186948   +
1186949   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1186950   +
1186951   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1186952   +
1186953   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1186954   +
1186955   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1186956   +
1186957   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1186958   +
1186959   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1186960   +
1186961   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1186962   +
1186963   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1186964   +
1186965   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1186966   +
1186967   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1186968   +
1186969   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1186970   +
1186971   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1186972   +
1186973   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1186974   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1186975   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1186976   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186979   +end;
MPRINT(EM_DIAGRAM):   end;
1186980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186982   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1186983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186985   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1186986   +   end;
MPRINT(EM_DIAGRAM):   end;
1186987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186988   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1186989   +   end;
MPRINT(EM_DIAGRAM):   end;
1186990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186991   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186994   +   end;
MPRINT(EM_DIAGRAM):   end;
1186995   +end;
MPRINT(EM_DIAGRAM):   end;
1186996   +
1186997   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1186998   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1186999   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1187000   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187003   +end;
MPRINT(EM_DIAGRAM):   end;
1187004   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187006   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1187007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187009   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1187010   +   end;
MPRINT(EM_DIAGRAM):   end;
1187011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187012   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1187013   +   end;
MPRINT(EM_DIAGRAM):   end;
1187014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187015   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187018   +   end;
MPRINT(EM_DIAGRAM):   end;
1187019   +end;
MPRINT(EM_DIAGRAM):   end;
1187020   +
1187021   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1187022   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1187023   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1187024   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187027   +end;
MPRINT(EM_DIAGRAM):   end;
1187028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187030   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1187031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187033   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1187034   +   end;
MPRINT(EM_DIAGRAM):   end;
1187035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187036   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1187037   +   end;
MPRINT(EM_DIAGRAM):   end;
1187038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187039   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187042   +   end;
MPRINT(EM_DIAGRAM):   end;
1187043   +end;
MPRINT(EM_DIAGRAM):   end;
1187044   +
1187045   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1187046   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1187047   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1187048   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187051   +end;
MPRINT(EM_DIAGRAM):   end;
1187052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187054   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1187055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187057   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1187058   +   end;
MPRINT(EM_DIAGRAM):   end;
1187059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187060   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1187061   +   end;
MPRINT(EM_DIAGRAM):   end;
1187062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187063   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187066   +   end;
MPRINT(EM_DIAGRAM):   end;
1187067   +end;
MPRINT(EM_DIAGRAM):   end;
1187068   +
1187069   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1187070   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1187071   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1187072   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187075   +end;
MPRINT(EM_DIAGRAM):   end;
1187076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187078   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1187079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187081   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1187082   +   end;
MPRINT(EM_DIAGRAM):   end;
1187083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187084   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1187085   +   end;
MPRINT(EM_DIAGRAM):   end;
1187086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187087   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187090   +   end;
MPRINT(EM_DIAGRAM):   end;
1187091   +end;
MPRINT(EM_DIAGRAM):   end;
1187092   +
1187093   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1187094   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1187095   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1187096   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187099   +end;
MPRINT(EM_DIAGRAM):   end;
1187100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187102   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1187103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187105   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1187106   +   end;
MPRINT(EM_DIAGRAM):   end;
1187107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187108   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1187109   +   end;
MPRINT(EM_DIAGRAM):   end;
1187110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187111   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187114   +   end;
MPRINT(EM_DIAGRAM):   end;
1187115   +end;
MPRINT(EM_DIAGRAM):   end;
1187116   +
1187117   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1187118   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1187119   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1187120   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187123   +end;
MPRINT(EM_DIAGRAM):   end;
1187124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187126   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1187127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187128   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1187129   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1187130   +   end;
MPRINT(EM_DIAGRAM):   end;
1187131   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1187132   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1187133   +   end;
MPRINT(EM_DIAGRAM):   end;
1187134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187135   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187138   +   end;
MPRINT(EM_DIAGRAM):   end;
1187139   +end;
MPRINT(EM_DIAGRAM):   end;
1187140   +
1187141   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1187142   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1187143   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187144   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1187145   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1187146   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1187147   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1187148   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1187149   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187150   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187151   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187152   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187155   +end;
MPRINT(EM_DIAGRAM):   end;
1187156   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187157   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1187158   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1187159   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187160   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1187161   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1187162   +   end;
MPRINT(EM_DIAGRAM):   end;
1187163   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1187164   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1187165   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1187166   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1187167   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1187168   +   end;
MPRINT(EM_DIAGRAM):   end;
1187169   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1187170   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1187171   +   end;
MPRINT(EM_DIAGRAM):   end;
1187172   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1187173   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1187174   +   end;
MPRINT(EM_DIAGRAM):   end;
1187175   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1187176   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1187177   +   end;
MPRINT(EM_DIAGRAM):   end;
1187178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187179   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187180   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187181   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187182   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187185   +   end;
MPRINT(EM_DIAGRAM):   end;
1187186   +end;
MPRINT(EM_DIAGRAM):   end;
1187187   +
1187188   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1187189   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1187190   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1187191   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187192   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1187193   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1187194   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1187195   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1187196   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1187197   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187198   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187199   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187200   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187203   +end;
MPRINT(EM_DIAGRAM):   end;
1187204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187205   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1187206   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1187207   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187208   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1187209   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1187210   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1187211   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1187212   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1187213   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187214   +         end;
MPRINT(EM_DIAGRAM):   end;
1187215   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1187216   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1187217   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1187218   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187219   +            end;
MPRINT(EM_DIAGRAM):   end;
1187220   +         end;
MPRINT(EM_DIAGRAM):   end;
1187221   +      end;
MPRINT(EM_DIAGRAM):   end;
1187222   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187223   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1187224   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1187225   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187226   +         end;
MPRINT(EM_DIAGRAM):   end;
1187227   +      end;
MPRINT(EM_DIAGRAM):   end;
1187228   +   end;
MPRINT(EM_DIAGRAM):   end;
1187229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187230   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1187231   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1187232   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187233   +      end;
MPRINT(EM_DIAGRAM):   end;
1187234   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187235   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1187236   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1187237   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1187238   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1187239   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1187240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187241   +         end;
MPRINT(EM_DIAGRAM):   end;
1187242   +      end;
MPRINT(EM_DIAGRAM):   end;
1187243   +   end;
MPRINT(EM_DIAGRAM):   end;
1187244   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1187245   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187246   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187247   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187248   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187251   +   end;
MPRINT(EM_DIAGRAM):   end;
1187252   +end;
MPRINT(EM_DIAGRAM):   end;
1187253   +
1187254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187255   +*** Checking missing input Interval
1187256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1187257   +
1187258   +IF NMISS(
1187259   +   AcceptedCmpTotal ,
1187260   +   Age ,
1187261   +   Frq ,
1187262   +   Income ,
1187263   +   Kidhome ,
1187264   +   Mnt ,
1187265   +   MntFishProducts ,
1187266   +   MntFruits ,
1187267   +   MntGoldProds ,
1187268   +   MntMeatProducts ,
1187269   +   MntSweetProducts ,
1187270   +   MntWines ,
1187271   +   MonthsAsCustomer ,
1187272   +   NumCatalogPurchases ,
1187273   +   NumDealsPurchases ,
1187274   +   NumDistPurchases ,
1187275   +   NumStorePurchases ,
1187276   +   NumWebPurchases ,
1187277   +   NumWebVisitsMonth ,
1187278   +   RFMstat ,
1187279   +   RMntFrq ,
1187280   +   Recency ,
1187281   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1187282   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1187283   +
1187284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187285   +END;
MPRINT(EM_DIAGRAM):   END;
1187286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187287   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1187288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187289   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187290   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187291   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187292   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187293   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187294   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187295   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187296   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1187297   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187298   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187299   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187300   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187301   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1187302   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1187303   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1187304   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187305   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187306   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1187307   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1187308   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1187309   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1187310   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1187311   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187312   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187313   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1187314   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1187315   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1187316   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1187317   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1187318   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1187319   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187320   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187321   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187322   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187323   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187324   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187325   +END;
MPRINT(EM_DIAGRAM):   END;
1187326   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187327   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1187328   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187329   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187330   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1187331   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187332   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1187333   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187334   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1187335   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187336   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1187337   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187338   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1187339   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1187340   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1187341   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187342   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187343   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1187344   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1187345   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187346   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1187347   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187348   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1187349   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1187350   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1187351   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1187352   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1187353   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187354   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187355   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1187356   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1187357   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1187358   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1187359   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1187360   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1187361   +   ELSE S_NumCatalogPurchases
1187362   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1187363   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1187364   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1187365   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187367   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1187368   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1187369   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1187370   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1187371   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1187372   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1187373   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1187374   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1187375   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1187376   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1187377   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187378   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187379   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1187380   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187381   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1187382   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187383   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1187384   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187385   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1187386   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187387   +END;
MPRINT(EM_DIAGRAM):   END;
1187388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187389   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1187390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187392   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1187393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187395   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1187396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187397   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187398   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1187399   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1187400   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1187401   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1187402   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1187403   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1187404   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1187405   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1187406   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1187407   +          +    -1.14704878034134 * S_NumDealsPurchases
1187408   +          +    -0.17763404274659 * S_NumDistPurchases
1187409   +          +     0.08894400267969 * S_NumStorePurchases
1187410   +          +     0.59283747891957 * S_NumWebPurchases
1187411   +          +     0.85268274682505 * S_NumWebVisitsMonth
1187412   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1187413   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1187414   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1187415   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1187416   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1187417   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1187418   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1187419   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1187420   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1187421   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1187422   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1187423   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1187424   +          +    -0.80841566068716 * S_NumDealsPurchases
1187425   +          +    -0.17995640033768 * S_NumDistPurchases
1187426   +          +     0.00713417460936 * S_NumStorePurchases
1187427   +          +     0.57881024323076 * S_NumWebPurchases
1187428   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1187429   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1187430   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1187431   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1187432   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1187433   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1187434   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1187435   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1187436   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1187437   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1187438   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1187439   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1187440   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1187441   +          +     0.57891364118717 * S_NumDealsPurchases
1187442   +          +    -0.31024556838688 * S_NumDistPurchases
1187443   +          +    -1.48708542986704 * S_NumStorePurchases
1187444   +          +    -0.93009875249206 * S_NumWebPurchases
1187445   +          +     2.01900039122935 * S_NumWebVisitsMonth
1187446   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1187447   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1187448   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1187449   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1187450   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1187451   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1187452   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1187453   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1187454   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1187455   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1187456   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1187457   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1187458   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1187459   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1187460   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1187461   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1187462   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1187463   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1187464   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1187465   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1187466   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1187467   +          +     0.55883606830033 * Marital_StatusDivorced
1187468   +          +    -0.54530037567066 * Marital_StatusMarried
1187469   +          +    -0.52994736075753 * Marital_StatusSingle
1187470   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1187471   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1187472   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1187473   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1187474   +          +    -1.07368484057033 * Marital_StatusDivorced
1187475   +          +     2.73313504711262 * Marital_StatusMarried
1187476   +          +    -2.18530462876058 * Marital_StatusSingle
1187477   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1187478   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1187479   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1187480   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1187481   +          +     0.49993144243043 * Marital_StatusDivorced
1187482   +          +    -0.38953339116829 * Marital_StatusMarried
1187483   +          +    -0.10836287319942 * Marital_StatusSingle
1187484   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1187485   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1187486   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1187487   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1187488   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1187489   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1187490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187491   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1187492   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1187493   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1187494   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1187495   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1187496   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1187497   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1187498   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1187499   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1187500   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1187501   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1187502   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1187503   +END;
MPRINT(EM_DIAGRAM):   END;
1187504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187505   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1187506   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1187507   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1187508   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1187509   +END;
MPRINT(EM_DIAGRAM):   END;
1187510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187511   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1187512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187513   +
1187514   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1187515   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1187516   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187517   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1187518   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1187519   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187520   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1187521   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187522   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187523   +end;
MPRINT(EM_DIAGRAM):   end;
1187524   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187525   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1187526   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1187527   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1187528   +   end;
MPRINT(EM_DIAGRAM):   end;
1187529   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1187530   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1187531   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1187532   +   end;
MPRINT(EM_DIAGRAM):   end;
1187533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187534   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187535   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187536   +   end;
MPRINT(EM_DIAGRAM):   end;
1187537   +end;
MPRINT(EM_DIAGRAM):   end;
1187538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187539   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1187540   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1187541   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1187542   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1187543   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1187544   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187545   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1187546   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1187547   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1187548   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1187549   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1187550   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1187551   +END;
MPRINT(EM_DIAGRAM):   END;
1187552   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187553   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1187554   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1187555   +END;
MPRINT(EM_DIAGRAM):   END;
1187556   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1187557   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1187558   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1187559   +END;
MPRINT(EM_DIAGRAM):   END;
1187560   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1187561   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1187562   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1187563   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1187564   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1187565   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1187566   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1187567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187568   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1187569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187570   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1187571   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1187572   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1187573   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1187574   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1187575   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1187576   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1187577   +END;
MPRINT(EM_DIAGRAM):   END;
1187578   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187579   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1187580   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187581   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1187582   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1187583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187584   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1187585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187586   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1187587   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1187588   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1187589   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1187590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187591   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1187592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187593   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1187594   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1187595   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1187596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187597   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
1187598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187599   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1187600   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1187601   +P_DepVar1 = max(
1187602   +AutoNeural12_P_DepVar1 ,
1187603   +AutoNeural11_P_DepVar1 ,
1187604   +AutoNeural9_P_DepVar1
1187605   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural9_P_DepVar1 );
1187606   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1187607   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1187608   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1187609   +end;
MPRINT(EM_DIAGRAM):   end;
1187610   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1187611   +P_DepVar0 = max(
1187612   +AutoNeural12_P_DepVar0 ,
1187613   +AutoNeural11_P_DepVar0 ,
1187614   +AutoNeural9_P_DepVar0
1187615   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural9_P_DepVar0 );
1187616   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1187617   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1187618   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1187619   +end;
MPRINT(EM_DIAGRAM):   end;
1187620   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1187621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187622   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
1187623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187624   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1187625   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1187626   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1187627   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1187628   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1187629   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1187630   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1187631   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1187632   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1187633   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1187634   +end;
MPRINT(EM_DIAGRAM):   end;
1187635   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1187636   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1187637   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1187638   +end;
MPRINT(EM_DIAGRAM):   end;
1187639   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187641   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
1187642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187643   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1187644   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1187645   +else
1187646   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1187647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187648   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
1187649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187650   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1187651   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1187652   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1187653   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1187653  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1187654   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1187654  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1187655   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1187655  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1187656   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1187656  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1187657   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1187657  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1187658   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1187658  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1187659   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1187659  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1187660   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1187660  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1187661   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1187661  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1187662   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1187662  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1187663   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1187663  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1187664   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1187664  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1187665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187666   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
1187667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187668   +if
1187669   +F_DepVar NE '1'
1187670   +AND F_DepVar NE '0'
1187671   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1187672   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1187673   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1187674   +end;
MPRINT(EM_DIAGRAM):   end;
1187675   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187676   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1187677   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1187678   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1187679   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1187680   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1187681   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1187682   +END;
MPRINT(EM_DIAGRAM):   END;
1187683   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187684    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187685    quit;
1187686    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1187687    filename emflow
1187687  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL12_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187688    *------------------------------------------------------------*;
1187689    * Ensmbl43: Scoring AUTONEURAL12_VALIDATE data;
1187690    *------------------------------------------------------------*;
1187691    data EMWS8.Ensmbl43_VALIDATE
1187692    / view=EMWS8.Ensmbl43_VALIDATE
1187693    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_VALIDATE / view=EMWS8.Ensmbl43_VALIDATE ;
1187694    set EMWS8.AutoNeural12_VALIDATE
1187695    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_VALIDATE ;
1187696    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
1187697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187698   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
1187699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187700   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
1187701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187703   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1187704   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1187705   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1187706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187708   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1187709   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1187710   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1187711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187713   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1187714   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1187715   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1187716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187718   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1187719   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1187720   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1187721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187722   +
1187723   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1187724   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1187724  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1187725   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1187726   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1187727   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1187728   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1187729   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1187730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187731   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1187732   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1187733   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1187734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187736   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1187737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187738   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1187739   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1187740   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1187741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187742   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1187743   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1187744   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1187745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187747   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1187748   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1187749   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1187750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187752   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1187753   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1187754   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1187755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187756   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187757   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1187758   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187759   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1187760   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1187761   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1187762   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1187763   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1187764   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1187765   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1187766   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1187767   +LENGTH _WARN_ $4
1187768   +      F_DepVar  $ 12
1187769   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1187770   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1187771   +
1187772   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1187773   +
1187774   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1187775   +
1187776   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1187777   +
1187778   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1187779   +
1187780   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1187781   +
1187782   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1187783   +
1187784   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1187785   +
1187786   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1187787   +
1187788   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1187789   +
1187790   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1187791   +
1187792   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1187793   +
1187794   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1187795   +
1187796   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1187797   +
1187798   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1187799   +
1187800   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1187801   +
1187802   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1187803   +
1187804   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1187805   +
1187806   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1187807   +
1187808   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1187809   +
1187810   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1187811   +
1187812   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1187813   +
1187814   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1187815   +
1187816   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1187817   +
1187818   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1187819   +
1187820   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1187821   +
1187822   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1187823   +
1187824   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1187825   +
1187826   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1187827   +
1187828   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1187829   +
1187830   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1187831   +
1187832   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1187833   +
1187834   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1187835   +
1187836   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1187837   +
1187838   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1187839   +
1187840   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1187841   +
1187842   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1187843   +
1187844   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1187845   +
1187846   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1187847   +
1187848   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1187849   +
1187850   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1187851   +
1187852   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1187853   +
1187854   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1187855   +
1187856   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1187857   +
1187858   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1187859   +
1187860   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1187861   +
1187862   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1187863   +
1187864   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1187865   +
1187866   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1187867   +
1187868   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1187869   +
1187870   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1187871   +
1187872   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1187873   +
1187874   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1187875   +
1187876   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1187877   +
1187878   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1187879   +
1187880   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1187881   +
1187882   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1187883   +
1187884   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1187885   +
1187886   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1187887   +
1187888   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1187889   +
1187890   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187891   +
1187892   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1187893   +
1187894   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1187895   +
1187896   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1187897   +
1187898   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1187899   +
1187900   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1187901   +
1187902   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1187903   +
1187904   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1187905   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1187906   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1187907   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187910   +end;
MPRINT(EM_DIAGRAM):   end;
1187911   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187912   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187913   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1187914   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187915   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187916   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1187917   +   end;
MPRINT(EM_DIAGRAM):   end;
1187918   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187919   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1187920   +   end;
MPRINT(EM_DIAGRAM):   end;
1187921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187922   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187925   +   end;
MPRINT(EM_DIAGRAM):   end;
1187926   +end;
MPRINT(EM_DIAGRAM):   end;
1187927   +
1187928   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1187929   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1187930   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1187931   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187934   +end;
MPRINT(EM_DIAGRAM):   end;
1187935   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187937   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1187938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187939   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187940   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1187941   +   end;
MPRINT(EM_DIAGRAM):   end;
1187942   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187943   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1187944   +   end;
MPRINT(EM_DIAGRAM):   end;
1187945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187946   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187949   +   end;
MPRINT(EM_DIAGRAM):   end;
1187950   +end;
MPRINT(EM_DIAGRAM):   end;
1187951   +
1187952   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1187953   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1187954   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1187955   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187958   +end;
MPRINT(EM_DIAGRAM):   end;
1187959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187960   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187961   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1187962   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187963   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187964   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1187965   +   end;
MPRINT(EM_DIAGRAM):   end;
1187966   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187967   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1187968   +   end;
MPRINT(EM_DIAGRAM):   end;
1187969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187970   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187973   +   end;
MPRINT(EM_DIAGRAM):   end;
1187974   +end;
MPRINT(EM_DIAGRAM):   end;
1187975   +
1187976   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1187977   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1187978   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1187979   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187982   +end;
MPRINT(EM_DIAGRAM):   end;
1187983   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187985   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1187986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187987   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187988   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1187989   +   end;
MPRINT(EM_DIAGRAM):   end;
1187990   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187991   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1187992   +   end;
MPRINT(EM_DIAGRAM):   end;
1187993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187994   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187997   +   end;
MPRINT(EM_DIAGRAM):   end;
1187998   +end;
MPRINT(EM_DIAGRAM):   end;
1187999   +
1188000   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1188001   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1188002   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1188003   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1188004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188006   +end;
MPRINT(EM_DIAGRAM):   end;
1188007   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188008   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188009   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1188010   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188011   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188012   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1188013   +   end;
MPRINT(EM_DIAGRAM):   end;
1188014   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188015   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1188016   +   end;
MPRINT(EM_DIAGRAM):   end;
1188017   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188018   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1188019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188021   +   end;
MPRINT(EM_DIAGRAM):   end;
1188022   +end;
MPRINT(EM_DIAGRAM):   end;
1188023   +
1188024   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1188025   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1188026   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1188027   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1188028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188030   +end;
MPRINT(EM_DIAGRAM):   end;
1188031   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188032   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188033   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1188034   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188035   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188036   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1188037   +   end;
MPRINT(EM_DIAGRAM):   end;
1188038   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188039   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1188040   +   end;
MPRINT(EM_DIAGRAM):   end;
1188041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188042   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1188043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188045   +   end;
MPRINT(EM_DIAGRAM):   end;
1188046   +end;
MPRINT(EM_DIAGRAM):   end;
1188047   +
1188048   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1188049   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1188050   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1188051   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1188052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188054   +end;
MPRINT(EM_DIAGRAM):   end;
1188055   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188056   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188057   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1188058   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188059   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1188060   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1188061   +   end;
MPRINT(EM_DIAGRAM):   end;
1188062   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1188063   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1188064   +   end;
MPRINT(EM_DIAGRAM):   end;
1188065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188066   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1188067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188069   +   end;
MPRINT(EM_DIAGRAM):   end;
1188070   +end;
MPRINT(EM_DIAGRAM):   end;
1188071   +
1188072   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1188073   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1188074   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1188075   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1188076   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1188077   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1188078   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1188079   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1188080   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1188081   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1188082   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1188083   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1188084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188086   +end;
MPRINT(EM_DIAGRAM):   end;
1188087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188088   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1188089   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1188090   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188091   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1188092   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1188093   +   end;
MPRINT(EM_DIAGRAM):   end;
1188094   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1188095   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
The SAS System

1188096   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1188097   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1188098   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1188099   +   end;
MPRINT(EM_DIAGRAM):   end;
1188100   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1188101   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1188102   +   end;
MPRINT(EM_DIAGRAM):   end;
1188103   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1188104   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1188105   +   end;
MPRINT(EM_DIAGRAM):   end;
1188106   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1188107   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1188108   +   end;
MPRINT(EM_DIAGRAM):   end;
1188109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188110   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1188111   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1188112   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1188113   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1188114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188116   +   end;
MPRINT(EM_DIAGRAM):   end;
1188117   +end;
MPRINT(EM_DIAGRAM):   end;
1188118   +
1188119   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1188120   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1188121   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1188122   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1188123   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1188124   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1188125   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1188126   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1188127   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1188128   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1188129   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1188130   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1188131   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1188132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188134   +end;
MPRINT(EM_DIAGRAM):   end;
1188135   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188136   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1188137   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1188138   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188139   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1188140   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1188141   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1188142   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1188143   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1188144   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188145   +         end;
MPRINT(EM_DIAGRAM):   end;
1188146   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1188147   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1188148   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1188149   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188150   +            end;
MPRINT(EM_DIAGRAM):   end;
1188151   +         end;
MPRINT(EM_DIAGRAM):   end;
1188152   +      end;
MPRINT(EM_DIAGRAM):   end;
1188153   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188154   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1188155   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1188156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188157   +         end;
MPRINT(EM_DIAGRAM):   end;
1188158   +      end;
MPRINT(EM_DIAGRAM):   end;
1188159   +   end;
MPRINT(EM_DIAGRAM):   end;
1188160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188161   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1188162   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1188163   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188164   +      end;
MPRINT(EM_DIAGRAM):   end;
1188165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188166   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1188167   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1188168   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1188169   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1188170   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1188171   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188172   +         end;
MPRINT(EM_DIAGRAM):   end;
1188173   +      end;
MPRINT(EM_DIAGRAM):   end;
1188174   +   end;
MPRINT(EM_DIAGRAM):   end;
1188175   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1188176   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1188177   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1188178   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1188179   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1188180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188182   +   end;
MPRINT(EM_DIAGRAM):   end;
1188183   +end;
MPRINT(EM_DIAGRAM):   end;
1188184   +
1188185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188186   +*** Checking missing input Interval
1188187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1188188   +
1188189   +IF NMISS(
1188190   +   AcceptedCmpTotal ,
1188191   +   Age ,
1188192   +   Frq ,
1188193   +   Income ,
1188194   +   Kidhome ,
1188195   +   Mnt ,
1188196   +   MntFishProducts ,
1188197   +   MntFruits ,
1188198   +   MntGoldProds ,
1188199   +   MntMeatProducts ,
1188200   +   MntSweetProducts ,
1188201   +   MntWines ,
1188202   +   MonthsAsCustomer ,
1188203   +   NumCatalogPurchases ,
1188204   +   NumDealsPurchases ,
1188205   +   NumDistPurchases ,
1188206   +   NumStorePurchases ,
1188207   +   NumWebPurchases ,
1188208   +   NumWebVisitsMonth ,
1188209   +   RFMstat ,
1188210   +   RMntFrq ,
1188211   +   Recency ,
1188212   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1188213   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1188214   +
1188215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188216   +END;
MPRINT(EM_DIAGRAM):   END;
1188217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188218   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1188219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188220   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188221   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1188222   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1188223   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1188224   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1188225   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1188226   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1188227   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1188228   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1188229   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1188230   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1188231   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1188232   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1188233   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1188234   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1188235   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1188236   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1188237   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1188238   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1188239   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1188240   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1188241   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1188242   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1188243   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1188244   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1188245   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1188246   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1188247   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1188248   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1188249   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1188250   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1188251   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1188252   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1188253   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1188254   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1188255   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1188256   +END;
MPRINT(EM_DIAGRAM):   END;
1188257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188258   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1188259   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1188260   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1188261   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1188262   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1188263   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1188264   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1188265   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1188266   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1188267   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1188268   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1188269   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1188270   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1188271   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1188272   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1188273   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1188274   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1188275   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1188276   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1188277   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1188278   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1188279   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1188280   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1188281   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1188282   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1188283   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1188284   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1188285   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1188286   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1188287   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1188288   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1188289   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1188290   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1188291   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1188292   +   ELSE S_NumCatalogPurchases
1188293   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1188294   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1188295   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1188296   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1188297   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1188298   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1188299   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1188300   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1188301   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1188302   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1188303   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1188304   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1188305   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1188306   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1188307   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1188308   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1188309   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1188310   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1188311   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1188312   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1188313   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1188314   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1188315   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1188316   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1188317   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1188318   +END;
MPRINT(EM_DIAGRAM):   END;
1188319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188320   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1188321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188323   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1188324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188326   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1188327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188328   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188329   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1188330   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1188331   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1188332   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1188333   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1188334   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1188335   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1188336   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1188337   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1188338   +          +     1.17276395296242 * S_NumDealsPurchases
1188339   +          +     0.26632768295477 * S_NumDistPurchases
1188340   +          +    -1.26575615903579 * S_NumStorePurchases
1188341   +          +    -0.95316107557927 * S_NumWebPurchases
1188342   +          +     1.01828574356487 * S_NumWebVisitsMonth
1188343   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1188344   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1188345   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1188346   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1188347   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1188348   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1188349   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1188350   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1188351   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1188352   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1188353   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1188354   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1188355   +          +     1.14485571201233 * S_NumDealsPurchases
1188356   +          +     0.21414266588987 * S_NumDistPurchases
1188357   +          +    -0.10530090074297 * S_NumStorePurchases
1188358   +          +    -0.41712321238458 * S_NumWebPurchases
1188359   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1188360   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1188361   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1188362   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1188363   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1188364   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1188365   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1188366   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1188367   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1188368   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1188369   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1188370   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1188371   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1188372   +          +      0.7196418967437 * S_NumDealsPurchases
1188373   +          +     0.69035286374177 * S_NumDistPurchases
1188374   +          +     0.38027656631135 * S_NumStorePurchases
1188375   +          +    -0.18878358997924 * S_NumWebPurchases
1188376   +          +     1.61962062004798 * S_NumWebVisitsMonth
1188377   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1188378   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1188379   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1188380   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1188381   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1188382   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1188383   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1188384   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1188385   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1188386   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1188387   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1188388   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1188389   +          +    -0.00642902007204 * S_NumDealsPurchases
1188390   +          +     0.29785069480367 * S_NumDistPurchases
1188391   +          +    -0.42243322063147 * S_NumStorePurchases
1188392   +          +     0.54880896338383 * S_NumWebPurchases
1188393   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1188394   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1188395   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1188396   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1188397   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1188398   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1188399   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1188400   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1188401   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1188402   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1188403   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1188404   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1188405   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1188406   +          +    -0.48404738328225 * S_NumDealsPurchases
1188407   +          +    -0.02464180457879 * S_NumDistPurchases
1188408   +          +     1.17201831082067 * S_NumStorePurchases
1188409   +          +     0.57453655167516 * S_NumWebPurchases
1188410   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1188411   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1188412   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1188413   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1188414   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1188415   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1188416   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1188417   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1188418   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1188419   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1188420   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1188421   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1188422   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1188423   +          +    -1.49850531967483 * S_NumDealsPurchases
1188424   +          +    -0.82105466264223 * S_NumDistPurchases
1188425   +          +     0.29984603642824 * S_NumStorePurchases
1188426   +          +     0.06557123721611 * S_NumWebPurchases
1188427   +          +     1.04754749365002 * S_NumWebVisitsMonth
1188428   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1188429   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1188430   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1188431   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1188432   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1188433   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1188434   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1188435   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1188436   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1188437   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1188438   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1188439   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1188440   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1188441   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1188442   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1188443   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1188444   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1188445   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1188446   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1188447   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1188448   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1188449   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1188450   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1188451   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1188452   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1188453   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1188454   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1188455   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1188456   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1188457   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1188458   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1188459   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1188460   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1188461   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1188462   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1188463   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1188464   +          +     0.24583509957712 * Marital_StatusDivorced
1188465   +          +    -0.22681931588361 * Marital_StatusMarried
1188466   +          +    -0.12924106229536 * Marital_StatusSingle
1188467   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1188468   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1188469   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1188470   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1188471   +          +    -0.12585334311068 * Marital_StatusDivorced
1188472   +          +    -0.20835502467207 * Marital_StatusMarried
1188473   +          +    -0.13839534449368 * Marital_StatusSingle
1188474   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1188475   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1188476   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1188477   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1188478   +          +     0.35106363238113 * Marital_StatusDivorced
1188479   +          +     -1.3414808583918 * Marital_StatusMarried
1188480   +          +     1.40835320798486 * Marital_StatusSingle
1188481   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1188482   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1188483   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1188484   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1188485   +          +     0.48174546958393 * Marital_StatusDivorced
1188486   +          +    -0.41416978858191 * Marital_StatusMarried
1188487   +          +    -0.23376801546265 * Marital_StatusSingle
1188488   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1188489   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1188490   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1188491   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1188492   +          +    -0.67557643774246 * Marital_StatusDivorced
1188493   +          +     1.63844045917367 * Marital_StatusMarried
1188494   +          +    -0.70320960247699 * Marital_StatusSingle
1188495   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1188496   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1188497   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1188498   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1188499   +          +    -0.11371453086883 * Marital_StatusDivorced
1188500   +          +    -0.34226997176291 * Marital_StatusMarried
1188501   +          +    -1.01568676685754 * Marital_StatusSingle
1188502   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1188503   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1188504   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1188505   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1188506   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1188507   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1188508   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1188509   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1188510   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1188511   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1188512   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188513   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1188514   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1188515   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1188516   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1188517   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1188518   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1188519   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1188520   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1188521   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1188522   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1188523   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1188524   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1188525   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1188526   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1188527   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1188528   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1188529   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1188530   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1188531   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1188532   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1188533   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1188534   +END;
MPRINT(EM_DIAGRAM):   END;
1188535   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188536   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1188537   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1188538   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1188539   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1188540   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1188541   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1188542   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1188543   +END;
MPRINT(EM_DIAGRAM):   END;
1188544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188545   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1188546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188547   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188548   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1188549   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1188550   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1188551   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1188552   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1188553   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1188554   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1188555   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1188556   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1188557   +          +    -0.87259051567474 * S_NumDealsPurchases
1188558   +          +    -0.36454149529139 * S_NumDistPurchases
1188559   +          +     0.12447759925061 * S_NumStorePurchases
1188560   +          +    -1.08133487947367 * S_NumWebPurchases
1188561   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1188562   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1188563   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1188564   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1188565   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1188566   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1188567   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1188568   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1188569   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1188570   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1188571   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1188572   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1188573   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1188574   +          +     2.23121497416403 * S_NumDealsPurchases
1188575   +          +    -0.48674842191071 * S_NumDistPurchases
1188576   +          +     1.77510728607544 * S_NumStorePurchases
1188577   +          +     0.14647433155436 * S_NumWebPurchases
1188578   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1188579   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1188580   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1188581   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1188582   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1188583   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1188584   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1188585   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1188586   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1188587   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1188588   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1188589   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1188590   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1188591   +          +     0.14338855349611 * S_NumDealsPurchases
1188592   +          +    -2.21071010829235 * S_NumDistPurchases
1188593   +          +    -0.21795889348002 * S_NumStorePurchases
1188594   +          +     1.98825087883535 * S_NumWebPurchases
1188595   +          +     1.02482442531149 * S_NumWebVisitsMonth
1188596   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1188597   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1188598   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1188599   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1188600   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1188601   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1188602   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1188603   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1188604   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1188605   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1188606   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1188607   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1188608   +          +     0.30041205661012 * S_NumDealsPurchases
1188609   +          +    -0.63499849986918 * S_NumDistPurchases
1188610   +          +    -0.34155713433714 * S_NumStorePurchases
1188611   +          +    -1.14183354933936 * S_NumWebPurchases
1188612   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1188613   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1188614   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1188615   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1188616   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1188617   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1188618   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1188619   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1188620   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1188621   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1188622   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1188623   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1188624   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1188625   +          +    -0.21237915559831 * S_NumDealsPurchases
1188626   +          +     0.48256923764182 * S_NumDistPurchases
1188627   +          +    -0.45553093140641 * S_NumStorePurchases
1188628   +          +      0.5593655963659 * S_NumWebPurchases
1188629   +          +     0.27943768691188 * S_NumWebVisitsMonth
1188630   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1188631   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1188632   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1188633   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1188634   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1188635   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1188636   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1188637   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1188638   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1188639   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1188640   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1188641   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1188642   +          +     2.38967021388062 * S_NumDealsPurchases
1188643   +          +    -0.97722398866481 * S_NumDistPurchases
1188644   +          +     1.57612333191312 * S_NumStorePurchases
1188645   +          +    -0.75968679115983 * S_NumWebPurchases
1188646   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1188647   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1188648   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1188649   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1188650   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1188651   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1188652   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1188653   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1188654   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1188655   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1188656   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1188657   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1188658   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1188659   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1188660   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1188661   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1188662   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1188663   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1188664   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1188665   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1188666   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1188667   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1188668   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1188669   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1188670   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1188671   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1188672   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1188673   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1188674   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1188675   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1188676   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1188677   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1188678   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1188679   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1188680   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1188681   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1188682   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1188683   +          +     0.96470902298142 * Marital_StatusDivorced
1188684   +          +     0.94805959268314 * Marital_StatusMarried
1188685   +          +     -0.6523948769616 * Marital_StatusSingle
1188686   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1188687   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1188688   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1188689   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1188690   +          +      0.3918249505531 * Marital_StatusDivorced
1188691   +          +    -0.00968091979586 * Marital_StatusMarried
1188692   +          +     0.84615379885071 * Marital_StatusSingle
1188693   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1188694   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1188695   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1188696   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1188697   +          +     1.14335160313191 * Marital_StatusDivorced
1188698   +          +     0.50580517192175 * Marital_StatusMarried
1188699   +          +     0.17264295020921 * Marital_StatusSingle
1188700   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1188701   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1188702   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1188703   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1188704   +          +    -0.11238504444225 * Marital_StatusDivorced
1188705   +          +    -0.81348274043749 * Marital_StatusMarried
1188706   +          +     0.46075415610001 * Marital_StatusSingle
1188707   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1188708   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1188709   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1188710   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1188711   +          +    -0.46342068701431 * Marital_StatusDivorced
1188712   +          +    -0.41667845270204 * Marital_StatusMarried
1188713   +          +    -0.47166707496281 * Marital_StatusSingle
1188714   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1188715   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1188716   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1188717   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1188718   +          +    -0.45376613787812 * Marital_StatusDivorced
1188719   +          +     0.01337046049801 * Marital_StatusMarried
1188720   +          +    -0.92811489484121 * Marital_StatusSingle
1188721   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1188722   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1188723   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1188724   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1188725   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1188726   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1188727   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1188728   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1188729   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1188730   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1188731   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188732   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1188733   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1188734   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1188735   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1188736   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1188737   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1188738   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1188739   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1188740   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1188741   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1188742   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1188743   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1188744   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1188745   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1188746   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1188747   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1188748   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1188749   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1188750   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1188751   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1188752   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1188753   +END;
MPRINT(EM_DIAGRAM):   END;
1188754   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188755   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1188756   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1188757   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1188758   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1188759   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1188760   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1188761   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1188762   +END;
MPRINT(EM_DIAGRAM):   END;
1188763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188764   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1188765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188767   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1188768   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1188769   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1188770   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1188771   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1188772   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1188773   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1188774   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1188775   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1188776   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1188777   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1188778   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1188779   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1188780   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1188781   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1188782   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1188783   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1188784   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1188785   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1188786   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1188787   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1188788   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1188789   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1188790   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1188791   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1188792   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1188793   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1188794   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1188795   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1188796   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1188797   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1188798   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1188799   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1188800   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1188801   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1188802   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1188803   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1188804   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1188805   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1188806   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1188807   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1188808   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1188809   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1188810   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1188811   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1188812   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1188813   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1188814   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1188815   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1188816   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1188817   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1188818   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1188819   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1188820   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1188821   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1188822   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1188823   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1188824   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188825   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1188826   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1188827   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1188828   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1188829   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1188830   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1188831   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1188832   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1188833   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1188834   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1188835   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1188836   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1188837   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1188838   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1188839   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1188840   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1188841   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1188842   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1188843   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1188844   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1188845   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1188846   +END;
MPRINT(EM_DIAGRAM):   END;
1188847   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188848   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1188849   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1188850   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1188851   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1188852   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1188853   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1188854   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1188855   +END;
MPRINT(EM_DIAGRAM):   END;
1188856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188857   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1188858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188859   +
1188860   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1188861   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1188862   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188863   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1188864   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1188865   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188866   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1188867   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188868   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188869   +end;
MPRINT(EM_DIAGRAM):   end;
1188870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188871   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1188872   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1188873   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1188874   +   end;
MPRINT(EM_DIAGRAM):   end;
1188875   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1188876   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1188877   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1188878   +   end;
MPRINT(EM_DIAGRAM):   end;
1188879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188880   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188881   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188882   +   end;
MPRINT(EM_DIAGRAM):   end;
1188883   +end;
MPRINT(EM_DIAGRAM):   end;
1188884   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188885   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1188886   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1188887   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1188888   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1188889   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1188890   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1188891   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1188892   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188893   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1188894   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1188895   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1188896   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1188897   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1188898   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1188899   +END;
MPRINT(EM_DIAGRAM):   END;
1188900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188901   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1188902   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1188903   +END;
MPRINT(EM_DIAGRAM):   END;
1188904   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1188905   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1188906   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1188907   +END;
MPRINT(EM_DIAGRAM):   END;
1188908   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1188909   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1188910   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1188911   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1188912   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1188913   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1188914   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1188915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188916   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1188917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188918   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1188919   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1188920   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1188921   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1188922   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1188923   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1188924   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1188925   +END;
MPRINT(EM_DIAGRAM):   END;
1188926   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188927   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1188928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188929   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1188930   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1188931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188932   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1188933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188934   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1188935   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1188936   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1188937   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1188938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188939   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1188940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188941   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1188942   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1188943   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1188944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188945   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
1188946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188948   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1188949   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1188950   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1188951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188952   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188953   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1188954   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188955   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1188956   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1188957   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1188958   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1188959   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1188960   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1188961   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1188962   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1188963   +LENGTH _WARN_ $4
1188964   +      F_DepVar  $ 12
1188965   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1188966   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1188967   +
1188968   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1188969   +
1188970   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1188971   +
1188972   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1188973   +
1188974   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1188975   +
1188976   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1188977   +
1188978   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1188979   +
1188980   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1188981   +
1188982   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1188983   +
1188984   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1188985   +
1188986   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1188987   +
1188988   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1188989   +
1188990   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1188991   +
1188992   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1188993   +
1188994   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1188995   +
1188996   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1188997   +
1188998   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1188999   +
1189000   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1189001   +
1189002   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1189003   +
1189004   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1189005   +
1189006   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1189007   +
1189008   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1189009   +
1189010   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1189011   +
1189012   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1189013   +
1189014   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1189015   +
1189016   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1189017   +
1189018   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1189019   +
1189020   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1189021   +
1189022   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1189023   +
1189024   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1189025   +
1189026   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1189027   +
1189028   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1189029   +
1189030   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1189031   +
1189032   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1189033   +
1189034   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1189035   +
1189036   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1189037   +
1189038   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1189039   +
1189040   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1189041   +
1189042   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1189043   +
1189044   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1189045   +
1189046   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1189047   +
1189048   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1189049   +
1189050   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1189051   +
1189052   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1189053   +
1189054   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1189055   +
1189056   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1189057   +
1189058   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1189059   +
1189060   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1189061   +
1189062   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1189063   +
1189064   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1189065   +
1189066   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1189067   +
1189068   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1189069   +
1189070   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1189071   +
1189072   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1189073   +
1189074   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1189075   +
1189076   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1189077   +
1189078   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1189079   +
1189080   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1189081   +
1189082   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1189083   +
1189084   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1189085   +
1189086   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1189087   +
1189088   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1189089   +
1189090   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1189091   +
1189092   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1189093   +
1189094   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1189095   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1189096   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1189097   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1189098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189100   +end;
MPRINT(EM_DIAGRAM):   end;
1189101   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189103   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1189104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189106   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1189107   +   end;
MPRINT(EM_DIAGRAM):   end;
1189108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189109   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1189110   +   end;
MPRINT(EM_DIAGRAM):   end;
1189111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189112   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1189113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189115   +   end;
MPRINT(EM_DIAGRAM):   end;
1189116   +end;
MPRINT(EM_DIAGRAM):   end;
1189117   +
1189118   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1189119   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1189120   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1189121   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1189122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189124   +end;
MPRINT(EM_DIAGRAM):   end;
1189125   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189127   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1189128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189130   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1189131   +   end;
MPRINT(EM_DIAGRAM):   end;
1189132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189133   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1189134   +   end;
MPRINT(EM_DIAGRAM):   end;
1189135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189136   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1189137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189139   +   end;
MPRINT(EM_DIAGRAM):   end;
1189140   +end;
MPRINT(EM_DIAGRAM):   end;
1189141   +
1189142   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1189143   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1189144   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1189145   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1189146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189148   +end;
MPRINT(EM_DIAGRAM):   end;
1189149   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189151   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1189152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189154   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1189155   +   end;
MPRINT(EM_DIAGRAM):   end;
1189156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189157   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1189158   +   end;
MPRINT(EM_DIAGRAM):   end;
1189159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189160   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1189161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189163   +   end;
MPRINT(EM_DIAGRAM):   end;
1189164   +end;
MPRINT(EM_DIAGRAM):   end;
1189165   +
1189166   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1189167   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1189168   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1189169   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1189170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189172   +end;
MPRINT(EM_DIAGRAM):   end;
1189173   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189175   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1189176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189178   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1189179   +   end;
MPRINT(EM_DIAGRAM):   end;
1189180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189181   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1189182   +   end;
MPRINT(EM_DIAGRAM):   end;
1189183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189184   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1189185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189187   +   end;
MPRINT(EM_DIAGRAM):   end;
1189188   +end;
MPRINT(EM_DIAGRAM):   end;
1189189   +
1189190   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1189191   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1189192   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1189193   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1189194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189196   +end;
MPRINT(EM_DIAGRAM):   end;
1189197   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189199   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1189200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189202   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1189203   +   end;
MPRINT(EM_DIAGRAM):   end;
1189204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189205   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1189206   +   end;
MPRINT(EM_DIAGRAM):   end;
1189207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189208   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1189209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189211   +   end;
MPRINT(EM_DIAGRAM):   end;
1189212   +end;
MPRINT(EM_DIAGRAM):   end;
1189213   +
1189214   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1189215   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1189216   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1189217   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1189218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189220   +end;
MPRINT(EM_DIAGRAM):   end;
1189221   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189223   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1189224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1189226   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1189227   +   end;
MPRINT(EM_DIAGRAM):   end;
1189228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1189229   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1189230   +   end;
MPRINT(EM_DIAGRAM):   end;
1189231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189232   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1189233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189235   +   end;
MPRINT(EM_DIAGRAM):   end;
1189236   +end;
MPRINT(EM_DIAGRAM):   end;
1189237   +
1189238   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1189239   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1189240   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1189241   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1189242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189244   +end;
MPRINT(EM_DIAGRAM):   end;
1189245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189247   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1189248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189249   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1189250   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1189251   +   end;
MPRINT(EM_DIAGRAM):   end;
1189252   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1189253   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1189254   +   end;
MPRINT(EM_DIAGRAM):   end;
1189255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189256   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1189257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189259   +   end;
MPRINT(EM_DIAGRAM):   end;
1189260   +end;
MPRINT(EM_DIAGRAM):   end;
1189261   +
1189262   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1189263   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1189264   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1189265   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1189266   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1189267   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1189268   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1189269   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1189270   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1189271   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1189272   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1189273   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1189274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189276   +end;
MPRINT(EM_DIAGRAM):   end;
1189277   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189278   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1189279   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1189280   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189281   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1189282   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1189283   +   end;
MPRINT(EM_DIAGRAM):   end;
1189284   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1189285   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1189286   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1189287   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1189288   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1189289   +   end;
MPRINT(EM_DIAGRAM):   end;
1189290   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1189291   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1189292   +   end;
MPRINT(EM_DIAGRAM):   end;
1189293   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1189294   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1189295   +   end;
MPRINT(EM_DIAGRAM):   end;
1189296   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1189297   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1189298   +   end;
MPRINT(EM_DIAGRAM):   end;
1189299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189300   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1189301   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1189302   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1189303   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1189304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189306   +   end;
MPRINT(EM_DIAGRAM):   end;
1189307   +end;
MPRINT(EM_DIAGRAM):   end;
1189308   +
1189309   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1189310   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1189311   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1189312   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1189313   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1189314   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1189315   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1189316   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1189317   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1189318   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1189319   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1189320   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1189321   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1189322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189324   +end;
MPRINT(EM_DIAGRAM):   end;
1189325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189326   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1189327   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1189328   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189329   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1189330   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1189331   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1189332   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1189333   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1189334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1189335   +         end;
MPRINT(EM_DIAGRAM):   end;
1189336   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1189337   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1189338   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1189339   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1189340   +            end;
MPRINT(EM_DIAGRAM):   end;
1189341   +         end;
MPRINT(EM_DIAGRAM):   end;
1189342   +      end;
MPRINT(EM_DIAGRAM):   end;
1189343   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1189344   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1189345   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1189346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1189347   +         end;
MPRINT(EM_DIAGRAM):   end;
1189348   +      end;
MPRINT(EM_DIAGRAM):   end;
1189349   +   end;
MPRINT(EM_DIAGRAM):   end;
1189350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189351   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1189352   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1189353   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1189354   +      end;
MPRINT(EM_DIAGRAM):   end;
1189355   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1189356   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1189357   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1189358   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1189359   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1189360   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1189361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1189362   +         end;
MPRINT(EM_DIAGRAM):   end;
1189363   +      end;
MPRINT(EM_DIAGRAM):   end;
1189364   +   end;
MPRINT(EM_DIAGRAM):   end;
1189365   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1189366   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1189367   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1189368   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1189369   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1189370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189372   +   end;
MPRINT(EM_DIAGRAM):   end;
1189373   +end;
MPRINT(EM_DIAGRAM):   end;
1189374   +
1189375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189376   +*** Checking missing input Interval
1189377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1189378   +
1189379   +IF NMISS(
1189380   +   AcceptedCmpTotal ,
1189381   +   Age ,
1189382   +   Frq ,
1189383   +   Income ,
1189384   +   Kidhome ,
1189385   +   Mnt ,
1189386   +   MntFishProducts ,
1189387   +   MntFruits ,
1189388   +   MntGoldProds ,
1189389   +   MntMeatProducts ,
1189390   +   MntSweetProducts ,
1189391   +   MntWines ,
1189392   +   MonthsAsCustomer ,
1189393   +   NumCatalogPurchases ,
1189394   +   NumDealsPurchases ,
1189395   +   NumDistPurchases ,
1189396   +   NumStorePurchases ,
1189397   +   NumWebPurchases ,
1189398   +   NumWebVisitsMonth ,
1189399   +   RFMstat ,
1189400   +   RMntFrq ,
1189401   +   Recency ,
1189402   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1189403   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1189404   +
1189405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189406   +END;
MPRINT(EM_DIAGRAM):   END;
1189407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189408   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1189409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189411   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1189412   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1189413   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1189414   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1189415   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1189416   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1189417   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1189418   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1189419   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1189420   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1189421   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1189422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1189423   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1189424   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1189425   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1189426   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1189427   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1189428   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1189429   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1189430   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1189431   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1189432   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1189433   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1189434   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1189435   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1189436   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1189437   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1189438   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1189439   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1189440   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1189441   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1189442   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1189443   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1189444   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1189445   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1189446   +END;
MPRINT(EM_DIAGRAM):   END;
1189447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189448   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1189449   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1189450   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1189451   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1189452   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1189453   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1189454   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1189455   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1189456   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1189457   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1189458   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1189459   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1189460   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1189461   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1189462   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1189463   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1189464   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1189465   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1189466   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1189467   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1189468   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1189469   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1189470   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1189471   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1189472   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1189473   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1189474   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1189475   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1189476   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1189477   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1189478   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1189479   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1189480   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1189481   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1189482   +   ELSE S_NumCatalogPurchases
1189483   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1189484   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1189485   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1189486   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1189487   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1189488   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1189489   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1189490   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1189491   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1189492   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1189493   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1189494   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1189495   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1189496   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1189497   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1189498   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1189499   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1189500   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1189501   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1189502   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1189503   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1189504   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1189505   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1189506   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1189507   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1189508   +END;
MPRINT(EM_DIAGRAM):   END;
1189509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189510   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1189511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189513   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1189514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189516   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1189517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189518   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189519   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1189520   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1189521   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1189522   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1189523   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1189524   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1189525   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1189526   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1189527   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1189528   +          +     0.89422627895323 * S_NumDealsPurchases
1189529   +          +    -0.13304125929765 * S_NumDistPurchases
1189530   +          +    -1.04568442570811 * S_NumStorePurchases
1189531   +          +    -0.28677765126751 * S_NumWebPurchases
1189532   +          +      1.2327638737509 * S_NumWebVisitsMonth
1189533   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1189534   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1189535   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1189536   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1189537   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1189538   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1189539   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1189540   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1189541   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1189542   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1189543   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1189544   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1189545   +          +     0.04224590196535 * S_NumDealsPurchases
1189546   +          +     0.76554742700113 * S_NumDistPurchases
1189547   +          +    -0.49155496870812 * S_NumStorePurchases
1189548   +          +     0.59606812744403 * S_NumWebPurchases
1189549   +          +     1.86809286276405 * S_NumWebVisitsMonth
1189550   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1189551   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1189552   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1189553   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1189554   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1189555   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1189556   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1189557   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1189558   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1189559   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1189560   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1189561   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1189562   +          +    -0.04866536993486 * S_NumDealsPurchases
1189563   +          +    -0.53535979020214 * S_NumDistPurchases
1189564   +          +     2.20634071253676 * S_NumStorePurchases
1189565   +          +      0.6164564989007 * S_NumWebPurchases
1189566   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1189567   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1189568   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1189569   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1189570   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1189571   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1189572   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1189573   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1189574   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1189575   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1189576   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1189577   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1189578   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1189579   +          +     1.37461255707863 * S_NumDealsPurchases
1189580   +          +    -0.17684775000818 * S_NumDistPurchases
1189581   +          +    -0.62755623855535 * S_NumStorePurchases
1189582   +          +    -1.46551649022657 * S_NumWebPurchases
1189583   +          +     3.35784247878638 * S_NumWebVisitsMonth
1189584   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1189585   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1189586   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1189587   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1189588   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1189589   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1189590   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1189591   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1189592   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1189593   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1189594   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1189595   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1189596   +          +    -0.76256677907121 * S_NumDealsPurchases
1189597   +          +    -0.31591571751692 * S_NumDistPurchases
1189598   +          +      0.0506832614089 * S_NumStorePurchases
1189599   +          +      1.4636796923764 * S_NumWebPurchases
1189600   +          +     0.37743519705036 * S_NumWebVisitsMonth
1189601   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1189602   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1189603   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1189604   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1189605   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1189606   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1189607   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1189608   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1189609   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1189610   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1189611   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1189612   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1189613   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1189614   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1189615   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1189616   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1189617   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1189618   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1189619   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1189620   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1189621   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1189622   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1189623   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1189624   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1189625   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1189626   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1189627   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1189628   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1189629   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1189630   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1189631   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1189632   +          +     0.68641668264565 * Marital_StatusDivorced
1189633   +          +    -0.81586871439732 * Marital_StatusMarried
1189634   +          +     0.63758920518451 * Marital_StatusSingle
1189635   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1189636   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1189637   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1189638   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1189639   +          +     0.05137560133238 * Marital_StatusDivorced
1189640   +          +    -2.24401993266209 * Marital_StatusMarried
1189641   +          +     1.57359386216115 * Marital_StatusSingle
1189642   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1189643   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1189644   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1189645   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1189646   +          +     -1.0649987815942 * Marital_StatusDivorced
1189647   +          +     0.76065111692388 * Marital_StatusMarried
1189648   +          +    -0.21694149754801 * Marital_StatusSingle
1189649   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1189650   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1189651   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1189652   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1189653   +          +     2.02155453548328 * Marital_StatusDivorced
1189654   +          +    -2.60190649735306 * Marital_StatusMarried
1189655   +          +     1.09149388354927 * Marital_StatusSingle
1189656   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1189657   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1189658   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1189659   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1189660   +          +     0.66315970650309 * Marital_StatusDivorced
1189661   +          +    -1.20476729758152 * Marital_StatusMarried
1189662   +          +     0.56175027826397 * Marital_StatusSingle
1189663   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1189664   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1189665   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1189666   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1189667   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1189668   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1189669   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1189670   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1189671   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1189672   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1189673   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1189674   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1189675   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1189676   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1189677   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1189678   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1189679   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1189680   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1189681   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1189682   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1189683   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1189684   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1189685   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1189686   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1189687   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1189688   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1189689   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1189690   +END;
MPRINT(EM_DIAGRAM):   END;
1189691   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189692   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1189693   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1189694   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1189695   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1189696   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1189697   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1189698   +END;
MPRINT(EM_DIAGRAM):   END;
1189699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189700   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1189701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189702   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189703   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1189704   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1189705   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1189706   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1189707   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1189708   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1189709   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1189710   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1189711   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1189712   +          +     1.50005927423985 * S_NumDealsPurchases
1189713   +          +      0.5590536933569 * S_NumDistPurchases
1189714   +          +    -0.61757824339318 * S_NumStorePurchases
1189715   +          +     0.37259686538158 * S_NumWebPurchases
1189716   +          +     2.59725437895564 * S_NumWebVisitsMonth
1189717   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1189718   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1189719   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1189720   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1189721   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1189722   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1189723   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1189724   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1189725   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1189726   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1189727   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1189728   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1189729   +          +    -0.09282222088797 * S_NumDealsPurchases
1189730   +          +     0.10726247938321 * S_NumDistPurchases
1189731   +          +     -1.1235971458527 * S_NumStorePurchases
1189732   +          +    -0.78304387839877 * S_NumWebPurchases
1189733   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1189734   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1189735   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1189736   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1189737   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1189738   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1189739   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1189740   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1189741   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1189742   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1189743   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1189744   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1189745   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1189746   +          +     0.35349185459988 * S_NumDealsPurchases
1189747   +          +     0.06853677714859 * S_NumDistPurchases
1189748   +          +    -1.47546012999338 * S_NumStorePurchases
1189749   +          +     0.20926435398916 * S_NumWebPurchases
1189750   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1189751   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1189752   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1189753   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1189754   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1189755   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1189756   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1189757   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1189758   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1189759   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1189760   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1189761   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1189762   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1189763   +          +      0.3873586120272 * S_NumDealsPurchases
1189764   +          +     0.25911651157596 * S_NumDistPurchases
1189765   +          +     1.58922489084287 * S_NumStorePurchases
1189766   +          +     0.49041797743368 * S_NumWebPurchases
1189767   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1189768   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1189769   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1189770   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1189771   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1189772   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1189773   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1189774   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1189775   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1189776   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1189777   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1189778   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1189779   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1189780   +          +    -0.60830880287865 * S_NumDealsPurchases
1189781   +          +      0.0745331267194 * S_NumDistPurchases
1189782   +          +    -1.39472448256952 * S_NumStorePurchases
1189783   +          +     1.95372179969087 * S_NumWebPurchases
1189784   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1189785   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1189786   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1189787   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1189788   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1189789   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1189790   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1189791   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1189792   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1189793   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1189794   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1189795   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1189796   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1189797   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1189798   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1189799   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1189800   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1189801   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1189802   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1189803   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1189804   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1189805   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1189806   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1189807   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1189808   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1189809   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1189810   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1189811   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1189812   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1189813   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1189814   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1189815   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1189816   +          +    -1.33377871643323 * Marital_StatusDivorced
1189817   +          +    -0.87184228840898 * Marital_StatusMarried
1189818   +          +     1.41223186340257 * Marital_StatusSingle
1189819   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1189820   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1189821   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1189822   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1189823   +          +    -0.21479890935233 * Marital_StatusDivorced
1189824   +          +     -0.0025459519579 * Marital_StatusMarried
1189825   +          +     1.33900491702264 * Marital_StatusSingle
1189826   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1189827   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1189828   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1189829   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1189830   +          +    -0.38307267471999 * Marital_StatusDivorced
1189831   +          +     0.97088969451415 * Marital_StatusMarried
1189832   +          +    -0.28578224473381 * Marital_StatusSingle
1189833   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1189834   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1189835   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1189836   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1189837   +          +    -1.42229401093569 * Marital_StatusDivorced
1189838   +          +      0.7234508382397 * Marital_StatusMarried
1189839   +          +    -0.29062202974628 * Marital_StatusSingle
1189840   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1189841   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1189842   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1189843   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1189844   +          +    -0.99067637207205 * Marital_StatusDivorced
1189845   +          +    -0.50245902142079 * Marital_StatusMarried
1189846   +          +     0.54214494533793 * Marital_StatusSingle
1189847   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1189848   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1189849   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1189850   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1189851   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1189852   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1189853   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1189854   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1189855   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1189856   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1189857   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1189858   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1189859   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1189860   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1189861   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1189862   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1189863   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1189864   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1189865   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1189866   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1189867   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1189868   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1189869   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1189870   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1189871   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1189872   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1189873   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1189874   +END;
MPRINT(EM_DIAGRAM):   END;
1189875   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189876   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1189877   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1189878   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1189879   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1189880   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1189881   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1189882   +END;
MPRINT(EM_DIAGRAM):   END;
1189883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189884   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1189885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189887   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1189888   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1189889   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1189890   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1189891   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1189892   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1189893   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1189894   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1189895   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1189896   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1189897   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1189898   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1189899   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1189900   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1189901   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1189902   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1189903   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1189904   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1189905   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1189906   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1189907   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1189908   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1189909   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1189910   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1189911   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1189912   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1189913   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1189914   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1189915   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1189916   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1189917   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1189918   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1189919   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1189920   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1189921   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1189922   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1189923   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1189924   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1189925   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1189926   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1189927   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1189928   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1189929   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1189930   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1189931   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1189932   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1189933   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1189934   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1189935   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1189936   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1189937   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1189938   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1189939   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1189940   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1189941   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1189942   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1189943   +END;
MPRINT(EM_DIAGRAM):   END;
1189944   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189945   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1189946   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1189947   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1189948   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1189949   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1189950   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1189951   +END;
MPRINT(EM_DIAGRAM):   END;
1189952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189953   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1189954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189955   +
1189956   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1189957   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1189958   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1189959   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1189960   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1189961   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189962   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1189963   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1189964   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1189965   +end;
MPRINT(EM_DIAGRAM):   end;
1189966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189967   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1189968   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1189969   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1189970   +   end;
MPRINT(EM_DIAGRAM):   end;
1189971   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1189972   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1189973   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1189974   +   end;
MPRINT(EM_DIAGRAM):   end;
1189975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189976   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1189977   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1189978   +   end;
MPRINT(EM_DIAGRAM):   end;
1189979   +end;
MPRINT(EM_DIAGRAM):   end;
1189980   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189981   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1189982   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1189983   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1189984   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1189985   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1189986   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1189987   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1189988   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1189989   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1189990   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1189991   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1189992   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1189993   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1189994   +END;
MPRINT(EM_DIAGRAM):   END;
1189995   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189996   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1189997   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1189998   +END;
MPRINT(EM_DIAGRAM):   END;
1189999   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1190000   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1190001   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1190002   +END;
MPRINT(EM_DIAGRAM):   END;
1190003   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1190004   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1190005   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1190006   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1190007   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1190008   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1190009   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1190010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190011   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1190012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190013   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1190014   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1190015   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1190016   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1190017   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1190018   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1190019   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1190020   +END;
MPRINT(EM_DIAGRAM):   END;
1190021   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190022   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1190023   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190024   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1190025   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1190026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190027   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1190028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190029   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1190030   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1190031   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1190032   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1190033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190034   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1190035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190036   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1190037   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1190038   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1190039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190040   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
1190041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190043   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1190044   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1190045   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1190046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190047   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190048   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1190049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190050   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1190051   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1190052   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1190053   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1190054   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1190055   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1190056   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1190057   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1190058   +LENGTH _WARN_ $4
1190059   +      F_DepVar  $ 12
1190060   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1190061   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1190062   +
1190063   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1190064   +
1190065   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1190066   +
1190067   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1190068   +
1190069   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1190070   +
1190071   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1190072   +
1190073   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1190074   +
1190075   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1190076   +
1190077   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1190078   +
1190079   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1190080   +
1190081   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1190082   +
1190083   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1190084   +
1190085   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1190086   +
1190087   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1190088   +
1190089   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1190090   +
1190091   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1190092   +
1190093   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1190094   +
1190095   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1190096   +
1190097   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1190098   +
1190099   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1190100   +
1190101   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1190102   +
1190103   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1190104   +
1190105   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1190106   +
1190107   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1190108   +
1190109   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1190110   +
1190111   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1190112   +
1190113   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1190114   +
1190115   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1190116   +
1190117   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1190118   +
1190119   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1190120   +
1190121   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1190122   +
1190123   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1190124   +
1190125   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1190126   +
1190127   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1190128   +
1190129   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1190130   +
1190131   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1190132   +
1190133   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1190134   +
1190135   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1190136   +
1190137   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1190138   +
1190139   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1190140   +
1190141   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1190142   +
1190143   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1190144   +
1190145   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1190146   +
1190147   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1190148   +
1190149   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1190150   +
1190151   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1190152   +
1190153   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1190154   +
1190155   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1190156   +
1190157   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1190158   +
1190159   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1190160   +
1190161   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1190162   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1190163   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1190164   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1190165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190167   +end;
MPRINT(EM_DIAGRAM):   end;
1190168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190170   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1190171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190172   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190173   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1190174   +   end;
MPRINT(EM_DIAGRAM):   end;
1190175   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190176   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1190177   +   end;
MPRINT(EM_DIAGRAM):   end;
1190178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190179   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1190180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190182   +   end;
MPRINT(EM_DIAGRAM):   end;
1190183   +end;
MPRINT(EM_DIAGRAM):   end;
1190184   +
1190185   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1190186   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1190187   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1190188   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1190189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190191   +end;
MPRINT(EM_DIAGRAM):   end;
1190192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190194   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1190195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190196   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190197   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1190198   +   end;
MPRINT(EM_DIAGRAM):   end;
1190199   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190200   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1190201   +   end;
MPRINT(EM_DIAGRAM):   end;
1190202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190203   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1190204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190206   +   end;
MPRINT(EM_DIAGRAM):   end;
1190207   +end;
MPRINT(EM_DIAGRAM):   end;
1190208   +
1190209   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1190210   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1190211   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1190212   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1190213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190215   +end;
MPRINT(EM_DIAGRAM):   end;
1190216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190218   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1190219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190220   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190221   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1190222   +   end;
MPRINT(EM_DIAGRAM):   end;
1190223   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190224   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1190225   +   end;
MPRINT(EM_DIAGRAM):   end;
1190226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190227   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1190228   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190229   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190230   +   end;
MPRINT(EM_DIAGRAM):   end;
1190231   +end;
MPRINT(EM_DIAGRAM):   end;
1190232   +
1190233   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1190234   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1190235   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1190236   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1190237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190239   +end;
MPRINT(EM_DIAGRAM):   end;
1190240   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190241   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190242   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1190243   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190244   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190245   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1190246   +   end;
MPRINT(EM_DIAGRAM):   end;
1190247   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190248   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1190249   +   end;
MPRINT(EM_DIAGRAM):   end;
1190250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190251   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1190252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190254   +   end;
MPRINT(EM_DIAGRAM):   end;
1190255   +end;
MPRINT(EM_DIAGRAM):   end;
1190256   +
1190257   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1190258   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1190259   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1190260   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1190261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190263   +end;
MPRINT(EM_DIAGRAM):   end;
1190264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190265   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190266   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1190267   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190268   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190269   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1190270   +   end;
MPRINT(EM_DIAGRAM):   end;
1190271   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190272   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1190273   +   end;
MPRINT(EM_DIAGRAM):   end;
1190274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190275   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1190276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190278   +   end;
MPRINT(EM_DIAGRAM):   end;
1190279   +end;
MPRINT(EM_DIAGRAM):   end;
1190280   +
1190281   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1190282   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1190283   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1190284   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1190285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190287   +end;
MPRINT(EM_DIAGRAM):   end;
1190288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190290   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1190291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190292   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1190293   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1190294   +   end;
MPRINT(EM_DIAGRAM):   end;
1190295   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1190296   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1190297   +   end;
MPRINT(EM_DIAGRAM):   end;
1190298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190299   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1190300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190302   +   end;
MPRINT(EM_DIAGRAM):   end;
1190303   +end;
MPRINT(EM_DIAGRAM):   end;
1190304   +
1190305   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1190306   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1190307   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1190308   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1190309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190311   +end;
MPRINT(EM_DIAGRAM):   end;
1190312   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190314   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1190315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190316   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1190317   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1190318   +   end;
MPRINT(EM_DIAGRAM):   end;
1190319   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1190320   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1190321   +   end;
MPRINT(EM_DIAGRAM):   end;
1190322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190323   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1190324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190326   +   end;
MPRINT(EM_DIAGRAM):   end;
1190327   +end;
MPRINT(EM_DIAGRAM):   end;
1190328   +
1190329   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1190330   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1190331   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1190332   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1190333   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1190334   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1190335   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1190336   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1190337   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1190338   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1190339   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1190340   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1190341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190343   +end;
MPRINT(EM_DIAGRAM):   end;
1190344   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190345   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1190346   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1190347   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190348   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1190349   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1190350   +   end;
MPRINT(EM_DIAGRAM):   end;
1190351   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1190352   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1190353   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1190354   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1190355   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1190356   +   end;
MPRINT(EM_DIAGRAM):   end;
1190357   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1190358   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1190359   +   end;
MPRINT(EM_DIAGRAM):   end;
1190360   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1190361   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1190362   +   end;
MPRINT(EM_DIAGRAM):   end;
1190363   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1190364   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1190365   +   end;
MPRINT(EM_DIAGRAM):   end;
1190366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190367   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1190368   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1190369   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1190370   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1190371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190373   +   end;
MPRINT(EM_DIAGRAM):   end;
1190374   +end;
MPRINT(EM_DIAGRAM):   end;
1190375   +
1190376   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1190377   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1190378   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1190379   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1190380   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1190381   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1190382   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1190383   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1190384   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1190385   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1190386   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1190387   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1190388   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1190389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190391   +end;
MPRINT(EM_DIAGRAM):   end;
1190392   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190393   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1190394   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1190395   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190396   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1190397   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1190398   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1190399   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1190400   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1190401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1190402   +         end;
MPRINT(EM_DIAGRAM):   end;
1190403   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1190404   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1190405   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1190406   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1190407   +            end;
MPRINT(EM_DIAGRAM):   end;
1190408   +         end;
MPRINT(EM_DIAGRAM):   end;
1190409   +      end;
MPRINT(EM_DIAGRAM):   end;
1190410   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1190411   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1190412   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1190413   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1190414   +         end;
MPRINT(EM_DIAGRAM):   end;
1190415   +      end;
MPRINT(EM_DIAGRAM):   end;
1190416   +   end;
MPRINT(EM_DIAGRAM):   end;
1190417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190418   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1190419   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1190420   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1190421   +      end;
MPRINT(EM_DIAGRAM):   end;
1190422   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1190423   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1190424   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1190425   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1190426   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1190427   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1190428   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1190429   +         end;
MPRINT(EM_DIAGRAM):   end;
1190430   +      end;
MPRINT(EM_DIAGRAM):   end;
1190431   +   end;
MPRINT(EM_DIAGRAM):   end;
1190432   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1190433   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1190434   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1190435   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1190436   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1190437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190439   +   end;
MPRINT(EM_DIAGRAM):   end;
1190440   +end;
MPRINT(EM_DIAGRAM):   end;
1190441   +
1190442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190443   +*** Checking missing input Interval
1190444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1190445   +
1190446   +IF NMISS(
1190447   +   AcceptedCmpTotal ,
1190448   +   Age ,
1190449   +   Frq ,
1190450   +   Income ,
1190451   +   Kidhome ,
1190452   +   Mnt ,
1190453   +   MntFishProducts ,
1190454   +   MntFruits ,
1190455   +   MntGoldProds ,
1190456   +   MntMeatProducts ,
1190457   +   MntSweetProducts ,
1190458   +   MntWines ,
1190459   +   MonthsAsCustomer ,
1190460   +   NumCatalogPurchases ,
1190461   +   NumDealsPurchases ,
1190462   +   NumDistPurchases ,
1190463   +   NumStorePurchases ,
1190464   +   NumWebPurchases ,
1190465   +   NumWebVisitsMonth ,
1190466   +   RFMstat ,
1190467   +   RMntFrq ,
1190468   +   Recency ,
1190469   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1190470   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1190471   +
1190472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190473   +END;
MPRINT(EM_DIAGRAM):   END;
1190474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190475   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1190476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190477   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190478   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1190479   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1190480   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1190481   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1190482   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1190483   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1190484   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1190485   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1190486   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1190487   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1190488   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1190489   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1190490   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1190491   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1190492   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1190493   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1190494   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1190495   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1190496   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1190497   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1190498   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1190499   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1190500   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1190501   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1190502   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1190503   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1190504   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1190505   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1190506   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1190507   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1190508   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1190509   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1190510   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1190511   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1190512   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1190513   +END;
MPRINT(EM_DIAGRAM):   END;
1190514   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190515   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1190516   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1190517   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1190518   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1190519   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1190520   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1190521   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1190522   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1190523   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1190524   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1190525   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1190526   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1190527   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1190528   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1190529   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1190530   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1190531   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1190532   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1190533   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1190534   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1190535   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1190536   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1190537   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1190538   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1190539   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1190540   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1190541   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1190542   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1190543   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1190544   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1190545   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1190546   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1190547   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1190548   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1190549   +   ELSE S_NumCatalogPurchases
1190550   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1190551   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1190552   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1190553   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1190554   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1190555   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1190556   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1190557   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1190558   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1190559   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1190560   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1190561   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1190562   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1190563   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1190564   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1190565   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1190566   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1190567   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1190568   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1190569   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1190570   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1190571   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1190572   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1190573   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1190574   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1190575   +END;
MPRINT(EM_DIAGRAM):   END;
1190576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190577   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1190578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190580   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1190581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190583   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1190584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190585   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190586   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1190587   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1190588   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1190589   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1190590   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1190591   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1190592   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1190593   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1190594   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1190595   +          +    -1.14704878034134 * S_NumDealsPurchases
1190596   +          +    -0.17763404274659 * S_NumDistPurchases
1190597   +          +     0.08894400267969 * S_NumStorePurchases
1190598   +          +     0.59283747891957 * S_NumWebPurchases
1190599   +          +     0.85268274682505 * S_NumWebVisitsMonth
1190600   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1190601   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1190602   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1190603   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1190604   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1190605   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1190606   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1190607   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1190608   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1190609   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1190610   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1190611   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1190612   +          +    -0.80841566068716 * S_NumDealsPurchases
1190613   +          +    -0.17995640033768 * S_NumDistPurchases
1190614   +          +     0.00713417460936 * S_NumStorePurchases
1190615   +          +     0.57881024323076 * S_NumWebPurchases
1190616   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1190617   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1190618   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1190619   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1190620   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1190621   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1190622   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1190623   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1190624   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1190625   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1190626   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1190627   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1190628   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1190629   +          +     0.57891364118717 * S_NumDealsPurchases
1190630   +          +    -0.31024556838688 * S_NumDistPurchases
1190631   +          +    -1.48708542986704 * S_NumStorePurchases
1190632   +          +    -0.93009875249206 * S_NumWebPurchases
1190633   +          +     2.01900039122935 * S_NumWebVisitsMonth
1190634   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1190635   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1190636   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1190637   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1190638   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1190639   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1190640   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1190641   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1190642   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1190643   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1190644   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1190645   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1190646   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1190647   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1190648   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1190649   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1190650   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1190651   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1190652   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1190653   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1190654   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1190655   +          +     0.55883606830033 * Marital_StatusDivorced
1190656   +          +    -0.54530037567066 * Marital_StatusMarried
1190657   +          +    -0.52994736075753 * Marital_StatusSingle
1190658   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1190659   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1190660   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1190661   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1190662   +          +    -1.07368484057033 * Marital_StatusDivorced
1190663   +          +     2.73313504711262 * Marital_StatusMarried
1190664   +          +    -2.18530462876058 * Marital_StatusSingle
1190665   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1190666   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1190667   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1190668   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1190669   +          +     0.49993144243043 * Marital_StatusDivorced
1190670   +          +    -0.38953339116829 * Marital_StatusMarried
1190671   +          +    -0.10836287319942 * Marital_StatusSingle
1190672   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1190673   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1190674   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1190675   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1190676   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1190677   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1190678   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1190679   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1190680   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1190681   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1190682   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1190683   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1190684   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1190685   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1190686   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1190687   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1190688   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1190689   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1190690   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1190691   +END;
MPRINT(EM_DIAGRAM):   END;
1190692   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190693   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1190694   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1190695   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1190696   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1190697   +END;
MPRINT(EM_DIAGRAM):   END;
1190698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190699   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1190700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190701   +
1190702   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1190703   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1190704   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1190705   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1190706   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1190707   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190708   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1190709   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1190710   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1190711   +end;
MPRINT(EM_DIAGRAM):   end;
1190712   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190713   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1190714   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1190715   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1190716   +   end;
MPRINT(EM_DIAGRAM):   end;
1190717   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1190718   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1190719   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1190720   +   end;
MPRINT(EM_DIAGRAM):   end;
1190721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190722   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1190723   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1190724   +   end;
MPRINT(EM_DIAGRAM):   end;
1190725   +end;
MPRINT(EM_DIAGRAM):   end;
1190726   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190727   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1190728   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1190729   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1190730   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1190731   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1190732   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1190733   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1190734   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1190735   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1190736   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1190737   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1190738   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1190739   +END;
MPRINT(EM_DIAGRAM):   END;
1190740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190741   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1190742   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1190743   +END;
MPRINT(EM_DIAGRAM):   END;
1190744   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1190745   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1190746   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1190747   +END;
MPRINT(EM_DIAGRAM):   END;
1190748   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1190749   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1190750   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1190751   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1190752   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1190753   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1190754   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1190755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190756   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1190757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190758   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1190759   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1190760   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1190761   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1190762   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1190763   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1190764   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1190765   +END;
MPRINT(EM_DIAGRAM):   END;
1190766   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190767   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1190768   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190769   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1190770   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1190771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190772   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1190773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190774   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1190775   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1190776   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1190777   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1190778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190779   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1190780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190781   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1190782   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1190783   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1190784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190785   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
1190786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190787   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1190788   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1190789   +P_DepVar1 = max(
1190790   +AutoNeural12_P_DepVar1 ,
1190791   +AutoNeural11_P_DepVar1 ,
1190792   +AutoNeural9_P_DepVar1
1190793   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural9_P_DepVar1 );
1190794   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1190795   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1190796   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1190797   +end;
MPRINT(EM_DIAGRAM):   end;
1190798   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1190799   +P_DepVar0 = max(
1190800   +AutoNeural12_P_DepVar0 ,
1190801   +AutoNeural11_P_DepVar0 ,
1190802   +AutoNeural9_P_DepVar0
1190803   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural9_P_DepVar0 );
1190804   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1190805   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1190806   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1190807   +end;
MPRINT(EM_DIAGRAM):   end;
1190808   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1190809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190810   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
1190811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190812   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1190813   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1190814   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1190815   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1190816   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1190817   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1190818   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1190819   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1190820   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1190821   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1190822   +end;
MPRINT(EM_DIAGRAM):   end;
1190823   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1190824   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1190825   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1190826   +end;
MPRINT(EM_DIAGRAM):   end;
1190827   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1190828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190829   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
1190830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190831   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1190832   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1190833   +else
1190834   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1190835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190836   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
1190837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190838   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1190839   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1190840   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1190841   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1190841  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1190842   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1190842  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1190843   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1190843  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1190844   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1190844  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1190845   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1190845  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1190846   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1190846  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1190847   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1190847  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1190848   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1190848  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1190849   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1190849  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1190850   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1190850  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1190851   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1190851  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1190852   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1190852  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1190853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190854   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
1190855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190856   +if
1190857   +F_DepVar NE '1'
1190858   +AND F_DepVar NE '0'
1190859   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1190860   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1190861   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1190862   +end;
MPRINT(EM_DIAGRAM):   end;
1190863   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190864   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1190865   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1190866   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1190867   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1190868   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1190869   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1190870   +END;
MPRINT(EM_DIAGRAM):   END;
1190871   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1190872    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1190873    quit;
1190874    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl43_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1190934    filename _pref
1190934  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
1190935    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1190936    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
1190937   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190938   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1190939   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190940   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1190941   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1190942   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1190943   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1190944   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1190945   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1190946   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1190947   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1190948   +LENGTH _WARN_ $4
1190949   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1190950   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1190951   +
1190952   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1190953   +
1190954   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1190955   +
1190956   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1190957   +
1190958   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1190959   +
1190960   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1190961   +
1190962   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1190963   +
1190964   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1190965   +
1190966   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1190967   +
1190968   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1190969   +
1190970   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1190971   +
1190972   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1190973   +
1190974   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1190975   +
1190976   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1190977   +
1190978   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1190979   +
1190980   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1190981   +
1190982   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1190983   +
1190984   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1190985   +
1190986   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1190987   +
1190988   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1190989   +
1190990   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1190991   +
1190992   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1190993   +
1190994   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1190995   +
1190996   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1190997   +
1190998   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1190999   +
1191000   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1191001   +
1191002   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1191003   +
1191004   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1191005   +
1191006   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1191007   +
1191008   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1191009   +
1191010   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1191011   +
1191012   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1191013   +
1191014   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1191015   +
1191016   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1191017   +
1191018   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1191019   +
1191020   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1191021   +
1191022   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1191023   +
1191024   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1191025   +
1191026   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1191027   +
1191028   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1191029   +
1191030   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1191031   +
1191032   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1191033   +
1191034   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1191035   +
1191036   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1191037   +
1191038   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1191039   +
1191040   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1191041   +
1191042   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1191043   +
1191044   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1191045   +
1191046   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1191047   +
1191048   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1191049   +
1191050   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1191051   +
1191052   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1191053   +
1191054   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1191055   +
1191056   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1191057   +
1191058   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1191059   +
1191060   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1191061   +
1191062   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1191063   +
1191064   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1191065   +
1191066   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1191067   +
1191068   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1191069   +
1191070   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1191071   +
1191072   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1191073   +
1191074   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1191075   +
1191076   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1191077   +
1191078   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1191079   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1191080   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1191081   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1191082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191084   +end;
MPRINT(EM_DIAGRAM):   end;
1191085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191087   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1191088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191089   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191090   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1191091   +   end;
MPRINT(EM_DIAGRAM):   end;
1191092   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191093   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1191094   +   end;
MPRINT(EM_DIAGRAM):   end;
1191095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191096   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1191097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191099   +   end;
MPRINT(EM_DIAGRAM):   end;
1191100   +end;
MPRINT(EM_DIAGRAM):   end;
1191101   +
1191102   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1191103   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1191104   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1191105   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1191106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191108   +end;
MPRINT(EM_DIAGRAM):   end;
1191109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191111   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1191112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191114   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1191115   +   end;
MPRINT(EM_DIAGRAM):   end;
1191116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191117   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1191118   +   end;
MPRINT(EM_DIAGRAM):   end;
1191119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191120   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1191121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191123   +   end;
MPRINT(EM_DIAGRAM):   end;
1191124   +end;
MPRINT(EM_DIAGRAM):   end;
1191125   +
1191126   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1191127   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1191128   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1191129   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1191130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191132   +end;
MPRINT(EM_DIAGRAM):   end;
1191133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191135   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1191136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191138   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1191139   +   end;
MPRINT(EM_DIAGRAM):   end;
1191140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191141   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1191142   +   end;
MPRINT(EM_DIAGRAM):   end;
1191143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191144   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1191145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191147   +   end;
MPRINT(EM_DIAGRAM):   end;
1191148   +end;
MPRINT(EM_DIAGRAM):   end;
1191149   +
1191150   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1191151   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1191152   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1191153   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1191154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191156   +end;
MPRINT(EM_DIAGRAM):   end;
1191157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191159   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1191160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191162   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1191163   +   end;
MPRINT(EM_DIAGRAM):   end;
1191164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191165   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1191166   +   end;
MPRINT(EM_DIAGRAM):   end;
1191167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191168   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1191169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191171   +   end;
MPRINT(EM_DIAGRAM):   end;
1191172   +end;
MPRINT(EM_DIAGRAM):   end;
1191173   +
1191174   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1191175   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1191176   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1191177   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1191178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191180   +end;
MPRINT(EM_DIAGRAM):   end;
1191181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191183   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1191184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191186   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1191187   +   end;
MPRINT(EM_DIAGRAM):   end;
1191188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191189   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1191190   +   end;
MPRINT(EM_DIAGRAM):   end;
1191191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191192   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1191193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191195   +   end;
MPRINT(EM_DIAGRAM):   end;
1191196   +end;
MPRINT(EM_DIAGRAM):   end;
1191197   +
1191198   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1191199   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1191200   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1191201   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1191202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191204   +end;
MPRINT(EM_DIAGRAM):   end;
1191205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191207   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1191208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1191210   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1191211   +   end;
MPRINT(EM_DIAGRAM):   end;
1191212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1191213   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1191214   +   end;
MPRINT(EM_DIAGRAM):   end;
1191215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191216   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1191217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191219   +   end;
MPRINT(EM_DIAGRAM):   end;
1191220   +end;
MPRINT(EM_DIAGRAM):   end;
1191221   +
1191222   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1191223   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1191224   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1191225   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1191226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191228   +end;
MPRINT(EM_DIAGRAM):   end;
1191229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191231   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1191232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191233   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1191234   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1191235   +   end;
MPRINT(EM_DIAGRAM):   end;
1191236   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1191237   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1191238   +   end;
MPRINT(EM_DIAGRAM):   end;
1191239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191240   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1191241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191243   +   end;
MPRINT(EM_DIAGRAM):   end;
1191244   +end;
MPRINT(EM_DIAGRAM):   end;
1191245   +
1191246   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1191247   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1191248   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1191249   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1191250   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1191251   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1191252   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1191253   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1191254   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1191255   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1191256   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1191257   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1191258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191260   +end;
MPRINT(EM_DIAGRAM):   end;
1191261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191262   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1191263   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1191264   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191265   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1191266   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1191267   +   end;
MPRINT(EM_DIAGRAM):   end;
1191268   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1191269   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1191270   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1191271   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1191272   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1191273   +   end;
MPRINT(EM_DIAGRAM):   end;
1191274   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1191275   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1191276   +   end;
MPRINT(EM_DIAGRAM):   end;
1191277   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1191278   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1191279   +   end;
MPRINT(EM_DIAGRAM):   end;
1191280   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1191281   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1191282   +   end;
MPRINT(EM_DIAGRAM):   end;
1191283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191284   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1191285   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1191286   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1191287   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1191288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191290   +   end;
MPRINT(EM_DIAGRAM):   end;
1191291   +end;
MPRINT(EM_DIAGRAM):   end;
1191292   +
1191293   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1191294   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1191295   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1191296   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1191297   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1191298   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1191299   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1191300   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1191301   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1191302   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1191303   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1191304   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1191305   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1191306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191308   +end;
MPRINT(EM_DIAGRAM):   end;
1191309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191310   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1191311   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1191312   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191313   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1191314   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1191315   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1191316   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1191317   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1191318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1191319   +         end;
MPRINT(EM_DIAGRAM):   end;
1191320   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1191321   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1191322   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1191323   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1191324   +            end;
MPRINT(EM_DIAGRAM):   end;
1191325   +         end;
MPRINT(EM_DIAGRAM):   end;
1191326   +      end;
MPRINT(EM_DIAGRAM):   end;
1191327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1191328   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1191329   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1191330   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1191331   +         end;
MPRINT(EM_DIAGRAM):   end;
1191332   +      end;
MPRINT(EM_DIAGRAM):   end;
1191333   +   end;
MPRINT(EM_DIAGRAM):   end;
1191334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191335   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1191336   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1191337   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1191338   +      end;
MPRINT(EM_DIAGRAM):   end;
1191339   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1191340   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1191341   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1191342   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1191343   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1191344   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1191345   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1191346   +         end;
MPRINT(EM_DIAGRAM):   end;
1191347   +      end;
MPRINT(EM_DIAGRAM):   end;
1191348   +   end;
MPRINT(EM_DIAGRAM):   end;
1191349   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1191350   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1191351   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1191352   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1191353   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1191354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191356   +   end;
MPRINT(EM_DIAGRAM):   end;
1191357   +end;
MPRINT(EM_DIAGRAM):   end;
1191358   +
1191359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191360   +*** Checking missing input Interval
1191361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1191362   +
1191363   +IF NMISS(
1191364   +   AcceptedCmpTotal ,
1191365   +   Age ,
1191366   +   Frq ,
1191367   +   Income ,
1191368   +   Kidhome ,
1191369   +   Mnt ,
1191370   +   MntFishProducts ,
1191371   +   MntFruits ,
1191372   +   MntGoldProds ,
1191373   +   MntMeatProducts ,
1191374   +   MntSweetProducts ,
1191375   +   MntWines ,
1191376   +   MonthsAsCustomer ,
1191377   +   NumCatalogPurchases ,
1191378   +   NumDealsPurchases ,
1191379   +   NumDistPurchases ,
1191380   +   NumStorePurchases ,
1191381   +   NumWebPurchases ,
1191382   +   NumWebVisitsMonth ,
1191383   +   RFMstat ,
1191384   +   RMntFrq ,
1191385   +   Recency ,
1191386   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1191387   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1191388   +
1191389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191390   +END;
MPRINT(EM_DIAGRAM):   END;
1191391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191392   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1191393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191394   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191395   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1191396   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1191397   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1191398   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1191399   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1191400   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1191401   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1191402   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1191403   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1191404   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1191405   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1191406   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1191407   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1191408   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1191409   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1191410   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1191411   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1191412   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1191413   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1191414   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1191415   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1191416   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1191417   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1191418   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1191419   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1191420   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1191421   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1191422   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1191423   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1191424   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1191425   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1191426   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1191427   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1191428   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1191429   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1191430   +END;
MPRINT(EM_DIAGRAM):   END;
1191431   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191432   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1191433   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1191434   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1191435   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1191436   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1191437   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1191438   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1191439   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1191440   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1191441   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1191442   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1191443   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1191444   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1191445   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1191446   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1191447   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1191448   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1191449   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1191450   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1191451   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1191452   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1191453   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1191454   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1191455   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1191456   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1191457   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1191458   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1191459   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1191460   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1191461   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1191462   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1191463   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1191464   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1191465   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1191466   +   ELSE S_NumCatalogPurchases
1191467   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1191468   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1191469   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1191470   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1191471   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1191472   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1191473   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1191474   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1191475   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1191476   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1191477   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1191478   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1191479   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1191480   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1191481   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1191482   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1191483   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1191484   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1191485   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1191486   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1191487   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1191488   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1191489   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1191490   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1191491   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1191492   +END;
MPRINT(EM_DIAGRAM):   END;
1191493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191494   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1191495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191497   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1191498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191500   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1191501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191502   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191503   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1191504   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1191505   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1191506   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1191507   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1191508   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1191509   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1191510   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1191511   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1191512   +          +     1.17276395296242 * S_NumDealsPurchases
1191513   +          +     0.26632768295477 * S_NumDistPurchases
1191514   +          +    -1.26575615903579 * S_NumStorePurchases
1191515   +          +    -0.95316107557927 * S_NumWebPurchases
1191516   +          +     1.01828574356487 * S_NumWebVisitsMonth
1191517   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1191518   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1191519   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1191520   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1191521   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1191522   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1191523   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1191524   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1191525   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1191526   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1191527   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1191528   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1191529   +          +     1.14485571201233 * S_NumDealsPurchases
1191530   +          +     0.21414266588987 * S_NumDistPurchases
1191531   +          +    -0.10530090074297 * S_NumStorePurchases
1191532   +          +    -0.41712321238458 * S_NumWebPurchases
1191533   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1191534   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1191535   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1191536   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1191537   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1191538   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1191539   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1191540   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1191541   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1191542   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1191543   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1191544   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1191545   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1191546   +          +      0.7196418967437 * S_NumDealsPurchases
1191547   +          +     0.69035286374177 * S_NumDistPurchases
1191548   +          +     0.38027656631135 * S_NumStorePurchases
1191549   +          +    -0.18878358997924 * S_NumWebPurchases
1191550   +          +     1.61962062004798 * S_NumWebVisitsMonth
1191551   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1191552   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1191553   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1191554   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1191555   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1191556   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1191557   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1191558   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1191559   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1191560   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1191561   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1191562   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1191563   +          +    -0.00642902007204 * S_NumDealsPurchases
1191564   +          +     0.29785069480367 * S_NumDistPurchases
1191565   +          +    -0.42243322063147 * S_NumStorePurchases
1191566   +          +     0.54880896338383 * S_NumWebPurchases
1191567   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1191568   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1191569   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1191570   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1191571   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1191572   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1191573   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1191574   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1191575   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1191576   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1191577   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1191578   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1191579   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1191580   +          +    -0.48404738328225 * S_NumDealsPurchases
1191581   +          +    -0.02464180457879 * S_NumDistPurchases
1191582   +          +     1.17201831082067 * S_NumStorePurchases
1191583   +          +     0.57453655167516 * S_NumWebPurchases
1191584   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1191585   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1191586   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1191587   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1191588   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1191589   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1191590   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1191591   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1191592   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1191593   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1191594   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1191595   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1191596   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1191597   +          +    -1.49850531967483 * S_NumDealsPurchases
1191598   +          +    -0.82105466264223 * S_NumDistPurchases
1191599   +          +     0.29984603642824 * S_NumStorePurchases
1191600   +          +     0.06557123721611 * S_NumWebPurchases
1191601   +          +     1.04754749365002 * S_NumWebVisitsMonth
1191602   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1191603   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1191604   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1191605   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1191606   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1191607   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1191608   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1191609   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1191610   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1191611   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1191612   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1191613   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1191614   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1191615   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1191616   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1191617   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1191618   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1191619   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1191620   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1191621   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1191622   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1191623   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1191624   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1191625   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1191626   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1191627   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1191628   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1191629   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1191630   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1191631   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1191632   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1191633   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1191634   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1191635   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1191636   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1191637   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1191638   +          +     0.24583509957712 * Marital_StatusDivorced
1191639   +          +    -0.22681931588361 * Marital_StatusMarried
1191640   +          +    -0.12924106229536 * Marital_StatusSingle
1191641   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1191642   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1191643   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1191644   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1191645   +          +    -0.12585334311068 * Marital_StatusDivorced
1191646   +          +    -0.20835502467207 * Marital_StatusMarried
1191647   +          +    -0.13839534449368 * Marital_StatusSingle
1191648   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1191649   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1191650   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1191651   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1191652   +          +     0.35106363238113 * Marital_StatusDivorced
1191653   +          +     -1.3414808583918 * Marital_StatusMarried
1191654   +          +     1.40835320798486 * Marital_StatusSingle
1191655   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1191656   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1191657   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1191658   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1191659   +          +     0.48174546958393 * Marital_StatusDivorced
1191660   +          +    -0.41416978858191 * Marital_StatusMarried
1191661   +          +    -0.23376801546265 * Marital_StatusSingle
1191662   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1191663   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1191664   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1191665   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1191666   +          +    -0.67557643774246 * Marital_StatusDivorced
1191667   +          +     1.63844045917367 * Marital_StatusMarried
1191668   +          +    -0.70320960247699 * Marital_StatusSingle
1191669   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1191670   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1191671   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1191672   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1191673   +          +    -0.11371453086883 * Marital_StatusDivorced
1191674   +          +    -0.34226997176291 * Marital_StatusMarried
1191675   +          +    -1.01568676685754 * Marital_StatusSingle
1191676   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1191677   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1191678   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1191679   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1191680   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1191681   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1191682   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1191683   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1191684   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1191685   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1191686   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1191687   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1191688   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1191689   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1191690   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1191691   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1191692   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1191693   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1191694   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1191695   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1191696   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1191697   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1191698   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1191699   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1191700   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1191701   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1191702   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1191703   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1191704   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1191705   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1191706   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1191707   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1191708   +END;
MPRINT(EM_DIAGRAM):   END;
1191709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191710   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1191711   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1191712   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1191713   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1191714   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1191715   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1191716   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1191717   +END;
MPRINT(EM_DIAGRAM):   END;
1191718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191719   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1191720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191721   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191722   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1191723   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1191724   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1191725   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1191726   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1191727   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1191728   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1191729   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1191730   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1191731   +          +    -0.87259051567474 * S_NumDealsPurchases
1191732   +          +    -0.36454149529139 * S_NumDistPurchases
1191733   +          +     0.12447759925061 * S_NumStorePurchases
1191734   +          +    -1.08133487947367 * S_NumWebPurchases
1191735   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1191736   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1191737   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1191738   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1191739   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1191740   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1191741   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1191742   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1191743   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1191744   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1191745   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1191746   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1191747   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1191748   +          +     2.23121497416403 * S_NumDealsPurchases
1191749   +          +    -0.48674842191071 * S_NumDistPurchases
1191750   +          +     1.77510728607544 * S_NumStorePurchases
1191751   +          +     0.14647433155436 * S_NumWebPurchases
1191752   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1191753   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1191754   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1191755   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1191756   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1191757   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1191758   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1191759   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1191760   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1191761   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1191762   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1191763   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1191764   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1191765   +          +     0.14338855349611 * S_NumDealsPurchases
1191766   +          +    -2.21071010829235 * S_NumDistPurchases
1191767   +          +    -0.21795889348002 * S_NumStorePurchases
1191768   +          +     1.98825087883535 * S_NumWebPurchases
1191769   +          +     1.02482442531149 * S_NumWebVisitsMonth
1191770   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1191771   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1191772   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1191773   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1191774   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1191775   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1191776   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1191777   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1191778   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1191779   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1191780   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1191781   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1191782   +          +     0.30041205661012 * S_NumDealsPurchases
1191783   +          +    -0.63499849986918 * S_NumDistPurchases
1191784   +          +    -0.34155713433714 * S_NumStorePurchases
1191785   +          +    -1.14183354933936 * S_NumWebPurchases
1191786   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1191787   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1191788   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1191789   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1191790   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1191791   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1191792   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1191793   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1191794   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1191795   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1191796   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1191797   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1191798   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1191799   +          +    -0.21237915559831 * S_NumDealsPurchases
1191800   +          +     0.48256923764182 * S_NumDistPurchases
1191801   +          +    -0.45553093140641 * S_NumStorePurchases
1191802   +          +      0.5593655963659 * S_NumWebPurchases
1191803   +          +     0.27943768691188 * S_NumWebVisitsMonth
1191804   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1191805   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1191806   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1191807   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1191808   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1191809   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1191810   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1191811   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1191812   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1191813   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1191814   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1191815   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1191816   +          +     2.38967021388062 * S_NumDealsPurchases
1191817   +          +    -0.97722398866481 * S_NumDistPurchases
1191818   +          +     1.57612333191312 * S_NumStorePurchases
1191819   +          +    -0.75968679115983 * S_NumWebPurchases
1191820   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1191821   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1191822   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1191823   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1191824   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1191825   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1191826   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1191827   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1191828   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1191829   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1191830   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1191831   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1191832   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1191833   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1191834   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1191835   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1191836   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1191837   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1191838   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1191839   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1191840   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1191841   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1191842   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1191843   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1191844   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1191845   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1191846   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1191847   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1191848   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1191849   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1191850   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1191851   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1191852   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1191853   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1191854   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1191855   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1191856   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1191857   +          +     0.96470902298142 * Marital_StatusDivorced
1191858   +          +     0.94805959268314 * Marital_StatusMarried
1191859   +          +     -0.6523948769616 * Marital_StatusSingle
1191860   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1191861   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1191862   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1191863   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1191864   +          +      0.3918249505531 * Marital_StatusDivorced
1191865   +          +    -0.00968091979586 * Marital_StatusMarried
1191866   +          +     0.84615379885071 * Marital_StatusSingle
1191867   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1191868   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1191869   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1191870   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1191871   +          +     1.14335160313191 * Marital_StatusDivorced
1191872   +          +     0.50580517192175 * Marital_StatusMarried
1191873   +          +     0.17264295020921 * Marital_StatusSingle
1191874   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1191875   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1191876   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1191877   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1191878   +          +    -0.11238504444225 * Marital_StatusDivorced
1191879   +          +    -0.81348274043749 * Marital_StatusMarried
1191880   +          +     0.46075415610001 * Marital_StatusSingle
1191881   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1191882   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1191883   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1191884   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1191885   +          +    -0.46342068701431 * Marital_StatusDivorced
1191886   +          +    -0.41667845270204 * Marital_StatusMarried
1191887   +          +    -0.47166707496281 * Marital_StatusSingle
1191888   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1191889   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1191890   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1191891   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1191892   +          +    -0.45376613787812 * Marital_StatusDivorced
1191893   +          +     0.01337046049801 * Marital_StatusMarried
1191894   +          +    -0.92811489484121 * Marital_StatusSingle
1191895   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1191896   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1191897   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1191898   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1191899   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1191900   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1191901   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1191902   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1191903   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1191904   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1191905   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1191906   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1191907   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1191908   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1191909   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1191910   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1191911   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1191912   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1191913   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1191914   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1191915   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1191916   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1191917   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1191918   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1191919   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1191920   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1191921   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1191922   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1191923   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1191924   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1191925   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1191926   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1191927   +END;
MPRINT(EM_DIAGRAM):   END;
1191928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191929   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1191930   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1191931   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1191932   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1191933   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1191934   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1191935   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1191936   +END;
MPRINT(EM_DIAGRAM):   END;
1191937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191938   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1191939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191941   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1191942   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1191943   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1191944   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1191945   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1191946   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1191947   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1191948   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1191949   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1191950   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1191951   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1191952   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1191953   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1191954   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1191955   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1191956   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1191957   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1191958   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1191959   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1191960   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1191961   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1191962   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1191963   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1191964   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1191965   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1191966   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1191967   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1191968   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1191969   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1191970   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1191971   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1191972   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1191973   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1191974   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1191975   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1191976   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1191977   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1191978   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1191979   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1191980   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1191981   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1191982   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1191983   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1191984   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1191985   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1191986   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1191987   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1191988   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1191989   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1191990   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1191991   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1191992   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1191993   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1191994   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1191995   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1191996   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1191997   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1191998   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1191999   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1192000   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1192001   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1192002   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1192003   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1192004   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1192005   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1192006   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1192007   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1192008   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1192009   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1192010   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1192011   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1192012   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1192013   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1192014   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1192015   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1192016   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1192017   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1192018   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1192019   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1192020   +END;
MPRINT(EM_DIAGRAM):   END;
1192021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192022   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1192023   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1192024   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1192025   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1192026   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1192027   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1192028   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1192029   +END;
MPRINT(EM_DIAGRAM):   END;
1192030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192031   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1192032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192033   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192034   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1192035   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1192036   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1192037   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1192038   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1192039   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1192040   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1192041   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1192042   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1192043   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1192044   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1192045   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1192046   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1192047   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1192048   +END;
MPRINT(EM_DIAGRAM):   END;
1192049   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192050   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1192051   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1192052   +END;
MPRINT(EM_DIAGRAM):   END;
1192053   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1192054   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1192055   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1192056   +END;
MPRINT(EM_DIAGRAM):   END;
1192057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192058   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1192059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192060   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1192061   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1192062   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1192063   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1192064   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1192065   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1192066   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1192067   +END;
MPRINT(EM_DIAGRAM):   END;
1192068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1192069   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1192070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1192071   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1192072    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1192073    quit;
1192074    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1192075    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1192076    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1192077    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
1192078    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1192079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192080    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1192081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192082    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192083    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
1192084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192086    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192087    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1192088    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1192089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192090    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
1192091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192092    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1192093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1192095    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192096    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1192097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192098    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192099    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1192100    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1192100  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

1192101    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192102    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1192103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192104    filename _pref
1192104  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1192105    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1192106    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1192107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192108   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1192109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192110   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1192111   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1192112   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1192113    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1192114    quit;
1192115    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1192116    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1192117    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1192118    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1192119    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1192120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192121    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1192122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192124    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1192125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192126    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192127    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192128    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1192129    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1192130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192131    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1192132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1192133    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1192134    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192136    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192137    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1192138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192139    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192140    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1192141    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1192141  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1192142    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192143    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1192144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192145    filename _pref
1192145  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1192146    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1192147    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1192148   +
1192149   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1192150   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1192150  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1192151   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1192152   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1192153   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1192154   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1192155   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1192156    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1192157    quit;
1192158    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1192159    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1192160    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1192161    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1192162    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1192163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192164    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1192165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192167    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1192168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192171    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1192172    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1192173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192174    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1192175    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192176    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1192177    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192179    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192180    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1192181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192182    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192183    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1192184    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1192184  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1192185    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192186    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1192187    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192188    filename _pref
1192188  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1192189    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1192190    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1192191   +
1192192   +
1192193   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1192194   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1192195   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1192196   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1192197   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1192198   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192199   +
1192200   +
1192201   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1192202   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1192203   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1192204   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1192205   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1192206   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192207   +
1192208   +
1192209   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1192210   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1192211   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1192212   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1192213   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1192214   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192215   +
1192216   +
1192217   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1192218   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1192219   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1192220   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1192221   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1192222   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192223   +
1192224   +
1192225   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1192226   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1192227   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1192228   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1192229   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1192230   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192231   +
1192232   +
1192233   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1192234   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1192235   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1192236   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1192237   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1192238   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192239   +
1192240   +
1192241   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1192242   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1192243   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1192244   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1192245   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1192246   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192247   +
1192248   +
1192249   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1192250   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1192251   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1192252   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1192253   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1192254   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192255   +if
1192256   +_FILTERNORM1 not in ( '.')
1192257   + and
1192258   +_FILTERNORM2 not in ( '.')
1192259   + and
1192260   +_FILTERNORM3 not in ( '.')
1192261   + and
1192262   +_FILTERNORM4 not in ( '.')
1192263   + and
1192264   +_FILTERNORM5 not in ( '.')
1192265   + and
1192266   +_FILTERNORM6 not in ( '.')
1192267   + and
1192268   +_FILTERNORM7 not in ( ' ')
1192269   + and
1192270   +_FILTERNORM8 not in ( ' ')
1192271   +and
1192272   +( Dt_Customer ne .)
1192273   +and ( Income ne . and (Income<=107000))
1192274   +and ( Kidhome ne .)
1192275   +and ( MntFishProducts ne .)
1192276   +and ( MntFruits ne .)
1192277   +and ( MntGoldProds ne .)
1192278   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1192279   +and ( MntSweetProducts ne .)
1192280   +and ( MntWines ne .)
1192281   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1192282   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1192283   +and ( NumStorePurchases ne .)
1192284   +and ( NumWebPurchases ne .)
1192285   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1192286   +and ( Recency ne .)
1192287   +and ( Teenhome ne .)
1192288   +and ( Year_Birth ne .)
1192289   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1192290   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1192291   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1192292   +end;
MPRINT(EM_DIAGRAM):   end;
1192293   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1192294   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1192295    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1192296    quit;
1192297    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1192298    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1192299    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1192300    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1192301    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1192302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1192303    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1192304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192306    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1192307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192309    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192310    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1192311    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1192312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192313    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1192314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192315    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1192316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1192319    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1192320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1192321    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192322    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1192323    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1192323  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1192324    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192325    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1192326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192327    %macro varDept(fcmpdata=,id=);
1192328    %global nobs&id scoreFlag&id;
1192329    %let scoreFlag&id = 0;
1192330    %if &id=1 or ^&fcmpStart %then %do;
1192331    proc sort data=&fcmpdata out=_temp&id nodupkey;
1192332    by NAME;
1192333    where id=&id and LHS in( %let j=1;
1192334    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1192335    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1192336    "&var" %let j = %eval(&j+1);
1192337    %end;
1192338    );
1192339    run;
1192340    %let dsid = %sysfunc(open(_temp&id));
1192341    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1192342    %let dsid = %sysfunc(close(&dsid));
1192343    %if &&nobs&id %then %do;
1192344    %let scoreFlag&id = 1;
1192345    %let fcmpStart = 1;
1192346    %end;
1192347    %else %let fcmpStart = 0;
1192348    %end;
1192349    %else %do;
1192350    proc sort data=&fcmpdata out=_tempid;
1192351    where id=&id;
1192352    by LHS;
1192353    run;
1192354    %let dsid = %sysfunc(open(_tempid));
1192355    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1192356    %let dsid = %sysfunc(close(&dsid));
1192357    %if ^&&nobs&id %then %do;
1192358    proc datasets lib=work nolist;
1192359    delete _tempid;
1192360    run;
1192361    quit;
1192362    %end;
1192363    %else %do;
1192364    data _tempAll;
1192365    set %let j=%eval(&id-1);
1192366    %do x=1 %to &j;
1192367    %if &&nobs&x %then %do;
1192368    _temp&x %end;
1192369    %end;
1192370    ;
1192371    run;
1192372    proc sql;
1192373    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1192373  ! work._tempid p2 where p.name=p2.lhs;
1192374    quit;
1192375    data _temp&id;
1192376    set _temp&id;
1192377    where LHS ne '' and NAME ne '' and Node ne '';
1192378    run;
1192379    proc datasets lib=work nolist;
1192380    delete _tempAll;
1192381    run;
1192382    %let dsid = %sysfunc(open(_temp&id));
1192383    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1192384    %let dsid = %sysfunc(close(&dsid));
1192385    %if ^&&nobs&id %then %do;
1192386    proc datasets lib=work nolist;
1192387    delete _temp&id;
1192388    run;
1192389    quit;
1192390    %end;
1192391    %else %do;
1192392    %let scoreFlag&id = 1;
1192393    data _temp&id;
1192394    set _temp&id;
1192395    where LHS ne NAME and node ne '';
1192396    run;
1192397    %let dsid = %sysfunc(open(_temp&id));
1192398    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1192399    %let dsid = %sysfunc(close(&dsid));
1192400    %if ^&&nobs&id %then %do;
1192401    proc datasets lib=work nolist;
1192402    delete _temp&id;
1192403    run;
1192404    quit;
1192405    %end;
1192406    %else %do;
1192407    proc sort data=_temp&id nodupkey;
1192408    by LHS NAME;
1192409    run;
1192410    %end;
1192411    %end;
1192412    %end;
1192413    %end;
1192414    %mend varDept;
1192415    %macro optCode(outdata=fcmpdata);
1192416    %global fcmpStart;
1192417    %let fcmpStart = 0;
1192418    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1192419    %let NumNodes=9;
1192420    %do k=1 %to &NumNodes;
1192421    %vardept(fcmpdata=&outdata, id=&k);
1192422    %end;
1192423    %mend optCode;
1192424    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1192425    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1192426    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1192427    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1192428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192429    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1192430    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1192431    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1192432    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1192434    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1192434  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1192435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1192436    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1192437    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1192438    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1192439    filename _pref
1192439  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
1192440    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1192441    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
1192442   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1192443   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1192444   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1192445   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1192446   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1192447   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1192448   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1192449   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1192450   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1192451   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1192452   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1192453   +LENGTH _WARN_ $4
1192454   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1192455   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1192456   +
1192457   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1192458   +
1192459   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1192460   +
1192461   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1192462   +
1192463   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1192464   +
1192465   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1192466   +
1192467   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1192468   +
1192469   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1192470   +
1192471   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1192472   +
1192473   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1192474   +
1192475   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1192476   +
1192477   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1192478   +
1192479   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1192480   +
1192481   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1192482   +
1192483   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1192484   +
1192485   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1192486   +
1192487   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1192488   +
1192489   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1192490   +
1192491   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1192492   +
1192493   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1192494   +
1192495   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1192496   +
1192497   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1192498   +
1192499   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1192500   +
1192501   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1192502   +
1192503   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1192504   +
1192505   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1192506   +
1192507   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1192508   +
1192509   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1192510   +
1192511   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1192512   +
1192513   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1192514   +
1192515   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1192516   +
1192517   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1192518   +
1192519   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1192520   +
1192521   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1192522   +
1192523   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1192524   +
1192525   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1192526   +
1192527   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1192528   +
1192529   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1192530   +
1192531   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1192532   +
1192533   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1192534   +
1192535   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1192536   +
1192537   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1192538   +
1192539   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1192540   +
1192541   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1192542   +
1192543   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1192544   +
1192545   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1192546   +
1192547   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1192548   +
1192549   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1192550   +
1192551   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1192552   +
1192553   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1192554   +
1192555   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1192556   +
1192557   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1192558   +
1192559   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1192560   +
1192561   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1192562   +
1192563   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1192564   +
1192565   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1192566   +
1192567   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1192568   +
1192569   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1192570   +
1192571   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1192572   +
1192573   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1192574   +
1192575   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1192576   +
1192577   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1192578   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1192579   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1192580   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1192581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192583   +end;
MPRINT(EM_DIAGRAM):   end;
1192584   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192586   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1192587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192588   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192589   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1192590   +   end;
MPRINT(EM_DIAGRAM):   end;
1192591   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192592   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1192593   +   end;
MPRINT(EM_DIAGRAM):   end;
1192594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192595   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1192596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192598   +   end;
MPRINT(EM_DIAGRAM):   end;
1192599   +end;
MPRINT(EM_DIAGRAM):   end;
1192600   +
1192601   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1192602   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1192603   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1192604   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1192605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192607   +end;
MPRINT(EM_DIAGRAM):   end;
1192608   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192609   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192610   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1192611   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192612   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192613   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1192614   +   end;
MPRINT(EM_DIAGRAM):   end;
1192615   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192616   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1192617   +   end;
MPRINT(EM_DIAGRAM):   end;
1192618   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192619   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1192620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192622   +   end;
MPRINT(EM_DIAGRAM):   end;
1192623   +end;
MPRINT(EM_DIAGRAM):   end;
1192624   +
1192625   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1192626   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1192627   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1192628   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1192629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192631   +end;
MPRINT(EM_DIAGRAM):   end;
1192632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192634   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1192635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192636   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192637   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1192638   +   end;
MPRINT(EM_DIAGRAM):   end;
1192639   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192640   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1192641   +   end;
MPRINT(EM_DIAGRAM):   end;
1192642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192643   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1192644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192646   +   end;
MPRINT(EM_DIAGRAM):   end;
1192647   +end;
MPRINT(EM_DIAGRAM):   end;
1192648   +
1192649   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1192650   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1192651   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1192652   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1192653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192655   +end;
MPRINT(EM_DIAGRAM):   end;
1192656   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192657   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192658   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1192659   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192660   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192661   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1192662   +   end;
MPRINT(EM_DIAGRAM):   end;
1192663   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192664   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1192665   +   end;
MPRINT(EM_DIAGRAM):   end;
1192666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192667   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1192668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192670   +   end;
MPRINT(EM_DIAGRAM):   end;
1192671   +end;
MPRINT(EM_DIAGRAM):   end;
1192672   +
1192673   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1192674   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1192675   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1192676   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1192677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192679   +end;
MPRINT(EM_DIAGRAM):   end;
1192680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192682   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1192683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192684   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192685   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1192686   +   end;
MPRINT(EM_DIAGRAM):   end;
1192687   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192688   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1192689   +   end;
MPRINT(EM_DIAGRAM):   end;
1192690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192691   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1192692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192694   +   end;
MPRINT(EM_DIAGRAM):   end;
1192695   +end;
MPRINT(EM_DIAGRAM):   end;
1192696   +
1192697   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1192698   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1192699   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1192700   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1192701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192703   +end;
MPRINT(EM_DIAGRAM):   end;
1192704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192706   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1192707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192708   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1192709   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1192710   +   end;
MPRINT(EM_DIAGRAM):   end;
1192711   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192712   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1192713   +   end;
MPRINT(EM_DIAGRAM):   end;
1192714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192715   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1192716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192718   +   end;
MPRINT(EM_DIAGRAM):   end;
1192719   +end;
MPRINT(EM_DIAGRAM):   end;
1192720   +
1192721   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1192722   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1192723   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1192724   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1192725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192727   +end;
MPRINT(EM_DIAGRAM):   end;
1192728   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192730   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1192731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192732   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1192733   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1192734   +   end;
MPRINT(EM_DIAGRAM):   end;
1192735   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1192736   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1192737   +   end;
MPRINT(EM_DIAGRAM):   end;
1192738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192739   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1192740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192742   +   end;
MPRINT(EM_DIAGRAM):   end;
1192743   +end;
MPRINT(EM_DIAGRAM):   end;
1192744   +
1192745   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1192746   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1192747   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1192748   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1192749   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1192750   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1192751   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1192752   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1192753   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1192754   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1192755   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1192756   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1192757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192759   +end;
MPRINT(EM_DIAGRAM):   end;
1192760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192761   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1192762   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1192763   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192764   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1192765   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1192766   +   end;
MPRINT(EM_DIAGRAM):   end;
1192767   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1192768   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1192769   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1192770   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1192771   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1192772   +   end;
MPRINT(EM_DIAGRAM):   end;
1192773   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1192774   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1192775   +   end;
MPRINT(EM_DIAGRAM):   end;
1192776   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1192777   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1192778   +   end;
MPRINT(EM_DIAGRAM):   end;
1192779   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1192780   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1192781   +   end;
MPRINT(EM_DIAGRAM):   end;
1192782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192783   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1192784   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1192785   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1192786   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1192787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192789   +   end;
MPRINT(EM_DIAGRAM):   end;
1192790   +end;
MPRINT(EM_DIAGRAM):   end;
1192791   +
1192792   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1192793   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1192794   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1192795   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1192796   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1192797   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1192798   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1192799   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1192800   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1192801   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1192802   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1192803   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1192804   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1192805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192807   +end;
MPRINT(EM_DIAGRAM):   end;
1192808   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192809   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1192810   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1192811   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192812   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1192813   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1192814   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1192815   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1192816   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1192817   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1192818   +         end;
MPRINT(EM_DIAGRAM):   end;
1192819   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1192820   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1192821   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1192822   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1192823   +            end;
MPRINT(EM_DIAGRAM):   end;
1192824   +         end;
MPRINT(EM_DIAGRAM):   end;
1192825   +      end;
MPRINT(EM_DIAGRAM):   end;
1192826   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1192827   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1192828   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1192829   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1192830   +         end;
MPRINT(EM_DIAGRAM):   end;
1192831   +      end;
MPRINT(EM_DIAGRAM):   end;
1192832   +   end;
MPRINT(EM_DIAGRAM):   end;
1192833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192834   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1192835   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1192836   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1192837   +      end;
MPRINT(EM_DIAGRAM):   end;
1192838   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1192839   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1192840   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1192841   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1192842   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1192843   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1192844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1192845   +         end;
MPRINT(EM_DIAGRAM):   end;
1192846   +      end;
MPRINT(EM_DIAGRAM):   end;
1192847   +   end;
MPRINT(EM_DIAGRAM):   end;
1192848   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1192849   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1192850   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1192851   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1192852   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1192853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192855   +   end;
MPRINT(EM_DIAGRAM):   end;
1192856   +end;
MPRINT(EM_DIAGRAM):   end;
1192857   +
1192858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192859   +*** Checking missing input Interval
1192860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1192861   +
1192862   +IF NMISS(
1192863   +   AcceptedCmpTotal ,
1192864   +   Age ,
1192865   +   Frq ,
1192866   +   Income ,
1192867   +   Kidhome ,
1192868   +   Mnt ,
1192869   +   MntFishProducts ,
1192870   +   MntFruits ,
1192871   +   MntGoldProds ,
1192872   +   MntMeatProducts ,
1192873   +   MntSweetProducts ,
1192874   +   MntWines ,
1192875   +   MonthsAsCustomer ,
1192876   +   NumCatalogPurchases ,
1192877   +   NumDealsPurchases ,
1192878   +   NumDistPurchases ,
1192879   +   NumStorePurchases ,
1192880   +   NumWebPurchases ,
1192881   +   NumWebVisitsMonth ,
1192882   +   RFMstat ,
1192883   +   RMntFrq ,
1192884   +   Recency ,
1192885   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1192886   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1192887   +
1192888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192889   +END;
MPRINT(EM_DIAGRAM):   END;
1192890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192891   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1192892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192893   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192894   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1192895   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1192896   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1192897   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1192898   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1192899   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1192900   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192901   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1192902   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1192903   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1192904   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1192905   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1192906   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1192907   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1192908   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1192909   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1192910   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1192911   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1192912   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1192913   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1192914   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1192915   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1192916   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1192917   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1192918   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1192919   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1192920   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1192921   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1192922   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1192923   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1192924   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1192925   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1192926   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1192927   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1192928   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1192929   +END;
MPRINT(EM_DIAGRAM):   END;
1192930   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192931   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1192932   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1192933   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1192934   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1192935   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1192936   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1192937   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1192938   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1192939   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1192940   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1192941   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1192942   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1192943   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192944   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1192945   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1192946   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1192947   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1192948   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1192949   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1192950   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1192951   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1192952   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1192953   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1192954   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1192955   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1192956   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1192957   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1192958   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1192959   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1192960   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1192961   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1192962   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1192963   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1192964   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1192965   +   ELSE S_NumCatalogPurchases
1192966   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1192967   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1192968   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1192969   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1192970   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1192971   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1192972   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1192973   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1192974   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1192975   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1192976   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1192977   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1192978   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1192979   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1192980   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1192981   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1192982   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1192983   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1192984   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1192985   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1192986   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1192987   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1192988   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1192989   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1192990   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1192991   +END;
MPRINT(EM_DIAGRAM):   END;
1192992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192993   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1192994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192996   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1192997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192999   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1193000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193002   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1193003   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1193004   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1193005   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1193006   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1193007   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1193008   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1193009   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1193010   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1193011   +          +     0.89422627895323 * S_NumDealsPurchases
1193012   +          +    -0.13304125929765 * S_NumDistPurchases
1193013   +          +    -1.04568442570811 * S_NumStorePurchases
1193014   +          +    -0.28677765126751 * S_NumWebPurchases
1193015   +          +      1.2327638737509 * S_NumWebVisitsMonth
1193016   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1193017   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1193018   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1193019   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1193020   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1193021   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1193022   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1193023   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1193024   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1193025   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1193026   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1193027   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1193028   +          +     0.04224590196535 * S_NumDealsPurchases
1193029   +          +     0.76554742700113 * S_NumDistPurchases
1193030   +          +    -0.49155496870812 * S_NumStorePurchases
1193031   +          +     0.59606812744403 * S_NumWebPurchases
1193032   +          +     1.86809286276405 * S_NumWebVisitsMonth
1193033   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1193034   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1193035   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1193036   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1193037   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1193038   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1193039   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1193040   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1193041   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1193042   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1193043   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1193044   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1193045   +          +    -0.04866536993486 * S_NumDealsPurchases
1193046   +          +    -0.53535979020214 * S_NumDistPurchases
1193047   +          +     2.20634071253676 * S_NumStorePurchases
1193048   +          +      0.6164564989007 * S_NumWebPurchases
1193049   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1193050   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1193051   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1193052   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1193053   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1193054   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1193055   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1193056   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1193057   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1193058   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1193059   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1193060   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1193061   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1193062   +          +     1.37461255707863 * S_NumDealsPurchases
1193063   +          +    -0.17684775000818 * S_NumDistPurchases
1193064   +          +    -0.62755623855535 * S_NumStorePurchases
1193065   +          +    -1.46551649022657 * S_NumWebPurchases
1193066   +          +     3.35784247878638 * S_NumWebVisitsMonth
1193067   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1193068   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1193069   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1193070   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1193071   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1193072   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1193073   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1193074   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1193075   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1193076   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1193077   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1193078   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1193079   +          +    -0.76256677907121 * S_NumDealsPurchases
1193080   +          +    -0.31591571751692 * S_NumDistPurchases
1193081   +          +      0.0506832614089 * S_NumStorePurchases
1193082   +          +      1.4636796923764 * S_NumWebPurchases
1193083   +          +     0.37743519705036 * S_NumWebVisitsMonth
1193084   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1193085   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1193086   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1193087   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1193088   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1193089   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1193090   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1193091   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1193092   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1193093   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1193094   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1193095   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1193096   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1193097   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1193098   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1193099   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1193100   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1193101   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1193102   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1193103   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1193104   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1193105   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1193106   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1193107   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1193108   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1193109   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1193110   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1193111   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1193112   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1193113   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1193114   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1193115   +          +     0.68641668264565 * Marital_StatusDivorced
1193116   +          +    -0.81586871439732 * Marital_StatusMarried
The SAS System

1193117   +          +     0.63758920518451 * Marital_StatusSingle
1193118   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1193119   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1193120   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1193121   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1193122   +          +     0.05137560133238 * Marital_StatusDivorced
1193123   +          +    -2.24401993266209 * Marital_StatusMarried
1193124   +          +     1.57359386216115 * Marital_StatusSingle
1193125   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1193126   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1193127   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1193128   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1193129   +          +     -1.0649987815942 * Marital_StatusDivorced
1193130   +          +     0.76065111692388 * Marital_StatusMarried
1193131   +          +    -0.21694149754801 * Marital_StatusSingle
1193132   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1193133   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1193134   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1193135   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1193136   +          +     2.02155453548328 * Marital_StatusDivorced
1193137   +          +    -2.60190649735306 * Marital_StatusMarried
1193138   +          +     1.09149388354927 * Marital_StatusSingle
1193139   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1193140   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1193141   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1193142   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1193143   +          +     0.66315970650309 * Marital_StatusDivorced
1193144   +          +    -1.20476729758152 * Marital_StatusMarried
1193145   +          +     0.56175027826397 * Marital_StatusSingle
1193146   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1193147   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1193148   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1193149   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1193150   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1193151   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1193152   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1193153   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1193154   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193155   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1193156   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1193157   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1193158   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1193159   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1193160   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1193161   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1193162   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1193163   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1193164   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1193165   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1193166   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1193167   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1193168   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1193169   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1193170   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1193171   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1193172   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1193173   +END;
MPRINT(EM_DIAGRAM):   END;
1193174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193175   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1193176   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1193177   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1193178   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1193179   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1193180   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1193181   +END;
MPRINT(EM_DIAGRAM):   END;
1193182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193183   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1193184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193185   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193186   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1193187   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1193188   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1193189   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1193190   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1193191   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1193192   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1193193   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1193194   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1193195   +          +     1.50005927423985 * S_NumDealsPurchases
1193196   +          +      0.5590536933569 * S_NumDistPurchases
1193197   +          +    -0.61757824339318 * S_NumStorePurchases
1193198   +          +     0.37259686538158 * S_NumWebPurchases
1193199   +          +     2.59725437895564 * S_NumWebVisitsMonth
1193200   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1193201   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1193202   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1193203   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1193204   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1193205   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1193206   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1193207   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1193208   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1193209   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1193210   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1193211   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1193212   +          +    -0.09282222088797 * S_NumDealsPurchases
1193213   +          +     0.10726247938321 * S_NumDistPurchases
1193214   +          +     -1.1235971458527 * S_NumStorePurchases
1193215   +          +    -0.78304387839877 * S_NumWebPurchases
1193216   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1193217   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1193218   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1193219   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1193220   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1193221   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1193222   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1193223   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1193224   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1193225   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1193226   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1193227   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1193228   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1193229   +          +     0.35349185459988 * S_NumDealsPurchases
1193230   +          +     0.06853677714859 * S_NumDistPurchases
1193231   +          +    -1.47546012999338 * S_NumStorePurchases
1193232   +          +     0.20926435398916 * S_NumWebPurchases
1193233   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1193234   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1193235   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1193236   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1193237   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1193238   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1193239   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1193240   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1193241   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1193242   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1193243   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1193244   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1193245   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1193246   +          +      0.3873586120272 * S_NumDealsPurchases
1193247   +          +     0.25911651157596 * S_NumDistPurchases
1193248   +          +     1.58922489084287 * S_NumStorePurchases
1193249   +          +     0.49041797743368 * S_NumWebPurchases
1193250   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1193251   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1193252   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1193253   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1193254   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1193255   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1193256   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1193257   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1193258   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1193259   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1193260   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1193261   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1193262   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1193263   +          +    -0.60830880287865 * S_NumDealsPurchases
1193264   +          +      0.0745331267194 * S_NumDistPurchases
1193265   +          +    -1.39472448256952 * S_NumStorePurchases
1193266   +          +     1.95372179969087 * S_NumWebPurchases
1193267   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1193268   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1193269   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1193270   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1193271   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1193272   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1193273   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1193274   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1193275   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1193276   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1193277   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1193278   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1193279   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1193280   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1193281   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1193282   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1193283   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1193284   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1193285   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1193286   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1193287   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1193288   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1193289   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1193290   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1193291   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1193292   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1193293   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1193294   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1193295   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1193296   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1193297   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1193298   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1193299   +          +    -1.33377871643323 * Marital_StatusDivorced
1193300   +          +    -0.87184228840898 * Marital_StatusMarried
1193301   +          +     1.41223186340257 * Marital_StatusSingle
1193302   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1193303   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1193304   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1193305   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1193306   +          +    -0.21479890935233 * Marital_StatusDivorced
1193307   +          +     -0.0025459519579 * Marital_StatusMarried
1193308   +          +     1.33900491702264 * Marital_StatusSingle
1193309   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1193310   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1193311   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1193312   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1193313   +          +    -0.38307267471999 * Marital_StatusDivorced
1193314   +          +     0.97088969451415 * Marital_StatusMarried
1193315   +          +    -0.28578224473381 * Marital_StatusSingle
1193316   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1193317   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1193318   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1193319   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1193320   +          +    -1.42229401093569 * Marital_StatusDivorced
1193321   +          +      0.7234508382397 * Marital_StatusMarried
1193322   +          +    -0.29062202974628 * Marital_StatusSingle
1193323   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1193324   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1193325   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1193326   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1193327   +          +    -0.99067637207205 * Marital_StatusDivorced
1193328   +          +    -0.50245902142079 * Marital_StatusMarried
1193329   +          +     0.54214494533793 * Marital_StatusSingle
1193330   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1193331   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1193332   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1193333   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1193334   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1193335   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1193336   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1193337   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1193338   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193339   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1193340   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1193341   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1193342   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1193343   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1193344   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1193345   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1193346   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1193347   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1193348   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1193349   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1193350   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1193351   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1193352   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1193353   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1193354   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1193355   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1193356   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1193357   +END;
MPRINT(EM_DIAGRAM):   END;
1193358   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193359   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1193360   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1193361   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1193362   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1193363   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1193364   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1193365   +END;
MPRINT(EM_DIAGRAM):   END;
1193366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193367   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1193368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193370   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1193371   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1193372   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1193373   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1193374   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1193375   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1193376   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1193377   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1193378   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1193379   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1193380   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1193381   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1193382   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1193383   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1193384   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1193385   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1193386   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1193387   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1193388   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1193389   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1193390   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1193391   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1193392   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1193393   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1193394   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1193395   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1193396   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1193397   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1193398   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1193399   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1193400   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1193401   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1193402   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1193403   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1193404   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1193405   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1193406   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1193407   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1193408   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1193409   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1193410   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1193411   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1193412   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1193413   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1193414   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1193415   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1193416   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1193417   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1193418   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1193419   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1193420   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1193421   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1193422   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1193423   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1193424   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1193425   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1193426   +END;
MPRINT(EM_DIAGRAM):   END;
1193427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193428   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1193429   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1193430   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1193431   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1193432   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1193433   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1193434   +END;
MPRINT(EM_DIAGRAM):   END;
1193435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193436   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1193437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193438   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193439   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1193440   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1193441   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1193442   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1193443   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1193444   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1193445   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193446   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1193447   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1193448   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1193449   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1193450   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1193451   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1193452   +END;
MPRINT(EM_DIAGRAM):   END;
1193453   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193454   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1193455   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1193456   +END;
MPRINT(EM_DIAGRAM):   END;
1193457   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1193458   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1193459   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1193460   +END;
MPRINT(EM_DIAGRAM):   END;
1193461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193462   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1193463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193464   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1193465   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1193466   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1193467   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1193468   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1193469   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1193470   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193471   +END;
MPRINT(EM_DIAGRAM):   END;
1193472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1193473   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1193474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1193475   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1193476    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1193477    quit;
1193478    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1193479    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1193480    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1193481    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
1193482    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1193483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193484    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1193485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193486    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193487    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
1193488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193489    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193490    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193491    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1193492    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1193493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193494    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
1193495    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1193496    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1193497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193500    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1193501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193502    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193503    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1193504    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1193504  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

1193505    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193506    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1193507    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193508    filename _pref
1193508  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1193509    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1193510    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1193511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193512   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1193513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193514   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1193515   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1193516   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1193517    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1193518    quit;
1193519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1193520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1193521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1193522    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1193523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1193524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1193526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193528    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1193529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1193533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1193534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193535    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1193536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1193537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1193538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1193542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193543    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1193545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1193545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1193546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193547    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1193548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193549    filename _pref
1193549  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1193550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1193551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1193552   +
1193553   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1193554   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1193554  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1193555   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1193556   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1193557   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1193558   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1193559   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1193560    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1193561    quit;
1193562    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1193563    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1193564    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1193565    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1193566    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1193567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193568    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1193569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193570    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193571    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1193572    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193574    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193575    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1193576    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1193577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193578    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1193579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193580    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1193581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193584    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1193585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193586    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193587    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1193588    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1193588  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1193589    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193590    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1193591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193592    filename _pref
1193592  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1193593    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1193594    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1193595   +
1193596   +
1193597   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1193598   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1193599   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1193600   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1193601   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1193602   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193603   +
1193604   +
1193605   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1193606   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1193607   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1193608   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1193609   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1193610   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193611   +
1193612   +
1193613   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1193614   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1193615   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1193616   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1193617   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1193618   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193619   +
1193620   +
1193621   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1193622   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1193623   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1193624   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1193625   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1193626   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193627   +
1193628   +
1193629   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1193630   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1193631   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1193632   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1193633   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1193634   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193635   +
1193636   +
1193637   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1193638   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1193639   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1193640   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1193641   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1193642   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193643   +
1193644   +
1193645   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1193646   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1193647   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1193648   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1193649   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1193650   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193651   +
1193652   +
1193653   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1193654   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1193655   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1193656   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1193657   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1193658   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193659   +if
1193660   +_FILTERNORM1 not in ( '.')
1193661   + and
1193662   +_FILTERNORM2 not in ( '.')
1193663   + and
1193664   +_FILTERNORM3 not in ( '.')
1193665   + and
1193666   +_FILTERNORM4 not in ( '.')
1193667   + and
1193668   +_FILTERNORM5 not in ( '.')
1193669   + and
1193670   +_FILTERNORM6 not in ( '.')
1193671   + and
1193672   +_FILTERNORM7 not in ( ' ')
1193673   + and
1193674   +_FILTERNORM8 not in ( ' ')
1193675   +and
1193676   +( Dt_Customer ne .)
1193677   +and ( Income ne . and (Income<=107000))
1193678   +and ( Kidhome ne .)
1193679   +and ( MntFishProducts ne .)
1193680   +and ( MntFruits ne .)
1193681   +and ( MntGoldProds ne .)
1193682   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1193683   +and ( MntSweetProducts ne .)
1193684   +and ( MntWines ne .)
1193685   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1193686   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1193687   +and ( NumStorePurchases ne .)
1193688   +and ( NumWebPurchases ne .)
1193689   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1193690   +and ( Recency ne .)
1193691   +and ( Teenhome ne .)
1193692   +and ( Year_Birth ne .)
1193693   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1193694   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1193695   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1193696   +end;
MPRINT(EM_DIAGRAM):   end;
1193697   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1193698   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1193699    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1193700    quit;
1193701    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1193702    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1193703    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1193704    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1193705    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1193706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1193707    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1193708    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193710    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1193711    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193713    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193714    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1193715    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1193716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193717    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1193718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193719    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1193720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193722    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1193723    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1193724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1193725    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193726    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1193727    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1193727  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1193728    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193729    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1193730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193731    %macro varDept(fcmpdata=,id=);
1193732    %global nobs&id scoreFlag&id;
1193733    %let scoreFlag&id = 0;
1193734    %if &id=1 or ^&fcmpStart %then %do;
1193735    proc sort data=&fcmpdata out=_temp&id nodupkey;
1193736    by NAME;
1193737    where id=&id and LHS in( %let j=1;
1193738    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1193739    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1193740    "&var" %let j = %eval(&j+1);
1193741    %end;
1193742    );
1193743    run;
1193744    %let dsid = %sysfunc(open(_temp&id));
1193745    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1193746    %let dsid = %sysfunc(close(&dsid));
1193747    %if &&nobs&id %then %do;
1193748    %let scoreFlag&id = 1;
1193749    %let fcmpStart = 1;
1193750    %end;
1193751    %else %let fcmpStart = 0;
1193752    %end;
1193753    %else %do;
1193754    proc sort data=&fcmpdata out=_tempid;
1193755    where id=&id;
1193756    by LHS;
1193757    run;
1193758    %let dsid = %sysfunc(open(_tempid));
1193759    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1193760    %let dsid = %sysfunc(close(&dsid));
1193761    %if ^&&nobs&id %then %do;
1193762    proc datasets lib=work nolist;
1193763    delete _tempid;
1193764    run;
1193765    quit;
1193766    %end;
1193767    %else %do;
1193768    data _tempAll;
1193769    set %let j=%eval(&id-1);
1193770    %do x=1 %to &j;
1193771    %if &&nobs&x %then %do;
1193772    _temp&x %end;
1193773    %end;
1193774    ;
1193775    run;
1193776    proc sql;
1193777    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1193777  ! work._tempid p2 where p.name=p2.lhs;
1193778    quit;
1193779    data _temp&id;
1193780    set _temp&id;
1193781    where LHS ne '' and NAME ne '' and Node ne '';
1193782    run;
1193783    proc datasets lib=work nolist;
1193784    delete _tempAll;
1193785    run;
1193786    %let dsid = %sysfunc(open(_temp&id));
1193787    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1193788    %let dsid = %sysfunc(close(&dsid));
1193789    %if ^&&nobs&id %then %do;
1193790    proc datasets lib=work nolist;
1193791    delete _temp&id;
1193792    run;
1193793    quit;
1193794    %end;
1193795    %else %do;
1193796    %let scoreFlag&id = 1;
1193797    data _temp&id;
1193798    set _temp&id;
1193799    where LHS ne NAME and node ne '';
1193800    run;
1193801    %let dsid = %sysfunc(open(_temp&id));
1193802    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1193803    %let dsid = %sysfunc(close(&dsid));
1193804    %if ^&&nobs&id %then %do;
1193805    proc datasets lib=work nolist;
1193806    delete _temp&id;
1193807    run;
1193808    quit;
1193809    %end;
1193810    %else %do;
1193811    proc sort data=_temp&id nodupkey;
1193812    by LHS NAME;
1193813    run;
1193814    %end;
1193815    %end;
1193816    %end;
1193817    %end;
1193818    %mend varDept;
1193819    %macro optCode(outdata=fcmpdata);
1193820    %global fcmpStart;
1193821    %let fcmpStart = 0;
1193822    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1193823    %let NumNodes=9;
1193824    %do k=1 %to &NumNodes;
1193825    %vardept(fcmpdata=&outdata, id=&k);
1193826    %end;
1193827    %mend optCode;
1193828    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1193829    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1193830    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1193831    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1193832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193833    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1193834    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1193835    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1193836    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193837    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1193838    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1193838  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1193839    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1193840    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1193841    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1193842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1193843    filename _pref
1193843  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
1193844    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1193845    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
1193846   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1193847   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1193848   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1193849   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1193850   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1193851   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1193852   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1193853   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1193854   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1193855   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1193856   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1193857   +LENGTH _WARN_ $4
1193858   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1193859   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1193860   +
1193861   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1193862   +
1193863   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1193864   +
1193865   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1193866   +
1193867   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1193868   +
1193869   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1193870   +
1193871   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1193872   +
1193873   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1193874   +
1193875   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1193876   +
1193877   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1193878   +
1193879   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1193880   +
1193881   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1193882   +
1193883   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1193884   +
1193885   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1193886   +
1193887   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1193888   +
1193889   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1193890   +
1193891   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1193892   +
1193893   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1193894   +
1193895   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1193896   +
1193897   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1193898   +
1193899   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1193900   +
1193901   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1193902   +
1193903   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1193904   +
1193905   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1193906   +
1193907   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1193908   +
1193909   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1193910   +
1193911   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1193912   +
1193913   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1193914   +
1193915   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1193916   +
1193917   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1193918   +
1193919   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1193920   +
1193921   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1193922   +
1193923   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1193924   +
1193925   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1193926   +
1193927   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1193928   +
1193929   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1193930   +
1193931   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1193932   +
1193933   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1193934   +
1193935   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1193936   +
1193937   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1193938   +
1193939   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1193940   +
1193941   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1193942   +
1193943   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1193944   +
1193945   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1193946   +
1193947   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1193948   +
1193949   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1193950   +
1193951   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1193952   +
1193953   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1193954   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1193955   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1193956   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1193957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193959   +end;
MPRINT(EM_DIAGRAM):   end;
1193960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193962   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1193963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193964   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1193965   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1193966   +   end;
MPRINT(EM_DIAGRAM):   end;
1193967   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1193968   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1193969   +   end;
MPRINT(EM_DIAGRAM):   end;
1193970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193971   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1193972   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193973   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193974   +   end;
MPRINT(EM_DIAGRAM):   end;
1193975   +end;
MPRINT(EM_DIAGRAM):   end;
1193976   +
1193977   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1193978   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1193979   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1193980   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1193981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193983   +end;
MPRINT(EM_DIAGRAM):   end;
1193984   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193985   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193986   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1193987   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193988   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1193989   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1193990   +   end;
MPRINT(EM_DIAGRAM):   end;
1193991   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1193992   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1193993   +   end;
MPRINT(EM_DIAGRAM):   end;
1193994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193995   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1193996   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193997   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193998   +   end;
MPRINT(EM_DIAGRAM):   end;
1193999   +end;
MPRINT(EM_DIAGRAM):   end;
1194000   +
1194001   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1194002   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1194003   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1194004   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1194005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194007   +end;
MPRINT(EM_DIAGRAM):   end;
1194008   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194009   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194010   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1194011   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194012   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1194013   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1194014   +   end;
MPRINT(EM_DIAGRAM):   end;
1194015   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1194016   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1194017   +   end;
MPRINT(EM_DIAGRAM):   end;
1194018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194019   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1194020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194022   +   end;
MPRINT(EM_DIAGRAM):   end;
1194023   +end;
MPRINT(EM_DIAGRAM):   end;
1194024   +
1194025   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1194026   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1194027   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1194028   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1194029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194031   +end;
MPRINT(EM_DIAGRAM):   end;
1194032   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194033   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194034   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1194035   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194036   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1194037   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1194038   +   end;
MPRINT(EM_DIAGRAM):   end;
1194039   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1194040   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1194041   +   end;
MPRINT(EM_DIAGRAM):   end;
1194042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194043   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1194044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194046   +   end;
MPRINT(EM_DIAGRAM):   end;
1194047   +end;
MPRINT(EM_DIAGRAM):   end;
1194048   +
1194049   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1194050   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1194051   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1194052   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1194053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194055   +end;
MPRINT(EM_DIAGRAM):   end;
1194056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194058   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1194059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194060   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1194061   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1194062   +   end;
MPRINT(EM_DIAGRAM):   end;
1194063   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1194064   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1194065   +   end;
MPRINT(EM_DIAGRAM):   end;
1194066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194067   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1194068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194070   +   end;
MPRINT(EM_DIAGRAM):   end;
1194071   +end;
MPRINT(EM_DIAGRAM):   end;
1194072   +
1194073   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1194074   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1194075   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1194076   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1194077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194079   +end;
MPRINT(EM_DIAGRAM):   end;
1194080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194082   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1194083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1194085   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1194086   +   end;
MPRINT(EM_DIAGRAM):   end;
1194087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1194088   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1194089   +   end;
MPRINT(EM_DIAGRAM):   end;
1194090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194091   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1194092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194094   +   end;
MPRINT(EM_DIAGRAM):   end;
1194095   +end;
MPRINT(EM_DIAGRAM):   end;
1194096   +
1194097   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1194098   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1194099   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1194100   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1194101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194103   +end;
MPRINT(EM_DIAGRAM):   end;
1194104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194106   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1194107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194108   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1194109   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1194110   +   end;
MPRINT(EM_DIAGRAM):   end;
1194111   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1194112   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1194113   +   end;
MPRINT(EM_DIAGRAM):   end;
1194114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194115   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1194116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194118   +   end;
MPRINT(EM_DIAGRAM):   end;
1194119   +end;
MPRINT(EM_DIAGRAM):   end;
1194120   +
1194121   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1194122   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1194123   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1194124   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1194125   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1194126   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1194127   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1194128   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1194129   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1194130   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1194131   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1194132   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1194133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194135   +end;
MPRINT(EM_DIAGRAM):   end;
1194136   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194137   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1194138   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1194139   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194140   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1194141   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1194142   +   end;
MPRINT(EM_DIAGRAM):   end;
1194143   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1194144   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1194145   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1194146   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1194147   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1194148   +   end;
MPRINT(EM_DIAGRAM):   end;
1194149   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1194150   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1194151   +   end;
MPRINT(EM_DIAGRAM):   end;
1194152   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1194153   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1194154   +   end;
MPRINT(EM_DIAGRAM):   end;
1194155   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1194156   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1194157   +   end;
MPRINT(EM_DIAGRAM):   end;
1194158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194159   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1194160   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1194161   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1194162   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1194163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194165   +   end;
MPRINT(EM_DIAGRAM):   end;
1194166   +end;
MPRINT(EM_DIAGRAM):   end;
1194167   +
1194168   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1194169   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1194170   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1194171   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1194172   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1194173   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1194174   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1194175   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1194176   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1194177   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1194178   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1194179   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1194180   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1194181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194183   +end;
MPRINT(EM_DIAGRAM):   end;
1194184   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194185   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1194186   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1194187   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194188   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1194189   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1194190   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1194191   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1194192   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1194193   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1194194   +         end;
MPRINT(EM_DIAGRAM):   end;
1194195   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1194196   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1194197   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1194198   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1194199   +            end;
MPRINT(EM_DIAGRAM):   end;
1194200   +         end;
MPRINT(EM_DIAGRAM):   end;
1194201   +      end;
MPRINT(EM_DIAGRAM):   end;
1194202   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1194203   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1194204   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1194205   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1194206   +         end;
MPRINT(EM_DIAGRAM):   end;
1194207   +      end;
MPRINT(EM_DIAGRAM):   end;
1194208   +   end;
MPRINT(EM_DIAGRAM):   end;
1194209   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194210   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1194211   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1194212   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1194213   +      end;
MPRINT(EM_DIAGRAM):   end;
1194214   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1194215   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1194216   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1194217   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1194218   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1194219   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1194220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1194221   +         end;
MPRINT(EM_DIAGRAM):   end;
1194222   +      end;
MPRINT(EM_DIAGRAM):   end;
1194223   +   end;
MPRINT(EM_DIAGRAM):   end;
1194224   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1194225   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1194226   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1194227   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1194228   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1194229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194231   +   end;
MPRINT(EM_DIAGRAM):   end;
1194232   +end;
MPRINT(EM_DIAGRAM):   end;
1194233   +
1194234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194235   +*** Checking missing input Interval
1194236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1194237   +
1194238   +IF NMISS(
1194239   +   AcceptedCmpTotal ,
1194240   +   Age ,
1194241   +   Frq ,
1194242   +   Income ,
1194243   +   Kidhome ,
1194244   +   Mnt ,
1194245   +   MntFishProducts ,
1194246   +   MntFruits ,
1194247   +   MntGoldProds ,
1194248   +   MntMeatProducts ,
1194249   +   MntSweetProducts ,
1194250   +   MntWines ,
1194251   +   MonthsAsCustomer ,
1194252   +   NumCatalogPurchases ,
1194253   +   NumDealsPurchases ,
1194254   +   NumDistPurchases ,
1194255   +   NumStorePurchases ,
1194256   +   NumWebPurchases ,
1194257   +   NumWebVisitsMonth ,
1194258   +   RFMstat ,
1194259   +   RMntFrq ,
1194260   +   Recency ,
1194261   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1194262   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1194263   +
1194264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194265   +END;
MPRINT(EM_DIAGRAM):   END;
1194266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194267   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1194268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194269   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194270   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1194271   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1194272   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1194273   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1194274   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1194275   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1194276   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1194277   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1194278   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1194279   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1194280   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1194281   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1194282   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1194283   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1194284   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1194285   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1194286   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1194287   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1194288   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1194289   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1194290   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1194291   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1194292   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1194293   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1194294   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1194295   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1194296   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1194297   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1194298   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1194299   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1194300   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1194301   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1194302   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1194303   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1194304   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1194305   +END;
MPRINT(EM_DIAGRAM):   END;
1194306   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194307   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1194308   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1194309   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1194310   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1194311   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1194312   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1194313   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1194314   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1194315   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1194316   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1194317   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1194318   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1194319   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1194320   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1194321   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1194322   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1194323   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1194324   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1194325   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1194326   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1194327   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1194328   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1194329   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1194330   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1194331   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1194332   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1194333   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1194334   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1194335   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1194336   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1194337   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1194338   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1194339   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1194340   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1194341   +   ELSE S_NumCatalogPurchases
1194342   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1194343   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1194344   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1194345   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1194346   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1194347   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1194348   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1194349   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1194350   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1194351   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1194352   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1194353   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1194354   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1194355   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1194356   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1194357   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1194358   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1194359   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1194360   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1194361   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1194362   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1194363   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1194364   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1194365   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1194366   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1194367   +END;
MPRINT(EM_DIAGRAM):   END;
1194368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194369   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1194370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194372   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1194373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194375   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1194376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194378   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1194379   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1194380   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1194381   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1194382   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1194383   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1194384   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1194385   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1194386   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1194387   +          +    -1.14704878034134 * S_NumDealsPurchases
1194388   +          +    -0.17763404274659 * S_NumDistPurchases
1194389   +          +     0.08894400267969 * S_NumStorePurchases
1194390   +          +     0.59283747891957 * S_NumWebPurchases
1194391   +          +     0.85268274682505 * S_NumWebVisitsMonth
1194392   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1194393   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1194394   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1194395   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1194396   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1194397   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1194398   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1194399   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1194400   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1194401   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1194402   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1194403   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1194404   +          +    -0.80841566068716 * S_NumDealsPurchases
1194405   +          +    -0.17995640033768 * S_NumDistPurchases
1194406   +          +     0.00713417460936 * S_NumStorePurchases
1194407   +          +     0.57881024323076 * S_NumWebPurchases
1194408   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1194409   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1194410   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1194411   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1194412   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1194413   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1194414   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1194415   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1194416   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1194417   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1194418   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1194419   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1194420   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1194421   +          +     0.57891364118717 * S_NumDealsPurchases
1194422   +          +    -0.31024556838688 * S_NumDistPurchases
1194423   +          +    -1.48708542986704 * S_NumStorePurchases
1194424   +          +    -0.93009875249206 * S_NumWebPurchases
1194425   +          +     2.01900039122935 * S_NumWebVisitsMonth
1194426   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1194427   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1194428   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1194429   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1194430   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1194431   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1194432   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1194433   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1194434   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1194435   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1194436   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1194437   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1194438   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1194439   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1194440   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1194441   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1194442   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1194443   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1194444   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1194445   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1194446   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1194447   +          +     0.55883606830033 * Marital_StatusDivorced
1194448   +          +    -0.54530037567066 * Marital_StatusMarried
1194449   +          +    -0.52994736075753 * Marital_StatusSingle
1194450   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1194451   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1194452   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1194453   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1194454   +          +    -1.07368484057033 * Marital_StatusDivorced
1194455   +          +     2.73313504711262 * Marital_StatusMarried
1194456   +          +    -2.18530462876058 * Marital_StatusSingle
1194457   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1194458   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1194459   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1194460   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1194461   +          +     0.49993144243043 * Marital_StatusDivorced
1194462   +          +    -0.38953339116829 * Marital_StatusMarried
1194463   +          +    -0.10836287319942 * Marital_StatusSingle
1194464   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1194465   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1194466   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1194467   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1194468   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1194469   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1194470   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194471   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1194472   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1194473   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1194474   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1194475   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1194476   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1194477   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1194478   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1194479   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1194480   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1194481   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1194482   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1194483   +END;
MPRINT(EM_DIAGRAM):   END;
1194484   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194485   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1194486   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1194487   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1194488   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1194489   +END;
MPRINT(EM_DIAGRAM):   END;
1194490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194491   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1194492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194494   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1194495   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1194496   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1194497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1194498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1194499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1194501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1194502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1194503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1194504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1194505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1194506   +END;
MPRINT(EM_DIAGRAM):   END;
1194507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1194509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1194510   +END;
MPRINT(EM_DIAGRAM):   END;
1194511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1194512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1194513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1194514   +END;
MPRINT(EM_DIAGRAM):   END;
1194515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194516   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1194517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194518   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1194519   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1194520   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1194521   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1194522   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1194523   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1194524   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1194525   +END;
MPRINT(EM_DIAGRAM):   END;
1194526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1194527   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1194528   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1194529   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1194530    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1194531    quit;
1194532    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1194533    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1194534    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1194535    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
1194536    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1194537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194538    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1194539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194541    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
1194542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194544    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194545    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1194546    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1194547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194548    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
1194549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194550    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1194551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194553    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194554    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1194555    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194556    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194557    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1194558    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1194558  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

1194559    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194560    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1194561    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194562    filename _pref
1194562  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1194563    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1194564    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1194565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194566   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1194567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194568   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1194569   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1194570   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1194571    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1194572    quit;
1194573    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1194574    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1194575    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1194576    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1194577    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1194578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1194579    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1194580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194582    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1194583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194586    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1194587    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1194588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194589    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1194590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194591    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1194592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194595    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1194596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194597    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194598    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1194599    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1194599  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1194600    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194601    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1194602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194603    filename _pref
1194603  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1194604    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1194605    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1194606   +
1194607   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1194608   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1194608  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1194609   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1194610   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1194611   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1194612   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1194613   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1194614    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1194615    quit;
1194616    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1194617    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1194618    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1194619    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1194620    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1194621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194622    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1194623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194625    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1194626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194629    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1194630    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1194631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194632    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1194633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194634    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1194635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194637    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194638    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1194639    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194640    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194641    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1194642    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1194642  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1194643    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194644    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1194645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194646    filename _pref
1194646  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1194647    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1194648    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1194649   +
1194650   +
1194651   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1194652   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1194653   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1194654   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1194655   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1194656   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194657   +
1194658   +
1194659   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1194660   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1194661   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1194662   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1194663   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1194664   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194665   +
1194666   +
1194667   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1194668   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1194669   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1194670   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1194671   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1194672   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194673   +
1194674   +
1194675   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1194676   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1194677   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1194678   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1194679   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1194680   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194681   +
1194682   +
1194683   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1194684   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1194685   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1194686   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1194687   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1194688   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194689   +
1194690   +
1194691   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1194692   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1194693   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1194694   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1194695   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1194696   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194697   +
1194698   +
1194699   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1194700   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1194701   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1194702   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1194703   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1194704   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194705   +
1194706   +
1194707   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1194708   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1194709   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1194710   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1194711   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1194712   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1194713   +if
1194714   +_FILTERNORM1 not in ( '.')
1194715   + and
1194716   +_FILTERNORM2 not in ( '.')
1194717   + and
1194718   +_FILTERNORM3 not in ( '.')
1194719   + and
1194720   +_FILTERNORM4 not in ( '.')
1194721   + and
1194722   +_FILTERNORM5 not in ( '.')
1194723   + and
1194724   +_FILTERNORM6 not in ( '.')
1194725   + and
1194726   +_FILTERNORM7 not in ( ' ')
1194727   + and
1194728   +_FILTERNORM8 not in ( ' ')
1194729   +and
1194730   +( Dt_Customer ne .)
1194731   +and ( Income ne . and (Income<=107000))
1194732   +and ( Kidhome ne .)
1194733   +and ( MntFishProducts ne .)
1194734   +and ( MntFruits ne .)
1194735   +and ( MntGoldProds ne .)
1194736   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1194737   +and ( MntSweetProducts ne .)
1194738   +and ( MntWines ne .)
1194739   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1194740   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1194741   +and ( NumStorePurchases ne .)
1194742   +and ( NumWebPurchases ne .)
1194743   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1194744   +and ( Recency ne .)
1194745   +and ( Teenhome ne .)
1194746   +and ( Year_Birth ne .)
1194747   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1194748   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1194749   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1194750   +end;
MPRINT(EM_DIAGRAM):   end;
1194751   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1194752   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1194753    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1194754    quit;
1194755    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1194756    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1194757    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1194758    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1194759    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1194760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194761    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1194762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194764    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1194765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194767    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194768    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1194769    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1194770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194771    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1194772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1194773    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1194774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1194777    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1194778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1194779    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194780    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1194781    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1194781  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1194782    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194783    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
1194784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194785    %macro varDept(fcmpdata=,id=);
1194786    %global nobs&id scoreFlag&id;
1194787    %let scoreFlag&id = 0;
1194788    %if &id=1 or ^&fcmpStart %then %do;
1194789    proc sort data=&fcmpdata out=_temp&id nodupkey;
1194790    by NAME;
1194791    where id=&id and LHS in( %let j=1;
1194792    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1194793    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1194794    "&var" %let j = %eval(&j+1);
1194795    %end;
1194796    );
1194797    run;
1194798    %let dsid = %sysfunc(open(_temp&id));
1194799    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1194800    %let dsid = %sysfunc(close(&dsid));
1194801    %if &&nobs&id %then %do;
1194802    %let scoreFlag&id = 1;
1194803    %let fcmpStart = 1;
1194804    %end;
1194805    %else %let fcmpStart = 0;
1194806    %end;
1194807    %else %do;
1194808    proc sort data=&fcmpdata out=_tempid;
1194809    where id=&id;
1194810    by LHS;
1194811    run;
1194812    %let dsid = %sysfunc(open(_tempid));
1194813    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1194814    %let dsid = %sysfunc(close(&dsid));
1194815    %if ^&&nobs&id %then %do;
1194816    proc datasets lib=work nolist;
1194817    delete _tempid;
1194818    run;
1194819    quit;
1194820    %end;
1194821    %else %do;
1194822    data _tempAll;
1194823    set %let j=%eval(&id-1);
1194824    %do x=1 %to &j;
1194825    %if &&nobs&x %then %do;
1194826    _temp&x %end;
1194827    %end;
1194828    ;
1194829    run;
1194830    proc sql;
1194831    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1194831  ! work._tempid p2 where p.name=p2.lhs;
1194832    quit;
1194833    data _temp&id;
1194834    set _temp&id;
1194835    where LHS ne '' and NAME ne '' and Node ne '';
1194836    run;
1194837    proc datasets lib=work nolist;
1194838    delete _tempAll;
1194839    run;
1194840    %let dsid = %sysfunc(open(_temp&id));
1194841    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1194842    %let dsid = %sysfunc(close(&dsid));
1194843    %if ^&&nobs&id %then %do;
1194844    proc datasets lib=work nolist;
1194845    delete _temp&id;
1194846    run;
1194847    quit;
1194848    %end;
1194849    %else %do;
1194850    %let scoreFlag&id = 1;
1194851    data _temp&id;
1194852    set _temp&id;
1194853    where LHS ne NAME and node ne '';
1194854    run;
1194855    %let dsid = %sysfunc(open(_temp&id));
1194856    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1194857    %let dsid = %sysfunc(close(&dsid));
1194858    %if ^&&nobs&id %then %do;
1194859    proc datasets lib=work nolist;
1194860    delete _temp&id;
1194861    run;
1194862    quit;
1194863    %end;
1194864    %else %do;
1194865    proc sort data=_temp&id nodupkey;
1194866    by LHS NAME;
1194867    run;
1194868    %end;
1194869    %end;
1194870    %end;
1194871    %end;
1194872    %mend varDept;
1194873    %macro optCode(outdata=fcmpdata);
1194874    %global fcmpStart;
1194875    %let fcmpStart = 0;
1194876    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1194877    %let NumNodes=9;
1194878    %do k=1 %to &NumNodes;
1194879    %vardept(fcmpdata=&outdata, id=&k);
1194880    %end;
1194881    %mend optCode;
1194882    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1194883    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1194884    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1194885    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1194886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194887    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1194888    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1194889    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1194890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194891    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1194892    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1194892  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1194893    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1194894    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1194895    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1194896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1194897    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1194898    * Ensmbl43: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing metadata for TRAIN data;
1194899    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl43_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl43_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl43_TRAIN out=WORK.M146BEYH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M146BEYH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M146BEYH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M146BEYH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M146BEYH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M00B313J NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PENL6B(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   set WORK.M00B313J;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl43";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl43";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1195219    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1195220    set EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO;
1195221    where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1195222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_EMINFO.
      WHERE (DATA='Ensmbl43') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1195223    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl43_EMINFO;
1195224    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1195225    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1195226    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1195230    run;
1195231    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
1195232    set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
1195233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1195234    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
1195235    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1195237    proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
1195238    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195239    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1195240    proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1195241    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1195243    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
1195244    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1195245    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1195247    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1195248    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1195249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1195250    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL43_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
