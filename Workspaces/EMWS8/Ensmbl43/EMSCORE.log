MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QOJRWI 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QOJRWI new;
MPRINT(EM_DIAGRAM):   run;
2371254    filename emflow
2371254  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371255    *------------------------------------------------------------*;
2371256    * Ensmbl43: Scoring AUTONEURAL9_TRAIN data;
2371257    *------------------------------------------------------------*;
2371258    data EMWS8.Ensmbl43_TRAIN
2371259    / view=EMWS8.Ensmbl43_TRAIN
2371260    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_TRAIN / view=EMWS8.Ensmbl43_TRAIN ;
2371261    set EMWS8.AutoNeural9_TRAIN
2371262    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2371263    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
2371264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371265   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
2371266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371267   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
2371268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371270   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2371271   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2371272   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2371273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371275   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2371276   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2371277   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2371278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371280   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2371281   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2371282   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2371283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371285   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2371286   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2371287   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2371288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371289   +
2371290   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2371291   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2371291  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2371292   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2371293   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2371294   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2371295   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2371296   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2371297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371298   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2371299   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2371300   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2371301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371303   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2371304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371305   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2371306   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2371307   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2371308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371309   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2371310   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2371311   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2371312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371314   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2371315   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2371316   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2371317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371319   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2371320   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2371321   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2371322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2371323   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2371324   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2371325   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2371326   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2371327   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2371328   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2371329   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2371330   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2371331   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2371332   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2371333   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2371334   +LENGTH _WARN_ $4
2371335   +      F_DepVar  $ 12
2371336   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2371337   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2371338   +
2371339   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2371340   +
2371341   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2371342   +
2371343   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2371344   +
2371345   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2371346   +
2371347   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2371348   +
2371349   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2371350   +
2371351   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2371352   +
2371353   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2371354   +
2371355   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2371356   +
2371357   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2371358   +
2371359   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2371360   +
2371361   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2371362   +
2371363   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2371364   +
2371365   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2371366   +
2371367   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2371368   +
2371369   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2371370   +
2371371   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2371372   +
2371373   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2371374   +
2371375   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2371376   +
2371377   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2371378   +
2371379   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2371380   +
2371381   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2371382   +
2371383   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2371384   +
2371385   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2371386   +
2371387   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2371388   +
2371389   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2371390   +
2371391   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2371392   +
2371393   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2371394   +
2371395   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2371396   +
2371397   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2371398   +
2371399   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2371400   +
2371401   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2371402   +
2371403   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2371404   +
2371405   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2371406   +
2371407   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2371408   +
2371409   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2371410   +
2371411   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2371412   +
2371413   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2371414   +
2371415   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2371416   +
2371417   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2371418   +
2371419   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2371420   +
2371421   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2371422   +
2371423   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2371424   +
2371425   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2371426   +
2371427   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2371428   +
2371429   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2371430   +
2371431   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2371432   +
2371433   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2371434   +
2371435   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2371436   +
2371437   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2371438   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2371439   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2371440   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2371441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371443   +end;
MPRINT(EM_DIAGRAM):   end;
2371444   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371446   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2371447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371448   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371449   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2371450   +   end;
MPRINT(EM_DIAGRAM):   end;
2371451   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371452   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2371453   +   end;
MPRINT(EM_DIAGRAM):   end;
2371454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371455   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2371456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371458   +   end;
MPRINT(EM_DIAGRAM):   end;
2371459   +end;
MPRINT(EM_DIAGRAM):   end;
2371460   +
2371461   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2371462   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2371463   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2371464   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2371465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371467   +end;
MPRINT(EM_DIAGRAM):   end;
2371468   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371470   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2371471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371472   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371473   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2371474   +   end;
MPRINT(EM_DIAGRAM):   end;
2371475   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371476   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2371477   +   end;
MPRINT(EM_DIAGRAM):   end;
2371478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371479   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2371480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371482   +   end;
MPRINT(EM_DIAGRAM):   end;
2371483   +end;
MPRINT(EM_DIAGRAM):   end;
2371484   +
2371485   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2371486   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2371487   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2371488   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2371489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371491   +end;
MPRINT(EM_DIAGRAM):   end;
2371492   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371494   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2371495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371496   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371497   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2371498   +   end;
MPRINT(EM_DIAGRAM):   end;
2371499   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371500   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2371501   +   end;
MPRINT(EM_DIAGRAM):   end;
2371502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371503   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2371504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371506   +   end;
MPRINT(EM_DIAGRAM):   end;
2371507   +end;
MPRINT(EM_DIAGRAM):   end;
2371508   +
2371509   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2371510   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2371511   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2371512   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2371513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371515   +end;
MPRINT(EM_DIAGRAM):   end;
2371516   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371518   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2371519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371520   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371521   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2371522   +   end;
MPRINT(EM_DIAGRAM):   end;
2371523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371524   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2371525   +   end;
MPRINT(EM_DIAGRAM):   end;
2371526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371527   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2371528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371530   +   end;
MPRINT(EM_DIAGRAM):   end;
2371531   +end;
MPRINT(EM_DIAGRAM):   end;
2371532   +
2371533   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2371534   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2371535   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2371536   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2371537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371539   +end;
MPRINT(EM_DIAGRAM):   end;
2371540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371542   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2371543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371545   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2371546   +   end;
MPRINT(EM_DIAGRAM):   end;
2371547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371548   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2371549   +   end;
MPRINT(EM_DIAGRAM):   end;
2371550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371551   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2371552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371554   +   end;
MPRINT(EM_DIAGRAM):   end;
2371555   +end;
MPRINT(EM_DIAGRAM):   end;
2371556   +
2371557   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2371558   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2371559   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2371560   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2371561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371563   +end;
MPRINT(EM_DIAGRAM):   end;
2371564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371566   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2371567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2371569   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2371570   +   end;
MPRINT(EM_DIAGRAM):   end;
2371571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2371572   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2371573   +   end;
MPRINT(EM_DIAGRAM):   end;
2371574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371575   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2371576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371578   +   end;
MPRINT(EM_DIAGRAM):   end;
2371579   +end;
MPRINT(EM_DIAGRAM):   end;
2371580   +
2371581   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2371582   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2371583   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2371584   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2371585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371587   +end;
MPRINT(EM_DIAGRAM):   end;
2371588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2371590   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2371591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371592   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2371593   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2371594   +   end;
MPRINT(EM_DIAGRAM):   end;
2371595   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2371596   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2371597   +   end;
MPRINT(EM_DIAGRAM):   end;
2371598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371599   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2371600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371602   +   end;
MPRINT(EM_DIAGRAM):   end;
2371603   +end;
MPRINT(EM_DIAGRAM):   end;
2371604   +
2371605   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2371606   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2371607   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2371608   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2371609   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2371610   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2371611   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2371612   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2371613   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2371614   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2371615   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2371616   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2371617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371619   +end;
MPRINT(EM_DIAGRAM):   end;
2371620   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371621   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2371622   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2371623   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371624   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2371625   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2371626   +   end;
MPRINT(EM_DIAGRAM):   end;
2371627   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2371628   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2371629   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2371630   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2371631   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2371632   +   end;
MPRINT(EM_DIAGRAM):   end;
2371633   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2371634   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2371635   +   end;
MPRINT(EM_DIAGRAM):   end;
2371636   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2371637   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2371638   +   end;
MPRINT(EM_DIAGRAM):   end;
2371639   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2371640   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2371641   +   end;
MPRINT(EM_DIAGRAM):   end;
2371642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371643   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2371644   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2371645   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2371646   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2371647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371649   +   end;
MPRINT(EM_DIAGRAM):   end;
2371650   +end;
MPRINT(EM_DIAGRAM):   end;
2371651   +
2371652   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2371653   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2371654   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2371655   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2371656   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2371657   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2371658   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2371659   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2371660   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2371661   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2371662   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2371663   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2371664   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2371665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2371666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371667   +end;
MPRINT(EM_DIAGRAM):   end;
2371668   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371669   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2371670   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2371671   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371672   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2371673   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2371674   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2371675   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2371676   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2371677   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2371678   +         end;
MPRINT(EM_DIAGRAM):   end;
2371679   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2371680   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2371681   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2371682   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2371683   +            end;
MPRINT(EM_DIAGRAM):   end;
2371684   +         end;
MPRINT(EM_DIAGRAM):   end;
2371685   +      end;
MPRINT(EM_DIAGRAM):   end;
2371686   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2371687   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2371688   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2371689   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2371690   +         end;
MPRINT(EM_DIAGRAM):   end;
2371691   +      end;
MPRINT(EM_DIAGRAM):   end;
2371692   +   end;
MPRINT(EM_DIAGRAM):   end;
2371693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371694   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2371695   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2371696   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2371697   +      end;
MPRINT(EM_DIAGRAM):   end;
2371698   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2371699   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2371700   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2371701   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2371702   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2371703   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2371704   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2371705   +         end;
MPRINT(EM_DIAGRAM):   end;
2371706   +      end;
MPRINT(EM_DIAGRAM):   end;
2371707   +   end;
MPRINT(EM_DIAGRAM):   end;
2371708   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2371709   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2371710   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2371711   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2371712   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2371713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2371714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371715   +   end;
MPRINT(EM_DIAGRAM):   end;
2371716   +end;
MPRINT(EM_DIAGRAM):   end;
2371717   +
2371718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371719   +*** Checking missing input Interval
2371720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2371721   +
2371722   +IF NMISS(
2371723   +   AcceptedCmpTotal ,
2371724   +   Age ,
2371725   +   Frq ,
2371726   +   Income ,
2371727   +   Kidhome ,
2371728   +   Mnt ,
2371729   +   MntFishProducts ,
2371730   +   MntFruits ,
2371731   +   MntGoldProds ,
2371732   +   MntMeatProducts ,
2371733   +   MntSweetProducts ,
2371734   +   MntWines ,
2371735   +   MonthsAsCustomer ,
2371736   +   NumCatalogPurchases ,
2371737   +   NumDealsPurchases ,
2371738   +   NumDistPurchases ,
2371739   +   NumStorePurchases ,
2371740   +   NumWebPurchases ,
2371741   +   NumWebVisitsMonth ,
2371742   +   RFMstat ,
2371743   +   RMntFrq ,
2371744   +   Recency ,
2371745   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2371746   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2371747   +
2371748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2371749   +END;
MPRINT(EM_DIAGRAM):   END;
2371750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371751   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2371752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371753   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2371754   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2371755   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2371756   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2371757   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2371758   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2371759   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2371760   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2371761   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2371762   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2371763   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2371764   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2371765   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2371766   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2371767   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2371768   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2371769   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2371770   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2371771   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2371772   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2371773   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2371774   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2371775   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2371776   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2371777   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2371778   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2371779   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2371780   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2371781   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2371782   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2371783   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2371784   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2371785   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2371786   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2371787   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2371788   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2371789   +END;
MPRINT(EM_DIAGRAM):   END;
2371790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2371791   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2371792   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2371793   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2371794   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2371795   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2371796   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2371797   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2371798   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2371799   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2371800   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2371801   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2371802   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2371803   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2371804   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2371805   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2371806   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2371807   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2371808   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2371809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2371810   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2371811   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2371812   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2371813   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2371814   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2371815   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2371816   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2371817   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2371818   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2371819   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2371820   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2371821   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2371822   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2371823   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2371824   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2371825   +   ELSE S_NumCatalogPurchases
2371826   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2371827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2371828   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2371829   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2371830   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2371831   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2371832   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2371833   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2371834   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2371835   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2371836   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2371837   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2371838   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2371839   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2371840   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2371841   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2371842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2371843   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2371844   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2371845   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2371846   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2371847   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2371848   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2371849   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2371850   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2371851   +END;
MPRINT(EM_DIAGRAM):   END;
2371852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371853   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2371854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371856   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2371857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371859   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2371860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2371862   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2371863   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2371864   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2371865   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2371866   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2371867   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2371868   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2371869   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2371870   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2371871   +          +    -1.12130210731541 * S_NumDealsPurchases
2371872   +          +    -0.12343505299726 * S_NumDistPurchases
2371873   +          +     0.11863092868196 * S_NumStorePurchases
2371874   +          +       0.583917993314 * S_NumWebPurchases
2371875   +          +     0.75529732848146 * S_NumWebVisitsMonth
2371876   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2371877   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2371878   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2371879   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2371880   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2371881   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2371882   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2371883   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2371884   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2371885   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2371886   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2371887   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2371888   +          +    -0.84113790640734 * S_NumDealsPurchases
2371889   +          +    -0.10512672747147 * S_NumDistPurchases
2371890   +          +     0.07268711782494 * S_NumStorePurchases
2371891   +          +     0.57578331257439 * S_NumWebPurchases
2371892   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2371893   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2371894   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2371895   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2371896   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2371897   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2371898   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2371899   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2371900   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2371901   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2371902   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2371903   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2371904   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2371905   +          +     0.45924983504762 * S_NumDealsPurchases
2371906   +          +    -0.25508041581692 * S_NumDistPurchases
2371907   +          +    -1.34901283858526 * S_NumStorePurchases
2371908   +          +    -0.86388975031663 * S_NumWebPurchases
2371909   +          +     1.86136110391797 * S_NumWebVisitsMonth
2371910   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2371911   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2371912   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2371913   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2371914   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2371915   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2371916   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2371917   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2371918   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2371919   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2371920   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2371921   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2371922   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2371923   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2371924   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2371925   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2371926   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2371927   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2371928   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2371929   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2371930   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2371931   +          +     0.48853068455666 * Marital_StatusDivorced
2371932   +          +    -0.54903474026465 * Marital_StatusMarried
2371933   +          +    -0.34079188373939 * Marital_StatusSingle
2371934   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2371935   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2371936   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2371937   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2371938   +          +    -1.03547689902027 * Marital_StatusDivorced
2371939   +          +     2.42164864610471 * Marital_StatusMarried
2371940   +          +    -1.95342561304942 * Marital_StatusSingle
2371941   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2371942   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2371943   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2371944   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2371945   +          +      0.4337638747935 * Marital_StatusDivorced
2371946   +          +    -0.38508657017615 * Marital_StatusMarried
2371947   +          +     -0.0160269708326 * Marital_StatusSingle
2371948   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2371949   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2371950   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2371951   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2371952   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2371953   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2371954   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2371955   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2371956   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2371957   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2371958   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2371959   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2371960   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2371961   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2371962   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2371963   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2371964   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2371965   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2371966   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2371967   +END;
MPRINT(EM_DIAGRAM):   END;
2371968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2371969   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2371970   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2371971   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2371972   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2371973   +END;
MPRINT(EM_DIAGRAM):   END;
2371974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371975   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2371976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2371977   +
2371978   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2371979   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2371980   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2371981   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2371982   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2371983   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2371984   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2371985   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2371986   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2371987   +end;
MPRINT(EM_DIAGRAM):   end;
2371988   +else do;
MPRINT(EM_DIAGRAM):   else do;
2371989   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2371990   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2371991   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2371992   +   end;
MPRINT(EM_DIAGRAM):   end;
2371993   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2371994   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2371995   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2371996   +   end;
MPRINT(EM_DIAGRAM):   end;
2371997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2371998   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2371999   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2372000   +   end;
MPRINT(EM_DIAGRAM):   end;
2372001   +end;
MPRINT(EM_DIAGRAM):   end;
2372002   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2372003   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2372004   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2372005   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2372006   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2372007   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2372008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2372009   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2372010   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2372011   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2372012   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2372013   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2372014   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2372015   +END;
MPRINT(EM_DIAGRAM):   END;
2372016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2372017   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2372018   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2372019   +END;
MPRINT(EM_DIAGRAM):   END;
2372020   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2372021   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2372022   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2372023   +END;
MPRINT(EM_DIAGRAM):   END;
2372024   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2372025   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2372026   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2372027   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2372028   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2372029   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2372030   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2372031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372032   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2372033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372034   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2372035   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2372036   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2372037   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2372038   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2372039   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2372040   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2372041   +END;
MPRINT(EM_DIAGRAM):   END;
2372042   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2372043   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2372044   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2372045   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2372046   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2372047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372048   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2372049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372050   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2372051   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2372052   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2372053   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2372054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372055   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2372056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372057   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2372058   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2372059   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2372060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372061   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
2372062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372064   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2372065   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2372066   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2372067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2372068   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2372069   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2372070   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2372071   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2372072   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2372073   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2372074   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2372075   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2372076   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2372077   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2372078   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2372079   +LENGTH _WARN_ $4
2372080   +      F_DepVar  $ 12
2372081   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2372082   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2372083   +
2372084   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2372085   +
2372086   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2372087   +
2372088   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2372089   +
2372090   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2372091   +
2372092   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2372093   +
2372094   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2372095   +
2372096   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2372097   +
2372098   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2372099   +
2372100   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2372101   +
2372102   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2372103   +
2372104   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2372105   +
2372106   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2372107   +
2372108   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2372109   +
2372110   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2372111   +
2372112   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2372113   +
2372114   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2372115   +
2372116   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2372117   +
2372118   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2372119   +
2372120   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2372121   +
2372122   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2372123   +
2372124   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2372125   +
2372126   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2372127   +
2372128   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2372129   +
2372130   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2372131   +
2372132   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2372133   +
2372134   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2372135   +
2372136   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2372137   +
2372138   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2372139   +
2372140   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2372141   +
2372142   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2372143   +
2372144   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2372145   +
2372146   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2372147   +
2372148   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2372149   +
2372150   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2372151   +
2372152   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2372153   +
2372154   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2372155   +
2372156   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2372157   +
2372158   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2372159   +
2372160   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2372161   +
2372162   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2372163   +
2372164   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2372165   +
2372166   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2372167   +
2372168   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2372169   +
2372170   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2372171   +
2372172   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2372173   +
2372174   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2372175   +
2372176   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2372177   +
2372178   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2372179   +
2372180   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2372181   +
2372182   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2372183   +
2372184   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2372185   +
2372186   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2372187   +
2372188   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2372189   +
2372190   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2372191   +
2372192   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2372193   +
2372194   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2372195   +
2372196   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2372197   +
2372198   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2372199   +
2372200   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2372201   +
2372202   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2372203   +
2372204   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2372205   +
2372206   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2372207   +
2372208   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2372209   +
2372210   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2372211   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2372212   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2372213   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2372214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372216   +end;
MPRINT(EM_DIAGRAM):   end;
2372217   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372219   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2372220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372221   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372222   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2372223   +   end;
MPRINT(EM_DIAGRAM):   end;
2372224   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372225   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2372226   +   end;
MPRINT(EM_DIAGRAM):   end;
2372227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372228   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2372229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372231   +   end;
MPRINT(EM_DIAGRAM):   end;
2372232   +end;
MPRINT(EM_DIAGRAM):   end;
2372233   +
2372234   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2372235   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2372236   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2372237   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2372238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372240   +end;
MPRINT(EM_DIAGRAM):   end;
2372241   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372242   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372243   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2372244   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372245   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372246   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2372247   +   end;
MPRINT(EM_DIAGRAM):   end;
2372248   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372249   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2372250   +   end;
MPRINT(EM_DIAGRAM):   end;
2372251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372252   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2372253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372255   +   end;
MPRINT(EM_DIAGRAM):   end;
2372256   +end;
MPRINT(EM_DIAGRAM):   end;
2372257   +
2372258   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2372259   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2372260   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2372261   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2372262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372264   +end;
MPRINT(EM_DIAGRAM):   end;
2372265   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372267   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2372268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372270   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2372271   +   end;
MPRINT(EM_DIAGRAM):   end;
2372272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372273   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2372274   +   end;
MPRINT(EM_DIAGRAM):   end;
2372275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372276   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2372277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372279   +   end;
MPRINT(EM_DIAGRAM):   end;
2372280   +end;
MPRINT(EM_DIAGRAM):   end;
2372281   +
2372282   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2372283   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2372284   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2372285   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2372286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372288   +end;
MPRINT(EM_DIAGRAM):   end;
2372289   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372291   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2372292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372293   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372294   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2372295   +   end;
MPRINT(EM_DIAGRAM):   end;
2372296   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372297   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2372298   +   end;
MPRINT(EM_DIAGRAM):   end;
2372299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372300   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2372301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372303   +   end;
MPRINT(EM_DIAGRAM):   end;
2372304   +end;
MPRINT(EM_DIAGRAM):   end;
2372305   +
2372306   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2372307   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2372308   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2372309   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2372310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372312   +end;
MPRINT(EM_DIAGRAM):   end;
2372313   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372315   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2372316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372317   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372318   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2372319   +   end;
MPRINT(EM_DIAGRAM):   end;
2372320   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372321   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2372322   +   end;
MPRINT(EM_DIAGRAM):   end;
2372323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372324   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2372325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372327   +   end;
MPRINT(EM_DIAGRAM):   end;
2372328   +end;
MPRINT(EM_DIAGRAM):   end;
2372329   +
2372330   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2372331   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2372332   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2372333   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2372334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372336   +end;
MPRINT(EM_DIAGRAM):   end;
2372337   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372339   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2372340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372341   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2372342   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2372343   +   end;
MPRINT(EM_DIAGRAM):   end;
2372344   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2372345   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2372346   +   end;
MPRINT(EM_DIAGRAM):   end;
2372347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372348   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2372349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372351   +   end;
MPRINT(EM_DIAGRAM):   end;
2372352   +end;
MPRINT(EM_DIAGRAM):   end;
2372353   +
2372354   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2372355   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2372356   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2372357   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2372358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372360   +end;
MPRINT(EM_DIAGRAM):   end;
2372361   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2372363   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2372364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372365   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2372366   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2372367   +   end;
MPRINT(EM_DIAGRAM):   end;
2372368   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2372369   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2372370   +   end;
MPRINT(EM_DIAGRAM):   end;
2372371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372372   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2372373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372375   +   end;
MPRINT(EM_DIAGRAM):   end;
2372376   +end;
MPRINT(EM_DIAGRAM):   end;
2372377   +
2372378   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2372379   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2372380   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2372381   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2372382   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2372383   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2372384   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2372385   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2372386   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2372387   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2372388   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2372389   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2372390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372392   +end;
MPRINT(EM_DIAGRAM):   end;
2372393   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372394   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2372395   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2372396   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372397   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2372398   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2372399   +   end;
MPRINT(EM_DIAGRAM):   end;
2372400   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2372401   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2372402   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2372403   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2372404   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2372405   +   end;
MPRINT(EM_DIAGRAM):   end;
2372406   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2372407   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2372408   +   end;
MPRINT(EM_DIAGRAM):   end;
2372409   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2372410   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2372411   +   end;
MPRINT(EM_DIAGRAM):   end;
2372412   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2372413   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2372414   +   end;
MPRINT(EM_DIAGRAM):   end;
2372415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372416   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2372417   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2372418   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2372419   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2372420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372422   +   end;
MPRINT(EM_DIAGRAM):   end;
2372423   +end;
MPRINT(EM_DIAGRAM):   end;
2372424   +
2372425   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2372426   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2372427   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2372428   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2372429   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2372430   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2372431   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2372432   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2372433   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2372434   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2372435   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2372436   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2372437   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2372438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2372439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372440   +end;
MPRINT(EM_DIAGRAM):   end;
2372441   +else do;
MPRINT(EM_DIAGRAM):   else do;
2372442   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2372443   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2372444   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2372445   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2372446   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2372447   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2372448   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2372449   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2372450   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2372451   +         end;
MPRINT(EM_DIAGRAM):   end;
2372452   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2372453   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2372454   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2372455   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2372456   +            end;
MPRINT(EM_DIAGRAM):   end;
2372457   +         end;
MPRINT(EM_DIAGRAM):   end;
2372458   +      end;
MPRINT(EM_DIAGRAM):   end;
2372459   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2372460   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2372461   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2372462   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2372463   +         end;
MPRINT(EM_DIAGRAM):   end;
2372464   +      end;
MPRINT(EM_DIAGRAM):   end;
2372465   +   end;
MPRINT(EM_DIAGRAM):   end;
2372466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2372467   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2372468   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2372469   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2372470   +      end;
MPRINT(EM_DIAGRAM):   end;
2372471   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2372472   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2372473   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2372474   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2372475   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2372476   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2372477   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2372478   +         end;
MPRINT(EM_DIAGRAM):   end;
2372479   +      end;
MPRINT(EM_DIAGRAM):   end;
2372480   +   end;
MPRINT(EM_DIAGRAM):   end;
2372481   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2372482   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2372483   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2372484   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2372485   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2372486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2372487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372488   +   end;
MPRINT(EM_DIAGRAM):   end;
2372489   +end;
MPRINT(EM_DIAGRAM):   end;
2372490   +
2372491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372492   +*** Checking missing input Interval
2372493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2372494   +
2372495   +IF NMISS(
2372496   +   AcceptedCmpTotal ,
2372497   +   Age ,
2372498   +   Frq ,
2372499   +   Income ,
2372500   +   Kidhome ,
2372501   +   Mnt ,
2372502   +   MntFishProducts ,
2372503   +   MntFruits ,
2372504   +   MntGoldProds ,
2372505   +   MntMeatProducts ,
2372506   +   MntSweetProducts ,
2372507   +   MntWines ,
2372508   +   MonthsAsCustomer ,
2372509   +   NumCatalogPurchases ,
2372510   +   NumDealsPurchases ,
2372511   +   NumDistPurchases ,
2372512   +   NumStorePurchases ,
2372513   +   NumWebPurchases ,
2372514   +   NumWebVisitsMonth ,
2372515   +   RFMstat ,
2372516   +   RMntFrq ,
2372517   +   Recency ,
2372518   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2372519   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2372520   +
2372521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2372522   +END;
MPRINT(EM_DIAGRAM):   END;
2372523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372524   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2372525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2372527   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2372528   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2372529   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2372530   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2372531   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2372532   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2372533   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2372534   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2372535   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2372536   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2372537   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2372538   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2372539   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2372540   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2372541   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2372542   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2372543   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2372544   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2372545   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2372546   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2372547   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2372548   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2372549   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2372550   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2372551   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2372552   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2372553   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2372554   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2372555   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2372556   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2372557   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2372558   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2372559   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2372560   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2372561   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2372562   +END;
MPRINT(EM_DIAGRAM):   END;
2372563   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2372564   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2372565   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2372566   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2372567   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2372568   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2372569   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2372570   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2372571   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2372572   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2372573   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2372574   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2372575   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2372576   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2372577   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2372578   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2372579   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2372580   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2372581   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2372582   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2372583   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2372584   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2372585   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2372586   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2372587   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2372588   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2372589   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2372590   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2372591   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2372592   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2372593   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2372594   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2372595   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2372596   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2372597   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2372598   +   ELSE S_NumCatalogPurchases
2372599   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2372600   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2372601   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2372602   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2372603   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2372604   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2372605   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2372606   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2372607   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2372608   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2372609   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2372610   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2372611   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2372612   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2372613   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2372614   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2372615   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2372616   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2372617   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2372618   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2372619   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2372620   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2372621   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2372622   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2372623   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2372624   +END;
MPRINT(EM_DIAGRAM):   END;
2372625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372626   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2372627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372629   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2372630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372632   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2372633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372634   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2372635   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2372636   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2372637   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2372638   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2372639   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2372640   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2372641   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2372642   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2372643   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2372644   +          +     1.32037113020393 * S_NumDealsPurchases
2372645   +          +     0.42879249227132 * S_NumDistPurchases
2372646   +          +    -0.89190172778783 * S_NumStorePurchases
2372647   +          +    -0.87975442613962 * S_NumWebPurchases
2372648   +          +     2.98977282825831 * S_NumWebVisitsMonth
2372649   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2372650   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2372651   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2372652   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2372653   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2372654   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2372655   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2372656   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2372657   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2372658   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2372659   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2372660   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2372661   +          +    -1.16737670931605 * S_NumDealsPurchases
2372662   +          +     0.08205195039242 * S_NumDistPurchases
2372663   +          +    -0.65367044520084 * S_NumStorePurchases
2372664   +          +     2.39693083674757 * S_NumWebPurchases
2372665   +          +     0.18432526469897 * S_NumWebVisitsMonth
2372666   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2372667   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2372668   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2372669   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2372670   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2372671   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2372672   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2372673   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2372674   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2372675   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2372676   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2372677   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2372678   +          +     0.76616480025024 * S_NumDealsPurchases
2372679   +          +     0.42823368706255 * S_NumDistPurchases
2372680   +          +    -1.16998364854907 * S_NumStorePurchases
2372681   +          +     -1.0841896541746 * S_NumWebPurchases
2372682   +          +     2.74837744375079 * S_NumWebVisitsMonth
2372683   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2372684   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2372685   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2372686   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2372687   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2372688   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2372689   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2372690   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2372691   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2372692   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2372693   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2372694   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2372695   +          +     0.78421010501058 * S_NumDealsPurchases
2372696   +          +     0.01075885160671 * S_NumDistPurchases
2372697   +          +    -1.99395040717832 * S_NumStorePurchases
2372698   +          +    -1.02908330834262 * S_NumWebPurchases
2372699   +          +     2.79163466516477 * S_NumWebVisitsMonth
2372700   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2372701   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2372702   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2372703   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2372704   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2372705   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2372706   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2372707   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2372708   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2372709   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2372710   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2372711   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2372712   +          +    -1.04219068390022 * S_NumDealsPurchases
2372713   +          +    -0.45770204483973 * S_NumDistPurchases
2372714   +          +    -0.04941442229195 * S_NumStorePurchases
2372715   +          +     0.67187353161183 * S_NumWebPurchases
2372716   +          +     2.01907760553871 * S_NumWebVisitsMonth
2372717   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2372718   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2372719   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2372720   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2372721   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2372722   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2372723   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2372724   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2372725   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2372726   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2372727   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2372728   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2372729   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2372730   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2372731   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2372732   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2372733   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2372734   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2372735   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2372736   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2372737   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2372738   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2372739   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2372740   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2372741   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2372742   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2372743   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2372744   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2372745   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2372746   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2372747   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2372748   +          +     2.58907527032049 * Marital_StatusDivorced
2372749   +          +    -2.45549008158921 * Marital_StatusMarried
2372750   +          +     2.56223650840768 * Marital_StatusSingle
2372751   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2372752   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2372753   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2372754   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2372755   +          +     0.83917299191368 * Marital_StatusDivorced
2372756   +          +    -0.62624692699191 * Marital_StatusMarried
2372757   +          +    -0.22585060624911 * Marital_StatusSingle
2372758   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2372759   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2372760   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2372761   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2372762   +          +    -0.65063506696715 * Marital_StatusDivorced
2372763   +          +    -2.37495865381256 * Marital_StatusMarried
2372764   +          +    -0.54954654146904 * Marital_StatusSingle
2372765   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2372766   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2372767   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2372768   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2372769   +          +     0.16185824798364 * Marital_StatusDivorced
2372770   +          +    -0.08142416735136 * Marital_StatusMarried
2372771   +          +    -0.20392270385969 * Marital_StatusSingle
2372772   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2372773   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2372774   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2372775   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2372776   +          +      -0.516522631078 * Marital_StatusDivorced
2372777   +          +    -0.61661247789976 * Marital_StatusMarried
2372778   +          +    -0.99533130308294 * Marital_StatusSingle
2372779   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2372780   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2372781   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2372782   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2372783   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2372784   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2372785   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2372786   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2372787   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2372788   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2372789   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2372790   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2372791   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2372792   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2372793   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2372794   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2372795   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2372796   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2372797   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2372798   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2372799   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2372800   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2372801   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2372802   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2372803   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2372804   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2372805   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2372806   +END;
MPRINT(EM_DIAGRAM):   END;
2372807   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2372808   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2372809   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2372810   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2372811   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2372812   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2372813   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2372814   +END;
MPRINT(EM_DIAGRAM):   END;
2372815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372816   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2372817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2372818   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2372819   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2372820   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2372821   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2372822   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2372823   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2372824   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2372825   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2372826   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2372827   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2372828   +          +    -0.03801022287706 * S_NumDealsPurchases
2372829   +          +    -1.50723574966419 * S_NumDistPurchases
2372830   +          +    -0.21514545448485 * S_NumStorePurchases
2372831   +          +    -0.50179555233865 * S_NumWebPurchases
2372832   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2372833   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2372834   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2372835   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2372836   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2372837   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2372838   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2372839   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2372840   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2372841   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2372842   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2372843   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2372844   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2372845   +          +     0.70551335536975 * S_NumDealsPurchases
2372846   +          +     0.02824488988803 * S_NumDistPurchases
2372847   +          +    -0.47958123842808 * S_NumStorePurchases
2372848   +          +     1.04559003239583 * S_NumWebPurchases
2372849   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2372850   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2372851   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2372852   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2372853   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2372854   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2372855   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2372856   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2372857   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2372858   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2372859   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2372860   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2372861   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2372862   +          +    -0.28907339261907 * S_NumDealsPurchases
2372863   +          +     0.04310505858352 * S_NumDistPurchases
2372864   +          +    -0.99594604666889 * S_NumStorePurchases
2372865   +          +    -0.58870940220114 * S_NumWebPurchases
2372866   +          +     0.84018399925148 * S_NumWebVisitsMonth
2372867   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2372868   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2372869   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2372870   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2372871   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2372872   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2372873   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2372874   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2372875   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2372876   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2372877   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2372878   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2372879   +          +     0.52917289878604 * S_NumDealsPurchases
2372880   +          +     0.30974142545809 * S_NumDistPurchases
2372881   +          +    -0.36081450643799 * S_NumStorePurchases
2372882   +          +    -0.28418053386759 * S_NumWebPurchases
2372883   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2372884   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2372885   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2372886   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2372887   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2372888   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2372889   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2372890   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2372891   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2372892   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2372893   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2372894   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2372895   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2372896   +          +    -0.47500053723253 * S_NumDealsPurchases
2372897   +          +     0.41421086319635 * S_NumDistPurchases
2372898   +          +     0.69664835428137 * S_NumStorePurchases
2372899   +          +     0.66359306812968 * S_NumWebPurchases
2372900   +          +     0.77931462528741 * S_NumWebVisitsMonth
2372901   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2372902   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2372903   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2372904   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2372905   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2372906   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2372907   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2372908   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2372909   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2372910   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2372911   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2372912   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2372913   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2372914   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2372915   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2372916   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2372917   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2372918   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2372919   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2372920   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2372921   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2372922   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2372923   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2372924   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2372925   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2372926   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2372927   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2372928   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2372929   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2372930   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2372931   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2372932   +          +    -1.34742914042312 * Marital_StatusDivorced
2372933   +          +    -0.75378934918763 * Marital_StatusMarried
2372934   +          +    -1.85411678929217 * Marital_StatusSingle
2372935   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2372936   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2372937   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2372938   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2372939   +          +     0.47958659206261 * Marital_StatusDivorced
2372940   +          +     -0.9665584294045 * Marital_StatusMarried
2372941   +          +      0.9733784530538 * Marital_StatusSingle
2372942   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2372943   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2372944   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2372945   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2372946   +          +    -0.56894207908284 * Marital_StatusDivorced
2372947   +          +    -0.96715106987195 * Marital_StatusMarried
2372948   +          +     1.18678144721443 * Marital_StatusSingle
2372949   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2372950   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2372951   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2372952   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2372953   +          +     -0.6061959224661 * Marital_StatusDivorced
2372954   +          +     0.03495844244684 * Marital_StatusMarried
2372955   +          +    -0.63896361063244 * Marital_StatusSingle
2372956   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2372957   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2372958   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2372959   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2372960   +          +     0.82178907301319 * Marital_StatusDivorced
2372961   +          +     1.69543553114589 * Marital_StatusMarried
2372962   +          +     -2.1272067363559 * Marital_StatusSingle
2372963   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2372964   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2372965   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2372966   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2372967   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2372968   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2372969   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2372970   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2372971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2372972   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2372973   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2372974   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2372975   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2372976   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2372977   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2372978   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2372979   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2372980   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2372981   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2372982   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2372983   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2372984   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2372985   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2372986   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2372987   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2372988   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2372989   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2372990   +END;
MPRINT(EM_DIAGRAM):   END;
2372991   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2372992   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2372993   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2372994   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2372995   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2372996   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2372997   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2372998   +END;
MPRINT(EM_DIAGRAM):   END;
2372999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373000   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2373001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373002   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2373003   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2373004   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2373005   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2373006   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2373007   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2373008   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2373009   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2373010   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2373011   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2373012   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2373013   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2373014   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2373015   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2373016   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2373017   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2373018   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2373019   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2373020   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2373021   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2373022   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2373023   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2373024   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2373025   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2373026   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2373027   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2373028   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2373029   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2373030   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2373031   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2373032   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2373033   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2373034   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2373035   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2373036   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2373037   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2373038   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2373039   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2373040   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2373041   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2373042   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2373043   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2373044   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2373045   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2373046   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2373047   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2373048   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2373049   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2373050   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2373051   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2373052   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2373053   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2373054   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2373055   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2373056   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2373057   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2373058   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2373059   +END;
MPRINT(EM_DIAGRAM):   END;
2373060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2373061   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2373062   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2373063   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2373064   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2373065   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2373066   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2373067   +END;
MPRINT(EM_DIAGRAM):   END;
2373068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373069   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2373070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373071   +
2373072   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2373073   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2373074   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2373075   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2373076   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2373077   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373078   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2373079   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2373080   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2373081   +end;
MPRINT(EM_DIAGRAM):   end;
2373082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373083   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2373084   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2373085   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2373086   +   end;
MPRINT(EM_DIAGRAM):   end;
2373087   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2373088   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2373089   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2373090   +   end;
MPRINT(EM_DIAGRAM):   end;
2373091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373092   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2373093   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2373094   +   end;
MPRINT(EM_DIAGRAM):   end;
2373095   +end;
MPRINT(EM_DIAGRAM):   end;
2373096   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2373097   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2373098   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2373099   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2373100   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2373101   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2373102   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2373103   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2373104   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2373105   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2373106   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2373107   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2373108   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2373109   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2373110   +END;
MPRINT(EM_DIAGRAM):   END;
2373111   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2373112   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2373113   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2373114   +END;
MPRINT(EM_DIAGRAM):   END;
2373115   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2373116   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2373117   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2373118   +END;
MPRINT(EM_DIAGRAM):   END;
2373119   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2373120   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2373121   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2373122   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2373123   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2373124   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2373125   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2373126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373127   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2373128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373129   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2373130   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2373131   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2373132   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2373133   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2373134   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2373135   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2373136   +END;
MPRINT(EM_DIAGRAM):   END;
2373137   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2373138   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2373139   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2373140   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2373141   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2373142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373143   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2373144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373145   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2373146   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2373147   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2373148   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2373149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373150   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2373151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373152   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2373153   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2373154   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2373155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373156   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
2373157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373159   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2373160   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2373161   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2373162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2373163   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2373164   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2373165   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2373166   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2373167   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2373168   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2373169   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2373170   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2373171   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2373172   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2373173   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2373174   +LENGTH _WARN_ $4
2373175   +      F_DepVar  $ 12
2373176   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2373177   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2373178   +
2373179   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2373180   +
2373181   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2373182   +
2373183   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2373184   +
2373185   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2373186   +
2373187   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2373188   +
2373189   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2373190   +
2373191   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2373192   +
2373193   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2373194   +
2373195   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2373196   +
2373197   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2373198   +
2373199   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2373200   +
2373201   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2373202   +
2373203   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2373204   +
2373205   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2373206   +
2373207   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2373208   +
2373209   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2373210   +
2373211   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2373212   +
2373213   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2373214   +
2373215   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2373216   +
2373217   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2373218   +
2373219   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2373220   +
2373221   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2373222   +
2373223   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2373224   +
2373225   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2373226   +
2373227   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2373228   +
2373229   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2373230   +
2373231   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2373232   +
2373233   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2373234   +
2373235   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2373236   +
2373237   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2373238   +
2373239   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2373240   +
2373241   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2373242   +
2373243   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2373244   +
2373245   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2373246   +
2373247   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2373248   +
2373249   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2373250   +
2373251   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2373252   +
2373253   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2373254   +
2373255   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2373256   +
2373257   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2373258   +
2373259   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2373260   +
2373261   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2373262   +
2373263   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2373264   +
2373265   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2373266   +
2373267   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2373268   +
2373269   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2373270   +
2373271   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2373272   +
2373273   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2373274   +
2373275   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2373276   +
2373277   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2373278   +
2373279   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2373280   +
2373281   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2373282   +
2373283   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2373284   +
2373285   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2373286   +
2373287   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2373288   +
2373289   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2373290   +
2373291   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2373292   +
2373293   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2373294   +
2373295   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2373296   +
2373297   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2373298   +
2373299   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2373300   +
2373301   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2373302   +
2373303   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2373304   +
2373305   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2373306   +
2373307   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2373308   +
2373309   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2373310   +
2373311   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2373312   +
2373313   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2373314   +
2373315   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2373316   +
2373317   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2373318   +
2373319   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2373320   +
2373321   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2373322   +
2373323   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2373324   +
2373325   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2373326   +
2373327   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2373328   +
2373329   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2373330   +
2373331   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2373332   +
2373333   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2373334   +
2373335   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2373336   +
2373337   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2373338   +
2373339   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2373340   +
2373341   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2373342   +
2373343   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2373344   +
2373345   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2373346   +
2373347   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2373348   +
2373349   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2373350   +
2373351   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2373352   +
2373353   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2373354   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2373355   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2373356   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2373357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373359   +end;
MPRINT(EM_DIAGRAM):   end;
2373360   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373362   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2373363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373365   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2373366   +   end;
MPRINT(EM_DIAGRAM):   end;
2373367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373368   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2373369   +   end;
MPRINT(EM_DIAGRAM):   end;
2373370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373371   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2373372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373374   +   end;
MPRINT(EM_DIAGRAM):   end;
2373375   +end;
MPRINT(EM_DIAGRAM):   end;
2373376   +
2373377   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2373378   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2373379   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2373380   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2373381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373383   +end;
MPRINT(EM_DIAGRAM):   end;
2373384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373386   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2373387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373389   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2373390   +   end;
MPRINT(EM_DIAGRAM):   end;
2373391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373392   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2373393   +   end;
MPRINT(EM_DIAGRAM):   end;
2373394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373395   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2373396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373398   +   end;
MPRINT(EM_DIAGRAM):   end;
2373399   +end;
MPRINT(EM_DIAGRAM):   end;
2373400   +
2373401   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2373402   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2373403   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2373404   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2373405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373407   +end;
MPRINT(EM_DIAGRAM):   end;
2373408   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373410   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2373411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373413   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2373414   +   end;
MPRINT(EM_DIAGRAM):   end;
2373415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373416   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2373417   +   end;
MPRINT(EM_DIAGRAM):   end;
2373418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373419   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2373420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373422   +   end;
MPRINT(EM_DIAGRAM):   end;
2373423   +end;
MPRINT(EM_DIAGRAM):   end;
2373424   +
2373425   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2373426   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2373427   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2373428   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2373429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373431   +end;
MPRINT(EM_DIAGRAM):   end;
2373432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373434   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2373435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373437   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2373438   +   end;
MPRINT(EM_DIAGRAM):   end;
2373439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373440   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2373441   +   end;
MPRINT(EM_DIAGRAM):   end;
2373442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373443   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2373444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373446   +   end;
MPRINT(EM_DIAGRAM):   end;
2373447   +end;
MPRINT(EM_DIAGRAM):   end;
2373448   +
2373449   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2373450   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2373451   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2373452   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2373453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373455   +end;
MPRINT(EM_DIAGRAM):   end;
2373456   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373458   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2373459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373461   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2373462   +   end;
MPRINT(EM_DIAGRAM):   end;
2373463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373464   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2373465   +   end;
MPRINT(EM_DIAGRAM):   end;
2373466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373467   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2373468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373470   +   end;
MPRINT(EM_DIAGRAM):   end;
2373471   +end;
MPRINT(EM_DIAGRAM):   end;
2373472   +
2373473   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2373474   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2373475   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2373476   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2373477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373479   +end;
MPRINT(EM_DIAGRAM):   end;
2373480   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373482   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2373483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2373485   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2373486   +   end;
MPRINT(EM_DIAGRAM):   end;
2373487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2373488   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2373489   +   end;
MPRINT(EM_DIAGRAM):   end;
2373490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373491   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2373492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373494   +   end;
MPRINT(EM_DIAGRAM):   end;
2373495   +end;
MPRINT(EM_DIAGRAM):   end;
2373496   +
2373497   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2373498   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2373499   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2373500   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2373501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373503   +end;
MPRINT(EM_DIAGRAM):   end;
2373504   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2373506   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2373507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373508   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2373509   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2373510   +   end;
MPRINT(EM_DIAGRAM):   end;
2373511   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2373512   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2373513   +   end;
MPRINT(EM_DIAGRAM):   end;
2373514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373515   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2373516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373518   +   end;
MPRINT(EM_DIAGRAM):   end;
2373519   +end;
MPRINT(EM_DIAGRAM):   end;
2373520   +
2373521   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2373522   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2373523   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2373524   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2373525   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2373526   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2373527   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2373528   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2373529   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2373530   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2373531   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2373532   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2373533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373535   +end;
MPRINT(EM_DIAGRAM):   end;
2373536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373537   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2373538   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2373539   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373540   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2373541   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2373542   +   end;
MPRINT(EM_DIAGRAM):   end;
2373543   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2373544   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2373545   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2373546   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2373547   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2373548   +   end;
MPRINT(EM_DIAGRAM):   end;
2373549   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2373550   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2373551   +   end;
MPRINT(EM_DIAGRAM):   end;
2373552   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2373553   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2373554   +   end;
MPRINT(EM_DIAGRAM):   end;
2373555   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2373556   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2373557   +   end;
MPRINT(EM_DIAGRAM):   end;
2373558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373559   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2373560   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2373561   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2373562   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2373563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373565   +   end;
MPRINT(EM_DIAGRAM):   end;
2373566   +end;
MPRINT(EM_DIAGRAM):   end;
2373567   +
2373568   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2373569   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2373570   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2373571   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2373572   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2373573   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2373574   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2373575   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2373576   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2373577   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2373578   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2373579   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2373580   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2373581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2373582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373583   +end;
MPRINT(EM_DIAGRAM):   end;
2373584   +else do;
MPRINT(EM_DIAGRAM):   else do;
2373585   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2373586   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2373587   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2373588   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2373589   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2373590   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2373591   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2373592   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2373593   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2373594   +         end;
MPRINT(EM_DIAGRAM):   end;
2373595   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2373596   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2373597   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2373598   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2373599   +            end;
MPRINT(EM_DIAGRAM):   end;
2373600   +         end;
MPRINT(EM_DIAGRAM):   end;
2373601   +      end;
MPRINT(EM_DIAGRAM):   end;
2373602   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2373603   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2373604   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2373605   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2373606   +         end;
MPRINT(EM_DIAGRAM):   end;
2373607   +      end;
MPRINT(EM_DIAGRAM):   end;
2373608   +   end;
MPRINT(EM_DIAGRAM):   end;
2373609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2373610   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2373611   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2373612   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2373613   +      end;
MPRINT(EM_DIAGRAM):   end;
2373614   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2373615   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2373616   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2373617   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2373618   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2373619   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2373620   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2373621   +         end;
MPRINT(EM_DIAGRAM):   end;
2373622   +      end;
MPRINT(EM_DIAGRAM):   end;
2373623   +   end;
MPRINT(EM_DIAGRAM):   end;
2373624   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2373625   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2373626   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2373627   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2373628   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2373629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2373630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373631   +   end;
MPRINT(EM_DIAGRAM):   end;
2373632   +end;
MPRINT(EM_DIAGRAM):   end;
2373633   +
2373634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373635   +*** Checking missing input Interval
2373636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2373637   +
2373638   +IF NMISS(
2373639   +   AcceptedCmpTotal ,
2373640   +   Age ,
2373641   +   Frq ,
2373642   +   Income ,
2373643   +   Kidhome ,
2373644   +   Mnt ,
2373645   +   MntFishProducts ,
2373646   +   MntFruits ,
2373647   +   MntGoldProds ,
2373648   +   MntMeatProducts ,
2373649   +   MntSweetProducts ,
2373650   +   MntWines ,
2373651   +   MonthsAsCustomer ,
2373652   +   NumCatalogPurchases ,
2373653   +   NumDealsPurchases ,
2373654   +   NumDistPurchases ,
2373655   +   NumStorePurchases ,
2373656   +   NumWebPurchases ,
2373657   +   NumWebVisitsMonth ,
2373658   +   RFMstat ,
2373659   +   RMntFrq ,
2373660   +   Recency ,
2373661   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2373662   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2373663   +
2373664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2373665   +END;
MPRINT(EM_DIAGRAM):   END;
2373666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373667   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2373668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2373670   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2373671   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2373672   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2373673   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2373674   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2373675   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2373676   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2373677   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2373678   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2373679   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2373680   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2373681   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2373682   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2373683   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2373684   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2373685   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2373686   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2373687   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2373688   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2373689   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2373690   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2373691   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2373692   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2373693   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2373694   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2373695   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2373696   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2373697   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2373698   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2373699   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2373700   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2373701   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2373702   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2373703   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2373704   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2373705   +END;
MPRINT(EM_DIAGRAM):   END;
2373706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2373707   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2373708   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2373709   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2373710   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2373711   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2373712   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2373713   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2373714   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2373715   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2373716   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2373717   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2373718   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2373719   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2373720   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2373721   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2373722   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2373723   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2373724   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2373725   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2373726   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2373727   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2373728   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2373729   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2373730   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2373731   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2373732   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2373733   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2373734   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2373735   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2373736   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2373737   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2373738   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2373739   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2373740   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
The SAS System

MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2373741   +   ELSE S_NumCatalogPurchases
2373742   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2373743   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2373744   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2373745   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2373746   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2373747   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2373748   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2373749   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2373750   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2373751   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2373752   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2373753   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2373754   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2373755   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2373756   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2373757   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2373758   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2373759   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2373760   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2373761   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2373762   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2373763   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2373764   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2373765   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2373766   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2373767   +END;
MPRINT(EM_DIAGRAM):   END;
2373768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373769   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2373770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373772   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2373773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373775   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2373776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2373778   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2373779   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2373780   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2373781   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2373782   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2373783   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2373784   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2373785   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2373786   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2373787   +          +    -1.18466001117424 * S_NumDealsPurchases
2373788   +          +     -0.1371252133567 * S_NumDistPurchases
2373789   +          +     1.92719775731123 * S_NumStorePurchases
2373790   +          +     1.23184249192116 * S_NumWebPurchases
2373791   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2373792   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2373793   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2373794   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2373795   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2373796   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2373797   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2373798   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2373799   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2373800   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2373801   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2373802   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2373803   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2373804   +          +     0.63616523425865 * S_NumDealsPurchases
2373805   +          +     0.45460056261546 * S_NumDistPurchases
2373806   +          +    -0.61009999017225 * S_NumStorePurchases
2373807   +          +     1.85193755731081 * S_NumWebPurchases
2373808   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2373809   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2373810   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2373811   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2373812   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2373813   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2373814   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2373815   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2373816   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2373817   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2373818   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2373819   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2373820   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2373821   +          +      1.8907968580473 * S_NumDealsPurchases
2373822   +          +     0.01244124801764 * S_NumDistPurchases
2373823   +          +    -2.34409118104622 * S_NumStorePurchases
2373824   +          +    -1.80820043087435 * S_NumWebPurchases
2373825   +          +     2.40219682136039 * S_NumWebVisitsMonth
2373826   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2373827   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2373828   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2373829   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2373830   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2373831   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2373832   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2373833   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2373834   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2373835   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2373836   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2373837   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2373838   +          +     0.28209537604198 * S_NumDealsPurchases
2373839   +          +      0.6450277971767 * S_NumDistPurchases
2373840   +          +     0.85050092520609 * S_NumStorePurchases
2373841   +          +    -0.53920307215941 * S_NumWebPurchases
2373842   +          +     3.01106015100147 * S_NumWebVisitsMonth
2373843   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2373844   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2373845   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2373846   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2373847   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2373848   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2373849   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2373850   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2373851   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2373852   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2373853   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2373854   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2373855   +          +    -0.36642526324451 * S_NumDealsPurchases
2373856   +          +     -0.6091014843932 * S_NumDistPurchases
2373857   +          +    -0.21154626182088 * S_NumStorePurchases
2373858   +          +    -0.10361347071364 * S_NumWebPurchases
2373859   +          +     1.36358817627784 * S_NumWebVisitsMonth
2373860   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2373861   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2373862   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2373863   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2373864   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2373865   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2373866   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2373867   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2373868   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2373869   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2373870   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2373871   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2373872   +          +    -0.14868505161718 * S_NumDealsPurchases
2373873   +          +    -0.08395384711805 * S_NumDistPurchases
2373874   +          +     0.60525238179245 * S_NumStorePurchases
2373875   +          +     0.04555100214276 * S_NumWebPurchases
2373876   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2373877   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2373878   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2373879   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2373880   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2373881   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2373882   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2373883   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2373884   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2373885   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2373886   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2373887   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2373888   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2373889   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2373890   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2373891   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2373892   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2373893   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2373894   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2373895   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2373896   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2373897   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2373898   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2373899   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2373900   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2373901   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2373902   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2373903   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2373904   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2373905   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2373906   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2373907   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2373908   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2373909   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2373910   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2373911   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2373912   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2373913   +          +     -0.7180104021039 * Marital_StatusDivorced
2373914   +          +      0.5957373170744 * Marital_StatusMarried
2373915   +          +    -0.86183942803988 * Marital_StatusSingle
2373916   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2373917   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2373918   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2373919   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2373920   +          +     0.84772700244021 * Marital_StatusDivorced
2373921   +          +    -0.37049970188511 * Marital_StatusMarried
2373922   +          +     1.54291641732063 * Marital_StatusSingle
2373923   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2373924   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2373925   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2373926   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2373927   +          +     0.73222548496385 * Marital_StatusDivorced
2373928   +          +    -0.50102202656102 * Marital_StatusMarried
2373929   +          +    -0.07207130428422 * Marital_StatusSingle
2373930   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2373931   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2373932   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2373933   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2373934   +          +     0.25894719464799 * Marital_StatusDivorced
2373935   +          +    -1.95576501275834 * Marital_StatusMarried
2373936   +          +     2.65422185276746 * Marital_StatusSingle
2373937   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2373938   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2373939   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2373940   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2373941   +          +     0.60936191204707 * Marital_StatusDivorced
2373942   +          +    -0.52190111190458 * Marital_StatusMarried
2373943   +          +    -0.60982305233136 * Marital_StatusSingle
2373944   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2373945   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2373946   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2373947   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2373948   +          +    -1.44614502228294 * Marital_StatusDivorced
2373949   +          +      2.9001493892928 * Marital_StatusMarried
2373950   +          +    -2.60467399972513 * Marital_StatusSingle
2373951   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2373952   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2373953   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2373954   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2373955   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2373956   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2373957   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2373958   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2373959   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2373960   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2373961   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2373962   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2373963   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2373964   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2373965   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2373966   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2373967   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2373968   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2373969   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2373970   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2373971   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2373972   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2373973   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2373974   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2373975   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2373976   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2373977   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2373978   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2373979   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2373980   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2373981   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2373982   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2373983   +END;
MPRINT(EM_DIAGRAM):   END;
2373984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2373985   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2373986   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2373987   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2373988   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2373989   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2373990   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2373991   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2373992   +END;
MPRINT(EM_DIAGRAM):   END;
2373993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373994   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2373995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2373996   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2373997   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2373998   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2373999   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2374000   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2374001   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2374002   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2374003   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2374004   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2374005   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2374006   +          +    -0.46483717253931 * S_NumDealsPurchases
2374007   +          +    -0.53329008421157 * S_NumDistPurchases
2374008   +          +      0.2490774300193 * S_NumStorePurchases
2374009   +          +    -0.82755150673885 * S_NumWebPurchases
2374010   +          +     0.04007223822389 * S_NumWebVisitsMonth
2374011   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2374012   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2374013   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2374014   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2374015   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2374016   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2374017   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2374018   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2374019   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2374020   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2374021   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2374022   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2374023   +          +     0.75855101382458 * S_NumDealsPurchases
2374024   +          +     1.61754951768262 * S_NumDistPurchases
2374025   +          +    -0.48146714929729 * S_NumStorePurchases
2374026   +          +    -0.76460728035552 * S_NumWebPurchases
2374027   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2374028   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2374029   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2374030   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2374031   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2374032   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2374033   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2374034   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2374035   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2374036   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2374037   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2374038   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2374039   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2374040   +          +     0.75255317965748 * S_NumDealsPurchases
2374041   +          +     1.34900588315783 * S_NumDistPurchases
2374042   +          +    -0.17717469778048 * S_NumStorePurchases
2374043   +          +    -0.01560551546553 * S_NumWebPurchases
2374044   +          +     1.24315988674343 * S_NumWebVisitsMonth
2374045   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2374046   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2374047   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2374048   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2374049   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2374050   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2374051   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2374052   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2374053   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2374054   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2374055   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2374056   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2374057   +          +    -1.71127148178768 * S_NumDealsPurchases
2374058   +          +    -1.77527355221308 * S_NumDistPurchases
2374059   +          +    -1.40009594349363 * S_NumStorePurchases
2374060   +          +    -0.46471012062697 * S_NumWebPurchases
2374061   +          +     0.04619891083228 * S_NumWebVisitsMonth
2374062   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2374063   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2374064   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2374065   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2374066   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2374067   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2374068   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2374069   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2374070   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2374071   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2374072   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2374073   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2374074   +          +    -0.22204470395056 * S_NumDealsPurchases
2374075   +          +    -1.74490476011984 * S_NumDistPurchases
2374076   +          +     1.93538420108324 * S_NumStorePurchases
2374077   +          +     1.04892631742152 * S_NumWebPurchases
2374078   +          +     1.50717841566047 * S_NumWebVisitsMonth
2374079   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2374080   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2374081   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2374082   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2374083   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2374084   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2374085   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2374086   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2374087   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2374088   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2374089   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2374090   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2374091   +          +    -0.94690420785776 * S_NumDealsPurchases
2374092   +          +     1.87932706342204 * S_NumDistPurchases
2374093   +          +     0.31232717416487 * S_NumStorePurchases
2374094   +          +     1.51889492693355 * S_NumWebPurchases
2374095   +          +     0.04376853689795 * S_NumWebVisitsMonth
2374096   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2374097   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2374098   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2374099   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2374100   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2374101   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2374102   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2374103   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2374104   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2374105   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2374106   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2374107   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2374108   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2374109   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2374110   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2374111   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2374112   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2374113   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2374114   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2374115   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2374116   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2374117   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2374118   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2374119   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2374120   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2374121   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2374122   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2374123   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2374124   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2374125   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2374126   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2374127   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2374128   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2374129   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2374130   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2374131   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2374132   +          +     0.56030871857835 * Marital_StatusDivorced
2374133   +          +    -1.22448534379831 * Marital_StatusMarried
2374134   +          +     0.78141783495855 * Marital_StatusSingle
2374135   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2374136   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2374137   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2374138   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2374139   +          +    -2.63452071552997 * Marital_StatusDivorced
2374140   +          +     0.61829054779121 * Marital_StatusMarried
2374141   +          +    -2.20743370246315 * Marital_StatusSingle
2374142   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2374143   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2374144   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2374145   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2374146   +          +      -1.454102516731 * Marital_StatusDivorced
2374147   +          +     0.71488291465759 * Marital_StatusMarried
2374148   +          +     0.96038830049792 * Marital_StatusSingle
2374149   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2374150   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2374151   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2374152   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2374153   +          +    -0.01160394891598 * Marital_StatusDivorced
2374154   +          +    -1.09054636482951 * Marital_StatusMarried
2374155   +          +      0.7793855479379 * Marital_StatusSingle
2374156   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2374157   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2374158   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2374159   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2374160   +          +    -0.73414854875115 * Marital_StatusDivorced
2374161   +          +     0.46421425621114 * Marital_StatusMarried
2374162   +          +    -0.54512730625469 * Marital_StatusSingle
2374163   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2374164   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2374165   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2374166   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2374167   +          +     0.25131188683384 * Marital_StatusDivorced
2374168   +          +     2.38279806963807 * Marital_StatusMarried
2374169   +          +     0.28897706448348 * Marital_StatusSingle
2374170   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2374171   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2374172   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2374173   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2374174   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2374175   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2374176   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2374177   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2374178   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2374179   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2374180   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2374181   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2374182   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2374183   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2374184   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2374185   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2374186   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2374187   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2374188   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2374189   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2374190   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2374191   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2374192   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2374193   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2374194   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2374195   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2374196   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2374197   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2374198   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2374199   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2374200   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2374201   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2374202   +END;
MPRINT(EM_DIAGRAM):   END;
2374203   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374204   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2374205   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2374206   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2374207   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2374208   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2374209   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2374210   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2374211   +END;
MPRINT(EM_DIAGRAM):   END;
2374212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374213   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2374214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374215   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2374216   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2374217   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2374218   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2374219   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2374220   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2374221   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2374222   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2374223   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2374224   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2374225   +          +     1.11855402225797 * S_NumDealsPurchases
2374226   +          +     0.39150287442005 * S_NumDistPurchases
2374227   +          +     0.00160244551627 * S_NumStorePurchases
2374228   +          +     1.54380043731879 * S_NumWebPurchases
2374229   +          +      0.6462755347813 * S_NumWebVisitsMonth
2374230   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2374231   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2374232   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2374233   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2374234   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2374235   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2374236   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2374237   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2374238   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2374239   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2374240   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2374241   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2374242   +          +     0.01911815525287 * S_NumDealsPurchases
2374243   +          +    -1.07196707915227 * S_NumDistPurchases
2374244   +          +      0.6452048321682 * S_NumStorePurchases
2374245   +          +    -0.15818575353955 * S_NumWebPurchases
2374246   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2374247   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2374248   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2374249   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2374250   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2374251   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2374252   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2374253   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2374254   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2374255   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2374256   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2374257   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2374258   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2374259   +          +     1.56893739271853 * S_NumDealsPurchases
2374260   +          +      0.6745865425238 * S_NumDistPurchases
2374261   +          +    -0.26848765783548 * S_NumStorePurchases
2374262   +          +     0.79227081430227 * S_NumWebPurchases
2374263   +          +     0.83054874267768 * S_NumWebVisitsMonth
2374264   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2374265   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2374266   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2374267   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2374268   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2374269   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2374270   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2374271   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2374272   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2374273   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2374274   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2374275   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2374276   +          +    -0.23954856030467 * S_NumDealsPurchases
2374277   +          +    -1.61914390483829 * S_NumDistPurchases
2374278   +          +      -1.014570623016 * S_NumStorePurchases
2374279   +          +    -0.36828642098701 * S_NumWebPurchases
2374280   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2374281   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2374282   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2374283   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2374284   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2374285   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2374286   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2374287   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2374288   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2374289   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2374290   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2374291   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2374292   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2374293   +          +     1.00094082424204 * S_NumDealsPurchases
2374294   +          +      0.2724785290725 * S_NumDistPurchases
2374295   +          +     0.13170237783486 * S_NumStorePurchases
2374296   +          +    -1.31447792523743 * S_NumWebPurchases
2374297   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2374298   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2374299   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2374300   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2374301   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2374302   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2374303   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2374304   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2374305   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2374306   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2374307   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2374308   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2374309   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2374310   +          +    -0.73198872336344 * S_NumDealsPurchases
2374311   +          +     0.29368958872361 * S_NumDistPurchases
2374312   +          +     1.52772046446908 * S_NumStorePurchases
2374313   +          +    -1.75065469134874 * S_NumWebPurchases
2374314   +          +      0.0264954621772 * S_NumWebVisitsMonth
2374315   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2374316   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2374317   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2374318   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2374319   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2374320   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2374321   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2374322   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2374323   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2374324   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2374325   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2374326   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2374327   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2374328   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2374329   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2374330   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2374331   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2374332   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2374333   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2374334   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2374335   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2374336   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2374337   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2374338   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2374339   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2374340   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2374341   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2374342   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2374343   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2374344   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2374345   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2374346   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2374347   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2374348   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2374349   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2374350   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2374351   +          +     0.32207432513904 * Marital_StatusDivorced
2374352   +          +      0.6397913221395 * Marital_StatusMarried
2374353   +          +    -0.25330032559918 * Marital_StatusSingle
2374354   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2374355   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2374356   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2374357   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2374358   +          +     0.79430904713493 * Marital_StatusDivorced
2374359   +          +     2.54456429102799 * Marital_StatusMarried
2374360   +          +     0.59410742352499 * Marital_StatusSingle
2374361   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2374362   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2374363   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2374364   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2374365   +          +    -0.43081775693595 * Marital_StatusDivorced
2374366   +          +    -0.78485102174552 * Marital_StatusMarried
2374367   +          +    -1.56581090110813 * Marital_StatusSingle
2374368   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2374369   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2374370   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2374371   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2374372   +          +     0.38226706522151 * Marital_StatusDivorced
2374373   +          +     0.96666958079914 * Marital_StatusMarried
2374374   +          +    -0.07771259761555 * Marital_StatusSingle
2374375   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2374376   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2374377   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2374378   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2374379   +          +    -0.38325393606947 * Marital_StatusDivorced
2374380   +          +    -1.43303056163299 * Marital_StatusMarried
2374381   +          +     0.11571941757387 * Marital_StatusSingle
2374382   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2374383   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2374384   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2374385   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2374386   +          +    -0.36491799765765 * Marital_StatusDivorced
2374387   +          +     0.14142786767503 * Marital_StatusMarried
2374388   +          +     0.22643970468805 * Marital_StatusSingle
2374389   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2374390   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2374391   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2374392   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2374393   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2374394   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2374395   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2374396   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2374397   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2374398   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2374399   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2374400   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2374401   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2374402   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2374403   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2374404   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2374405   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2374406   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2374407   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2374408   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2374409   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2374410   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2374411   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2374412   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2374413   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2374414   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2374415   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2374416   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2374417   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2374418   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2374419   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2374420   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2374421   +END;
MPRINT(EM_DIAGRAM):   END;
2374422   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374423   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2374424   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2374425   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2374426   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2374427   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2374428   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2374429   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2374430   +END;
MPRINT(EM_DIAGRAM):   END;
2374431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374432   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2374433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374434   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2374435   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2374436   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2374437   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2374438   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2374439   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2374440   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2374441   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2374442   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2374443   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2374444   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2374445   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2374446   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2374447   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2374448   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2374449   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2374450   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2374451   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2374452   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2374453   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2374454   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2374455   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2374456   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2374457   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2374458   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2374459   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2374460   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2374461   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2374462   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2374463   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2374464   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2374465   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2374466   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2374467   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2374468   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2374469   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2374470   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2374471   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2374472   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2374473   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2374474   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2374475   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2374476   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2374477   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2374478   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2374479   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2374480   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2374481   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2374482   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2374483   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2374484   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2374485   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2374486   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2374487   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2374488   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2374489   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2374490   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2374491   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2374492   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2374493   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2374494   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2374495   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2374496   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2374497   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2374498   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2374499   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2374500   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2374501   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2374502   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2374503   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2374504   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2374505   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2374506   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2374507   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2374508   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2374509   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2374510   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2374511   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2374512   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2374513   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2374514   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2374515   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2374516   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2374517   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2374518   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2374519   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2374520   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2374521   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2374522   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2374523   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2374524   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2374525   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2374526   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2374527   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2374528   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2374529   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2374530   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2374531   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2374532   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2374533   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2374534   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2374535   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2374536   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2374537   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2374538   +END;
MPRINT(EM_DIAGRAM):   END;
2374539   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374540   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2374541   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2374542   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2374543   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2374544   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2374545   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2374546   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2374547   +END;
MPRINT(EM_DIAGRAM):   END;
2374548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374549   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2374550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374551   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2374552   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2374553   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2374554   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2374555   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2374556   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2374557   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2374558   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2374559   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2374560   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2374561   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2374562   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2374563   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2374564   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2374565   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2374566   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2374567   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2374568   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2374569   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2374570   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2374571   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2374572   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2374573   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2374574   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2374575   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2374576   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2374577   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2374578   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2374579   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2374580   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2374581   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2374582   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2374583   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2374584   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2374585   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2374586   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2374587   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2374588   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2374589   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2374590   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2374591   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2374592   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2374593   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2374594   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2374595   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2374596   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2374597   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2374598   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2374599   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2374600   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2374601   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2374602   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2374603   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2374604   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2374605   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2374606   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2374607   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2374608   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2374609   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2374610   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2374611   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2374612   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2374613   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2374614   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2374615   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2374616   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2374617   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2374618   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2374619   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2374620   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2374621   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2374622   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2374623   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2374624   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2374625   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2374626   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2374627   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2374628   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2374629   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2374630   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2374631   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2374632   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2374633   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2374634   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2374635   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2374636   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2374637   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2374638   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2374639   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2374640   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2374641   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2374642   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2374643   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2374644   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2374645   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2374646   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2374647   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2374648   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2374649   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2374650   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2374651   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2374652   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2374653   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2374654   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2374655   +END;
MPRINT(EM_DIAGRAM):   END;
2374656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374657   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2374658   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2374659   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2374660   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2374661   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2374662   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2374663   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2374664   +END;
MPRINT(EM_DIAGRAM):   END;
2374665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374666   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2374667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374668   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2374669   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2374670   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2374671   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2374672   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2374673   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2374674   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2374675   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2374676   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2374677   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2374678   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2374679   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2374680   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2374681   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2374682   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2374683   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2374684   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2374685   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2374686   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2374687   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2374688   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2374689   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2374690   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2374691   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2374692   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2374693   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2374694   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2374695   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2374696   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2374697   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2374698   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2374699   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2374700   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2374701   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2374702   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2374703   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2374704   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2374705   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2374706   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2374707   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2374708   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2374709   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2374710   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2374711   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2374712   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2374713   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2374714   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2374715   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2374716   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2374717   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2374718   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2374719   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2374720   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2374721   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2374722   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2374723   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2374724   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2374725   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2374726   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2374727   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2374728   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2374729   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2374730   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2374731   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2374732   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2374733   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2374734   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2374735   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2374736   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2374737   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2374738   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2374739   +END;
MPRINT(EM_DIAGRAM):   END;
2374740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374741   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2374742   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2374743   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2374744   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2374745   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2374746   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2374747   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2374748   +END;
MPRINT(EM_DIAGRAM):   END;
2374749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374750   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2374751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374752   +
2374753   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2374754   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2374755   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2374756   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2374757   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2374758   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2374759   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2374760   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2374761   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2374762   +end;
MPRINT(EM_DIAGRAM):   end;
2374763   +else do;
MPRINT(EM_DIAGRAM):   else do;
2374764   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2374765   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2374766   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2374767   +   end;
MPRINT(EM_DIAGRAM):   end;
2374768   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2374769   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2374770   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2374771   +   end;
MPRINT(EM_DIAGRAM):   end;
2374772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2374773   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2374774   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2374775   +   end;
MPRINT(EM_DIAGRAM):   end;
2374776   +end;
MPRINT(EM_DIAGRAM):   end;
2374777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2374778   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2374779   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2374780   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2374781   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2374782   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2374783   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2374784   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2374785   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2374786   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2374787   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2374788   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2374789   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2374790   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2374791   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2374792   +END;
MPRINT(EM_DIAGRAM):   END;
2374793   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2374794   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2374795   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2374796   +END;
MPRINT(EM_DIAGRAM):   END;
2374797   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2374798   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2374799   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2374800   +END;
MPRINT(EM_DIAGRAM):   END;
2374801   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2374802   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2374803   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2374804   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2374805   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2374806   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2374807   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2374808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374809   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2374810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2374811   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2374812   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2374813   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2374814   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2374815   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2374816   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2374817   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2374818   +END;
MPRINT(EM_DIAGRAM):   END;
2374819   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2374820   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2374821   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2374822   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2374823   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2374824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374825   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2374826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374827   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2374828   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2374829   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2374830   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2374831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374832   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2374833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374834   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2374835   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2374836   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2374837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374838   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
2374839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374840   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2374841   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2374842   +P_DepVar1 = max(
2374843   +AutoNeural9_P_DepVar1 ,
2374844   +AutoNeural11_P_DepVar1 ,
2374845   +AutoNeural12_P_DepVar1
2374846   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural12_P_DepVar1 );
2374847   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2374848   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2374849   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2374850   +end;
MPRINT(EM_DIAGRAM):   end;
2374851   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2374852   +P_DepVar0 = max(
2374853   +AutoNeural9_P_DepVar0 ,
2374854   +AutoNeural11_P_DepVar0 ,
2374855   +AutoNeural12_P_DepVar0
2374856   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural12_P_DepVar0 );
2374857   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2374858   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2374859   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2374860   +end;
MPRINT(EM_DIAGRAM):   end;
2374861   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2374862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374863   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
2374864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374865   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2374866   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2374867   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2374868   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2374869   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2374870   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2374871   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2374872   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2374873   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2374874   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2374875   +end;
MPRINT(EM_DIAGRAM):   end;
2374876   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2374877   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2374878   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2374879   +end;
MPRINT(EM_DIAGRAM):   end;
2374880   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2374881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374882   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
2374883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374884   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2374885   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2374886   +else
2374887   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2374888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374889   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
2374890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374891   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2374892   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2374893   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2374894   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2374894  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2374895   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2374895  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2374896   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2374896  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2374897   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2374897  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2374898   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2374898  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2374899   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2374899  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2374900   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2374900  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2374901   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2374901  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2374902   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2374902  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2374903   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2374903  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2374904   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2374904  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2374905   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2374905  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2374906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374907   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
2374908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374909   +if
2374910   +F_DepVar NE '1'
2374911   +AND F_DepVar NE '0'
2374912   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2374913   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2374914   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2374915   +end;
MPRINT(EM_DIAGRAM):   end;
2374916   +else do;
MPRINT(EM_DIAGRAM):   else do;
2374917   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2374918   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2374919   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2374920   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2374921   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2374922   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2374923   +END;
MPRINT(EM_DIAGRAM):   END;
2374924   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2374925    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2374926    quit;
2374927    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2374928    filename emflow
2374928  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374929    *------------------------------------------------------------*;
2374930    * Ensmbl43: Scoring AUTONEURAL9_VALIDATE data;
2374931    *------------------------------------------------------------*;
2374932    data EMWS8.Ensmbl43_VALIDATE
2374933    / view=EMWS8.Ensmbl43_VALIDATE
2374934    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_VALIDATE / view=EMWS8.Ensmbl43_VALIDATE ;
2374935    set EMWS8.AutoNeural9_VALIDATE
2374936    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2374937    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
2374938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374939   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
2374940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374941   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
2374942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374944   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2374945   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2374946   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2374947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374949   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2374950   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2374951   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2374952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374954   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2374955   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2374956   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2374957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374959   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2374960   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2374961   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2374962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374963   +
2374964   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2374965   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2374965  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2374966   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2374967   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2374968   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2374969   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2374970   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2374971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374972   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2374973   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2374974   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2374975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374977   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2374978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374979   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2374980   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2374981   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2374982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374983   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2374984   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2374985   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2374986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374988   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2374989   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2374990   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2374991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374993   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2374994   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2374995   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2374996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2374997   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2374998   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2374999   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2375000   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2375001   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2375002   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2375003   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2375004   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2375005   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2375006   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2375007   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2375008   +LENGTH _WARN_ $4
2375009   +      F_DepVar  $ 12
2375010   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2375011   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2375012   +
2375013   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2375014   +
2375015   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2375016   +
2375017   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2375018   +
2375019   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2375020   +
2375021   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2375022   +
2375023   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2375024   +
2375025   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2375026   +
2375027   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2375028   +
2375029   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2375030   +
2375031   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2375032   +
2375033   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2375034   +
2375035   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2375036   +
2375037   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2375038   +
2375039   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2375040   +
2375041   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2375042   +
2375043   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2375044   +
2375045   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2375046   +
2375047   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2375048   +
2375049   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2375050   +
2375051   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2375052   +
2375053   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2375054   +
2375055   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2375056   +
2375057   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2375058   +
2375059   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2375060   +
2375061   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2375062   +
2375063   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2375064   +
2375065   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2375066   +
2375067   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2375068   +
2375069   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2375070   +
2375071   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2375072   +
2375073   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2375074   +
2375075   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2375076   +
2375077   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2375078   +
2375079   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2375080   +
2375081   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2375082   +
2375083   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2375084   +
2375085   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2375086   +
2375087   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2375088   +
2375089   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2375090   +
2375091   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2375092   +
2375093   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2375094   +
2375095   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2375096   +
2375097   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2375098   +
2375099   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2375100   +
2375101   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2375102   +
2375103   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2375104   +
2375105   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2375106   +
2375107   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2375108   +
2375109   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2375110   +
2375111   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2375112   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2375113   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2375114   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2375115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375117   +end;
MPRINT(EM_DIAGRAM):   end;
2375118   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375120   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2375121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375123   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2375124   +   end;
MPRINT(EM_DIAGRAM):   end;
2375125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375126   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2375127   +   end;
MPRINT(EM_DIAGRAM):   end;
2375128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375129   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2375130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375132   +   end;
MPRINT(EM_DIAGRAM):   end;
2375133   +end;
MPRINT(EM_DIAGRAM):   end;
2375134   +
2375135   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2375136   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2375137   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2375138   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2375139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375141   +end;
MPRINT(EM_DIAGRAM):   end;
2375142   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375144   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2375145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375147   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2375148   +   end;
MPRINT(EM_DIAGRAM):   end;
2375149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375150   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2375151   +   end;
MPRINT(EM_DIAGRAM):   end;
2375152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375153   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2375154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375156   +   end;
MPRINT(EM_DIAGRAM):   end;
2375157   +end;
MPRINT(EM_DIAGRAM):   end;
2375158   +
2375159   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2375160   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2375161   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2375162   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2375163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375165   +end;
MPRINT(EM_DIAGRAM):   end;
2375166   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375167   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375168   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2375169   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375170   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375171   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2375172   +   end;
MPRINT(EM_DIAGRAM):   end;
2375173   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375174   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2375175   +   end;
MPRINT(EM_DIAGRAM):   end;
2375176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375177   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2375178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375180   +   end;
MPRINT(EM_DIAGRAM):   end;
2375181   +end;
MPRINT(EM_DIAGRAM):   end;
2375182   +
2375183   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2375184   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2375185   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2375186   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2375187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375189   +end;
MPRINT(EM_DIAGRAM):   end;
2375190   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375191   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375192   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2375193   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375194   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375195   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2375196   +   end;
MPRINT(EM_DIAGRAM):   end;
2375197   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375198   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2375199   +   end;
MPRINT(EM_DIAGRAM):   end;
2375200   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375201   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2375202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375204   +   end;
MPRINT(EM_DIAGRAM):   end;
2375205   +end;
MPRINT(EM_DIAGRAM):   end;
2375206   +
2375207   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2375208   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2375209   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2375210   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2375211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375213   +end;
MPRINT(EM_DIAGRAM):   end;
2375214   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375216   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2375217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375218   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375219   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2375220   +   end;
MPRINT(EM_DIAGRAM):   end;
2375221   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375222   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2375223   +   end;
MPRINT(EM_DIAGRAM):   end;
2375224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375225   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2375226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375228   +   end;
MPRINT(EM_DIAGRAM):   end;
2375229   +end;
MPRINT(EM_DIAGRAM):   end;
2375230   +
2375231   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2375232   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2375233   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2375234   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2375235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375237   +end;
MPRINT(EM_DIAGRAM):   end;
2375238   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375240   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2375241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375242   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375243   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2375244   +   end;
MPRINT(EM_DIAGRAM):   end;
2375245   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375246   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2375247   +   end;
MPRINT(EM_DIAGRAM):   end;
2375248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375249   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2375250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375252   +   end;
MPRINT(EM_DIAGRAM):   end;
2375253   +end;
MPRINT(EM_DIAGRAM):   end;
2375254   +
2375255   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2375256   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2375257   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2375258   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2375259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375261   +end;
MPRINT(EM_DIAGRAM):   end;
2375262   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375264   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2375265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375266   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2375267   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2375268   +   end;
MPRINT(EM_DIAGRAM):   end;
2375269   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2375270   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2375271   +   end;
MPRINT(EM_DIAGRAM):   end;
2375272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375273   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2375274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375276   +   end;
MPRINT(EM_DIAGRAM):   end;
2375277   +end;
MPRINT(EM_DIAGRAM):   end;
2375278   +
2375279   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2375280   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2375281   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2375282   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2375283   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2375284   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2375285   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2375286   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2375287   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2375288   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2375289   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2375290   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2375291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375293   +end;
MPRINT(EM_DIAGRAM):   end;
2375294   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375295   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2375296   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2375297   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375298   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2375299   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2375300   +   end;
MPRINT(EM_DIAGRAM):   end;
2375301   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2375302   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2375303   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2375304   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2375305   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2375306   +   end;
MPRINT(EM_DIAGRAM):   end;
2375307   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2375308   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2375309   +   end;
MPRINT(EM_DIAGRAM):   end;
2375310   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2375311   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2375312   +   end;
MPRINT(EM_DIAGRAM):   end;
2375313   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2375314   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2375315   +   end;
MPRINT(EM_DIAGRAM):   end;
2375316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375317   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2375318   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2375319   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2375320   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2375321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375323   +   end;
MPRINT(EM_DIAGRAM):   end;
2375324   +end;
MPRINT(EM_DIAGRAM):   end;
2375325   +
2375326   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2375327   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2375328   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2375329   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2375330   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2375331   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2375332   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2375333   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2375334   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2375335   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2375336   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2375337   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2375338   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2375339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375341   +end;
MPRINT(EM_DIAGRAM):   end;
2375342   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375343   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2375344   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2375345   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375346   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2375347   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2375348   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2375349   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2375350   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2375351   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2375352   +         end;
MPRINT(EM_DIAGRAM):   end;
2375353   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2375354   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2375355   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2375356   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2375357   +            end;
MPRINT(EM_DIAGRAM):   end;
2375358   +         end;
MPRINT(EM_DIAGRAM):   end;
2375359   +      end;
MPRINT(EM_DIAGRAM):   end;
2375360   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2375361   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2375362   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2375363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2375364   +         end;
MPRINT(EM_DIAGRAM):   end;
2375365   +      end;
MPRINT(EM_DIAGRAM):   end;
2375366   +   end;
MPRINT(EM_DIAGRAM):   end;
2375367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375368   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2375369   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2375370   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2375371   +      end;
MPRINT(EM_DIAGRAM):   end;
2375372   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2375373   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2375374   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2375375   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2375376   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2375377   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2375378   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2375379   +         end;
MPRINT(EM_DIAGRAM):   end;
2375380   +      end;
MPRINT(EM_DIAGRAM):   end;
2375381   +   end;
MPRINT(EM_DIAGRAM):   end;
2375382   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2375383   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2375384   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2375385   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2375386   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2375387   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375388   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375389   +   end;
MPRINT(EM_DIAGRAM):   end;
2375390   +end;
MPRINT(EM_DIAGRAM):   end;
2375391   +
2375392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375393   +*** Checking missing input Interval
2375394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2375395   +
2375396   +IF NMISS(
2375397   +   AcceptedCmpTotal ,
2375398   +   Age ,
2375399   +   Frq ,
2375400   +   Income ,
2375401   +   Kidhome ,
2375402   +   Mnt ,
2375403   +   MntFishProducts ,
2375404   +   MntFruits ,
2375405   +   MntGoldProds ,
2375406   +   MntMeatProducts ,
2375407   +   MntSweetProducts ,
2375408   +   MntWines ,
2375409   +   MonthsAsCustomer ,
2375410   +   NumCatalogPurchases ,
2375411   +   NumDealsPurchases ,
2375412   +   NumDistPurchases ,
2375413   +   NumStorePurchases ,
2375414   +   NumWebPurchases ,
2375415   +   NumWebVisitsMonth ,
2375416   +   RFMstat ,
2375417   +   RMntFrq ,
2375418   +   Recency ,
2375419   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2375420   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2375421   +
2375422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375423   +END;
MPRINT(EM_DIAGRAM):   END;
2375424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375425   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2375426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2375428   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2375429   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2375430   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2375431   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2375432   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2375433   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2375434   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2375435   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2375436   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2375437   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2375438   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2375439   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2375440   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2375441   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2375442   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2375443   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2375444   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2375445   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2375446   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2375447   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2375448   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2375449   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2375450   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2375451   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2375452   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2375453   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2375454   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2375455   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2375456   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2375457   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2375458   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2375459   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2375460   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2375461   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2375462   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2375463   +END;
MPRINT(EM_DIAGRAM):   END;
2375464   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2375465   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2375466   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2375467   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2375468   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2375469   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2375470   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2375471   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2375472   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2375473   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2375474   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2375475   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2375476   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2375477   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2375478   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2375479   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2375480   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2375481   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2375482   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2375483   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2375484   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2375485   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2375486   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2375487   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2375488   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2375489   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2375490   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2375491   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2375492   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2375493   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2375494   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2375495   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2375496   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2375497   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2375498   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2375499   +   ELSE S_NumCatalogPurchases
2375500   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2375501   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2375502   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2375503   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2375504   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2375505   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2375506   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2375507   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2375508   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2375509   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2375510   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2375511   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2375512   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2375513   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2375514   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2375515   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2375516   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2375517   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2375518   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2375519   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2375520   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2375521   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2375522   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2375523   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2375524   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2375525   +END;
MPRINT(EM_DIAGRAM):   END;
2375526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375527   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2375528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375530   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2375531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375533   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2375534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375535   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2375536   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2375537   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2375538   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2375539   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2375540   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2375541   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2375542   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2375543   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2375544   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2375545   +          +    -1.12130210731541 * S_NumDealsPurchases
2375546   +          +    -0.12343505299726 * S_NumDistPurchases
2375547   +          +     0.11863092868196 * S_NumStorePurchases
2375548   +          +       0.583917993314 * S_NumWebPurchases
2375549   +          +     0.75529732848146 * S_NumWebVisitsMonth
2375550   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2375551   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2375552   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2375553   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2375554   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2375555   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2375556   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2375557   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2375558   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2375559   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2375560   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2375561   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2375562   +          +    -0.84113790640734 * S_NumDealsPurchases
2375563   +          +    -0.10512672747147 * S_NumDistPurchases
2375564   +          +     0.07268711782494 * S_NumStorePurchases
2375565   +          +     0.57578331257439 * S_NumWebPurchases
2375566   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2375567   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2375568   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2375569   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2375570   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2375571   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2375572   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2375573   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2375574   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2375575   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2375576   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2375577   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2375578   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2375579   +          +     0.45924983504762 * S_NumDealsPurchases
2375580   +          +    -0.25508041581692 * S_NumDistPurchases
2375581   +          +    -1.34901283858526 * S_NumStorePurchases
2375582   +          +    -0.86388975031663 * S_NumWebPurchases
2375583   +          +     1.86136110391797 * S_NumWebVisitsMonth
2375584   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2375585   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2375586   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2375587   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2375588   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2375589   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2375590   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2375591   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2375592   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2375593   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2375594   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2375595   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2375596   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2375597   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2375598   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2375599   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2375600   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2375601   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2375602   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2375603   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2375604   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2375605   +          +     0.48853068455666 * Marital_StatusDivorced
2375606   +          +    -0.54903474026465 * Marital_StatusMarried
2375607   +          +    -0.34079188373939 * Marital_StatusSingle
2375608   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2375609   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2375610   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2375611   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2375612   +          +    -1.03547689902027 * Marital_StatusDivorced
2375613   +          +     2.42164864610471 * Marital_StatusMarried
2375614   +          +    -1.95342561304942 * Marital_StatusSingle
2375615   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2375616   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2375617   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2375618   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2375619   +          +      0.4337638747935 * Marital_StatusDivorced
2375620   +          +    -0.38508657017615 * Marital_StatusMarried
2375621   +          +     -0.0160269708326 * Marital_StatusSingle
2375622   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2375623   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2375624   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2375625   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2375626   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2375627   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2375628   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2375629   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2375630   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2375631   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2375632   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2375633   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2375634   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2375635   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2375636   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2375637   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2375638   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2375639   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2375640   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2375641   +END;
MPRINT(EM_DIAGRAM):   END;
2375642   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2375643   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2375644   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2375645   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2375646   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2375647   +END;
MPRINT(EM_DIAGRAM):   END;
2375648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375649   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2375650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375651   +
2375652   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2375653   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2375654   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2375655   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2375656   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2375657   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375658   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2375659   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2375660   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2375661   +end;
MPRINT(EM_DIAGRAM):   end;
2375662   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375663   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2375664   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2375665   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2375666   +   end;
MPRINT(EM_DIAGRAM):   end;
2375667   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2375668   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2375669   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2375670   +   end;
MPRINT(EM_DIAGRAM):   end;
2375671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375672   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2375673   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2375674   +   end;
MPRINT(EM_DIAGRAM):   end;
2375675   +end;
MPRINT(EM_DIAGRAM):   end;
2375676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2375677   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2375678   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2375679   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2375680   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2375681   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2375682   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2375683   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2375684   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2375685   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2375686   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2375687   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2375688   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2375689   +END;
MPRINT(EM_DIAGRAM):   END;
2375690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2375691   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2375692   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2375693   +END;
MPRINT(EM_DIAGRAM):   END;
2375694   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2375695   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2375696   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2375697   +END;
MPRINT(EM_DIAGRAM):   END;
2375698   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2375699   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2375700   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2375701   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2375702   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2375703   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2375704   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2375705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375706   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2375707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2375708   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2375709   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2375710   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2375711   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2375712   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2375713   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2375714   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2375715   +END;
MPRINT(EM_DIAGRAM):   END;
2375716   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2375717   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2375718   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2375719   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2375720   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2375721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375722   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2375723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375724   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2375725   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2375726   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2375727   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2375728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375729   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2375730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375731   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2375732   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2375733   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2375734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375735   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
2375736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375738   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2375739   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2375740   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2375741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375742   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2375743   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2375744   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2375745   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2375746   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2375747   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2375748   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2375749   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2375750   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2375751   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2375752   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2375753   +LENGTH _WARN_ $4
2375754   +      F_DepVar  $ 12
2375755   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2375756   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2375757   +
2375758   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2375759   +
2375760   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2375761   +
2375762   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2375763   +
2375764   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2375765   +
2375766   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2375767   +
2375768   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2375769   +
2375770   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2375771   +
2375772   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2375773   +
2375774   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2375775   +
2375776   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2375777   +
2375778   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2375779   +
2375780   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2375781   +
2375782   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2375783   +
2375784   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2375785   +
2375786   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2375787   +
2375788   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2375789   +
2375790   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2375791   +
2375792   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2375793   +
2375794   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2375795   +
2375796   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2375797   +
2375798   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2375799   +
2375800   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2375801   +
2375802   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2375803   +
2375804   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2375805   +
2375806   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2375807   +
2375808   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2375809   +
2375810   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2375811   +
2375812   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2375813   +
2375814   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2375815   +
2375816   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2375817   +
2375818   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2375819   +
2375820   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2375821   +
2375822   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2375823   +
2375824   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2375825   +
2375826   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2375827   +
2375828   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2375829   +
2375830   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2375831   +
2375832   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2375833   +
2375834   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2375835   +
2375836   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2375837   +
2375838   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2375839   +
2375840   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2375841   +
2375842   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2375843   +
2375844   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2375845   +
2375846   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2375847   +
2375848   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2375849   +
2375850   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2375851   +
2375852   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2375853   +
2375854   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2375855   +
2375856   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2375857   +
2375858   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2375859   +
2375860   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2375861   +
2375862   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2375863   +
2375864   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2375865   +
2375866   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2375867   +
2375868   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2375869   +
2375870   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2375871   +
2375872   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2375873   +
2375874   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2375875   +
2375876   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2375877   +
2375878   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2375879   +
2375880   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2375881   +
2375882   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2375883   +
2375884   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2375885   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2375886   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2375887   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2375888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375890   +end;
MPRINT(EM_DIAGRAM):   end;
2375891   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375892   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375893   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2375894   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375895   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375896   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2375897   +   end;
MPRINT(EM_DIAGRAM):   end;
2375898   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375899   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2375900   +   end;
MPRINT(EM_DIAGRAM):   end;
2375901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375902   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2375903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375905   +   end;
MPRINT(EM_DIAGRAM):   end;
2375906   +end;
MPRINT(EM_DIAGRAM):   end;
2375907   +
2375908   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2375909   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2375910   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2375911   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2375912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375914   +end;
MPRINT(EM_DIAGRAM):   end;
2375915   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375917   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2375918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375919   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375920   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2375921   +   end;
MPRINT(EM_DIAGRAM):   end;
2375922   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375923   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2375924   +   end;
MPRINT(EM_DIAGRAM):   end;
2375925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375926   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2375927   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375928   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375929   +   end;
MPRINT(EM_DIAGRAM):   end;
2375930   +end;
MPRINT(EM_DIAGRAM):   end;
2375931   +
2375932   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2375933   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2375934   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2375935   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2375936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375938   +end;
MPRINT(EM_DIAGRAM):   end;
2375939   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375941   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2375942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375943   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375944   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2375945   +   end;
MPRINT(EM_DIAGRAM):   end;
2375946   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375947   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2375948   +   end;
MPRINT(EM_DIAGRAM):   end;
2375949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375950   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2375951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375953   +   end;
MPRINT(EM_DIAGRAM):   end;
2375954   +end;
MPRINT(EM_DIAGRAM):   end;
2375955   +
2375956   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2375957   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2375958   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2375959   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2375960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375962   +end;
MPRINT(EM_DIAGRAM):   end;
2375963   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375965   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2375966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375967   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375968   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2375969   +   end;
MPRINT(EM_DIAGRAM):   end;
2375970   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375971   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2375972   +   end;
MPRINT(EM_DIAGRAM):   end;
2375973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375974   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2375975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2375976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375977   +   end;
MPRINT(EM_DIAGRAM):   end;
2375978   +end;
MPRINT(EM_DIAGRAM):   end;
2375979   +
2375980   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2375981   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2375982   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2375983   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2375984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2375985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2375986   +end;
MPRINT(EM_DIAGRAM):   end;
2375987   +else do;
MPRINT(EM_DIAGRAM):   else do;
2375988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2375989   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2375990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2375991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2375992   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2375993   +   end;
MPRINT(EM_DIAGRAM):   end;
2375994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2375995   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2375996   +   end;
MPRINT(EM_DIAGRAM):   end;
2375997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2375998   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2375999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2376000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376001   +   end;
MPRINT(EM_DIAGRAM):   end;
2376002   +end;
MPRINT(EM_DIAGRAM):   end;
2376003   +
2376004   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2376005   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2376006   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2376007   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2376008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2376009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376010   +end;
MPRINT(EM_DIAGRAM):   end;
2376011   +else do;
MPRINT(EM_DIAGRAM):   else do;
2376012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2376013   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2376014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2376015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2376016   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2376017   +   end;
MPRINT(EM_DIAGRAM):   end;
2376018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2376019   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2376020   +   end;
MPRINT(EM_DIAGRAM):   end;
2376021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2376022   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2376023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2376024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376025   +   end;
MPRINT(EM_DIAGRAM):   end;
2376026   +end;
MPRINT(EM_DIAGRAM):   end;
2376027   +
2376028   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2376029   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2376030   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2376031   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2376032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2376033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376034   +end;
MPRINT(EM_DIAGRAM):   end;
2376035   +else do;
MPRINT(EM_DIAGRAM):   else do;
2376036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2376037   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2376038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2376039   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2376040   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2376041   +   end;
MPRINT(EM_DIAGRAM):   end;
2376042   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2376043   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2376044   +   end;
MPRINT(EM_DIAGRAM):   end;
2376045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2376046   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2376047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2376048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376049   +   end;
MPRINT(EM_DIAGRAM):   end;
2376050   +end;
MPRINT(EM_DIAGRAM):   end;
2376051   +
2376052   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2376053   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2376054   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2376055   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2376056   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2376057   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2376058   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2376059   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2376060   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2376061   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2376062   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2376063   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2376064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2376065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376066   +end;
MPRINT(EM_DIAGRAM):   end;
2376067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2376068   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2376069   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2376070   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2376071   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2376072   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2376073   +   end;
MPRINT(EM_DIAGRAM):   end;
2376074   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2376075   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2376076   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2376077   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2376078   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2376079   +   end;
MPRINT(EM_DIAGRAM):   end;
2376080   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2376081   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2376082   +   end;
MPRINT(EM_DIAGRAM):   end;
2376083   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2376084   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2376085   +   end;
MPRINT(EM_DIAGRAM):   end;
2376086   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2376087   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2376088   +   end;
MPRINT(EM_DIAGRAM):   end;
2376089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2376090   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2376091   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2376092   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2376093   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2376094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2376095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376096   +   end;
MPRINT(EM_DIAGRAM):   end;
2376097   +end;
MPRINT(EM_DIAGRAM):   end;
2376098   +
2376099   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2376100   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2376101   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2376102   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2376103   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2376104   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2376105   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2376106   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2376107   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2376108   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2376109   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2376110   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2376111   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2376112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2376113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376114   +end;
MPRINT(EM_DIAGRAM):   end;
2376115   +else do;
MPRINT(EM_DIAGRAM):   else do;
2376116   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2376117   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2376118   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2376119   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2376120   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2376121   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2376122   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2376123   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2376124   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2376125   +         end;
MPRINT(EM_DIAGRAM):   end;
2376126   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2376127   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2376128   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2376129   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2376130   +            end;
MPRINT(EM_DIAGRAM):   end;
2376131   +         end;
MPRINT(EM_DIAGRAM):   end;
2376132   +      end;
MPRINT(EM_DIAGRAM):   end;
2376133   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2376134   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2376135   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2376136   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2376137   +         end;
MPRINT(EM_DIAGRAM):   end;
2376138   +      end;
MPRINT(EM_DIAGRAM):   end;
2376139   +   end;
MPRINT(EM_DIAGRAM):   end;
2376140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2376141   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2376142   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2376143   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2376144   +      end;
MPRINT(EM_DIAGRAM):   end;
2376145   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2376146   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2376147   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2376148   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2376149   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2376150   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2376151   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2376152   +         end;
MPRINT(EM_DIAGRAM):   end;
2376153   +      end;
MPRINT(EM_DIAGRAM):   end;
2376154   +   end;
MPRINT(EM_DIAGRAM):   end;
2376155   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2376156   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2376157   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2376158   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2376159   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2376160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2376161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376162   +   end;
MPRINT(EM_DIAGRAM):   end;
2376163   +end;
MPRINT(EM_DIAGRAM):   end;
2376164   +
2376165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376166   +*** Checking missing input Interval
2376167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2376168   +
2376169   +IF NMISS(
2376170   +   AcceptedCmpTotal ,
2376171   +   Age ,
2376172   +   Frq ,
2376173   +   Income ,
2376174   +   Kidhome ,
2376175   +   Mnt ,
2376176   +   MntFishProducts ,
2376177   +   MntFruits ,
2376178   +   MntGoldProds ,
2376179   +   MntMeatProducts ,
2376180   +   MntSweetProducts ,
2376181   +   MntWines ,
2376182   +   MonthsAsCustomer ,
2376183   +   NumCatalogPurchases ,
2376184   +   NumDealsPurchases ,
2376185   +   NumDistPurchases ,
2376186   +   NumStorePurchases ,
2376187   +   NumWebPurchases ,
2376188   +   NumWebVisitsMonth ,
2376189   +   RFMstat ,
2376190   +   RMntFrq ,
2376191   +   Recency ,
2376192   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2376193   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2376194   +
2376195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2376196   +END;
MPRINT(EM_DIAGRAM):   END;
2376197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376198   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2376199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376200   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2376201   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2376202   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2376203   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2376204   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2376205   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2376206   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2376207   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2376208   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2376209   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2376210   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2376211   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2376212   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2376213   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2376214   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2376215   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2376216   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2376217   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2376218   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2376219   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2376220   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2376221   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2376222   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2376223   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2376224   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2376225   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2376226   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2376227   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2376228   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2376229   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2376230   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2376231   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2376232   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2376233   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2376234   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2376235   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2376236   +END;
MPRINT(EM_DIAGRAM):   END;
2376237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2376238   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2376239   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2376240   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2376241   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2376242   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2376243   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2376244   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2376245   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2376246   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2376247   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2376248   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2376249   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2376250   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2376251   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2376252   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2376253   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2376254   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2376255   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2376256   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2376257   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2376258   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2376259   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2376260   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2376261   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2376262   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2376263   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2376264   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2376265   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2376266   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2376267   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2376268   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2376269   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2376270   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2376271   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2376272   +   ELSE S_NumCatalogPurchases
2376273   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2376274   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2376275   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2376276   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2376277   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2376278   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2376279   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2376280   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2376281   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2376282   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2376283   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2376284   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2376285   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2376286   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2376287   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2376288   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2376289   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2376290   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2376291   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2376292   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2376293   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2376294   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2376295   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2376296   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2376297   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2376298   +END;
MPRINT(EM_DIAGRAM):   END;
2376299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376300   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2376301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376303   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2376304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376306   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2376307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376308   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2376309   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2376310   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2376311   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2376312   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2376313   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2376314   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2376315   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2376316   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2376317   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2376318   +          +     1.32037113020393 * S_NumDealsPurchases
2376319   +          +     0.42879249227132 * S_NumDistPurchases
2376320   +          +    -0.89190172778783 * S_NumStorePurchases
2376321   +          +    -0.87975442613962 * S_NumWebPurchases
2376322   +          +     2.98977282825831 * S_NumWebVisitsMonth
2376323   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2376324   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2376325   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2376326   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2376327   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2376328   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2376329   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2376330   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2376331   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2376332   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2376333   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2376334   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2376335   +          +    -1.16737670931605 * S_NumDealsPurchases
2376336   +          +     0.08205195039242 * S_NumDistPurchases
2376337   +          +    -0.65367044520084 * S_NumStorePurchases
2376338   +          +     2.39693083674757 * S_NumWebPurchases
2376339   +          +     0.18432526469897 * S_NumWebVisitsMonth
2376340   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2376341   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2376342   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2376343   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2376344   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2376345   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2376346   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2376347   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2376348   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2376349   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2376350   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2376351   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2376352   +          +     0.76616480025024 * S_NumDealsPurchases
2376353   +          +     0.42823368706255 * S_NumDistPurchases
2376354   +          +    -1.16998364854907 * S_NumStorePurchases
2376355   +          +     -1.0841896541746 * S_NumWebPurchases
2376356   +          +     2.74837744375079 * S_NumWebVisitsMonth
2376357   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2376358   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2376359   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2376360   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2376361   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2376362   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2376363   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2376364   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2376365   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2376366   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2376367   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2376368   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2376369   +          +     0.78421010501058 * S_NumDealsPurchases
2376370   +          +     0.01075885160671 * S_NumDistPurchases
2376371   +          +    -1.99395040717832 * S_NumStorePurchases
2376372   +          +    -1.02908330834262 * S_NumWebPurchases
2376373   +          +     2.79163466516477 * S_NumWebVisitsMonth
2376374   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2376375   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2376376   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2376377   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2376378   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2376379   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2376380   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2376381   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2376382   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2376383   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2376384   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2376385   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2376386   +          +    -1.04219068390022 * S_NumDealsPurchases
2376387   +          +    -0.45770204483973 * S_NumDistPurchases
2376388   +          +    -0.04941442229195 * S_NumStorePurchases
2376389   +          +     0.67187353161183 * S_NumWebPurchases
2376390   +          +     2.01907760553871 * S_NumWebVisitsMonth
2376391   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2376392   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2376393   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2376394   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2376395   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2376396   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2376397   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2376398   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2376399   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2376400   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2376401   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2376402   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2376403   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2376404   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2376405   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2376406   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2376407   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2376408   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2376409   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2376410   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2376411   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2376412   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2376413   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2376414   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2376415   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2376416   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2376417   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2376418   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2376419   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2376420   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2376421   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2376422   +          +     2.58907527032049 * Marital_StatusDivorced
2376423   +          +    -2.45549008158921 * Marital_StatusMarried
2376424   +          +     2.56223650840768 * Marital_StatusSingle
2376425   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2376426   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2376427   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2376428   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2376429   +          +     0.83917299191368 * Marital_StatusDivorced
2376430   +          +    -0.62624692699191 * Marital_StatusMarried
2376431   +          +    -0.22585060624911 * Marital_StatusSingle
2376432   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2376433   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2376434   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2376435   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2376436   +          +    -0.65063506696715 * Marital_StatusDivorced
2376437   +          +    -2.37495865381256 * Marital_StatusMarried
2376438   +          +    -0.54954654146904 * Marital_StatusSingle
2376439   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2376440   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2376441   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2376442   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2376443   +          +     0.16185824798364 * Marital_StatusDivorced
2376444   +          +    -0.08142416735136 * Marital_StatusMarried
2376445   +          +    -0.20392270385969 * Marital_StatusSingle
2376446   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2376447   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2376448   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2376449   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2376450   +          +      -0.516522631078 * Marital_StatusDivorced
2376451   +          +    -0.61661247789976 * Marital_StatusMarried
2376452   +          +    -0.99533130308294 * Marital_StatusSingle
2376453   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2376454   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2376455   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2376456   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2376457   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2376458   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2376459   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2376460   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2376461   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2376462   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2376463   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2376464   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2376465   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2376466   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2376467   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2376468   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2376469   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2376470   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2376471   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2376472   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2376473   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2376474   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2376475   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2376476   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2376477   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2376478   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2376479   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2376480   +END;
MPRINT(EM_DIAGRAM):   END;
2376481   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2376482   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2376483   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2376484   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2376485   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2376486   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2376487   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2376488   +END;
MPRINT(EM_DIAGRAM):   END;
2376489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376490   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2376491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2376493   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2376494   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2376495   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2376496   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2376497   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2376498   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2376499   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2376500   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2376501   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2376502   +          +    -0.03801022287706 * S_NumDealsPurchases
2376503   +          +    -1.50723574966419 * S_NumDistPurchases
2376504   +          +    -0.21514545448485 * S_NumStorePurchases
2376505   +          +    -0.50179555233865 * S_NumWebPurchases
2376506   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2376507   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2376508   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2376509   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2376510   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2376511   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2376512   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2376513   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2376514   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2376515   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2376516   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2376517   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2376518   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2376519   +          +     0.70551335536975 * S_NumDealsPurchases
2376520   +          +     0.02824488988803 * S_NumDistPurchases
2376521   +          +    -0.47958123842808 * S_NumStorePurchases
2376522   +          +     1.04559003239583 * S_NumWebPurchases
2376523   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2376524   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2376525   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2376526   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2376527   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2376528   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2376529   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2376530   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2376531   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2376532   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2376533   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2376534   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2376535   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2376536   +          +    -0.28907339261907 * S_NumDealsPurchases
2376537   +          +     0.04310505858352 * S_NumDistPurchases
2376538   +          +    -0.99594604666889 * S_NumStorePurchases
2376539   +          +    -0.58870940220114 * S_NumWebPurchases
2376540   +          +     0.84018399925148 * S_NumWebVisitsMonth
2376541   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2376542   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2376543   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2376544   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2376545   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2376546   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2376547   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2376548   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2376549   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2376550   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2376551   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2376552   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2376553   +          +     0.52917289878604 * S_NumDealsPurchases
2376554   +          +     0.30974142545809 * S_NumDistPurchases
2376555   +          +    -0.36081450643799 * S_NumStorePurchases
2376556   +          +    -0.28418053386759 * S_NumWebPurchases
2376557   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2376558   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2376559   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2376560   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2376561   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2376562   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2376563   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2376564   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2376565   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2376566   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2376567   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2376568   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2376569   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2376570   +          +    -0.47500053723253 * S_NumDealsPurchases
2376571   +          +     0.41421086319635 * S_NumDistPurchases
2376572   +          +     0.69664835428137 * S_NumStorePurchases
2376573   +          +     0.66359306812968 * S_NumWebPurchases
2376574   +          +     0.77931462528741 * S_NumWebVisitsMonth
2376575   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2376576   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2376577   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2376578   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2376579   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2376580   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2376581   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2376582   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2376583   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2376584   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2376585   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2376586   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2376587   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2376588   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2376589   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2376590   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2376591   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2376592   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2376593   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2376594   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2376595   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2376596   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2376597   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2376598   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2376599   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2376600   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2376601   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2376602   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2376603   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2376604   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2376605   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2376606   +          +    -1.34742914042312 * Marital_StatusDivorced
2376607   +          +    -0.75378934918763 * Marital_StatusMarried
2376608   +          +    -1.85411678929217 * Marital_StatusSingle
2376609   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2376610   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2376611   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2376612   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2376613   +          +     0.47958659206261 * Marital_StatusDivorced
2376614   +          +     -0.9665584294045 * Marital_StatusMarried
2376615   +          +      0.9733784530538 * Marital_StatusSingle
2376616   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2376617   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2376618   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2376619   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2376620   +          +    -0.56894207908284 * Marital_StatusDivorced
2376621   +          +    -0.96715106987195 * Marital_StatusMarried
2376622   +          +     1.18678144721443 * Marital_StatusSingle
2376623   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2376624   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2376625   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2376626   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2376627   +          +     -0.6061959224661 * Marital_StatusDivorced
2376628   +          +     0.03495844244684 * Marital_StatusMarried
2376629   +          +    -0.63896361063244 * Marital_StatusSingle
2376630   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2376631   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2376632   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2376633   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2376634   +          +     0.82178907301319 * Marital_StatusDivorced
2376635   +          +     1.69543553114589 * Marital_StatusMarried
2376636   +          +     -2.1272067363559 * Marital_StatusSingle
2376637   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2376638   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2376639   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2376640   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2376641   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2376642   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2376643   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2376644   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2376645   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2376646   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2376647   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2376648   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2376649   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2376650   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2376651   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2376652   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2376653   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2376654   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2376655   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2376656   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2376657   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2376658   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2376659   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2376660   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2376661   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2376662   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2376663   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2376664   +END;
MPRINT(EM_DIAGRAM):   END;
2376665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2376666   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2376667   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2376668   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2376669   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2376670   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2376671   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2376672   +END;
MPRINT(EM_DIAGRAM):   END;
2376673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376674   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2376675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2376677   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2376678   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2376679   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2376680   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2376681   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2376682   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2376683   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2376684   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2376685   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2376686   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2376687   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2376688   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2376689   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2376690   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2376691   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2376692   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2376693   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2376694   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2376695   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2376696   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2376697   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2376698   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2376699   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2376700   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2376701   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2376702   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2376703   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2376704   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2376705   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2376706   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2376707   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2376708   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2376709   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2376710   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2376711   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2376712   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2376713   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2376714   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2376715   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2376716   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2376717   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2376718   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2376719   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2376720   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2376721   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2376722   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2376723   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2376724   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2376725   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2376726   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2376727   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2376728   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2376729   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2376730   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2376731   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2376732   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2376733   +END;
MPRINT(EM_DIAGRAM):   END;
2376734   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2376735   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2376736   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2376737   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2376738   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2376739   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2376740   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2376741   +END;
MPRINT(EM_DIAGRAM):   END;
2376742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376743   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2376744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376745   +
2376746   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2376747   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2376748   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2376749   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2376750   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2376751   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2376752   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2376753   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2376754   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2376755   +end;
MPRINT(EM_DIAGRAM):   end;
2376756   +else do;
MPRINT(EM_DIAGRAM):   else do;
2376757   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2376758   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2376759   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2376760   +   end;
MPRINT(EM_DIAGRAM):   end;
2376761   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2376762   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2376763   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2376764   +   end;
MPRINT(EM_DIAGRAM):   end;
2376765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2376766   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2376767   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2376768   +   end;
MPRINT(EM_DIAGRAM):   end;
2376769   +end;
MPRINT(EM_DIAGRAM):   end;
2376770   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2376771   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2376772   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2376773   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2376774   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2376775   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2376776   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2376777   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2376778   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2376779   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2376780   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2376781   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2376782   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2376783   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2376784   +END;
MPRINT(EM_DIAGRAM):   END;
2376785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2376786   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2376787   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2376788   +END;
MPRINT(EM_DIAGRAM):   END;
2376789   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2376790   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2376791   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2376792   +END;
MPRINT(EM_DIAGRAM):   END;
2376793   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2376794   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2376795   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2376796   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2376797   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2376798   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2376799   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2376800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376801   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2376802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2376803   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2376804   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2376805   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2376806   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2376807   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2376808   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2376809   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2376810   +END;
MPRINT(EM_DIAGRAM):   END;
2376811   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2376812   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2376813   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2376814   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2376815   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2376816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376817   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2376818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376819   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2376820   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2376821   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2376822   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2376823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376824   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2376825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376826   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2376827   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2376828   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2376829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376830   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
2376831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376833   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2376834   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2376835   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2376836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376837   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2376838   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2376839   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2376840   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2376841   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2376842   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2376843   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2376844   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2376845   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2376846   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2376847   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2376848   +LENGTH _WARN_ $4
2376849   +      F_DepVar  $ 12
2376850   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2376851   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2376852   +
2376853   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2376854   +
2376855   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2376856   +
2376857   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2376858   +
2376859   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2376860   +
2376861   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2376862   +
2376863   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2376864   +
2376865   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2376866   +
2376867   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2376868   +
2376869   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2376870   +
2376871   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2376872   +
2376873   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2376874   +
2376875   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2376876   +
2376877   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2376878   +
2376879   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2376880   +
2376881   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2376882   +
2376883   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2376884   +
2376885   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2376886   +
2376887   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2376888   +
2376889   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2376890   +
2376891   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2376892   +
2376893   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2376894   +
2376895   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2376896   +
2376897   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2376898   +
2376899   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2376900   +
2376901   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2376902   +
2376903   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2376904   +
2376905   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2376906   +
2376907   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2376908   +
2376909   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2376910   +
2376911   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2376912   +
2376913   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2376914   +
2376915   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2376916   +
2376917   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2376918   +
2376919   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2376920   +
2376921   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2376922   +
2376923   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2376924   +
2376925   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2376926   +
2376927   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2376928   +
2376929   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2376930   +
2376931   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2376932   +
2376933   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2376934   +
2376935   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2376936   +
2376937   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2376938   +
2376939   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2376940   +
2376941   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2376942   +
2376943   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2376944   +
2376945   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2376946   +
2376947   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2376948   +
2376949   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2376950   +
2376951   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2376952   +
2376953   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2376954   +
2376955   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2376956   +
2376957   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2376958   +
2376959   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2376960   +
2376961   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2376962   +
2376963   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2376964   +
2376965   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2376966   +
2376967   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2376968   +
2376969   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2376970   +
2376971   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2376972   +
2376973   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2376974   +
2376975   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2376976   +
2376977   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2376978   +
2376979   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2376980   +
2376981   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2376982   +
2376983   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2376984   +
2376985   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2376986   +
2376987   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2376988   +
2376989   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2376990   +
2376991   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2376992   +
2376993   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2376994   +
2376995   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2376996   +
2376997   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2376998   +
2376999   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2377000   +
2377001   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2377002   +
2377003   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2377004   +
2377005   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2377006   +
2377007   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2377008   +
2377009   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2377010   +
2377011   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2377012   +
2377013   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2377014   +
2377015   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2377016   +
2377017   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2377018   +
2377019   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2377020   +
2377021   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2377022   +
2377023   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2377024   +
2377025   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2377026   +
2377027   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2377028   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2377029   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2377030   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2377031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377033   +end;
MPRINT(EM_DIAGRAM):   end;
2377034   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377036   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2377037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377039   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2377040   +   end;
MPRINT(EM_DIAGRAM):   end;
2377041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377042   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2377043   +   end;
MPRINT(EM_DIAGRAM):   end;
2377044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377045   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2377046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377048   +   end;
MPRINT(EM_DIAGRAM):   end;
2377049   +end;
MPRINT(EM_DIAGRAM):   end;
2377050   +
2377051   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2377052   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2377053   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2377054   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2377055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377057   +end;
MPRINT(EM_DIAGRAM):   end;
2377058   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377060   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2377061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377063   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2377064   +   end;
MPRINT(EM_DIAGRAM):   end;
2377065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377066   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2377067   +   end;
MPRINT(EM_DIAGRAM):   end;
2377068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377069   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2377070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377072   +   end;
MPRINT(EM_DIAGRAM):   end;
2377073   +end;
MPRINT(EM_DIAGRAM):   end;
2377074   +
2377075   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2377076   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2377077   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2377078   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2377079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377081   +end;
MPRINT(EM_DIAGRAM):   end;
2377082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377084   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2377085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377087   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2377088   +   end;
MPRINT(EM_DIAGRAM):   end;
2377089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377090   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2377091   +   end;
MPRINT(EM_DIAGRAM):   end;
2377092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377093   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2377094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377096   +   end;
MPRINT(EM_DIAGRAM):   end;
2377097   +end;
MPRINT(EM_DIAGRAM):   end;
2377098   +
2377099   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2377100   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2377101   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2377102   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2377103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377105   +end;
MPRINT(EM_DIAGRAM):   end;
2377106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377108   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2377109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377111   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2377112   +   end;
MPRINT(EM_DIAGRAM):   end;
2377113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377114   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2377115   +   end;
MPRINT(EM_DIAGRAM):   end;
2377116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377117   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2377118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377120   +   end;
MPRINT(EM_DIAGRAM):   end;
2377121   +end;
MPRINT(EM_DIAGRAM):   end;
2377122   +
2377123   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2377124   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2377125   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2377126   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2377127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377129   +end;
MPRINT(EM_DIAGRAM):   end;
2377130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377132   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2377133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377135   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2377136   +   end;
MPRINT(EM_DIAGRAM):   end;
2377137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377138   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2377139   +   end;
MPRINT(EM_DIAGRAM):   end;
2377140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377141   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2377142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377144   +   end;
MPRINT(EM_DIAGRAM):   end;
2377145   +end;
MPRINT(EM_DIAGRAM):   end;
2377146   +
2377147   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2377148   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2377149   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2377150   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2377151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377153   +end;
MPRINT(EM_DIAGRAM):   end;
2377154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377156   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2377157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2377159   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2377160   +   end;
MPRINT(EM_DIAGRAM):   end;
2377161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2377162   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2377163   +   end;
MPRINT(EM_DIAGRAM):   end;
2377164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377165   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2377166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377168   +   end;
MPRINT(EM_DIAGRAM):   end;
2377169   +end;
MPRINT(EM_DIAGRAM):   end;
2377170   +
2377171   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2377172   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2377173   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2377174   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2377175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377177   +end;
MPRINT(EM_DIAGRAM):   end;
2377178   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2377180   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2377181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377182   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2377183   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2377184   +   end;
MPRINT(EM_DIAGRAM):   end;
2377185   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2377186   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2377187   +   end;
MPRINT(EM_DIAGRAM):   end;
2377188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377189   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2377190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377192   +   end;
MPRINT(EM_DIAGRAM):   end;
2377193   +end;
MPRINT(EM_DIAGRAM):   end;
2377194   +
2377195   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2377196   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2377197   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2377198   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2377199   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2377200   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2377201   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2377202   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2377203   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2377204   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2377205   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2377206   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2377207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377209   +end;
MPRINT(EM_DIAGRAM):   end;
2377210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377211   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2377212   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2377213   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377214   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2377215   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2377216   +   end;
MPRINT(EM_DIAGRAM):   end;
2377217   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2377218   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2377219   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2377220   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2377221   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2377222   +   end;
MPRINT(EM_DIAGRAM):   end;
2377223   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2377224   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2377225   +   end;
MPRINT(EM_DIAGRAM):   end;
2377226   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2377227   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2377228   +   end;
MPRINT(EM_DIAGRAM):   end;
2377229   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2377230   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2377231   +   end;
MPRINT(EM_DIAGRAM):   end;
2377232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377233   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2377234   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2377235   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2377236   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2377237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377239   +   end;
MPRINT(EM_DIAGRAM):   end;
2377240   +end;
MPRINT(EM_DIAGRAM):   end;
2377241   +
2377242   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2377243   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2377244   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2377245   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2377246   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2377247   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2377248   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2377249   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2377250   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2377251   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2377252   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2377253   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2377254   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2377255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2377256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377257   +end;
MPRINT(EM_DIAGRAM):   end;
2377258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2377259   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2377260   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2377261   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2377262   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2377263   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2377264   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2377265   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2377266   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2377267   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2377268   +         end;
MPRINT(EM_DIAGRAM):   end;
2377269   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2377270   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2377271   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2377272   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2377273   +            end;
MPRINT(EM_DIAGRAM):   end;
2377274   +         end;
MPRINT(EM_DIAGRAM):   end;
2377275   +      end;
MPRINT(EM_DIAGRAM):   end;
2377276   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2377277   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2377278   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2377279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2377280   +         end;
MPRINT(EM_DIAGRAM):   end;
2377281   +      end;
MPRINT(EM_DIAGRAM):   end;
2377282   +   end;
MPRINT(EM_DIAGRAM):   end;
2377283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2377284   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2377285   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2377286   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2377287   +      end;
MPRINT(EM_DIAGRAM):   end;
2377288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2377289   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2377290   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2377291   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2377292   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2377293   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2377294   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2377295   +         end;
MPRINT(EM_DIAGRAM):   end;
2377296   +      end;
MPRINT(EM_DIAGRAM):   end;
2377297   +   end;
MPRINT(EM_DIAGRAM):   end;
2377298   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2377299   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2377300   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2377301   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2377302   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2377303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2377304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377305   +   end;
MPRINT(EM_DIAGRAM):   end;
2377306   +end;
MPRINT(EM_DIAGRAM):   end;
2377307   +
2377308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377309   +*** Checking missing input Interval
2377310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2377311   +
2377312   +IF NMISS(
2377313   +   AcceptedCmpTotal ,
2377314   +   Age ,
2377315   +   Frq ,
2377316   +   Income ,
2377317   +   Kidhome ,
2377318   +   Mnt ,
2377319   +   MntFishProducts ,
2377320   +   MntFruits ,
2377321   +   MntGoldProds ,
2377322   +   MntMeatProducts ,
2377323   +   MntSweetProducts ,
2377324   +   MntWines ,
2377325   +   MonthsAsCustomer ,
2377326   +   NumCatalogPurchases ,
2377327   +   NumDealsPurchases ,
2377328   +   NumDistPurchases ,
2377329   +   NumStorePurchases ,
2377330   +   NumWebPurchases ,
2377331   +   NumWebVisitsMonth ,
2377332   +   RFMstat ,
2377333   +   RMntFrq ,
2377334   +   Recency ,
2377335   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2377336   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2377337   +
2377338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2377339   +END;
MPRINT(EM_DIAGRAM):   END;
2377340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377341   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2377342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377343   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2377344   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2377345   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2377346   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2377347   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2377348   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2377349   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2377350   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2377351   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2377352   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2377353   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2377354   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2377355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2377356   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2377357   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2377358   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2377359   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2377360   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2377361   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2377362   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2377363   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2377364   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2377365   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2377366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2377367   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2377368   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2377369   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2377370   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2377371   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2377372   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2377373   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2377374   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2377375   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2377376   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2377377   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2377378   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2377379   +END;
MPRINT(EM_DIAGRAM):   END;
2377380   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2377381   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2377382   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2377383   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2377384   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2377385   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2377386   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2377387   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2377388   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2377389   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2377390   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2377391   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2377392   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2377393   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2377394   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2377395   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2377396   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2377397   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2377398   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2377399   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2377400   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2377401   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2377402   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2377403   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2377404   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2377405   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2377406   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2377407   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2377408   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2377409   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2377410   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2377411   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2377412   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2377413   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2377414   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2377415   +   ELSE S_NumCatalogPurchases
2377416   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2377417   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2377418   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2377419   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2377420   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2377421   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2377422   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2377423   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2377424   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2377425   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2377426   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2377427   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2377428   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2377429   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2377430   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2377431   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2377432   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2377433   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2377434   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2377435   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2377436   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2377437   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2377438   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2377439   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2377440   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2377441   +END;
MPRINT(EM_DIAGRAM):   END;
2377442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377443   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2377444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377446   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2377447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377449   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2377450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2377452   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2377453   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2377454   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2377455   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2377456   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2377457   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2377458   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2377459   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2377460   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2377461   +          +    -1.18466001117424 * S_NumDealsPurchases
2377462   +          +     -0.1371252133567 * S_NumDistPurchases
2377463   +          +     1.92719775731123 * S_NumStorePurchases
2377464   +          +     1.23184249192116 * S_NumWebPurchases
2377465   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2377466   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2377467   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2377468   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2377469   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2377470   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2377471   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2377472   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2377473   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2377474   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2377475   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2377476   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2377477   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2377478   +          +     0.63616523425865 * S_NumDealsPurchases
2377479   +          +     0.45460056261546 * S_NumDistPurchases
2377480   +          +    -0.61009999017225 * S_NumStorePurchases
2377481   +          +     1.85193755731081 * S_NumWebPurchases
2377482   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2377483   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2377484   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2377485   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2377486   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2377487   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2377488   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2377489   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2377490   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2377491   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2377492   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2377493   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2377494   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2377495   +          +      1.8907968580473 * S_NumDealsPurchases
2377496   +          +     0.01244124801764 * S_NumDistPurchases
2377497   +          +    -2.34409118104622 * S_NumStorePurchases
2377498   +          +    -1.80820043087435 * S_NumWebPurchases
2377499   +          +     2.40219682136039 * S_NumWebVisitsMonth
2377500   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2377501   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2377502   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2377503   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2377504   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2377505   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2377506   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2377507   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2377508   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2377509   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2377510   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2377511   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2377512   +          +     0.28209537604198 * S_NumDealsPurchases
2377513   +          +      0.6450277971767 * S_NumDistPurchases
2377514   +          +     0.85050092520609 * S_NumStorePurchases
2377515   +          +    -0.53920307215941 * S_NumWebPurchases
2377516   +          +     3.01106015100147 * S_NumWebVisitsMonth
2377517   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2377518   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2377519   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2377520   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2377521   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2377522   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2377523   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2377524   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2377525   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2377526   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2377527   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2377528   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2377529   +          +    -0.36642526324451 * S_NumDealsPurchases
2377530   +          +     -0.6091014843932 * S_NumDistPurchases
2377531   +          +    -0.21154626182088 * S_NumStorePurchases
2377532   +          +    -0.10361347071364 * S_NumWebPurchases
2377533   +          +     1.36358817627784 * S_NumWebVisitsMonth
2377534   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2377535   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2377536   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2377537   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2377538   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2377539   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2377540   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2377541   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2377542   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2377543   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2377544   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2377545   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2377546   +          +    -0.14868505161718 * S_NumDealsPurchases
2377547   +          +    -0.08395384711805 * S_NumDistPurchases
2377548   +          +     0.60525238179245 * S_NumStorePurchases
2377549   +          +     0.04555100214276 * S_NumWebPurchases
2377550   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2377551   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2377552   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2377553   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2377554   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2377555   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2377556   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2377557   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2377558   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2377559   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2377560   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2377561   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2377562   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2377563   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2377564   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2377565   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2377566   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2377567   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2377568   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2377569   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2377570   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2377571   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2377572   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2377573   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2377574   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2377575   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2377576   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2377577   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2377578   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2377579   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2377580   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2377581   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2377582   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2377583   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2377584   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2377585   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2377586   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2377587   +          +     -0.7180104021039 * Marital_StatusDivorced
2377588   +          +      0.5957373170744 * Marital_StatusMarried
2377589   +          +    -0.86183942803988 * Marital_StatusSingle
2377590   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2377591   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2377592   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2377593   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2377594   +          +     0.84772700244021 * Marital_StatusDivorced
2377595   +          +    -0.37049970188511 * Marital_StatusMarried
2377596   +          +     1.54291641732063 * Marital_StatusSingle
2377597   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2377598   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2377599   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2377600   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2377601   +          +     0.73222548496385 * Marital_StatusDivorced
2377602   +          +    -0.50102202656102 * Marital_StatusMarried
2377603   +          +    -0.07207130428422 * Marital_StatusSingle
2377604   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2377605   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2377606   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2377607   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2377608   +          +     0.25894719464799 * Marital_StatusDivorced
2377609   +          +    -1.95576501275834 * Marital_StatusMarried
2377610   +          +     2.65422185276746 * Marital_StatusSingle
2377611   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2377612   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2377613   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2377614   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2377615   +          +     0.60936191204707 * Marital_StatusDivorced
2377616   +          +    -0.52190111190458 * Marital_StatusMarried
2377617   +          +    -0.60982305233136 * Marital_StatusSingle
2377618   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2377619   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2377620   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2377621   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2377622   +          +    -1.44614502228294 * Marital_StatusDivorced
2377623   +          +      2.9001493892928 * Marital_StatusMarried
2377624   +          +    -2.60467399972513 * Marital_StatusSingle
2377625   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2377626   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2377627   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2377628   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2377629   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2377630   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2377631   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2377632   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2377633   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2377634   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2377635   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2377636   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2377637   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2377638   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2377639   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2377640   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2377641   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2377642   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2377643   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2377644   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2377645   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2377646   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2377647   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2377648   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2377649   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2377650   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2377651   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2377652   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2377653   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2377654   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2377655   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2377656   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2377657   +END;
MPRINT(EM_DIAGRAM):   END;
2377658   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2377659   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2377660   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2377661   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2377662   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2377663   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2377664   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2377665   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2377666   +END;
MPRINT(EM_DIAGRAM):   END;
2377667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377668   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2377669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377670   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2377671   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2377672   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2377673   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2377674   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2377675   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2377676   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2377677   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2377678   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2377679   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2377680   +          +    -0.46483717253931 * S_NumDealsPurchases
2377681   +          +    -0.53329008421157 * S_NumDistPurchases
2377682   +          +      0.2490774300193 * S_NumStorePurchases
2377683   +          +    -0.82755150673885 * S_NumWebPurchases
2377684   +          +     0.04007223822389 * S_NumWebVisitsMonth
2377685   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2377686   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2377687   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2377688   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2377689   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2377690   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2377691   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2377692   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2377693   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2377694   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2377695   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2377696   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2377697   +          +     0.75855101382458 * S_NumDealsPurchases
2377698   +          +     1.61754951768262 * S_NumDistPurchases
2377699   +          +    -0.48146714929729 * S_NumStorePurchases
2377700   +          +    -0.76460728035552 * S_NumWebPurchases
2377701   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2377702   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2377703   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2377704   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2377705   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2377706   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2377707   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2377708   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2377709   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2377710   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2377711   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2377712   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2377713   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2377714   +          +     0.75255317965748 * S_NumDealsPurchases
2377715   +          +     1.34900588315783 * S_NumDistPurchases
2377716   +          +    -0.17717469778048 * S_NumStorePurchases
2377717   +          +    -0.01560551546553 * S_NumWebPurchases
2377718   +          +     1.24315988674343 * S_NumWebVisitsMonth
2377719   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2377720   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2377721   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2377722   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2377723   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2377724   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2377725   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2377726   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2377727   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2377728   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2377729   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2377730   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2377731   +          +    -1.71127148178768 * S_NumDealsPurchases
2377732   +          +    -1.77527355221308 * S_NumDistPurchases
2377733   +          +    -1.40009594349363 * S_NumStorePurchases
2377734   +          +    -0.46471012062697 * S_NumWebPurchases
2377735   +          +     0.04619891083228 * S_NumWebVisitsMonth
2377736   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2377737   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2377738   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2377739   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2377740   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2377741   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2377742   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2377743   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2377744   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2377745   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2377746   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2377747   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2377748   +          +    -0.22204470395056 * S_NumDealsPurchases
2377749   +          +    -1.74490476011984 * S_NumDistPurchases
2377750   +          +     1.93538420108324 * S_NumStorePurchases
2377751   +          +     1.04892631742152 * S_NumWebPurchases
2377752   +          +     1.50717841566047 * S_NumWebVisitsMonth
2377753   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2377754   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2377755   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2377756   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2377757   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2377758   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2377759   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2377760   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2377761   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2377762   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2377763   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2377764   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2377765   +          +    -0.94690420785776 * S_NumDealsPurchases
2377766   +          +     1.87932706342204 * S_NumDistPurchases
2377767   +          +     0.31232717416487 * S_NumStorePurchases
2377768   +          +     1.51889492693355 * S_NumWebPurchases
2377769   +          +     0.04376853689795 * S_NumWebVisitsMonth
2377770   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2377771   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2377772   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2377773   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2377774   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2377775   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2377776   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2377777   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2377778   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2377779   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2377780   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2377781   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2377782   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2377783   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2377784   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2377785   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2377786   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2377787   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2377788   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2377789   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2377790   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2377791   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2377792   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2377793   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2377794   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2377795   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2377796   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2377797   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2377798   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2377799   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2377800   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2377801   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2377802   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2377803   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2377804   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2377805   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2377806   +          +     0.56030871857835 * Marital_StatusDivorced
2377807   +          +    -1.22448534379831 * Marital_StatusMarried
2377808   +          +     0.78141783495855 * Marital_StatusSingle
2377809   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2377810   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2377811   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2377812   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2377813   +          +    -2.63452071552997 * Marital_StatusDivorced
2377814   +          +     0.61829054779121 * Marital_StatusMarried
2377815   +          +    -2.20743370246315 * Marital_StatusSingle
2377816   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2377817   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2377818   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2377819   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2377820   +          +      -1.454102516731 * Marital_StatusDivorced
2377821   +          +     0.71488291465759 * Marital_StatusMarried
2377822   +          +     0.96038830049792 * Marital_StatusSingle
2377823   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2377824   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2377825   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2377826   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2377827   +          +    -0.01160394891598 * Marital_StatusDivorced
2377828   +          +    -1.09054636482951 * Marital_StatusMarried
2377829   +          +      0.7793855479379 * Marital_StatusSingle
2377830   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2377831   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2377832   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2377833   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2377834   +          +    -0.73414854875115 * Marital_StatusDivorced
2377835   +          +     0.46421425621114 * Marital_StatusMarried
2377836   +          +    -0.54512730625469 * Marital_StatusSingle
2377837   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2377838   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2377839   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2377840   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2377841   +          +     0.25131188683384 * Marital_StatusDivorced
2377842   +          +     2.38279806963807 * Marital_StatusMarried
2377843   +          +     0.28897706448348 * Marital_StatusSingle
2377844   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2377845   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2377846   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2377847   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2377848   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2377849   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2377850   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2377851   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2377852   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2377853   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2377854   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2377855   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2377856   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2377857   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2377858   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2377859   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2377860   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2377861   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2377862   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2377863   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2377864   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2377865   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2377866   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2377867   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2377868   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2377869   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2377870   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2377871   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2377872   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2377873   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2377874   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2377875   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2377876   +END;
MPRINT(EM_DIAGRAM):   END;
2377877   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2377878   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2377879   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2377880   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2377881   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2377882   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2377883   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2377884   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2377885   +END;
MPRINT(EM_DIAGRAM):   END;
2377886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377887   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2377888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2377889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2377890   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2377891   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2377892   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2377893   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2377894   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2377895   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2377896   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2377897   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2377898   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2377899   +          +     1.11855402225797 * S_NumDealsPurchases
2377900   +          +     0.39150287442005 * S_NumDistPurchases
2377901   +          +     0.00160244551627 * S_NumStorePurchases
2377902   +          +     1.54380043731879 * S_NumWebPurchases
2377903   +          +      0.6462755347813 * S_NumWebVisitsMonth
2377904   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2377905   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2377906   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2377907   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2377908   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2377909   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2377910   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2377911   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2377912   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2377913   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2377914   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2377915   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2377916   +          +     0.01911815525287 * S_NumDealsPurchases
2377917   +          +    -1.07196707915227 * S_NumDistPurchases
2377918   +          +      0.6452048321682 * S_NumStorePurchases
2377919   +          +    -0.15818575353955 * S_NumWebPurchases
2377920   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2377921   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2377922   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2377923   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2377924   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2377925   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2377926   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2377927   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2377928   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2377929   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2377930   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2377931   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2377932   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2377933   +          +     1.56893739271853 * S_NumDealsPurchases
2377934   +          +      0.6745865425238 * S_NumDistPurchases
2377935   +          +    -0.26848765783548 * S_NumStorePurchases
2377936   +          +     0.79227081430227 * S_NumWebPurchases
2377937   +          +     0.83054874267768 * S_NumWebVisitsMonth
2377938   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2377939   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2377940   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2377941   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2377942   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2377943   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2377944   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2377945   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2377946   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2377947   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2377948   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2377949   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2377950   +          +    -0.23954856030467 * S_NumDealsPurchases
2377951   +          +    -1.61914390483829 * S_NumDistPurchases
2377952   +          +      -1.014570623016 * S_NumStorePurchases
2377953   +          +    -0.36828642098701 * S_NumWebPurchases
2377954   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2377955   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2377956   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2377957   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2377958   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2377959   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2377960   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2377961   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2377962   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2377963   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2377964   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2377965   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2377966   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2377967   +          +     1.00094082424204 * S_NumDealsPurchases
2377968   +          +      0.2724785290725 * S_NumDistPurchases
2377969   +          +     0.13170237783486 * S_NumStorePurchases
2377970   +          +    -1.31447792523743 * S_NumWebPurchases
2377971   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2377972   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2377973   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2377974   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2377975   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2377976   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2377977   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2377978   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2377979   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2377980   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2377981   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2377982   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2377983   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2377984   +          +    -0.73198872336344 * S_NumDealsPurchases
2377985   +          +     0.29368958872361 * S_NumDistPurchases
2377986   +          +     1.52772046446908 * S_NumStorePurchases
2377987   +          +    -1.75065469134874 * S_NumWebPurchases
2377988   +          +      0.0264954621772 * S_NumWebVisitsMonth
2377989   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2377990   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2377991   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2377992   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2377993   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2377994   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2377995   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2377996   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2377997   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2377998   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2377999   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2378000   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2378001   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2378002   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2378003   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2378004   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2378005   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2378006   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2378007   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2378008   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2378009   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2378010   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2378011   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2378012   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2378013   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2378014   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2378015   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2378016   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2378017   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2378018   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2378019   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2378020   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2378021   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2378022   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2378023   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2378024   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2378025   +          +     0.32207432513904 * Marital_StatusDivorced
2378026   +          +      0.6397913221395 * Marital_StatusMarried
2378027   +          +    -0.25330032559918 * Marital_StatusSingle
2378028   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2378029   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2378030   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2378031   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2378032   +          +     0.79430904713493 * Marital_StatusDivorced
2378033   +          +     2.54456429102799 * Marital_StatusMarried
2378034   +          +     0.59410742352499 * Marital_StatusSingle
2378035   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2378036   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2378037   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2378038   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2378039   +          +    -0.43081775693595 * Marital_StatusDivorced
2378040   +          +    -0.78485102174552 * Marital_StatusMarried
2378041   +          +    -1.56581090110813 * Marital_StatusSingle
2378042   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2378043   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2378044   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2378045   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2378046   +          +     0.38226706522151 * Marital_StatusDivorced
2378047   +          +     0.96666958079914 * Marital_StatusMarried
2378048   +          +    -0.07771259761555 * Marital_StatusSingle
2378049   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2378050   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2378051   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2378052   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2378053   +          +    -0.38325393606947 * Marital_StatusDivorced
2378054   +          +    -1.43303056163299 * Marital_StatusMarried
2378055   +          +     0.11571941757387 * Marital_StatusSingle
2378056   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2378057   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2378058   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2378059   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2378060   +          +    -0.36491799765765 * Marital_StatusDivorced
2378061   +          +     0.14142786767503 * Marital_StatusMarried
2378062   +          +     0.22643970468805 * Marital_StatusSingle
2378063   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2378064   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2378065   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2378066   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2378067   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2378068   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2378069   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2378070   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2378071   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2378072   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2378073   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2378074   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2378075   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2378076   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2378077   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2378078   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2378079   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2378080   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2378081   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2378082   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2378083   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2378084   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2378085   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2378086   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2378087   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2378088   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2378089   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2378090   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2378091   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2378092   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2378093   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2378094   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2378095   +END;
MPRINT(EM_DIAGRAM):   END;
2378096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2378097   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2378098   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2378099   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2378100   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2378101   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2378102   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2378103   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2378104   +END;
MPRINT(EM_DIAGRAM):   END;
2378105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378106   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2378107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378108   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2378109   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2378110   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2378111   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2378112   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2378113   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2378114   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2378115   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2378116   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2378117   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2378118   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2378119   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2378120   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2378121   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2378122   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2378123   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2378124   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2378125   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2378126   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2378127   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2378128   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2378129   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2378130   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2378131   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2378132   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2378133   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2378134   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2378135   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2378136   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2378137   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2378138   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2378139   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2378140   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2378141   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2378142   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2378143   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2378144   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2378145   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2378146   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2378147   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2378148   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2378149   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2378150   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2378151   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2378152   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2378153   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2378154   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2378155   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2378156   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2378157   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2378158   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2378159   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2378160   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2378161   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2378162   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2378163   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2378164   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2378165   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2378166   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2378167   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2378168   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2378169   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2378170   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2378171   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2378172   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2378173   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2378174   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2378175   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2378176   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2378177   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2378178   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2378179   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2378180   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2378181   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2378182   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2378183   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2378184   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2378185   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2378186   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2378187   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2378188   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2378189   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2378190   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2378191   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2378192   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2378193   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2378194   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2378195   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2378196   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2378197   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2378198   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2378199   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2378200   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2378201   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2378202   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2378203   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2378204   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2378205   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2378206   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2378207   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2378208   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2378209   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2378210   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2378211   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2378212   +END;
MPRINT(EM_DIAGRAM):   END;
2378213   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2378214   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2378215   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2378216   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2378217   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2378218   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2378219   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2378220   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2378221   +END;
MPRINT(EM_DIAGRAM):   END;
2378222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378223   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2378224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2378226   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2378227   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2378228   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2378229   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2378230   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2378231   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2378232   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2378233   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2378234   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2378235   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2378236   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2378237   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2378238   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2378239   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2378240   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2378241   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2378242   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2378243   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2378244   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2378245   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2378246   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2378247   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2378248   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2378249   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2378250   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2378251   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2378252   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2378253   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2378254   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2378255   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2378256   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2378257   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2378258   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2378259   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2378260   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2378261   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2378262   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2378263   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2378264   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2378265   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2378266   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2378267   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2378268   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2378269   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2378270   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2378271   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2378272   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2378273   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2378274   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2378275   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2378276   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2378277   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2378278   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2378279   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2378280   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2378281   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2378282   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2378283   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2378284   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2378285   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2378286   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2378287   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2378288   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2378289   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2378290   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2378291   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2378292   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2378293   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2378294   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2378295   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2378296   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2378297   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2378298   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2378299   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2378300   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2378301   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2378302   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2378303   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2378304   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2378305   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2378306   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2378307   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2378308   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2378309   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2378310   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2378311   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2378312   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2378313   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2378314   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2378315   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2378316   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2378317   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2378318   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2378319   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2378320   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2378321   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2378322   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2378323   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2378324   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2378325   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2378326   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2378327   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2378328   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2378329   +END;
MPRINT(EM_DIAGRAM):   END;
2378330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2378331   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2378332   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2378333   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2378334   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2378335   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2378336   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2378337   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2378338   +END;
MPRINT(EM_DIAGRAM):   END;
2378339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378340   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2378341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378342   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2378343   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2378344   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2378345   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2378346   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2378347   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2378348   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2378349   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2378350   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2378351   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2378352   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2378353   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2378354   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2378355   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2378356   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2378357   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2378358   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2378359   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2378360   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2378361   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2378362   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2378363   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2378364   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2378365   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2378366   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2378367   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2378368   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2378369   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2378370   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2378371   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2378372   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2378373   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2378374   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2378375   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2378376   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2378377   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2378378   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2378379   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2378380   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2378381   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2378382   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2378383   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2378384   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2378385   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2378386   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2378387   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2378388   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2378389   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2378390   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2378391   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2378392   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2378393   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2378394   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2378395   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2378396   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2378397   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2378398   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2378399   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2378400   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2378401   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2378402   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2378403   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2378404   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2378405   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2378406   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2378407   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2378408   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2378409   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2378410   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2378411   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2378412   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2378413   +END;
MPRINT(EM_DIAGRAM):   END;
2378414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2378415   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2378416   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2378417   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2378418   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2378419   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2378420   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2378421   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2378422   +END;
MPRINT(EM_DIAGRAM):   END;
2378423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378424   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2378425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378426   +
2378427   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2378428   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2378429   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2378430   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2378431   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2378432   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378433   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2378434   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2378435   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2378436   +end;
MPRINT(EM_DIAGRAM):   end;
2378437   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378438   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2378439   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2378440   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2378441   +   end;
MPRINT(EM_DIAGRAM):   end;
2378442   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2378443   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2378444   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2378445   +   end;
MPRINT(EM_DIAGRAM):   end;
2378446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378447   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2378448   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2378449   +   end;
MPRINT(EM_DIAGRAM):   end;
2378450   +end;
MPRINT(EM_DIAGRAM):   end;
2378451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2378452   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2378453   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2378454   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2378455   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2378456   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2378457   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2378458   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2378459   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2378460   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2378461   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2378462   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2378463   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2378464   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2378465   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2378466   +END;
MPRINT(EM_DIAGRAM):   END;
2378467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2378468   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2378469   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2378470   +END;
MPRINT(EM_DIAGRAM):   END;
2378471   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2378472   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2378473   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2378474   +END;
MPRINT(EM_DIAGRAM):   END;
2378475   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2378476   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2378477   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2378478   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2378479   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2378480   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2378481   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2378482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378483   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2378484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2378485   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2378486   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2378487   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2378488   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2378489   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2378490   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2378491   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2378492   +END;
MPRINT(EM_DIAGRAM):   END;
2378493   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2378494   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2378495   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2378496   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2378497   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2378498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378499   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2378500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378501   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2378502   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2378503   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2378504   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2378505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378506   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2378507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378508   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2378509   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2378510   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2378511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378512   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
2378513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378514   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2378515   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2378516   +P_DepVar1 = max(
2378517   +AutoNeural9_P_DepVar1 ,
2378518   +AutoNeural11_P_DepVar1 ,
2378519   +AutoNeural12_P_DepVar1
2378520   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural12_P_DepVar1 );
2378521   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2378522   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2378523   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2378524   +end;
MPRINT(EM_DIAGRAM):   end;
2378525   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2378526   +P_DepVar0 = max(
2378527   +AutoNeural9_P_DepVar0 ,
2378528   +AutoNeural11_P_DepVar0 ,
2378529   +AutoNeural12_P_DepVar0
2378530   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural12_P_DepVar0 );
2378531   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2378532   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2378533   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2378534   +end;
MPRINT(EM_DIAGRAM):   end;
2378535   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2378536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378537   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
2378538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378539   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2378540   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2378541   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2378542   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2378543   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2378544   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2378545   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2378546   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2378547   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2378548   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2378549   +end;
MPRINT(EM_DIAGRAM):   end;
2378550   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2378551   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2378552   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2378553   +end;
MPRINT(EM_DIAGRAM):   end;
2378554   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2378555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378556   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
2378557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378558   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2378559   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2378560   +else
2378561   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2378562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378563   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
2378564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378565   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2378566   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2378567   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2378568   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2378568  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2378569   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2378569  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2378570   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2378570  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2378571   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2378571  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2378572   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2378572  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2378573   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2378573  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2378574   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2378574  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2378575   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2378575  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2378576   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2378576  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2378577   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2378577  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2378578   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2378578  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2378579   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2378579  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2378580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378581   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
2378582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2378583   +if
2378584   +F_DepVar NE '1'
2378585   +AND F_DepVar NE '0'
2378586   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2378587   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2378588   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2378589   +end;
MPRINT(EM_DIAGRAM):   end;
2378590   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378591   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2378592   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2378593   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2378594   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2378595   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2378596   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2378597   +END;
MPRINT(EM_DIAGRAM):   END;
2378598   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2378599    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2378600    quit;
2378601    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl43_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2378661    filename _pref
2378661  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2378662    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2378663    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2378664   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2378665   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2378666   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2378667   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2378668   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2378669   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2378670   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2378671   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2378672   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2378673   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2378674   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2378675   +LENGTH _WARN_ $4
2378676   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2378677   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2378678   +
2378679   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2378680   +
2378681   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2378682   +
2378683   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2378684   +
2378685   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2378686   +
2378687   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2378688   +
2378689   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2378690   +
2378691   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2378692   +
2378693   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2378694   +
2378695   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2378696   +
2378697   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2378698   +
2378699   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2378700   +
2378701   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2378702   +
2378703   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2378704   +
2378705   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2378706   +
2378707   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2378708   +
2378709   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2378710   +
2378711   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2378712   +
2378713   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2378714   +
2378715   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2378716   +
2378717   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2378718   +
2378719   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2378720   +
2378721   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2378722   +
2378723   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2378724   +
2378725   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2378726   +
2378727   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2378728   +
2378729   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2378730   +
2378731   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2378732   +
2378733   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2378734   +
2378735   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2378736   +
2378737   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2378738   +
2378739   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2378740   +
2378741   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2378742   +
2378743   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2378744   +
2378745   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2378746   +
2378747   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2378748   +
2378749   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2378750   +
2378751   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2378752   +
2378753   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2378754   +
2378755   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2378756   +
2378757   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2378758   +
2378759   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2378760   +
2378761   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2378762   +
2378763   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2378764   +
2378765   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2378766   +
2378767   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2378768   +
2378769   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2378770   +
2378771   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2378772   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2378773   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2378774   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2378775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378777   +end;
MPRINT(EM_DIAGRAM):   end;
2378778   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378779   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378780   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2378781   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378782   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378783   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2378784   +   end;
MPRINT(EM_DIAGRAM):   end;
2378785   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378786   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2378787   +   end;
MPRINT(EM_DIAGRAM):   end;
2378788   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378789   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2378790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378792   +   end;
MPRINT(EM_DIAGRAM):   end;
2378793   +end;
MPRINT(EM_DIAGRAM):   end;
2378794   +
2378795   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2378796   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2378797   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2378798   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2378799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378801   +end;
MPRINT(EM_DIAGRAM):   end;
2378802   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378803   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378804   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2378805   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378806   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378807   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2378808   +   end;
MPRINT(EM_DIAGRAM):   end;
2378809   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378810   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2378811   +   end;
MPRINT(EM_DIAGRAM):   end;
2378812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378813   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2378814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378816   +   end;
MPRINT(EM_DIAGRAM):   end;
2378817   +end;
MPRINT(EM_DIAGRAM):   end;
2378818   +
2378819   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2378820   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2378821   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2378822   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2378823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378825   +end;
MPRINT(EM_DIAGRAM):   end;
2378826   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378827   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378828   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2378829   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378830   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378831   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2378832   +   end;
MPRINT(EM_DIAGRAM):   end;
2378833   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378834   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2378835   +   end;
MPRINT(EM_DIAGRAM):   end;
2378836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378837   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2378838   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378839   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378840   +   end;
MPRINT(EM_DIAGRAM):   end;
2378841   +end;
MPRINT(EM_DIAGRAM):   end;
2378842   +
2378843   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2378844   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2378845   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2378846   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2378847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378849   +end;
MPRINT(EM_DIAGRAM):   end;
2378850   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378851   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378852   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2378853   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378854   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378855   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2378856   +   end;
MPRINT(EM_DIAGRAM):   end;
2378857   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378858   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2378859   +   end;
MPRINT(EM_DIAGRAM):   end;
2378860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378861   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2378862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378864   +   end;
MPRINT(EM_DIAGRAM):   end;
2378865   +end;
MPRINT(EM_DIAGRAM):   end;
2378866   +
2378867   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2378868   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2378869   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2378870   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2378871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378873   +end;
MPRINT(EM_DIAGRAM):   end;
2378874   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378876   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2378877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378878   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378879   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2378880   +   end;
MPRINT(EM_DIAGRAM):   end;
2378881   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378882   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2378883   +   end;
MPRINT(EM_DIAGRAM):   end;
2378884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378885   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2378886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378888   +   end;
MPRINT(EM_DIAGRAM):   end;
2378889   +end;
MPRINT(EM_DIAGRAM):   end;
2378890   +
2378891   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2378892   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2378893   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2378894   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2378895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378897   +end;
MPRINT(EM_DIAGRAM):   end;
2378898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378900   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2378901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2378903   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2378904   +   end;
MPRINT(EM_DIAGRAM):   end;
2378905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2378906   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2378907   +   end;
MPRINT(EM_DIAGRAM):   end;
2378908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378909   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2378910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378912   +   end;
MPRINT(EM_DIAGRAM):   end;
2378913   +end;
MPRINT(EM_DIAGRAM):   end;
2378914   +
2378915   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2378916   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2378917   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2378918   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2378919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378921   +end;
MPRINT(EM_DIAGRAM):   end;
2378922   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2378924   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2378925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378926   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2378927   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2378928   +   end;
MPRINT(EM_DIAGRAM):   end;
2378929   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2378930   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2378931   +   end;
MPRINT(EM_DIAGRAM):   end;
2378932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378933   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2378934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378936   +   end;
MPRINT(EM_DIAGRAM):   end;
2378937   +end;
MPRINT(EM_DIAGRAM):   end;
2378938   +
2378939   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2378940   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2378941   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2378942   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2378943   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2378944   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2378945   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2378946   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2378947   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2378948   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2378949   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2378950   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2378951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2378952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378953   +end;
MPRINT(EM_DIAGRAM):   end;
2378954   +else do;
MPRINT(EM_DIAGRAM):   else do;
2378955   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2378956   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2378957   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2378958   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2378959   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2378960   +   end;
MPRINT(EM_DIAGRAM):   end;
2378961   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2378962   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2378963   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2378964   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2378965   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2378966   +   end;
MPRINT(EM_DIAGRAM):   end;
2378967   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2378968   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2378969   +   end;
MPRINT(EM_DIAGRAM):   end;
2378970   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2378971   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2378972   +   end;
MPRINT(EM_DIAGRAM):   end;
2378973   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2378974   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2378975   +   end;
MPRINT(EM_DIAGRAM):   end;
2378976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2378977   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2378978   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2378979   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2378980   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2378981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2378982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2378983   +   end;
MPRINT(EM_DIAGRAM):   end;
2378984   +end;
MPRINT(EM_DIAGRAM):   end;
2378985   +
2378986   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2378987   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2378988   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2378989   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2378990   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2378991   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2378992   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2378993   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2378994   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2378995   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2378996   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2378997   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2378998   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2378999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379001   +end;
MPRINT(EM_DIAGRAM):   end;
2379002   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379003   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2379004   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2379005   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379006   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2379007   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2379008   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2379009   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2379010   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2379011   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2379012   +         end;
MPRINT(EM_DIAGRAM):   end;
2379013   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2379014   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2379015   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2379016   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2379017   +            end;
MPRINT(EM_DIAGRAM):   end;
2379018   +         end;
MPRINT(EM_DIAGRAM):   end;
2379019   +      end;
MPRINT(EM_DIAGRAM):   end;
2379020   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2379021   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2379022   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2379023   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2379024   +         end;
MPRINT(EM_DIAGRAM):   end;
2379025   +      end;
MPRINT(EM_DIAGRAM):   end;
2379026   +   end;
MPRINT(EM_DIAGRAM):   end;
2379027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379028   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2379029   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2379030   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2379031   +      end;
MPRINT(EM_DIAGRAM):   end;
2379032   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2379033   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2379034   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2379035   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2379036   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2379037   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2379038   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2379039   +         end;
MPRINT(EM_DIAGRAM):   end;
2379040   +      end;
MPRINT(EM_DIAGRAM):   end;
2379041   +   end;
MPRINT(EM_DIAGRAM):   end;
2379042   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2379043   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2379044   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2379045   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2379046   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2379047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379049   +   end;
MPRINT(EM_DIAGRAM):   end;
2379050   +end;
MPRINT(EM_DIAGRAM):   end;
2379051   +
2379052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379053   +*** Checking missing input Interval
2379054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2379055   +
2379056   +IF NMISS(
2379057   +   AcceptedCmpTotal ,
2379058   +   Age ,
2379059   +   Frq ,
2379060   +   Income ,
2379061   +   Kidhome ,
2379062   +   Mnt ,
2379063   +   MntFishProducts ,
2379064   +   MntFruits ,
2379065   +   MntGoldProds ,
2379066   +   MntMeatProducts ,
2379067   +   MntSweetProducts ,
2379068   +   MntWines ,
2379069   +   MonthsAsCustomer ,
2379070   +   NumCatalogPurchases ,
2379071   +   NumDealsPurchases ,
2379072   +   NumDistPurchases ,
2379073   +   NumStorePurchases ,
2379074   +   NumWebPurchases ,
2379075   +   NumWebVisitsMonth ,
2379076   +   RFMstat ,
2379077   +   RMntFrq ,
2379078   +   Recency ,
2379079   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2379080   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2379081   +
2379082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379083   +END;
MPRINT(EM_DIAGRAM):   END;
2379084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379085   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2379086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379087   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2379088   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2379089   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2379090   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2379091   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2379092   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2379093   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2379094   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2379095   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2379096   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2379097   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2379098   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2379099   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2379100   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2379101   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2379102   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2379103   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2379104   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2379105   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2379106   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2379107   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2379108   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2379109   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2379110   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2379111   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2379112   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2379113   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2379114   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2379115   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2379116   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2379117   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2379118   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2379119   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2379120   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2379121   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2379122   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2379123   +END;
MPRINT(EM_DIAGRAM):   END;
2379124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2379125   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2379126   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2379127   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2379128   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2379129   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2379130   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2379131   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2379132   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2379133   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2379134   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2379135   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2379136   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2379137   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2379138   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2379139   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2379140   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2379141   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2379142   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2379143   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2379144   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2379145   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2379146   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
The SAS System

2379147   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2379148   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2379149   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2379150   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2379151   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2379152   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2379153   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2379154   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2379155   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2379156   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2379157   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2379158   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2379159   +   ELSE S_NumCatalogPurchases
2379160   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2379161   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2379162   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2379163   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2379164   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2379165   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2379166   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2379167   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2379168   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2379169   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2379170   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2379171   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2379172   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2379173   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2379174   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2379175   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2379176   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2379177   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2379178   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2379179   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2379180   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2379181   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2379182   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2379183   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2379184   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2379185   +END;
MPRINT(EM_DIAGRAM):   END;
2379186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379187   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2379188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379190   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2379191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379193   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2379194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379195   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2379196   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2379197   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2379198   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2379199   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2379200   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2379201   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2379202   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2379203   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2379204   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2379205   +          +    -1.12130210731541 * S_NumDealsPurchases
2379206   +          +    -0.12343505299726 * S_NumDistPurchases
2379207   +          +     0.11863092868196 * S_NumStorePurchases
2379208   +          +       0.583917993314 * S_NumWebPurchases
2379209   +          +     0.75529732848146 * S_NumWebVisitsMonth
2379210   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2379211   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2379212   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2379213   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2379214   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2379215   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2379216   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2379217   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2379218   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2379219   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2379220   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2379221   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2379222   +          +    -0.84113790640734 * S_NumDealsPurchases
2379223   +          +    -0.10512672747147 * S_NumDistPurchases
2379224   +          +     0.07268711782494 * S_NumStorePurchases
2379225   +          +     0.57578331257439 * S_NumWebPurchases
2379226   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2379227   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2379228   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2379229   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2379230   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2379231   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2379232   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2379233   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2379234   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2379235   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2379236   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2379237   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2379238   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2379239   +          +     0.45924983504762 * S_NumDealsPurchases
2379240   +          +    -0.25508041581692 * S_NumDistPurchases
2379241   +          +    -1.34901283858526 * S_NumStorePurchases
2379242   +          +    -0.86388975031663 * S_NumWebPurchases
2379243   +          +     1.86136110391797 * S_NumWebVisitsMonth
2379244   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2379245   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2379246   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2379247   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2379248   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2379249   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2379250   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2379251   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2379252   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2379253   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2379254   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2379255   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2379256   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2379257   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2379258   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2379259   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2379260   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2379261   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2379262   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2379263   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2379264   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2379265   +          +     0.48853068455666 * Marital_StatusDivorced
2379266   +          +    -0.54903474026465 * Marital_StatusMarried
2379267   +          +    -0.34079188373939 * Marital_StatusSingle
2379268   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2379269   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2379270   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2379271   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2379272   +          +    -1.03547689902027 * Marital_StatusDivorced
2379273   +          +     2.42164864610471 * Marital_StatusMarried
2379274   +          +    -1.95342561304942 * Marital_StatusSingle
2379275   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2379276   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2379277   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2379278   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2379279   +          +      0.4337638747935 * Marital_StatusDivorced
2379280   +          +    -0.38508657017615 * Marital_StatusMarried
2379281   +          +     -0.0160269708326 * Marital_StatusSingle
2379282   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2379283   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2379284   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2379285   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2379286   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2379287   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2379288   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2379289   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2379290   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2379291   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2379292   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2379293   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2379294   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2379295   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2379296   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2379297   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2379298   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2379299   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2379300   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2379301   +END;
MPRINT(EM_DIAGRAM):   END;
2379302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2379303   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2379304   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2379305   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2379306   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2379307   +END;
MPRINT(EM_DIAGRAM):   END;
2379308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379309   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2379310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379311   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2379312   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2379313   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2379314   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2379315   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2379316   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2379317   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2379318   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2379319   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2379320   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2379321   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2379322   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2379323   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2379324   +END;
MPRINT(EM_DIAGRAM):   END;
2379325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2379326   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2379327   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2379328   +END;
MPRINT(EM_DIAGRAM):   END;
2379329   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2379330   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2379331   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2379332   +END;
MPRINT(EM_DIAGRAM):   END;
2379333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379334   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2379335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2379336   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2379337   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2379338   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2379339   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2379340   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2379341   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2379342   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2379343   +END;
MPRINT(EM_DIAGRAM):   END;
2379344   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2379345   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2379346   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2379347   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2379348    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2379349    quit;
2379350    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2379351    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2379352    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2379353    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2379354    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2379355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379356    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2379357    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379359    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2379360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379363    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2379364    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2379365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379366    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2379367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2379368    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2379369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379371    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379372    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2379373    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379374    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379375    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2379376    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2379376  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

2379377    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379378    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2379379    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379380    filename _pref
2379380  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2379381    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2379382    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2379383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2379384   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2379385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2379386   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2379387   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2379388   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2379389    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2379390    quit;
2379391    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2379392    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2379393    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2379394    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2379395    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2379396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379397    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2379398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379400    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2379401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379403    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379404    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2379405    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2379406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379407    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2379408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2379409    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2379410    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379412    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379413    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2379414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379415    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379416    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2379417    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2379417  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2379418    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379419    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2379420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379421    filename _pref
2379421  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2379422    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2379423    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2379424   +
2379425   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2379426   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2379426  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2379427   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2379428   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2379429   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2379430   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2379431   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2379432    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2379433    quit;
2379434    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2379435    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2379436    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2379437    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2379438    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2379439    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379440    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2379441    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379443    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2379444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379446    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379447    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2379448    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2379449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379450    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2379451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379452    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2379453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379455    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379456    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2379457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379458    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379459    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2379460    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2379460  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2379461    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379462    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2379463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379464    filename _pref
2379464  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2379465    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2379466    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2379467   +
2379468   +
2379469   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2379470   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2379471   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2379472   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2379473   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2379474   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379475   +
2379476   +
2379477   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2379478   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2379479   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2379480   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2379481   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2379482   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379483   +
2379484   +
2379485   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2379486   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2379487   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2379488   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2379489   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2379490   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379491   +
2379492   +
2379493   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2379494   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2379495   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2379496   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2379497   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2379498   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379499   +
2379500   +
2379501   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2379502   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2379503   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2379504   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2379505   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2379506   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379507   +
2379508   +
2379509   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2379510   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2379511   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2379512   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2379513   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2379514   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379515   +
2379516   +
2379517   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2379518   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2379519   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2379520   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2379521   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2379522   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379523   +
2379524   +
2379525   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2379526   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2379527   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2379528   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2379529   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2379530   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2379531   +if
2379532   +_FILTERNORM1 not in ( '.')
2379533   + and
2379534   +_FILTERNORM2 not in ( '.')
2379535   + and
2379536   +_FILTERNORM3 not in ( '.')
2379537   + and
2379538   +_FILTERNORM4 not in ( '.')
2379539   + and
2379540   +_FILTERNORM5 not in ( '.')
2379541   + and
2379542   +_FILTERNORM6 not in ( '.')
2379543   + and
2379544   +_FILTERNORM7 not in ( ' ')
2379545   + and
2379546   +_FILTERNORM8 not in ( ' ')
2379547   +and
2379548   +( Dt_Customer ne .)
2379549   +and ( Income ne . and (Income<=107000))
2379550   +and ( Kidhome ne .)
2379551   +and ( MntFishProducts ne .)
2379552   +and ( MntFruits ne .)
2379553   +and ( MntGoldProds ne .)
2379554   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2379555   +and ( MntSweetProducts ne .)
2379556   +and ( MntWines ne .)
2379557   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2379558   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2379559   +and ( NumStorePurchases ne .)
2379560   +and ( NumWebPurchases ne .)
2379561   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2379562   +and ( Recency ne .)
2379563   +and ( Teenhome ne .)
2379564   +and ( Year_Birth ne .)
2379565   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2379566   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2379567   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2379568   +end;
MPRINT(EM_DIAGRAM):   end;
2379569   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2379570   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2379571    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2379572    quit;
2379573    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2379574    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2379575    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2379576    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2379577    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2379578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379579    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2379580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2379582    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2379583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379586    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2379587    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2379588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379589    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2379590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2379591    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2379592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2379595    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2379596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2379597    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379598    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2379599    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2379599  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2379600    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379601    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2379602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379603    %macro varDept(fcmpdata=,id=);
2379604    %global nobs&id scoreFlag&id;
2379605    %let scoreFlag&id = 0;
2379606    %if &id=1 or ^&fcmpStart %then %do;
2379607    proc sort data=&fcmpdata out=_temp&id nodupkey;
2379608    by NAME;
2379609    where id=&id and LHS in( %let j=1;
2379610    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2379611    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2379612    "&var" %let j = %eval(&j+1);
2379613    %end;
2379614    );
2379615    run;
2379616    %let dsid = %sysfunc(open(_temp&id));
2379617    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2379618    %let dsid = %sysfunc(close(&dsid));
2379619    %if &&nobs&id %then %do;
2379620    %let scoreFlag&id = 1;
2379621    %let fcmpStart = 1;
2379622    %end;
2379623    %else %let fcmpStart = 0;
2379624    %end;
2379625    %else %do;
2379626    proc sort data=&fcmpdata out=_tempid;
2379627    where id=&id;
2379628    by LHS;
2379629    run;
2379630    %let dsid = %sysfunc(open(_tempid));
2379631    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2379632    %let dsid = %sysfunc(close(&dsid));
2379633    %if ^&&nobs&id %then %do;
2379634    proc datasets lib=work nolist;
2379635    delete _tempid;
2379636    run;
2379637    quit;
2379638    %end;
2379639    %else %do;
2379640    data _tempAll;
2379641    set %let j=%eval(&id-1);
2379642    %do x=1 %to &j;
2379643    %if &&nobs&x %then %do;
2379644    _temp&x %end;
2379645    %end;
2379646    ;
2379647    run;
2379648    proc sql;
2379649    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2379649  ! work._tempid p2 where p.name=p2.lhs;
2379650    quit;
2379651    data _temp&id;
2379652    set _temp&id;
2379653    where LHS ne '' and NAME ne '' and Node ne '';
2379654    run;
2379655    proc datasets lib=work nolist;
2379656    delete _tempAll;
2379657    run;
2379658    %let dsid = %sysfunc(open(_temp&id));
2379659    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2379660    %let dsid = %sysfunc(close(&dsid));
2379661    %if ^&&nobs&id %then %do;
2379662    proc datasets lib=work nolist;
2379663    delete _temp&id;
2379664    run;
2379665    quit;
2379666    %end;
2379667    %else %do;
2379668    %let scoreFlag&id = 1;
2379669    data _temp&id;
2379670    set _temp&id;
2379671    where LHS ne NAME and node ne '';
2379672    run;
2379673    %let dsid = %sysfunc(open(_temp&id));
2379674    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2379675    %let dsid = %sysfunc(close(&dsid));
2379676    %if ^&&nobs&id %then %do;
2379677    proc datasets lib=work nolist;
2379678    delete _temp&id;
2379679    run;
2379680    quit;
2379681    %end;
2379682    %else %do;
2379683    proc sort data=_temp&id nodupkey;
2379684    by LHS NAME;
2379685    run;
2379686    %end;
2379687    %end;
2379688    %end;
2379689    %end;
2379690    %mend varDept;
2379691    %macro optCode(outdata=fcmpdata);
2379692    %global fcmpStart;
2379693    %let fcmpStart = 0;
2379694    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2379695    %let NumNodes=9;
2379696    %do k=1 %to &NumNodes;
2379697    %vardept(fcmpdata=&outdata, id=&k);
2379698    %end;
2379699    %mend optCode;
2379700    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2379701    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2379702    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2379703    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2379704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379705    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2379706    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2379707    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2379708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379709    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2379710    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2379710  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2379711    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

2379712    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2379713    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2379714    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2379715    filename _pref
2379715  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2379716    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2379717    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2379718   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2379719   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2379720   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2379721   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2379722   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2379723   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2379724   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2379725   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2379726   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2379727   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2379728   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2379729   +LENGTH _WARN_ $4
2379730   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2379731   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2379732   +
2379733   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2379734   +
2379735   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2379736   +
2379737   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2379738   +
2379739   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2379740   +
2379741   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2379742   +
2379743   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2379744   +
2379745   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2379746   +
2379747   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2379748   +
2379749   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2379750   +
2379751   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2379752   +
2379753   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2379754   +
2379755   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2379756   +
2379757   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2379758   +
2379759   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2379760   +
2379761   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2379762   +
2379763   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2379764   +
2379765   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2379766   +
2379767   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2379768   +
2379769   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2379770   +
2379771   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2379772   +
2379773   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2379774   +
2379775   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2379776   +
2379777   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2379778   +
2379779   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2379780   +
2379781   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2379782   +
2379783   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2379784   +
2379785   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2379786   +
2379787   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2379788   +
2379789   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2379790   +
2379791   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2379792   +
2379793   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2379794   +
2379795   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2379796   +
2379797   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2379798   +
2379799   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2379800   +
2379801   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2379802   +
2379803   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2379804   +
2379805   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2379806   +
2379807   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2379808   +
2379809   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2379810   +
2379811   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2379812   +
2379813   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2379814   +
2379815   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2379816   +
2379817   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2379818   +
2379819   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2379820   +
2379821   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2379822   +
2379823   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2379824   +
2379825   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2379826   +
2379827   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2379828   +
2379829   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2379830   +
2379831   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2379832   +
2379833   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2379834   +
2379835   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2379836   +
2379837   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2379838   +
2379839   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2379840   +
2379841   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2379842   +
2379843   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2379844   +
2379845   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2379846   +
2379847   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2379848   +
2379849   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2379850   +
2379851   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2379852   +
2379853   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2379854   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2379855   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2379856   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2379857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379859   +end;
MPRINT(EM_DIAGRAM):   end;
2379860   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379862   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2379863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379865   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2379866   +   end;
MPRINT(EM_DIAGRAM):   end;
2379867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379868   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2379869   +   end;
MPRINT(EM_DIAGRAM):   end;
2379870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379871   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2379872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379874   +   end;
MPRINT(EM_DIAGRAM):   end;
2379875   +end;
MPRINT(EM_DIAGRAM):   end;
2379876   +
2379877   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2379878   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2379879   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2379880   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2379881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379883   +end;
MPRINT(EM_DIAGRAM):   end;
2379884   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379886   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2379887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379889   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2379890   +   end;
MPRINT(EM_DIAGRAM):   end;
2379891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379892   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2379893   +   end;
MPRINT(EM_DIAGRAM):   end;
2379894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379895   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2379896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379898   +   end;
MPRINT(EM_DIAGRAM):   end;
2379899   +end;
MPRINT(EM_DIAGRAM):   end;
2379900   +
2379901   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2379902   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2379903   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2379904   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2379905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379907   +end;
MPRINT(EM_DIAGRAM):   end;
2379908   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379910   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2379911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379913   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2379914   +   end;
MPRINT(EM_DIAGRAM):   end;
2379915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379916   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2379917   +   end;
MPRINT(EM_DIAGRAM):   end;
2379918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379919   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2379920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379922   +   end;
MPRINT(EM_DIAGRAM):   end;
2379923   +end;
MPRINT(EM_DIAGRAM):   end;
2379924   +
2379925   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2379926   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2379927   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2379928   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2379929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379931   +end;
MPRINT(EM_DIAGRAM):   end;
2379932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379934   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2379935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379937   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2379938   +   end;
MPRINT(EM_DIAGRAM):   end;
2379939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379940   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2379941   +   end;
MPRINT(EM_DIAGRAM):   end;
2379942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379943   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2379944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379946   +   end;
MPRINT(EM_DIAGRAM):   end;
2379947   +end;
MPRINT(EM_DIAGRAM):   end;
2379948   +
2379949   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2379950   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2379951   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2379952   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2379953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379955   +end;
MPRINT(EM_DIAGRAM):   end;
2379956   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379958   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2379959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379960   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379961   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2379962   +   end;
MPRINT(EM_DIAGRAM):   end;
2379963   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379964   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2379965   +   end;
MPRINT(EM_DIAGRAM):   end;
2379966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379967   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2379968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379970   +   end;
MPRINT(EM_DIAGRAM):   end;
2379971   +end;
MPRINT(EM_DIAGRAM):   end;
2379972   +
2379973   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2379974   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2379975   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2379976   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2379977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2379978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379979   +end;
MPRINT(EM_DIAGRAM):   end;
2379980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2379981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2379982   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2379983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2379984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2379985   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2379986   +   end;
MPRINT(EM_DIAGRAM):   end;
2379987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2379988   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2379989   +   end;
MPRINT(EM_DIAGRAM):   end;
2379990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2379991   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2379992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2379993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2379994   +   end;
MPRINT(EM_DIAGRAM):   end;
2379995   +end;
MPRINT(EM_DIAGRAM):   end;
2379996   +
2379997   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2379998   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2379999   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2380000   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2380001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2380002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380003   +end;
MPRINT(EM_DIAGRAM):   end;
2380004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2380005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2380006   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2380007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2380008   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2380009   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2380010   +   end;
MPRINT(EM_DIAGRAM):   end;
2380011   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2380012   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2380013   +   end;
MPRINT(EM_DIAGRAM):   end;
2380014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2380015   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2380016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2380017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380018   +   end;
MPRINT(EM_DIAGRAM):   end;
2380019   +end;
MPRINT(EM_DIAGRAM):   end;
2380020   +
2380021   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2380022   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2380023   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2380024   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2380025   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2380026   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2380027   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2380028   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2380029   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2380030   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2380031   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2380032   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2380033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2380034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380035   +end;
MPRINT(EM_DIAGRAM):   end;
2380036   +else do;
MPRINT(EM_DIAGRAM):   else do;
2380037   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2380038   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2380039   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2380040   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2380041   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2380042   +   end;
MPRINT(EM_DIAGRAM):   end;
2380043   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2380044   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2380045   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2380046   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2380047   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2380048   +   end;
MPRINT(EM_DIAGRAM):   end;
2380049   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2380050   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2380051   +   end;
MPRINT(EM_DIAGRAM):   end;
2380052   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2380053   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2380054   +   end;
MPRINT(EM_DIAGRAM):   end;
2380055   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2380056   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2380057   +   end;
MPRINT(EM_DIAGRAM):   end;
2380058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2380059   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2380060   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2380061   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2380062   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2380063   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2380064   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380065   +   end;
MPRINT(EM_DIAGRAM):   end;
2380066   +end;
MPRINT(EM_DIAGRAM):   end;
2380067   +
2380068   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2380069   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2380070   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2380071   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2380072   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2380073   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2380074   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2380075   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2380076   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2380077   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2380078   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2380079   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2380080   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2380081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2380082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380083   +end;
MPRINT(EM_DIAGRAM):   end;
2380084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2380085   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2380086   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2380087   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2380088   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2380089   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2380090   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2380091   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2380092   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2380093   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2380094   +         end;
MPRINT(EM_DIAGRAM):   end;
2380095   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2380096   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2380097   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2380098   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2380099   +            end;
MPRINT(EM_DIAGRAM):   end;
2380100   +         end;
MPRINT(EM_DIAGRAM):   end;
2380101   +      end;
MPRINT(EM_DIAGRAM):   end;
2380102   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2380103   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2380104   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2380105   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2380106   +         end;
MPRINT(EM_DIAGRAM):   end;
2380107   +      end;
MPRINT(EM_DIAGRAM):   end;
2380108   +   end;
MPRINT(EM_DIAGRAM):   end;
2380109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2380110   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2380111   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2380112   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2380113   +      end;
MPRINT(EM_DIAGRAM):   end;
2380114   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2380115   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2380116   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2380117   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2380118   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2380119   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2380120   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2380121   +         end;
MPRINT(EM_DIAGRAM):   end;
2380122   +      end;
MPRINT(EM_DIAGRAM):   end;
2380123   +   end;
MPRINT(EM_DIAGRAM):   end;
2380124   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2380125   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2380126   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2380127   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2380128   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2380129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2380130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380131   +   end;
MPRINT(EM_DIAGRAM):   end;
2380132   +end;
MPRINT(EM_DIAGRAM):   end;
2380133   +
2380134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380135   +*** Checking missing input Interval
2380136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2380137   +
2380138   +IF NMISS(
2380139   +   AcceptedCmpTotal ,
2380140   +   Age ,
2380141   +   Frq ,
2380142   +   Income ,
2380143   +   Kidhome ,
2380144   +   Mnt ,
2380145   +   MntFishProducts ,
2380146   +   MntFruits ,
2380147   +   MntGoldProds ,
2380148   +   MntMeatProducts ,
2380149   +   MntSweetProducts ,
2380150   +   MntWines ,
2380151   +   MonthsAsCustomer ,
2380152   +   NumCatalogPurchases ,
2380153   +   NumDealsPurchases ,
2380154   +   NumDistPurchases ,
2380155   +   NumStorePurchases ,
2380156   +   NumWebPurchases ,
2380157   +   NumWebVisitsMonth ,
2380158   +   RFMstat ,
2380159   +   RMntFrq ,
2380160   +   Recency ,
2380161   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2380162   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2380163   +
2380164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2380165   +END;
MPRINT(EM_DIAGRAM):   END;
2380166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380167   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2380168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380169   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2380170   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2380171   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2380172   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2380173   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2380174   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2380175   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2380176   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2380177   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2380178   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2380179   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2380180   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2380181   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2380182   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2380183   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2380184   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2380185   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2380186   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2380187   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2380188   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2380189   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2380190   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2380191   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2380192   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2380193   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2380194   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2380195   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2380196   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2380197   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2380198   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2380199   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2380200   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2380201   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2380202   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2380203   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2380204   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2380205   +END;
MPRINT(EM_DIAGRAM):   END;
2380206   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2380207   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2380208   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2380209   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2380210   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2380211   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2380212   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2380213   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2380214   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2380215   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2380216   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2380217   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2380218   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2380219   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2380220   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2380221   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2380222   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2380223   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2380224   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2380225   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2380226   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2380227   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2380228   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2380229   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2380230   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2380231   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2380232   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2380233   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2380234   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2380235   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2380236   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2380237   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2380238   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2380239   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2380240   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2380241   +   ELSE S_NumCatalogPurchases
2380242   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2380243   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2380244   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2380245   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2380246   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2380247   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2380248   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2380249   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2380250   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2380251   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2380252   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2380253   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2380254   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2380255   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2380256   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2380257   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2380258   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2380259   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2380260   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2380261   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2380262   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2380263   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2380264   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2380265   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2380266   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2380267   +END;
MPRINT(EM_DIAGRAM):   END;
2380268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380269   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2380270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380272   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2380273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380275   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2380276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380277   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2380278   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2380279   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2380280   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2380281   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2380282   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2380283   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2380284   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2380285   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2380286   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2380287   +          +     1.32037113020393 * S_NumDealsPurchases
2380288   +          +     0.42879249227132 * S_NumDistPurchases
2380289   +          +    -0.89190172778783 * S_NumStorePurchases
2380290   +          +    -0.87975442613962 * S_NumWebPurchases
2380291   +          +     2.98977282825831 * S_NumWebVisitsMonth
2380292   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2380293   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2380294   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2380295   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2380296   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2380297   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2380298   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2380299   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2380300   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2380301   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2380302   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2380303   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2380304   +          +    -1.16737670931605 * S_NumDealsPurchases
2380305   +          +     0.08205195039242 * S_NumDistPurchases
2380306   +          +    -0.65367044520084 * S_NumStorePurchases
2380307   +          +     2.39693083674757 * S_NumWebPurchases
2380308   +          +     0.18432526469897 * S_NumWebVisitsMonth
2380309   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2380310   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2380311   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2380312   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2380313   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2380314   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2380315   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2380316   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2380317   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2380318   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2380319   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2380320   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2380321   +          +     0.76616480025024 * S_NumDealsPurchases
2380322   +          +     0.42823368706255 * S_NumDistPurchases
2380323   +          +    -1.16998364854907 * S_NumStorePurchases
2380324   +          +     -1.0841896541746 * S_NumWebPurchases
2380325   +          +     2.74837744375079 * S_NumWebVisitsMonth
2380326   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2380327   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2380328   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2380329   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2380330   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2380331   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2380332   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2380333   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2380334   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2380335   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2380336   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2380337   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2380338   +          +     0.78421010501058 * S_NumDealsPurchases
2380339   +          +     0.01075885160671 * S_NumDistPurchases
2380340   +          +    -1.99395040717832 * S_NumStorePurchases
2380341   +          +    -1.02908330834262 * S_NumWebPurchases
2380342   +          +     2.79163466516477 * S_NumWebVisitsMonth
2380343   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2380344   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2380345   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2380346   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2380347   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2380348   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2380349   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2380350   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2380351   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2380352   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2380353   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2380354   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2380355   +          +    -1.04219068390022 * S_NumDealsPurchases
2380356   +          +    -0.45770204483973 * S_NumDistPurchases
2380357   +          +    -0.04941442229195 * S_NumStorePurchases
2380358   +          +     0.67187353161183 * S_NumWebPurchases
2380359   +          +     2.01907760553871 * S_NumWebVisitsMonth
2380360   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2380361   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2380362   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2380363   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2380364   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2380365   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2380366   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2380367   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2380368   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2380369   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2380370   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2380371   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2380372   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2380373   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2380374   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2380375   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2380376   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2380377   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2380378   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2380379   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2380380   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2380381   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2380382   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2380383   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2380384   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2380385   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2380386   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2380387   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2380388   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2380389   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2380390   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2380391   +          +     2.58907527032049 * Marital_StatusDivorced
2380392   +          +    -2.45549008158921 * Marital_StatusMarried
2380393   +          +     2.56223650840768 * Marital_StatusSingle
2380394   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2380395   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2380396   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2380397   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2380398   +          +     0.83917299191368 * Marital_StatusDivorced
2380399   +          +    -0.62624692699191 * Marital_StatusMarried
2380400   +          +    -0.22585060624911 * Marital_StatusSingle
2380401   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2380402   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2380403   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2380404   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2380405   +          +    -0.65063506696715 * Marital_StatusDivorced
2380406   +          +    -2.37495865381256 * Marital_StatusMarried
2380407   +          +    -0.54954654146904 * Marital_StatusSingle
2380408   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2380409   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2380410   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2380411   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2380412   +          +     0.16185824798364 * Marital_StatusDivorced
2380413   +          +    -0.08142416735136 * Marital_StatusMarried
2380414   +          +    -0.20392270385969 * Marital_StatusSingle
2380415   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2380416   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2380417   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2380418   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2380419   +          +      -0.516522631078 * Marital_StatusDivorced
2380420   +          +    -0.61661247789976 * Marital_StatusMarried
2380421   +          +    -0.99533130308294 * Marital_StatusSingle
2380422   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2380423   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2380424   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2380425   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2380426   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2380427   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2380428   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2380429   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2380430   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2380431   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2380432   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2380433   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2380434   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2380435   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2380436   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2380437   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2380438   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2380439   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2380440   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2380441   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2380442   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2380443   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2380444   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2380445   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2380446   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2380447   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2380448   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2380449   +END;
MPRINT(EM_DIAGRAM):   END;
2380450   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2380451   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2380452   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2380453   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2380454   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2380455   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2380456   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2380457   +END;
MPRINT(EM_DIAGRAM):   END;
2380458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380459   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2380460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2380462   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2380463   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2380464   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2380465   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2380466   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2380467   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2380468   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2380469   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2380470   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2380471   +          +    -0.03801022287706 * S_NumDealsPurchases
2380472   +          +    -1.50723574966419 * S_NumDistPurchases
2380473   +          +    -0.21514545448485 * S_NumStorePurchases
2380474   +          +    -0.50179555233865 * S_NumWebPurchases
2380475   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2380476   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2380477   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2380478   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2380479   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2380480   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2380481   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2380482   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2380483   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2380484   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2380485   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2380486   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2380487   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2380488   +          +     0.70551335536975 * S_NumDealsPurchases
2380489   +          +     0.02824488988803 * S_NumDistPurchases
2380490   +          +    -0.47958123842808 * S_NumStorePurchases
2380491   +          +     1.04559003239583 * S_NumWebPurchases
2380492   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2380493   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2380494   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2380495   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2380496   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2380497   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2380498   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2380499   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2380500   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2380501   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2380502   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2380503   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2380504   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2380505   +          +    -0.28907339261907 * S_NumDealsPurchases
2380506   +          +     0.04310505858352 * S_NumDistPurchases
2380507   +          +    -0.99594604666889 * S_NumStorePurchases
2380508   +          +    -0.58870940220114 * S_NumWebPurchases
2380509   +          +     0.84018399925148 * S_NumWebVisitsMonth
2380510   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2380511   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2380512   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2380513   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2380514   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2380515   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2380516   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2380517   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2380518   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2380519   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2380520   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2380521   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2380522   +          +     0.52917289878604 * S_NumDealsPurchases
2380523   +          +     0.30974142545809 * S_NumDistPurchases
2380524   +          +    -0.36081450643799 * S_NumStorePurchases
2380525   +          +    -0.28418053386759 * S_NumWebPurchases
2380526   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2380527   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2380528   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2380529   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2380530   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2380531   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2380532   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2380533   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2380534   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2380535   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2380536   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2380537   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2380538   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2380539   +          +    -0.47500053723253 * S_NumDealsPurchases
2380540   +          +     0.41421086319635 * S_NumDistPurchases
2380541   +          +     0.69664835428137 * S_NumStorePurchases
2380542   +          +     0.66359306812968 * S_NumWebPurchases
2380543   +          +     0.77931462528741 * S_NumWebVisitsMonth
2380544   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2380545   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2380546   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2380547   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2380548   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2380549   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2380550   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2380551   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2380552   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2380553   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2380554   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2380555   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2380556   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2380557   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2380558   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2380559   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2380560   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2380561   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2380562   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2380563   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2380564   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2380565   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2380566   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2380567   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2380568   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2380569   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2380570   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2380571   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2380572   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2380573   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2380574   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2380575   +          +    -1.34742914042312 * Marital_StatusDivorced
2380576   +          +    -0.75378934918763 * Marital_StatusMarried
2380577   +          +    -1.85411678929217 * Marital_StatusSingle
2380578   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2380579   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2380580   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2380581   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2380582   +          +     0.47958659206261 * Marital_StatusDivorced
2380583   +          +     -0.9665584294045 * Marital_StatusMarried
2380584   +          +      0.9733784530538 * Marital_StatusSingle
2380585   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2380586   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2380587   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2380588   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2380589   +          +    -0.56894207908284 * Marital_StatusDivorced
2380590   +          +    -0.96715106987195 * Marital_StatusMarried
2380591   +          +     1.18678144721443 * Marital_StatusSingle
2380592   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2380593   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2380594   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2380595   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2380596   +          +     -0.6061959224661 * Marital_StatusDivorced
2380597   +          +     0.03495844244684 * Marital_StatusMarried
2380598   +          +    -0.63896361063244 * Marital_StatusSingle
2380599   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2380600   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2380601   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2380602   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2380603   +          +     0.82178907301319 * Marital_StatusDivorced
2380604   +          +     1.69543553114589 * Marital_StatusMarried
2380605   +          +     -2.1272067363559 * Marital_StatusSingle
2380606   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2380607   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2380608   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2380609   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2380610   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2380611   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2380612   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2380613   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2380614   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2380615   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2380616   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2380617   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2380618   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2380619   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2380620   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2380621   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2380622   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2380623   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2380624   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2380625   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2380626   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2380627   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2380628   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2380629   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2380630   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2380631   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2380632   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2380633   +END;
MPRINT(EM_DIAGRAM):   END;
2380634   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2380635   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2380636   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2380637   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2380638   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2380639   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2380640   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2380641   +END;
MPRINT(EM_DIAGRAM):   END;
2380642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380643   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2380644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2380646   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2380647   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2380648   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2380649   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2380650   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2380651   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2380652   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2380653   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2380654   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2380655   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2380656   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2380657   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2380658   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2380659   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2380660   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2380661   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2380662   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2380663   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2380664   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2380665   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2380666   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2380667   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2380668   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2380669   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2380670   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2380671   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2380672   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2380673   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2380674   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2380675   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2380676   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2380677   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2380678   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2380679   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2380680   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2380681   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2380682   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2380683   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2380684   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2380685   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2380686   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2380687   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2380688   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2380689   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2380690   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2380691   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2380692   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2380693   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2380694   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2380695   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2380696   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2380697   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2380698   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2380699   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2380700   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2380701   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2380702   +END;
MPRINT(EM_DIAGRAM):   END;
2380703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2380704   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2380705   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2380706   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2380707   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2380708   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2380709   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2380710   +END;
MPRINT(EM_DIAGRAM):   END;
2380711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380712   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2380713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2380715   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2380716   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2380717   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2380718   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2380719   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2380720   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2380721   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2380722   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2380723   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2380724   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2380725   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2380726   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2380727   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2380728   +END;
MPRINT(EM_DIAGRAM):   END;
2380729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2380730   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2380731   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2380732   +END;
MPRINT(EM_DIAGRAM):   END;
2380733   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2380734   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2380735   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2380736   +END;
MPRINT(EM_DIAGRAM):   END;
2380737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380738   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2380739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2380740   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2380741   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2380742   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2380743   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2380744   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2380745   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2380746   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2380747   +END;
MPRINT(EM_DIAGRAM):   END;
2380748   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2380749   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2380750   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2380751   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2380752    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2380753    quit;
2380754    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2380755    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2380756    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2380757    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2380758    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2380759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380760    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2380761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380762    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380763    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2380764    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380766    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380767    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2380768    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2380769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380770    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2380771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2380772    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2380773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380774    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380775    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380776    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2380777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380778    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380779    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2380780    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2380780  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

2380781    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380782    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2380783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380784    filename _pref
2380784  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2380785    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2380786    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2380787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2380788   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2380789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2380790   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2380791   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2380792   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2380793    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2380794    quit;
2380795    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2380796    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2380797    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2380798    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2380799    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2380800    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380801    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2380802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380803    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380804    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2380805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380807    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380808    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2380809    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2380810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380811    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2380812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2380813    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2380814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380816    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380817    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2380818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380819    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380820    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2380821    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2380821  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2380822    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380823    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2380824    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380825    filename _pref
2380825  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2380826    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2380827    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2380828   +
2380829   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2380830   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2380830  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2380831   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2380832   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2380833   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2380834   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2380835   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2380836    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2380837    quit;
2380838    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2380839    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2380840    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2380841    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2380842    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2380843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380844    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2380845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380847    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2380848    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380850    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380851    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2380852    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2380853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380854    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2380855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380856    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2380857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380859    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380860    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2380861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380862    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380863    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2380864    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2380864  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2380865    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380866    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2380867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380868    filename _pref
2380868  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2380869    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2380870    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2380871   +
2380872   +
2380873   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2380874   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2380875   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2380876   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2380877   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2380878   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380879   +
2380880   +
2380881   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2380882   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2380883   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2380884   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2380885   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2380886   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380887   +
2380888   +
2380889   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2380890   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2380891   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2380892   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2380893   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2380894   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380895   +
2380896   +
2380897   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2380898   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2380899   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2380900   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2380901   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2380902   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380903   +
2380904   +
2380905   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2380906   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2380907   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2380908   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2380909   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2380910   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380911   +
2380912   +
2380913   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2380914   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2380915   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2380916   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2380917   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2380918   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380919   +
2380920   +
2380921   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2380922   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2380923   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2380924   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2380925   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2380926   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380927   +
2380928   +
2380929   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2380930   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2380931   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2380932   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2380933   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2380934   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2380935   +if
2380936   +_FILTERNORM1 not in ( '.')
2380937   + and
2380938   +_FILTERNORM2 not in ( '.')
2380939   + and
2380940   +_FILTERNORM3 not in ( '.')
2380941   + and
2380942   +_FILTERNORM4 not in ( '.')
2380943   + and
2380944   +_FILTERNORM5 not in ( '.')
2380945   + and
2380946   +_FILTERNORM6 not in ( '.')
2380947   + and
2380948   +_FILTERNORM7 not in ( ' ')
2380949   + and
2380950   +_FILTERNORM8 not in ( ' ')
2380951   +and
2380952   +( Dt_Customer ne .)
2380953   +and ( Income ne . and (Income<=107000))
2380954   +and ( Kidhome ne .)
2380955   +and ( MntFishProducts ne .)
2380956   +and ( MntFruits ne .)
2380957   +and ( MntGoldProds ne .)
2380958   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2380959   +and ( MntSweetProducts ne .)
2380960   +and ( MntWines ne .)
2380961   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2380962   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2380963   +and ( NumStorePurchases ne .)
2380964   +and ( NumWebPurchases ne .)
2380965   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2380966   +and ( Recency ne .)
2380967   +and ( Teenhome ne .)
2380968   +and ( Year_Birth ne .)
2380969   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2380970   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2380971   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2380972   +end;
MPRINT(EM_DIAGRAM):   end;
2380973   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2380974   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2380975    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2380976    quit;
2380977    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2380978    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2380979    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2380980    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2380981    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2380982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380983    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2380984    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380986    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2380987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2380989    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380990    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2380991    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2380992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380993    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2380994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2380995    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2380996    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2380997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2380998    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2380999    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2381000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2381001    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2381002    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2381003    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2381003  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2381004    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2381005    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2381006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2381007    %macro varDept(fcmpdata=,id=);
2381008    %global nobs&id scoreFlag&id;
2381009    %let scoreFlag&id = 0;
2381010    %if &id=1 or ^&fcmpStart %then %do;
2381011    proc sort data=&fcmpdata out=_temp&id nodupkey;
2381012    by NAME;
2381013    where id=&id and LHS in( %let j=1;
2381014    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2381015    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2381016    "&var" %let j = %eval(&j+1);
2381017    %end;
2381018    );
2381019    run;
2381020    %let dsid = %sysfunc(open(_temp&id));
2381021    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2381022    %let dsid = %sysfunc(close(&dsid));
2381023    %if &&nobs&id %then %do;
2381024    %let scoreFlag&id = 1;
2381025    %let fcmpStart = 1;
2381026    %end;
2381027    %else %let fcmpStart = 0;
2381028    %end;
2381029    %else %do;
2381030    proc sort data=&fcmpdata out=_tempid;
2381031    where id=&id;
2381032    by LHS;
2381033    run;
2381034    %let dsid = %sysfunc(open(_tempid));
2381035    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2381036    %let dsid = %sysfunc(close(&dsid));
2381037    %if ^&&nobs&id %then %do;
2381038    proc datasets lib=work nolist;
2381039    delete _tempid;
2381040    run;
2381041    quit;
2381042    %end;
2381043    %else %do;
2381044    data _tempAll;
2381045    set %let j=%eval(&id-1);
2381046    %do x=1 %to &j;
2381047    %if &&nobs&x %then %do;
2381048    _temp&x %end;
2381049    %end;
2381050    ;
2381051    run;
2381052    proc sql;
2381053    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2381053  ! work._tempid p2 where p.name=p2.lhs;
2381054    quit;
2381055    data _temp&id;
2381056    set _temp&id;
2381057    where LHS ne '' and NAME ne '' and Node ne '';
2381058    run;
2381059    proc datasets lib=work nolist;
2381060    delete _tempAll;
2381061    run;
2381062    %let dsid = %sysfunc(open(_temp&id));
2381063    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2381064    %let dsid = %sysfunc(close(&dsid));
2381065    %if ^&&nobs&id %then %do;
2381066    proc datasets lib=work nolist;
2381067    delete _temp&id;
2381068    run;
2381069    quit;
2381070    %end;
2381071    %else %do;
2381072    %let scoreFlag&id = 1;
2381073    data _temp&id;
2381074    set _temp&id;
2381075    where LHS ne NAME and node ne '';
2381076    run;
2381077    %let dsid = %sysfunc(open(_temp&id));
2381078    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2381079    %let dsid = %sysfunc(close(&dsid));
2381080    %if ^&&nobs&id %then %do;
2381081    proc datasets lib=work nolist;
2381082    delete _temp&id;
2381083    run;
2381084    quit;
2381085    %end;
2381086    %else %do;
2381087    proc sort data=_temp&id nodupkey;
2381088    by LHS NAME;
2381089    run;
2381090    %end;
2381091    %end;
2381092    %end;
2381093    %end;
2381094    %mend varDept;
2381095    %macro optCode(outdata=fcmpdata);
2381096    %global fcmpStart;
2381097    %let fcmpStart = 0;
2381098    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2381099    %let NumNodes=9;
2381100    %do k=1 %to &NumNodes;
2381101    %vardept(fcmpdata=&outdata, id=&k);
2381102    %end;
2381103    %mend optCode;
2381104    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2381105    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2381106    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2381107    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2381108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2381109    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2381110    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2381111    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2381112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2381113    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2381114    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2381114  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2381115    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2381116    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2381117    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2381118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2381119    filename _pref
2381119  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2381120    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2381121    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2381122   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2381123   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2381124   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2381125   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2381126   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2381127   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2381128   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2381129   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2381130   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2381131   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2381132   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2381133   +LENGTH _WARN_ $4
2381134   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2381135   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2381136   +
2381137   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2381138   +
2381139   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2381140   +
2381141   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2381142   +
2381143   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2381144   +
2381145   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2381146   +
2381147   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2381148   +
2381149   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2381150   +
2381151   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2381152   +
2381153   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2381154   +
2381155   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2381156   +
2381157   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2381158   +
2381159   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2381160   +
2381161   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2381162   +
2381163   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2381164   +
2381165   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2381166   +
2381167   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2381168   +
2381169   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2381170   +
2381171   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2381172   +
2381173   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2381174   +
2381175   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2381176   +
2381177   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2381178   +
2381179   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2381180   +
2381181   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2381182   +
2381183   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2381184   +
2381185   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2381186   +
2381187   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2381188   +
2381189   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2381190   +
2381191   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2381192   +
2381193   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2381194   +
2381195   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2381196   +
2381197   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2381198   +
2381199   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2381200   +
2381201   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2381202   +
2381203   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2381204   +
2381205   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2381206   +
2381207   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2381208   +
2381209   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2381210   +
2381211   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2381212   +
2381213   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2381214   +
2381215   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2381216   +
2381217   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2381218   +
2381219   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2381220   +
2381221   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2381222   +
2381223   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2381224   +
2381225   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2381226   +
2381227   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2381228   +
2381229   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2381230   +
2381231   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2381232   +
2381233   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2381234   +
2381235   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2381236   +
2381237   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2381238   +
2381239   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2381240   +
2381241   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2381242   +
2381243   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2381244   +
2381245   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2381246   +
2381247   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2381248   +
2381249   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2381250   +
2381251   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2381252   +
2381253   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2381254   +
2381255   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2381256   +
2381257   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2381258   +
2381259   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2381260   +
2381261   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2381262   +
2381263   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2381264   +
2381265   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2381266   +
2381267   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2381268   +
2381269   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2381270   +
2381271   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2381272   +
2381273   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2381274   +
2381275   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2381276   +
2381277   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2381278   +
2381279   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2381280   +
2381281   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2381282   +
2381283   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2381284   +
2381285   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2381286   +
2381287   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2381288   +
2381289   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2381290   +
2381291   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2381292   +
2381293   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2381294   +
2381295   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2381296   +
2381297   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2381298   +
2381299   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2381300   +
2381301   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2381302   +
2381303   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2381304   +
2381305   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2381306   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2381307   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2381308   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2381309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381311   +end;
MPRINT(EM_DIAGRAM):   end;
2381312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381314   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2381315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381317   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2381318   +   end;
MPRINT(EM_DIAGRAM):   end;
2381319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381320   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2381321   +   end;
MPRINT(EM_DIAGRAM):   end;
2381322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381323   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2381324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381326   +   end;
MPRINT(EM_DIAGRAM):   end;
2381327   +end;
MPRINT(EM_DIAGRAM):   end;
2381328   +
2381329   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2381330   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2381331   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2381332   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2381333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381335   +end;
MPRINT(EM_DIAGRAM):   end;
2381336   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381338   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2381339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381341   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2381342   +   end;
MPRINT(EM_DIAGRAM):   end;
2381343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381344   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2381345   +   end;
MPRINT(EM_DIAGRAM):   end;
2381346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381347   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2381348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381350   +   end;
MPRINT(EM_DIAGRAM):   end;
2381351   +end;
MPRINT(EM_DIAGRAM):   end;
2381352   +
2381353   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2381354   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2381355   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2381356   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2381357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381359   +end;
MPRINT(EM_DIAGRAM):   end;
2381360   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381362   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2381363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381365   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2381366   +   end;
MPRINT(EM_DIAGRAM):   end;
2381367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381368   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2381369   +   end;
MPRINT(EM_DIAGRAM):   end;
2381370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381371   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2381372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381374   +   end;
MPRINT(EM_DIAGRAM):   end;
2381375   +end;
MPRINT(EM_DIAGRAM):   end;
2381376   +
2381377   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2381378   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2381379   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2381380   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2381381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381383   +end;
MPRINT(EM_DIAGRAM):   end;
2381384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381386   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2381387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381389   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2381390   +   end;
MPRINT(EM_DIAGRAM):   end;
2381391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381392   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2381393   +   end;
MPRINT(EM_DIAGRAM):   end;
2381394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381395   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2381396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381398   +   end;
MPRINT(EM_DIAGRAM):   end;
2381399   +end;
MPRINT(EM_DIAGRAM):   end;
2381400   +
2381401   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2381402   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2381403   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2381404   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2381405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381407   +end;
MPRINT(EM_DIAGRAM):   end;
2381408   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381410   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2381411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381413   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2381414   +   end;
MPRINT(EM_DIAGRAM):   end;
2381415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381416   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2381417   +   end;
MPRINT(EM_DIAGRAM):   end;
2381418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381419   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2381420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381422   +   end;
MPRINT(EM_DIAGRAM):   end;
2381423   +end;
MPRINT(EM_DIAGRAM):   end;
2381424   +
2381425   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2381426   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2381427   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2381428   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2381429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381431   +end;
MPRINT(EM_DIAGRAM):   end;
2381432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381434   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2381435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381437   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2381438   +   end;
MPRINT(EM_DIAGRAM):   end;
2381439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381440   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2381441   +   end;
MPRINT(EM_DIAGRAM):   end;
2381442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381443   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2381444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381446   +   end;
MPRINT(EM_DIAGRAM):   end;
2381447   +end;
MPRINT(EM_DIAGRAM):   end;
2381448   +
2381449   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2381450   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2381451   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2381452   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2381453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381455   +end;
MPRINT(EM_DIAGRAM):   end;
2381456   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381458   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2381459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381460   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2381461   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2381462   +   end;
MPRINT(EM_DIAGRAM):   end;
2381463   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2381464   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2381465   +   end;
MPRINT(EM_DIAGRAM):   end;
2381466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381467   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2381468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381470   +   end;
MPRINT(EM_DIAGRAM):   end;
2381471   +end;
MPRINT(EM_DIAGRAM):   end;
2381472   +
2381473   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2381474   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2381475   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2381476   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2381477   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2381478   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2381479   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2381480   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2381481   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2381482   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2381483   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2381484   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2381485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381487   +end;
MPRINT(EM_DIAGRAM):   end;
2381488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381489   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2381490   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2381491   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381492   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2381493   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2381494   +   end;
MPRINT(EM_DIAGRAM):   end;
2381495   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2381496   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2381497   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2381498   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2381499   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2381500   +   end;
MPRINT(EM_DIAGRAM):   end;
2381501   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2381502   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2381503   +   end;
MPRINT(EM_DIAGRAM):   end;
2381504   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2381505   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2381506   +   end;
MPRINT(EM_DIAGRAM):   end;
2381507   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2381508   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2381509   +   end;
MPRINT(EM_DIAGRAM):   end;
2381510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381511   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2381512   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2381513   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2381514   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2381515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381517   +   end;
MPRINT(EM_DIAGRAM):   end;
2381518   +end;
MPRINT(EM_DIAGRAM):   end;
2381519   +
2381520   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2381521   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2381522   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2381523   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2381524   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2381525   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2381526   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2381527   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2381528   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2381529   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2381530   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2381531   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2381532   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2381533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381535   +end;
MPRINT(EM_DIAGRAM):   end;
2381536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381537   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2381538   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2381539   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381540   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2381541   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2381542   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2381543   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2381544   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2381545   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381546   +         end;
MPRINT(EM_DIAGRAM):   end;
2381547   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2381548   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2381549   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2381550   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381551   +            end;
MPRINT(EM_DIAGRAM):   end;
2381552   +         end;
MPRINT(EM_DIAGRAM):   end;
2381553   +      end;
MPRINT(EM_DIAGRAM):   end;
2381554   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2381555   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2381556   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2381557   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381558   +         end;
MPRINT(EM_DIAGRAM):   end;
2381559   +      end;
MPRINT(EM_DIAGRAM):   end;
2381560   +   end;
MPRINT(EM_DIAGRAM):   end;
2381561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381562   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2381563   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2381564   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381565   +      end;
MPRINT(EM_DIAGRAM):   end;
2381566   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2381567   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2381568   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2381569   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2381570   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2381571   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2381572   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381573   +         end;
MPRINT(EM_DIAGRAM):   end;
2381574   +      end;
MPRINT(EM_DIAGRAM):   end;
2381575   +   end;
MPRINT(EM_DIAGRAM):   end;
2381576   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2381577   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2381578   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2381579   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2381580   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2381581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381583   +   end;
MPRINT(EM_DIAGRAM):   end;
2381584   +end;
MPRINT(EM_DIAGRAM):   end;
2381585   +
2381586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381587   +*** Checking missing input Interval
2381588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2381589   +
2381590   +IF NMISS(
2381591   +   AcceptedCmpTotal ,
2381592   +   Age ,
2381593   +   Frq ,
2381594   +   Income ,
2381595   +   Kidhome ,
2381596   +   Mnt ,
2381597   +   MntFishProducts ,
2381598   +   MntFruits ,
2381599   +   MntGoldProds ,
2381600   +   MntMeatProducts ,
2381601   +   MntSweetProducts ,
2381602   +   MntWines ,
2381603   +   MonthsAsCustomer ,
2381604   +   NumCatalogPurchases ,
2381605   +   NumDealsPurchases ,
2381606   +   NumDistPurchases ,
2381607   +   NumStorePurchases ,
2381608   +   NumWebPurchases ,
2381609   +   NumWebVisitsMonth ,
2381610   +   RFMstat ,
2381611   +   RMntFrq ,
2381612   +   Recency ,
2381613   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2381614   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2381615   +
2381616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381617   +END;
MPRINT(EM_DIAGRAM):   END;
2381618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381619   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2381620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2381622   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2381623   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2381624   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2381625   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2381626   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2381627   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2381628   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2381629   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2381630   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2381631   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2381632   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2381633   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2381634   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2381635   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2381636   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2381637   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2381638   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2381639   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2381640   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2381641   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2381642   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2381643   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2381644   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2381645   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2381646   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2381647   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2381648   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2381649   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2381650   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2381651   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2381652   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2381653   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2381654   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2381655   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2381656   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2381657   +END;
MPRINT(EM_DIAGRAM):   END;
2381658   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2381659   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2381660   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2381661   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2381662   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2381663   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2381664   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2381665   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2381666   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2381667   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2381668   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2381669   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2381670   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2381671   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2381672   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2381673   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2381674   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2381675   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2381676   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2381677   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2381678   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2381679   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2381680   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2381681   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2381682   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2381683   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2381684   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2381685   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2381686   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2381687   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2381688   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2381689   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2381690   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2381691   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2381692   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2381693   +   ELSE S_NumCatalogPurchases
2381694   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2381695   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2381696   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2381697   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2381698   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2381699   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2381700   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2381701   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2381702   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2381703   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2381704   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2381705   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2381706   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2381707   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2381708   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2381709   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2381710   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2381711   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2381712   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2381713   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2381714   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2381715   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2381716   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2381717   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2381718   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2381719   +END;
MPRINT(EM_DIAGRAM):   END;
2381720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381721   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2381722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381724   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2381725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381727   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2381728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381729   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2381730   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2381731   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2381732   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2381733   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2381734   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2381735   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2381736   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2381737   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2381738   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2381739   +          +    -1.18466001117424 * S_NumDealsPurchases
2381740   +          +     -0.1371252133567 * S_NumDistPurchases
2381741   +          +     1.92719775731123 * S_NumStorePurchases
2381742   +          +     1.23184249192116 * S_NumWebPurchases
2381743   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2381744   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2381745   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2381746   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2381747   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2381748   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2381749   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2381750   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2381751   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2381752   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2381753   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2381754   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2381755   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2381756   +          +     0.63616523425865 * S_NumDealsPurchases
2381757   +          +     0.45460056261546 * S_NumDistPurchases
2381758   +          +    -0.61009999017225 * S_NumStorePurchases
2381759   +          +     1.85193755731081 * S_NumWebPurchases
2381760   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2381761   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2381762   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2381763   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2381764   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2381765   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2381766   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2381767   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2381768   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2381769   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2381770   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2381771   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2381772   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2381773   +          +      1.8907968580473 * S_NumDealsPurchases
2381774   +          +     0.01244124801764 * S_NumDistPurchases
2381775   +          +    -2.34409118104622 * S_NumStorePurchases
2381776   +          +    -1.80820043087435 * S_NumWebPurchases
2381777   +          +     2.40219682136039 * S_NumWebVisitsMonth
2381778   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2381779   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2381780   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2381781   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2381782   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2381783   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2381784   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2381785   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2381786   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2381787   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2381788   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2381789   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2381790   +          +     0.28209537604198 * S_NumDealsPurchases
2381791   +          +      0.6450277971767 * S_NumDistPurchases
2381792   +          +     0.85050092520609 * S_NumStorePurchases
2381793   +          +    -0.53920307215941 * S_NumWebPurchases
2381794   +          +     3.01106015100147 * S_NumWebVisitsMonth
2381795   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2381796   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2381797   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2381798   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2381799   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2381800   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2381801   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2381802   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2381803   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2381804   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2381805   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2381806   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2381807   +          +    -0.36642526324451 * S_NumDealsPurchases
2381808   +          +     -0.6091014843932 * S_NumDistPurchases
2381809   +          +    -0.21154626182088 * S_NumStorePurchases
2381810   +          +    -0.10361347071364 * S_NumWebPurchases
2381811   +          +     1.36358817627784 * S_NumWebVisitsMonth
2381812   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2381813   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2381814   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2381815   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2381816   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2381817   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2381818   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2381819   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2381820   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2381821   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2381822   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2381823   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2381824   +          +    -0.14868505161718 * S_NumDealsPurchases
2381825   +          +    -0.08395384711805 * S_NumDistPurchases
2381826   +          +     0.60525238179245 * S_NumStorePurchases
2381827   +          +     0.04555100214276 * S_NumWebPurchases
2381828   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2381829   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2381830   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2381831   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2381832   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2381833   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2381834   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2381835   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2381836   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2381837   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2381838   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2381839   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2381840   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2381841   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2381842   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2381843   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2381844   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2381845   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2381846   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2381847   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2381848   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2381849   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2381850   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2381851   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2381852   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2381853   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2381854   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2381855   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2381856   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2381857   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2381858   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2381859   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2381860   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2381861   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2381862   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2381863   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2381864   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2381865   +          +     -0.7180104021039 * Marital_StatusDivorced
2381866   +          +      0.5957373170744 * Marital_StatusMarried
2381867   +          +    -0.86183942803988 * Marital_StatusSingle
2381868   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2381869   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2381870   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2381871   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2381872   +          +     0.84772700244021 * Marital_StatusDivorced
2381873   +          +    -0.37049970188511 * Marital_StatusMarried
2381874   +          +     1.54291641732063 * Marital_StatusSingle
2381875   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2381876   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2381877   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2381878   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2381879   +          +     0.73222548496385 * Marital_StatusDivorced
2381880   +          +    -0.50102202656102 * Marital_StatusMarried
2381881   +          +    -0.07207130428422 * Marital_StatusSingle
2381882   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2381883   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2381884   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2381885   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2381886   +          +     0.25894719464799 * Marital_StatusDivorced
2381887   +          +    -1.95576501275834 * Marital_StatusMarried
2381888   +          +     2.65422185276746 * Marital_StatusSingle
2381889   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2381890   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2381891   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2381892   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2381893   +          +     0.60936191204707 * Marital_StatusDivorced
2381894   +          +    -0.52190111190458 * Marital_StatusMarried
2381895   +          +    -0.60982305233136 * Marital_StatusSingle
2381896   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2381897   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2381898   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2381899   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2381900   +          +    -1.44614502228294 * Marital_StatusDivorced
2381901   +          +      2.9001493892928 * Marital_StatusMarried
2381902   +          +    -2.60467399972513 * Marital_StatusSingle
2381903   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2381904   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2381905   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2381906   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2381907   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2381908   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2381909   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2381910   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2381911   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2381912   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2381913   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2381914   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2381915   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2381916   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2381917   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2381918   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2381919   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2381920   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2381921   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2381922   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2381923   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2381924   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2381925   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2381926   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2381927   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2381928   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2381929   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2381930   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2381931   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2381932   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2381933   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2381934   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2381935   +END;
MPRINT(EM_DIAGRAM):   END;
2381936   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2381937   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2381938   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2381939   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2381940   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2381941   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2381942   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2381943   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2381944   +END;
MPRINT(EM_DIAGRAM):   END;
2381945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381946   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2381947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2381949   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2381950   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2381951   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2381952   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2381953   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2381954   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2381955   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2381956   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2381957   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2381958   +          +    -0.46483717253931 * S_NumDealsPurchases
2381959   +          +    -0.53329008421157 * S_NumDistPurchases
2381960   +          +      0.2490774300193 * S_NumStorePurchases
2381961   +          +    -0.82755150673885 * S_NumWebPurchases
2381962   +          +     0.04007223822389 * S_NumWebVisitsMonth
2381963   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2381964   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2381965   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2381966   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2381967   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2381968   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2381969   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2381970   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2381971   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2381972   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2381973   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2381974   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2381975   +          +     0.75855101382458 * S_NumDealsPurchases
2381976   +          +     1.61754951768262 * S_NumDistPurchases
2381977   +          +    -0.48146714929729 * S_NumStorePurchases
2381978   +          +    -0.76460728035552 * S_NumWebPurchases
2381979   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2381980   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2381981   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2381982   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2381983   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2381984   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2381985   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2381986   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2381987   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2381988   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2381989   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2381990   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2381991   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2381992   +          +     0.75255317965748 * S_NumDealsPurchases
2381993   +          +     1.34900588315783 * S_NumDistPurchases
2381994   +          +    -0.17717469778048 * S_NumStorePurchases
2381995   +          +    -0.01560551546553 * S_NumWebPurchases
2381996   +          +     1.24315988674343 * S_NumWebVisitsMonth
2381997   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2381998   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2381999   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2382000   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2382001   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2382002   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2382003   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2382004   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2382005   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2382006   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2382007   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2382008   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2382009   +          +    -1.71127148178768 * S_NumDealsPurchases
2382010   +          +    -1.77527355221308 * S_NumDistPurchases
2382011   +          +    -1.40009594349363 * S_NumStorePurchases
2382012   +          +    -0.46471012062697 * S_NumWebPurchases
2382013   +          +     0.04619891083228 * S_NumWebVisitsMonth
2382014   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2382015   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2382016   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2382017   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2382018   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2382019   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2382020   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2382021   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2382022   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2382023   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2382024   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2382025   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2382026   +          +    -0.22204470395056 * S_NumDealsPurchases
2382027   +          +    -1.74490476011984 * S_NumDistPurchases
2382028   +          +     1.93538420108324 * S_NumStorePurchases
2382029   +          +     1.04892631742152 * S_NumWebPurchases
2382030   +          +     1.50717841566047 * S_NumWebVisitsMonth
2382031   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2382032   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2382033   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2382034   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2382035   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2382036   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2382037   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2382038   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2382039   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2382040   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2382041   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2382042   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2382043   +          +    -0.94690420785776 * S_NumDealsPurchases
2382044   +          +     1.87932706342204 * S_NumDistPurchases
2382045   +          +     0.31232717416487 * S_NumStorePurchases
2382046   +          +     1.51889492693355 * S_NumWebPurchases
2382047   +          +     0.04376853689795 * S_NumWebVisitsMonth
2382048   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2382049   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2382050   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2382051   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2382052   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2382053   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2382054   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2382055   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2382056   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2382057   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2382058   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2382059   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2382060   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2382061   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2382062   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2382063   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2382064   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2382065   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2382066   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2382067   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2382068   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2382069   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2382070   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2382071   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2382072   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2382073   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2382074   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2382075   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2382076   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2382077   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2382078   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2382079   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2382080   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2382081   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2382082   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2382083   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2382084   +          +     0.56030871857835 * Marital_StatusDivorced
2382085   +          +    -1.22448534379831 * Marital_StatusMarried
2382086   +          +     0.78141783495855 * Marital_StatusSingle
2382087   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2382088   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2382089   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2382090   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2382091   +          +    -2.63452071552997 * Marital_StatusDivorced
2382092   +          +     0.61829054779121 * Marital_StatusMarried
2382093   +          +    -2.20743370246315 * Marital_StatusSingle
2382094   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2382095   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2382096   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2382097   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2382098   +          +      -1.454102516731 * Marital_StatusDivorced
2382099   +          +     0.71488291465759 * Marital_StatusMarried
2382100   +          +     0.96038830049792 * Marital_StatusSingle
2382101   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2382102   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2382103   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2382104   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2382105   +          +    -0.01160394891598 * Marital_StatusDivorced
2382106   +          +    -1.09054636482951 * Marital_StatusMarried
2382107   +          +      0.7793855479379 * Marital_StatusSingle
2382108   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2382109   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2382110   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2382111   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2382112   +          +    -0.73414854875115 * Marital_StatusDivorced
2382113   +          +     0.46421425621114 * Marital_StatusMarried
2382114   +          +    -0.54512730625469 * Marital_StatusSingle
2382115   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2382116   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2382117   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2382118   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2382119   +          +     0.25131188683384 * Marital_StatusDivorced
2382120   +          +     2.38279806963807 * Marital_StatusMarried
2382121   +          +     0.28897706448348 * Marital_StatusSingle
2382122   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2382123   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2382124   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2382125   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2382126   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2382127   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2382128   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2382129   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2382130   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2382131   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2382132   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382133   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2382134   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2382135   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2382136   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2382137   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2382138   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2382139   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2382140   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2382141   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2382142   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2382143   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2382144   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2382145   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2382146   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2382147   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2382148   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2382149   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2382150   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2382151   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2382152   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2382153   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2382154   +END;
MPRINT(EM_DIAGRAM):   END;
2382155   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382156   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2382157   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2382158   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2382159   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2382160   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2382161   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2382162   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2382163   +END;
MPRINT(EM_DIAGRAM):   END;
2382164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382165   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2382166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382168   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2382169   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2382170   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2382171   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2382172   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2382173   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2382174   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2382175   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2382176   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2382177   +          +     1.11855402225797 * S_NumDealsPurchases
2382178   +          +     0.39150287442005 * S_NumDistPurchases
2382179   +          +     0.00160244551627 * S_NumStorePurchases
2382180   +          +     1.54380043731879 * S_NumWebPurchases
2382181   +          +      0.6462755347813 * S_NumWebVisitsMonth
2382182   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2382183   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2382184   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2382185   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2382186   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2382187   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2382188   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2382189   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2382190   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2382191   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2382192   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2382193   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2382194   +          +     0.01911815525287 * S_NumDealsPurchases
2382195   +          +    -1.07196707915227 * S_NumDistPurchases
2382196   +          +      0.6452048321682 * S_NumStorePurchases
2382197   +          +    -0.15818575353955 * S_NumWebPurchases
2382198   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2382199   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2382200   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2382201   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2382202   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2382203   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2382204   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2382205   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2382206   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2382207   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2382208   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2382209   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2382210   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2382211   +          +     1.56893739271853 * S_NumDealsPurchases
2382212   +          +      0.6745865425238 * S_NumDistPurchases
2382213   +          +    -0.26848765783548 * S_NumStorePurchases
2382214   +          +     0.79227081430227 * S_NumWebPurchases
2382215   +          +     0.83054874267768 * S_NumWebVisitsMonth
2382216   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2382217   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2382218   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2382219   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2382220   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2382221   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2382222   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2382223   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2382224   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2382225   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2382226   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2382227   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2382228   +          +    -0.23954856030467 * S_NumDealsPurchases
2382229   +          +    -1.61914390483829 * S_NumDistPurchases
2382230   +          +      -1.014570623016 * S_NumStorePurchases
2382231   +          +    -0.36828642098701 * S_NumWebPurchases
2382232   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2382233   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2382234   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2382235   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2382236   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2382237   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2382238   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2382239   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2382240   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2382241   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2382242   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2382243   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2382244   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2382245   +          +     1.00094082424204 * S_NumDealsPurchases
2382246   +          +      0.2724785290725 * S_NumDistPurchases
2382247   +          +     0.13170237783486 * S_NumStorePurchases
2382248   +          +    -1.31447792523743 * S_NumWebPurchases
2382249   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2382250   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2382251   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2382252   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2382253   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2382254   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2382255   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2382256   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2382257   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2382258   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2382259   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2382260   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2382261   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2382262   +          +    -0.73198872336344 * S_NumDealsPurchases
2382263   +          +     0.29368958872361 * S_NumDistPurchases
2382264   +          +     1.52772046446908 * S_NumStorePurchases
2382265   +          +    -1.75065469134874 * S_NumWebPurchases
2382266   +          +      0.0264954621772 * S_NumWebVisitsMonth
2382267   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2382268   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2382269   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2382270   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2382271   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2382272   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2382273   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2382274   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2382275   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2382276   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2382277   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2382278   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2382279   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2382280   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2382281   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2382282   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2382283   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2382284   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2382285   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2382286   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2382287   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2382288   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2382289   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2382290   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2382291   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2382292   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2382293   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2382294   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2382295   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2382296   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2382297   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2382298   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2382299   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2382300   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2382301   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2382302   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2382303   +          +     0.32207432513904 * Marital_StatusDivorced
2382304   +          +      0.6397913221395 * Marital_StatusMarried
2382305   +          +    -0.25330032559918 * Marital_StatusSingle
2382306   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2382307   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2382308   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2382309   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2382310   +          +     0.79430904713493 * Marital_StatusDivorced
2382311   +          +     2.54456429102799 * Marital_StatusMarried
2382312   +          +     0.59410742352499 * Marital_StatusSingle
2382313   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2382314   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2382315   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2382316   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2382317   +          +    -0.43081775693595 * Marital_StatusDivorced
2382318   +          +    -0.78485102174552 * Marital_StatusMarried
2382319   +          +    -1.56581090110813 * Marital_StatusSingle
2382320   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2382321   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2382322   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2382323   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2382324   +          +     0.38226706522151 * Marital_StatusDivorced
2382325   +          +     0.96666958079914 * Marital_StatusMarried
2382326   +          +    -0.07771259761555 * Marital_StatusSingle
2382327   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2382328   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2382329   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2382330   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2382331   +          +    -0.38325393606947 * Marital_StatusDivorced
2382332   +          +    -1.43303056163299 * Marital_StatusMarried
2382333   +          +     0.11571941757387 * Marital_StatusSingle
2382334   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2382335   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2382336   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2382337   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2382338   +          +    -0.36491799765765 * Marital_StatusDivorced
2382339   +          +     0.14142786767503 * Marital_StatusMarried
2382340   +          +     0.22643970468805 * Marital_StatusSingle
2382341   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2382342   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2382343   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2382344   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2382345   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2382346   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2382347   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2382348   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2382349   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2382350   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2382351   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382352   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2382353   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2382354   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2382355   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2382356   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2382357   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2382358   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2382359   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2382360   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2382361   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2382362   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2382363   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2382364   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2382365   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2382366   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2382367   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2382368   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2382369   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2382370   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2382371   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2382372   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2382373   +END;
MPRINT(EM_DIAGRAM):   END;
2382374   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382375   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2382376   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2382377   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2382378   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2382379   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2382380   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2382381   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2382382   +END;
MPRINT(EM_DIAGRAM):   END;
2382383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382384   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2382385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382387   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2382388   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2382389   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2382390   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2382391   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2382392   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2382393   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2382394   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2382395   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2382396   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2382397   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2382398   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2382399   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2382400   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2382401   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2382402   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2382403   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2382404   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2382405   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2382406   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2382407   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2382408   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2382409   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2382410   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2382411   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2382412   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2382413   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2382414   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2382415   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2382416   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2382417   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2382418   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2382419   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2382420   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2382421   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2382422   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2382423   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2382424   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2382425   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2382426   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2382427   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2382428   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2382429   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2382430   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2382431   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2382432   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2382433   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2382434   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2382435   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2382436   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2382437   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2382438   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2382439   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2382440   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2382441   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2382442   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2382443   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2382444   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2382445   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2382446   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2382447   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2382448   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2382449   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2382450   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2382451   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2382452   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2382453   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2382454   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2382455   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2382456   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2382457   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2382458   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2382459   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2382460   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2382461   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2382462   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2382463   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2382464   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2382465   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2382466   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2382467   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2382468   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382469   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2382470   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2382471   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2382472   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2382473   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2382474   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2382475   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2382476   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2382477   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2382478   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2382479   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2382480   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2382481   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2382482   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2382483   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2382484   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2382485   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2382486   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2382487   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2382488   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2382489   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2382490   +END;
MPRINT(EM_DIAGRAM):   END;
2382491   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382492   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2382493   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2382494   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2382495   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2382496   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2382497   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2382498   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2382499   +END;
MPRINT(EM_DIAGRAM):   END;
2382500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382501   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2382502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382503   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382504   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2382505   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2382506   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2382507   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2382508   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2382509   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2382510   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2382511   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2382512   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2382513   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2382514   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2382515   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2382516   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2382517   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2382518   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2382519   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2382520   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2382521   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2382522   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2382523   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2382524   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2382525   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2382526   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2382527   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2382528   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2382529   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2382530   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2382531   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2382532   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2382533   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2382534   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2382535   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2382536   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2382537   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2382538   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2382539   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2382540   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2382541   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2382542   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2382543   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2382544   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2382545   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2382546   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2382547   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2382548   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2382549   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2382550   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2382551   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2382552   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2382553   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2382554   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2382555   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2382556   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2382557   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2382558   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2382559   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2382560   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2382561   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2382562   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2382563   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2382564   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2382565   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2382566   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2382567   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2382568   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2382569   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2382570   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2382571   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2382572   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2382573   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2382574   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2382575   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2382576   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2382577   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2382578   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2382579   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2382580   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2382581   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2382582   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2382583   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2382584   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2382585   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382586   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2382587   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2382588   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2382589   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2382590   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2382591   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2382592   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2382593   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2382594   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2382595   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2382596   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2382597   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2382598   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2382599   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2382600   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2382601   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2382602   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2382603   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2382604   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2382605   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2382606   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2382607   +END;
MPRINT(EM_DIAGRAM):   END;
2382608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382609   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2382610   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2382611   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2382612   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2382613   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2382614   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2382615   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2382616   +END;
MPRINT(EM_DIAGRAM):   END;
2382617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382618   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2382619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382620   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382621   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2382622   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2382623   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2382624   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2382625   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2382626   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2382627   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2382628   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2382629   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2382630   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2382631   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2382632   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2382633   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2382634   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2382635   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2382636   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2382637   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2382638   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2382639   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2382640   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2382641   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2382642   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2382643   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2382644   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2382645   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2382646   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2382647   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2382648   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2382649   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2382650   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2382651   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2382652   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2382653   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2382654   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2382655   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2382656   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2382657   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2382658   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2382659   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2382660   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2382661   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2382662   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2382663   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2382664   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2382665   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2382666   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2382667   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2382668   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2382669   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2382670   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2382671   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2382672   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2382673   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2382674   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2382675   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2382676   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2382677   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2382678   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2382679   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2382680   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2382681   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2382682   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2382683   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2382684   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2382685   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2382686   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2382687   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2382688   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2382689   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2382690   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2382691   +END;
MPRINT(EM_DIAGRAM):   END;
2382692   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382693   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2382694   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2382695   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2382696   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2382697   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2382698   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2382699   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2382700   +END;
MPRINT(EM_DIAGRAM):   END;
2382701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382702   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2382703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382704   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382705   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2382706   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2382707   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2382708   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2382709   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2382710   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2382711   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2382712   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382713   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2382714   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2382715   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2382716   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2382717   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2382718   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2382719   +END;
MPRINT(EM_DIAGRAM):   END;
2382720   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382721   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2382722   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2382723   +END;
MPRINT(EM_DIAGRAM):   END;
2382724   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2382725   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2382726   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2382727   +END;
MPRINT(EM_DIAGRAM):   END;
2382728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382729   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2382730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382731   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2382732   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2382733   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2382734   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2382735   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2382736   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2382737   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2382738   +END;
MPRINT(EM_DIAGRAM):   END;
2382739   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2382740   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2382741   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2382742   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2382743    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2382744    quit;
2382745    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2382746    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2382747    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2382748    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2382749    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2382750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2382751    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2382752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2382754    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2382755    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382757    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382758    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2382759    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2382760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382761    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2382762    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2382763    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2382764    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382766    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382767    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2382768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382769    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382770    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2382771    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2382771  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.

2382772    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2382773    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2382774    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382775    filename _pref
2382775  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2382776    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2382777    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2382778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382779   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2382780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382781   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2382782   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2382783   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2382784    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2382785    quit;
2382786    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2382787    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2382788    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2382789    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2382790    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2382791    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382792    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2382793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382795    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2382796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382798    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382799    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2382800    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2382801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382802    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2382803    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2382804    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2382805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382807    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382808    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2382809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382810    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382811    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2382812    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2382812  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2382813    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382814    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2382815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382816    filename _pref
2382816  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2382817    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2382818    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2382819   +
2382820   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2382821   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2382821  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2382822   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2382823   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2382824   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2382825   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2382826   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2382827    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2382828    quit;
2382829    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2382830    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2382831    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2382832    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2382833    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2382834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382835    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2382836    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382838    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2382839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382840    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382841    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382842    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2382843    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2382844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382845    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2382846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382847    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2382848    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382850    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382851    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2382852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382853    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382854    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2382855    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2382855  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2382856    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382857    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2382858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382859    filename _pref
2382859  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2382860    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2382861    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2382862   +
2382863   +
2382864   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2382865   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2382866   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2382867   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2382868   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2382869   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382870   +
2382871   +
2382872   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2382873   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2382874   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2382875   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2382876   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2382877   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382878   +
2382879   +
2382880   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2382881   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2382882   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2382883   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2382884   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2382885   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382886   +
2382887   +
2382888   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2382889   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2382890   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2382891   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2382892   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2382893   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382894   +
2382895   +
2382896   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2382897   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2382898   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2382899   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2382900   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2382901   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382902   +
2382903   +
2382904   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2382905   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2382906   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2382907   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2382908   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2382909   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382910   +
2382911   +
2382912   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2382913   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2382914   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2382915   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2382916   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2382917   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382918   +
2382919   +
2382920   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2382921   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2382922   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2382923   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2382924   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2382925   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2382926   +if
2382927   +_FILTERNORM1 not in ( '.')
2382928   + and
2382929   +_FILTERNORM2 not in ( '.')
2382930   + and
2382931   +_FILTERNORM3 not in ( '.')
2382932   + and
2382933   +_FILTERNORM4 not in ( '.')
2382934   + and
2382935   +_FILTERNORM5 not in ( '.')
2382936   + and
2382937   +_FILTERNORM6 not in ( '.')
2382938   + and
2382939   +_FILTERNORM7 not in ( ' ')
2382940   + and
2382941   +_FILTERNORM8 not in ( ' ')
2382942   +and
2382943   +( Dt_Customer ne .)
2382944   +and ( Income ne . and (Income<=107000))
2382945   +and ( Kidhome ne .)
2382946   +and ( MntFishProducts ne .)
2382947   +and ( MntFruits ne .)
2382948   +and ( MntGoldProds ne .)
2382949   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2382950   +and ( MntSweetProducts ne .)
2382951   +and ( MntWines ne .)
2382952   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2382953   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2382954   +and ( NumStorePurchases ne .)
2382955   +and ( NumWebPurchases ne .)
2382956   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2382957   +and ( Recency ne .)
2382958   +and ( Teenhome ne .)
2382959   +and ( Year_Birth ne .)
2382960   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2382961   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2382962   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2382963   +end;
MPRINT(EM_DIAGRAM):   end;
2382964   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2382965   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2382966    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2382967    quit;
2382968    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2382969    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2382970    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2382971    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2382972    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2382973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382974    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2382975    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382977    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2382978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382980    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382981    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2382982    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2382983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382984    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2382985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2382986    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2382987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2382989    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2382990    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2382991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2382992    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382993    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2382994    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2382994  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2382995    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382996    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2382997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2382998    %macro varDept(fcmpdata=,id=);
2382999    %global nobs&id scoreFlag&id;
2383000    %let scoreFlag&id = 0;
2383001    %if &id=1 or ^&fcmpStart %then %do;
2383002    proc sort data=&fcmpdata out=_temp&id nodupkey;
2383003    by NAME;
2383004    where id=&id and LHS in( %let j=1;
2383005    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2383006    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2383007    "&var" %let j = %eval(&j+1);
2383008    %end;
2383009    );
2383010    run;
2383011    %let dsid = %sysfunc(open(_temp&id));
2383012    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2383013    %let dsid = %sysfunc(close(&dsid));
2383014    %if &&nobs&id %then %do;
2383015    %let scoreFlag&id = 1;
2383016    %let fcmpStart = 1;
2383017    %end;
2383018    %else %let fcmpStart = 0;
2383019    %end;
2383020    %else %do;
2383021    proc sort data=&fcmpdata out=_tempid;
2383022    where id=&id;
2383023    by LHS;
2383024    run;
2383025    %let dsid = %sysfunc(open(_tempid));
2383026    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2383027    %let dsid = %sysfunc(close(&dsid));
2383028    %if ^&&nobs&id %then %do;
2383029    proc datasets lib=work nolist;
2383030    delete _tempid;
2383031    run;
2383032    quit;
2383033    %end;
2383034    %else %do;
2383035    data _tempAll;
2383036    set %let j=%eval(&id-1);
2383037    %do x=1 %to &j;
2383038    %if &&nobs&x %then %do;
2383039    _temp&x %end;
2383040    %end;
2383041    ;
2383042    run;
2383043    proc sql;
2383044    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2383044  ! work._tempid p2 where p.name=p2.lhs;
2383045    quit;
2383046    data _temp&id;
2383047    set _temp&id;
2383048    where LHS ne '' and NAME ne '' and Node ne '';
2383049    run;
2383050    proc datasets lib=work nolist;
2383051    delete _tempAll;
2383052    run;
2383053    %let dsid = %sysfunc(open(_temp&id));
2383054    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2383055    %let dsid = %sysfunc(close(&dsid));
2383056    %if ^&&nobs&id %then %do;
2383057    proc datasets lib=work nolist;
2383058    delete _temp&id;
2383059    run;
2383060    quit;
2383061    %end;
2383062    %else %do;
2383063    %let scoreFlag&id = 1;
2383064    data _temp&id;
2383065    set _temp&id;
2383066    where LHS ne NAME and node ne '';
2383067    run;
2383068    %let dsid = %sysfunc(open(_temp&id));
2383069    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2383070    %let dsid = %sysfunc(close(&dsid));
2383071    %if ^&&nobs&id %then %do;
2383072    proc datasets lib=work nolist;
2383073    delete _temp&id;
2383074    run;
2383075    quit;
2383076    %end;
2383077    %else %do;
2383078    proc sort data=_temp&id nodupkey;
2383079    by LHS NAME;
2383080    run;
2383081    %end;
2383082    %end;
2383083    %end;
2383084    %end;
2383085    %mend varDept;
2383086    %macro optCode(outdata=fcmpdata);
2383087    %global fcmpStart;
2383088    %let fcmpStart = 0;
2383089    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2383090    %let NumNodes=9;
2383091    %do k=1 %to &NumNodes;
2383092    %vardept(fcmpdata=&outdata, id=&k);
2383093    %end;
2383094    %mend optCode;
2383095    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 260 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.22 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2383096    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2383097    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2383098    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2383099    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383100    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2383101    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2383102    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2383103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383104    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2383105    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2383105  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2383106    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2383107    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2383108    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2383109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2383110    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2383111    * Ensmbl43: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing metadata for TRAIN data;
2383112    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl43_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl43_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl43_TRAIN out=WORK.M0714U7Y noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0714U7Y;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0714U7Y(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0714U7Y;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0714U7Y;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M36NGPE6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33FMX10(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   set WORK.M36NGPE6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl43";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl43";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2383432    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2383433    set EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO;
2383434    where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2383435    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_EMINFO.
      WHERE (DATA='Ensmbl43') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383436    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl43_EMINFO;
2383437    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2383438    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2383439    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2383443    run;
2383444    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
2383445    set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
2383446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383447    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
2383448    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2383449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383450    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2383451    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2383452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2383453    proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2383454    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2383455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383456    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
2383457    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2383458    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2383459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2383460    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2383461    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2383462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2383463    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL43_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
