MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3DKY5_5 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3DKY5_5 new;
MPRINT(EM_DIAGRAM):   run;
2381364    filename emflow
2381364  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381365    *------------------------------------------------------------*;
2381366    * Ensmbl43: Scoring AUTONEURAL9_TRAIN data;
2381367    *------------------------------------------------------------*;
2381368    data EMWS8.Ensmbl43_TRAIN
2381369    / view=EMWS8.Ensmbl43_TRAIN
2381370    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_TRAIN / view=EMWS8.Ensmbl43_TRAIN ;
2381371    set EMWS8.AutoNeural9_TRAIN
2381372    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2381373    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
2381374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381375   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
2381376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381377   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
2381378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381380   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2381381   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2381382   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2381383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381385   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2381386   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2381387   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2381388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381390   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2381391   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2381392   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2381393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381395   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2381396   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2381397   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2381398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381399   +
2381400   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2381401   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2381401  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2381402   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2381403   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2381404   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2381405   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2381406   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2381407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381408   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2381409   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2381410   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2381411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381413   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2381414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381415   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2381416   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2381417   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2381418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381419   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2381420   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2381421   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2381422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381424   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2381425   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2381426   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2381427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381429   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2381430   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2381431   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2381432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2381433   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2381434   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2381435   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2381436   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2381437   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2381438   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2381439   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2381440   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2381441   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2381442   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2381443   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2381444   +LENGTH _WARN_ $4
2381445   +      F_DepVar  $ 12
2381446   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2381447   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2381448   +
2381449   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2381450   +
2381451   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2381452   +
2381453   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2381454   +
2381455   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2381456   +
2381457   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2381458   +
2381459   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2381460   +
2381461   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2381462   +
2381463   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2381464   +
2381465   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2381466   +
2381467   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2381468   +
2381469   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2381470   +
2381471   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2381472   +
2381473   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2381474   +
2381475   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2381476   +
2381477   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2381478   +
2381479   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2381480   +
2381481   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2381482   +
2381483   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2381484   +
2381485   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2381486   +
2381487   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2381488   +
2381489   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2381490   +
2381491   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2381492   +
2381493   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2381494   +
2381495   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2381496   +
2381497   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2381498   +
2381499   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2381500   +
2381501   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2381502   +
2381503   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2381504   +
2381505   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2381506   +
2381507   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2381508   +
2381509   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2381510   +
2381511   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2381512   +
2381513   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2381514   +
2381515   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2381516   +
2381517   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2381518   +
2381519   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2381520   +
2381521   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2381522   +
2381523   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2381524   +
2381525   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2381526   +
2381527   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2381528   +
2381529   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2381530   +
2381531   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2381532   +
2381533   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2381534   +
2381535   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2381536   +
2381537   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2381538   +
2381539   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2381540   +
2381541   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2381542   +
2381543   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2381544   +
2381545   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2381546   +
2381547   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2381548   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2381549   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2381550   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2381551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381553   +end;
MPRINT(EM_DIAGRAM):   end;
2381554   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381556   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2381557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381558   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381559   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2381560   +   end;
MPRINT(EM_DIAGRAM):   end;
2381561   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381562   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2381563   +   end;
MPRINT(EM_DIAGRAM):   end;
2381564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381565   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2381566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381568   +   end;
MPRINT(EM_DIAGRAM):   end;
2381569   +end;
MPRINT(EM_DIAGRAM):   end;
2381570   +
2381571   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2381572   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2381573   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2381574   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2381575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381577   +end;
MPRINT(EM_DIAGRAM):   end;
2381578   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381580   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2381581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381583   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2381584   +   end;
MPRINT(EM_DIAGRAM):   end;
2381585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381586   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2381587   +   end;
MPRINT(EM_DIAGRAM):   end;
2381588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381589   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2381590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381592   +   end;
MPRINT(EM_DIAGRAM):   end;
2381593   +end;
MPRINT(EM_DIAGRAM):   end;
2381594   +
2381595   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2381596   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2381597   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2381598   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2381599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381601   +end;
MPRINT(EM_DIAGRAM):   end;
2381602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381604   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2381605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381607   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2381608   +   end;
MPRINT(EM_DIAGRAM):   end;
2381609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381610   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2381611   +   end;
MPRINT(EM_DIAGRAM):   end;
2381612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381613   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2381614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381616   +   end;
MPRINT(EM_DIAGRAM):   end;
2381617   +end;
MPRINT(EM_DIAGRAM):   end;
2381618   +
2381619   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2381620   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2381621   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2381622   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2381623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381625   +end;
MPRINT(EM_DIAGRAM):   end;
2381626   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381628   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2381629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381631   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2381632   +   end;
MPRINT(EM_DIAGRAM):   end;
2381633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381634   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2381635   +   end;
MPRINT(EM_DIAGRAM):   end;
2381636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381637   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2381638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381640   +   end;
MPRINT(EM_DIAGRAM):   end;
2381641   +end;
MPRINT(EM_DIAGRAM):   end;
2381642   +
2381643   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2381644   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2381645   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2381646   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2381647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381649   +end;
MPRINT(EM_DIAGRAM):   end;
2381650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381652   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2381653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381655   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2381656   +   end;
MPRINT(EM_DIAGRAM):   end;
2381657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381658   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2381659   +   end;
MPRINT(EM_DIAGRAM):   end;
2381660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381661   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2381662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381664   +   end;
MPRINT(EM_DIAGRAM):   end;
2381665   +end;
MPRINT(EM_DIAGRAM):   end;
2381666   +
2381667   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2381668   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2381669   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2381670   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2381671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381673   +end;
MPRINT(EM_DIAGRAM):   end;
2381674   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381676   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2381677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2381679   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2381680   +   end;
MPRINT(EM_DIAGRAM):   end;
2381681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2381682   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2381683   +   end;
MPRINT(EM_DIAGRAM):   end;
2381684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381685   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2381686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381688   +   end;
MPRINT(EM_DIAGRAM):   end;
2381689   +end;
MPRINT(EM_DIAGRAM):   end;
2381690   +
2381691   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2381692   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2381693   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2381694   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2381695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381697   +end;
MPRINT(EM_DIAGRAM):   end;
2381698   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2381700   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2381701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381702   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2381703   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2381704   +   end;
MPRINT(EM_DIAGRAM):   end;
2381705   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2381706   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2381707   +   end;
MPRINT(EM_DIAGRAM):   end;
2381708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381709   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2381710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381712   +   end;
MPRINT(EM_DIAGRAM):   end;
2381713   +end;
MPRINT(EM_DIAGRAM):   end;
2381714   +
2381715   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2381716   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2381717   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2381718   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2381719   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2381720   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2381721   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2381722   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2381723   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2381724   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2381725   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2381726   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2381727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381729   +end;
MPRINT(EM_DIAGRAM):   end;
2381730   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381731   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2381732   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2381733   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381734   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2381735   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2381736   +   end;
MPRINT(EM_DIAGRAM):   end;
2381737   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2381738   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2381739   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2381740   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2381741   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2381742   +   end;
MPRINT(EM_DIAGRAM):   end;
2381743   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2381744   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2381745   +   end;
MPRINT(EM_DIAGRAM):   end;
2381746   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2381747   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2381748   +   end;
MPRINT(EM_DIAGRAM):   end;
2381749   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2381750   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2381751   +   end;
MPRINT(EM_DIAGRAM):   end;
2381752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381753   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2381754   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2381755   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2381756   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2381757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381759   +   end;
MPRINT(EM_DIAGRAM):   end;
2381760   +end;
MPRINT(EM_DIAGRAM):   end;
2381761   +
2381762   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2381763   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2381764   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2381765   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2381766   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2381767   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2381768   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2381769   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2381770   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2381771   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2381772   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2381773   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2381774   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2381775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2381776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381777   +end;
MPRINT(EM_DIAGRAM):   end;
2381778   +else do;
MPRINT(EM_DIAGRAM):   else do;
2381779   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2381780   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2381781   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2381782   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2381783   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2381784   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2381785   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2381786   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2381787   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381788   +         end;
MPRINT(EM_DIAGRAM):   end;
2381789   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2381790   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2381791   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2381792   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381793   +            end;
MPRINT(EM_DIAGRAM):   end;
2381794   +         end;
MPRINT(EM_DIAGRAM):   end;
2381795   +      end;
MPRINT(EM_DIAGRAM):   end;
2381796   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2381797   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2381798   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2381799   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381800   +         end;
MPRINT(EM_DIAGRAM):   end;
2381801   +      end;
MPRINT(EM_DIAGRAM):   end;
2381802   +   end;
MPRINT(EM_DIAGRAM):   end;
2381803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2381804   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2381805   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2381806   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381807   +      end;
MPRINT(EM_DIAGRAM):   end;
2381808   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2381809   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2381810   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2381811   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2381812   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2381813   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2381814   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2381815   +         end;
MPRINT(EM_DIAGRAM):   end;
2381816   +      end;
MPRINT(EM_DIAGRAM):   end;
2381817   +   end;
MPRINT(EM_DIAGRAM):   end;
2381818   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2381819   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2381820   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2381821   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2381822   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2381823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2381824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381825   +   end;
MPRINT(EM_DIAGRAM):   end;
2381826   +end;
MPRINT(EM_DIAGRAM):   end;
2381827   +
2381828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381829   +*** Checking missing input Interval
2381830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2381831   +
2381832   +IF NMISS(
2381833   +   AcceptedCmpTotal ,
2381834   +   Age ,
2381835   +   Frq ,
2381836   +   Income ,
2381837   +   Kidhome ,
2381838   +   Mnt ,
2381839   +   MntFishProducts ,
2381840   +   MntFruits ,
2381841   +   MntGoldProds ,
2381842   +   MntMeatProducts ,
2381843   +   MntSweetProducts ,
2381844   +   MntWines ,
2381845   +   MonthsAsCustomer ,
2381846   +   NumCatalogPurchases ,
2381847   +   NumDealsPurchases ,
2381848   +   NumDistPurchases ,
2381849   +   NumStorePurchases ,
2381850   +   NumWebPurchases ,
2381851   +   NumWebVisitsMonth ,
2381852   +   RFMstat ,
2381853   +   RMntFrq ,
2381854   +   Recency ,
2381855   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2381856   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2381857   +
2381858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2381859   +END;
MPRINT(EM_DIAGRAM):   END;
2381860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381861   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2381862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381863   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2381864   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2381865   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2381866   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2381867   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2381868   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2381869   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2381870   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2381871   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2381872   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2381873   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2381874   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2381875   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2381876   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2381877   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2381878   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2381879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2381880   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2381881   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2381882   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2381883   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2381884   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2381885   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2381886   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2381887   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2381888   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2381889   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2381890   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2381891   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2381892   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2381893   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2381894   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2381895   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2381896   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2381897   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2381898   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2381899   +END;
MPRINT(EM_DIAGRAM):   END;
2381900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2381901   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2381902   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2381903   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2381904   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2381905   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2381906   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2381907   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2381908   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2381909   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2381910   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2381911   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2381912   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2381913   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2381914   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2381915   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2381916   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2381917   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2381918   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2381919   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2381920   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2381921   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2381922   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2381923   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2381924   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2381925   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2381926   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2381927   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2381928   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2381929   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2381930   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2381931   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2381932   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2381933   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2381934   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2381935   +   ELSE S_NumCatalogPurchases
2381936   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2381937   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2381938   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2381939   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2381940   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2381941   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2381942   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2381943   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2381944   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2381945   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2381946   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2381947   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2381948   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2381949   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2381950   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2381951   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2381952   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2381953   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2381954   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2381955   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2381956   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2381957   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2381958   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2381959   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2381960   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2381961   +END;
MPRINT(EM_DIAGRAM):   END;
2381962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381963   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2381964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381966   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2381967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381969   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2381970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2381971   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2381972   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2381973   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2381974   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2381975   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2381976   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2381977   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2381978   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2381979   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2381980   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2381981   +          +    -1.09856598010056 * S_NumDealsPurchases
2381982   +          +    -0.10571850472514 * S_NumDistPurchases
2381983   +          +     0.11898210654227 * S_NumStorePurchases
2381984   +          +      0.5984912060231 * S_NumWebPurchases
2381985   +          +     0.78592531126942 * S_NumWebVisitsMonth
2381986   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2381987   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2381988   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2381989   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2381990   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2381991   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2381992   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2381993   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2381994   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2381995   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2381996   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2381997   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2381998   +          +    -0.84042044250624 * S_NumDealsPurchases
2381999   +          +    -0.10246261015488 * S_NumDistPurchases
2382000   +          +     0.06886149708824 * S_NumStorePurchases
2382001   +          +     0.63156910388199 * S_NumWebPurchases
2382002   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2382003   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2382004   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2382005   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2382006   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2382007   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2382008   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2382009   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2382010   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2382011   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2382012   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2382013   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2382014   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2382015   +          +     0.45393712455366 * S_NumDealsPurchases
2382016   +          +    -0.25292198053552 * S_NumDistPurchases
2382017   +          +    -1.35582215064749 * S_NumStorePurchases
2382018   +          +    -0.83132202302639 * S_NumWebPurchases
2382019   +          +     1.87116225272678 * S_NumWebVisitsMonth
2382020   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2382021   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2382022   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2382023   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2382024   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2382025   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2382026   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2382027   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2382028   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2382029   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2382030   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2382031   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2382032   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2382033   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2382034   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2382035   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2382036   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2382037   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2382038   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2382039   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2382040   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2382041   +          +      0.4695898100094 * Marital_StatusDivorced
2382042   +          +    -0.52137742289262 * Marital_StatusMarried
2382043   +          +    -0.32382086914936 * Marital_StatusSingle
2382044   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2382045   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2382046   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2382047   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2382048   +          +    -1.04858218653238 * Marital_StatusDivorced
2382049   +          +     2.41098335093061 * Marital_StatusMarried
2382050   +          +    -1.94696044861334 * Marital_StatusSingle
2382051   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2382052   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2382053   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2382054   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2382055   +          +     0.42964114177062 * Marital_StatusDivorced
2382056   +          +    -0.38607635605816 * Marital_StatusMarried
2382057   +          +    -0.02157405407852 * Marital_StatusSingle
2382058   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2382059   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2382060   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2382061   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2382062   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2382063   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2382064   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382065   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2382066   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2382067   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2382068   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2382069   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2382070   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2382071   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2382072   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2382073   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2382074   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2382075   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2382076   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2382077   +END;
MPRINT(EM_DIAGRAM):   END;
2382078   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382079   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2382080   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2382081   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2382082   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2382083   +END;
MPRINT(EM_DIAGRAM):   END;
2382084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382085   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2382086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382087   +
2382088   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2382089   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2382090   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2382091   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2382092   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2382093   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382094   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2382095   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2382096   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2382097   +end;
MPRINT(EM_DIAGRAM):   end;
2382098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382099   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2382100   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2382101   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2382102   +   end;
MPRINT(EM_DIAGRAM):   end;
2382103   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2382104   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2382105   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2382106   +   end;
MPRINT(EM_DIAGRAM):   end;
2382107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382108   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2382109   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2382110   +   end;
MPRINT(EM_DIAGRAM):   end;
2382111   +end;
MPRINT(EM_DIAGRAM):   end;
2382112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382113   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2382114   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2382115   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2382116   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2382117   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2382118   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382119   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2382120   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2382121   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2382122   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2382123   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2382124   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2382125   +END;
MPRINT(EM_DIAGRAM):   END;
2382126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382127   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2382128   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2382129   +END;
MPRINT(EM_DIAGRAM):   END;
2382130   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2382131   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2382132   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2382133   +END;
MPRINT(EM_DIAGRAM):   END;
2382134   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2382135   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2382136   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2382137   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2382138   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2382139   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2382140   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2382141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382142   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2382143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382144   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2382145   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2382146   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2382147   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2382148   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2382149   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2382150   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2382151   +END;
MPRINT(EM_DIAGRAM):   END;
2382152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2382153   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2382154   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2382155   +drop
2382156   +H1x1_1
2382157   +H1x1_2
2382158   +H1x1_3
2382159   +H1x1_4
2382160   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2382161   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2382162   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2382163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382164   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2382165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382166   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2382167   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2382168   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2382169   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2382170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382171   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2382172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382173   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2382174   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2382175   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2382176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382177   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
2382178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382180   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2382181   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2382182   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2382183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2382184   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2382185   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2382186   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2382187   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2382188   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2382189   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2382190   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2382191   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2382192   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2382193   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2382194   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2382195   +LENGTH _WARN_ $4
2382196   +      F_DepVar  $ 12
2382197   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2382198   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2382199   +
2382200   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2382201   +
2382202   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2382203   +
2382204   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2382205   +
2382206   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2382207   +
2382208   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2382209   +
2382210   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2382211   +
2382212   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2382213   +
2382214   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2382215   +
2382216   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2382217   +
2382218   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2382219   +
2382220   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2382221   +
2382222   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2382223   +
2382224   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2382225   +
2382226   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2382227   +
2382228   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2382229   +
2382230   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2382231   +
2382232   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2382233   +
2382234   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2382235   +
2382236   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2382237   +
2382238   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2382239   +
2382240   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2382241   +
2382242   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2382243   +
2382244   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2382245   +
2382246   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2382247   +
2382248   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2382249   +
2382250   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2382251   +
2382252   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2382253   +
2382254   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2382255   +
2382256   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2382257   +
2382258   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2382259   +
2382260   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2382261   +
2382262   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2382263   +
2382264   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2382265   +
2382266   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2382267   +
2382268   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2382269   +
2382270   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2382271   +
2382272   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2382273   +
2382274   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2382275   +
2382276   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2382277   +
2382278   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2382279   +
2382280   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2382281   +
2382282   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2382283   +
2382284   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2382285   +
2382286   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2382287   +
2382288   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2382289   +
2382290   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2382291   +
2382292   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2382293   +
2382294   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2382295   +
2382296   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2382297   +
2382298   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2382299   +
2382300   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2382301   +
2382302   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2382303   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2382304   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2382305   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2382306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382308   +end;
MPRINT(EM_DIAGRAM):   end;
2382309   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382311   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2382312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382314   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2382315   +   end;
MPRINT(EM_DIAGRAM):   end;
2382316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382317   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2382318   +   end;
MPRINT(EM_DIAGRAM):   end;
2382319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382320   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2382321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382323   +   end;
MPRINT(EM_DIAGRAM):   end;
2382324   +end;
MPRINT(EM_DIAGRAM):   end;
2382325   +
2382326   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2382327   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2382328   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2382329   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2382330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382332   +end;
MPRINT(EM_DIAGRAM):   end;
2382333   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382335   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2382336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382338   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2382339   +   end;
MPRINT(EM_DIAGRAM):   end;
2382340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382341   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2382342   +   end;
MPRINT(EM_DIAGRAM):   end;
2382343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382344   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2382345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382347   +   end;
MPRINT(EM_DIAGRAM):   end;
2382348   +end;
MPRINT(EM_DIAGRAM):   end;
2382349   +
2382350   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2382351   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2382352   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2382353   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2382354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382356   +end;
MPRINT(EM_DIAGRAM):   end;
2382357   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382359   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2382360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382362   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2382363   +   end;
MPRINT(EM_DIAGRAM):   end;
2382364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382365   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2382366   +   end;
MPRINT(EM_DIAGRAM):   end;
2382367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382368   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2382369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382371   +   end;
MPRINT(EM_DIAGRAM):   end;
2382372   +end;
MPRINT(EM_DIAGRAM):   end;
2382373   +
2382374   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2382375   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2382376   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2382377   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2382378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382380   +end;
MPRINT(EM_DIAGRAM):   end;
2382381   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382383   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2382384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382386   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2382387   +   end;
MPRINT(EM_DIAGRAM):   end;
2382388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382389   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2382390   +   end;
MPRINT(EM_DIAGRAM):   end;
2382391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382392   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2382393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382395   +   end;
MPRINT(EM_DIAGRAM):   end;
2382396   +end;
MPRINT(EM_DIAGRAM):   end;
2382397   +
2382398   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2382399   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2382400   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2382401   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2382402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382404   +end;
MPRINT(EM_DIAGRAM):   end;
2382405   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382407   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2382408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382410   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2382411   +   end;
MPRINT(EM_DIAGRAM):   end;
2382412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382413   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2382414   +   end;
MPRINT(EM_DIAGRAM):   end;
2382415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382416   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2382417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382419   +   end;
MPRINT(EM_DIAGRAM):   end;
2382420   +end;
MPRINT(EM_DIAGRAM):   end;
2382421   +
2382422   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2382423   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2382424   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2382425   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2382426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382428   +end;
MPRINT(EM_DIAGRAM):   end;
2382429   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382431   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2382432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2382434   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2382435   +   end;
MPRINT(EM_DIAGRAM):   end;
2382436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2382437   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2382438   +   end;
MPRINT(EM_DIAGRAM):   end;
2382439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382440   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2382441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382443   +   end;
MPRINT(EM_DIAGRAM):   end;
2382444   +end;
MPRINT(EM_DIAGRAM):   end;
2382445   +
2382446   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2382447   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2382448   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2382449   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2382450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382452   +end;
MPRINT(EM_DIAGRAM):   end;
2382453   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2382455   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2382456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382457   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2382458   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2382459   +   end;
MPRINT(EM_DIAGRAM):   end;
2382460   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2382461   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2382462   +   end;
MPRINT(EM_DIAGRAM):   end;
2382463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382464   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2382465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382467   +   end;
MPRINT(EM_DIAGRAM):   end;
2382468   +end;
MPRINT(EM_DIAGRAM):   end;
2382469   +
2382470   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2382471   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2382472   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2382473   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2382474   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2382475   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2382476   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2382477   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2382478   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2382479   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2382480   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2382481   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2382482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382484   +end;
MPRINT(EM_DIAGRAM):   end;
2382485   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382486   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2382487   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2382488   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382489   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2382490   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2382491   +   end;
MPRINT(EM_DIAGRAM):   end;
2382492   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2382493   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2382494   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2382495   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2382496   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2382497   +   end;
MPRINT(EM_DIAGRAM):   end;
2382498   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2382499   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2382500   +   end;
MPRINT(EM_DIAGRAM):   end;
2382501   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2382502   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2382503   +   end;
MPRINT(EM_DIAGRAM):   end;
2382504   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2382505   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2382506   +   end;
MPRINT(EM_DIAGRAM):   end;
2382507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382508   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2382509   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2382510   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2382511   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2382512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382514   +   end;
MPRINT(EM_DIAGRAM):   end;
2382515   +end;
MPRINT(EM_DIAGRAM):   end;
2382516   +
2382517   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2382518   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2382519   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2382520   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2382521   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2382522   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2382523   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2382524   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2382525   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2382526   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2382527   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2382528   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2382529   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2382530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2382531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382532   +end;
MPRINT(EM_DIAGRAM):   end;
2382533   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382534   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2382535   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2382536   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382537   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2382538   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2382539   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2382540   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2382541   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2382542   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2382543   +         end;
MPRINT(EM_DIAGRAM):   end;
2382544   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2382545   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2382546   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2382547   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2382548   +            end;
MPRINT(EM_DIAGRAM):   end;
2382549   +         end;
MPRINT(EM_DIAGRAM):   end;
2382550   +      end;
MPRINT(EM_DIAGRAM):   end;
2382551   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2382552   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2382553   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2382554   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2382555   +         end;
MPRINT(EM_DIAGRAM):   end;
2382556   +      end;
MPRINT(EM_DIAGRAM):   end;
2382557   +   end;
MPRINT(EM_DIAGRAM):   end;
2382558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382559   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2382560   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2382561   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2382562   +      end;
MPRINT(EM_DIAGRAM):   end;
2382563   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2382564   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2382565   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2382566   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2382567   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2382568   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2382569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2382570   +         end;
MPRINT(EM_DIAGRAM):   end;
2382571   +      end;
MPRINT(EM_DIAGRAM):   end;
2382572   +   end;
MPRINT(EM_DIAGRAM):   end;
2382573   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2382574   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2382575   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2382576   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2382577   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2382578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2382579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382580   +   end;
MPRINT(EM_DIAGRAM):   end;
2382581   +end;
MPRINT(EM_DIAGRAM):   end;
2382582   +
2382583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382584   +*** Checking missing input Interval
2382585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2382586   +
2382587   +IF NMISS(
2382588   +   AcceptedCmpTotal ,
2382589   +   Age ,
2382590   +   Frq ,
2382591   +   Income ,
2382592   +   Kidhome ,
2382593   +   Mnt ,
2382594   +   MntFishProducts ,
2382595   +   MntFruits ,
2382596   +   MntGoldProds ,
2382597   +   MntMeatProducts ,
2382598   +   MntSweetProducts ,
2382599   +   MntWines ,
2382600   +   MonthsAsCustomer ,
2382601   +   NumCatalogPurchases ,
2382602   +   NumDealsPurchases ,
2382603   +   NumDistPurchases ,
2382604   +   NumStorePurchases ,
2382605   +   NumWebPurchases ,
2382606   +   NumWebVisitsMonth ,
2382607   +   RFMstat ,
2382608   +   RMntFrq ,
2382609   +   Recency ,
2382610   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2382611   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2382612   +
2382613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2382614   +END;
MPRINT(EM_DIAGRAM):   END;
2382615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382616   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2382617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382618   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382619   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2382620   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2382621   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2382622   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2382623   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2382624   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2382625   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2382626   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2382627   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2382628   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2382629   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2382630   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2382631   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2382632   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2382633   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2382634   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2382635   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2382636   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2382637   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2382638   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2382639   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2382640   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2382641   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2382642   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2382643   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2382644   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2382645   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2382646   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2382647   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2382648   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2382649   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2382650   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2382651   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2382652   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2382653   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2382654   +END;
MPRINT(EM_DIAGRAM):   END;
2382655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382656   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2382657   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2382658   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2382659   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2382660   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2382661   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2382662   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2382663   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2382664   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2382665   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2382666   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2382667   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2382668   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2382669   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2382670   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2382671   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2382672   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2382673   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2382674   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2382675   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2382676   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2382677   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2382678   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2382679   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2382680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2382681   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2382682   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2382683   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2382684   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2382685   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2382686   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2382687   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2382688   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2382689   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2382690   +   ELSE S_NumCatalogPurchases
2382691   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2382692   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2382693   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2382694   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2382695   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2382696   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2382697   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2382698   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2382699   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2382700   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2382701   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2382702   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2382703   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2382704   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2382705   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2382706   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2382707   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2382708   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2382709   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2382710   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2382711   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2382712   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2382713   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2382714   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2382715   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2382716   +END;
MPRINT(EM_DIAGRAM):   END;
2382717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382718   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2382719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382721   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2382722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382724   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2382725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382726   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382727   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2382728   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2382729   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2382730   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2382731   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2382732   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2382733   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2382734   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2382735   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2382736   +          +     0.19770934886328 * S_NumDealsPurchases
2382737   +          +      0.0515215988111 * S_NumDistPurchases
2382738   +          +    -0.34569346346089 * S_NumStorePurchases
2382739   +          +    -0.27122293596124 * S_NumWebPurchases
2382740   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2382741   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2382742   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2382743   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2382744   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2382745   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2382746   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2382747   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2382748   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2382749   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2382750   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2382751   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2382752   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2382753   +          +     0.54308887602031 * S_NumDealsPurchases
2382754   +          +    -0.22507315320192 * S_NumDistPurchases
2382755   +          +    -0.79861387328361 * S_NumStorePurchases
2382756   +          +    -0.45467494002747 * S_NumWebPurchases
2382757   +          +      0.2119048824613 * S_NumWebVisitsMonth
2382758   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2382759   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2382760   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2382761   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2382762   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2382763   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2382764   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2382765   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2382766   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2382767   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2382768   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2382769   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2382770   +          +     -0.0771083149302 * S_NumDealsPurchases
2382771   +          +     0.03403621221162 * S_NumDistPurchases
2382772   +          +     0.61303946422025 * S_NumStorePurchases
2382773   +          +     0.27126793634053 * S_NumWebPurchases
2382774   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2382775   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2382776   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2382777   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2382778   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2382779   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2382780   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2382781   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2382782   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2382783   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2382784   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2382785   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2382786   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2382787   +          +     0.29894603062327 * S_NumDealsPurchases
2382788   +          +     0.07614620530875 * S_NumDistPurchases
2382789   +          +     0.15402335009896 * S_NumStorePurchases
2382790   +          +     0.10615749096863 * S_NumWebPurchases
2382791   +          +     0.41962286816879 * S_NumWebVisitsMonth
2382792   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2382793   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2382794   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2382795   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2382796   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2382797   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2382798   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2382799   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2382800   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2382801   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2382802   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2382803   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2382804   +          +     0.14392502416642 * S_NumDealsPurchases
2382805   +          +    -0.10026304978633 * S_NumDistPurchases
2382806   +          +     -0.0588453022746 * S_NumStorePurchases
2382807   +          +     0.24799398610395 * S_NumWebPurchases
2382808   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2382809   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2382810   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2382811   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2382812   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2382813   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2382814   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2382815   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2382816   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2382817   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2382818   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2382819   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2382820   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2382821   +          +     0.08149600854964 * S_NumDealsPurchases
2382822   +          +     0.16873541613513 * S_NumDistPurchases
2382823   +          +    -0.20437343413446 * S_NumStorePurchases
2382824   +          +     -0.1671107527288 * S_NumWebPurchases
2382825   +          +     0.03677043100993 * S_NumWebVisitsMonth
2382826   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2382827   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2382828   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2382829   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2382830   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2382831   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2382832   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2382833   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2382834   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2382835   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2382836   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2382837   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2382838   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2382839   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2382840   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2382841   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2382842   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2382843   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2382844   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2382845   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2382846   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2382847   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2382848   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2382849   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2382850   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2382851   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2382852   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2382853   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2382854   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2382855   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2382856   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2382857   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2382858   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2382859   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2382860   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2382861   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2382862   +          +    -0.31045295887604 * Marital_StatusDivorced
2382863   +          +    -0.01109401001539 * Marital_StatusMarried
2382864   +          +     0.01325135981025 * Marital_StatusSingle
2382865   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2382866   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2382867   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2382868   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2382869   +          +     0.02275101861599 * Marital_StatusDivorced
2382870   +          +     0.20271548664903 * Marital_StatusMarried
2382871   +          +    -0.12132069210718 * Marital_StatusSingle
2382872   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2382873   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2382874   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2382875   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2382876   +          +     -0.4992959703281 * Marital_StatusDivorced
2382877   +          +     0.62071659624138 * Marital_StatusMarried
2382878   +          +    -0.21776202274494 * Marital_StatusSingle
2382879   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2382880   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2382881   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2382882   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2382883   +          +     0.05626212670587 * Marital_StatusDivorced
2382884   +          +     0.14353891364597 * Marital_StatusMarried
2382885   +          +    -0.29006765622997 * Marital_StatusSingle
2382886   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2382887   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2382888   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2382889   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2382890   +          +    -0.21206913700604 * Marital_StatusDivorced
2382891   +          +     0.58790643614629 * Marital_StatusMarried
2382892   +          +    -0.65995982578062 * Marital_StatusSingle
2382893   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2382894   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2382895   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2382896   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2382897   +          +    -0.05047370516008 * Marital_StatusDivorced
2382898   +          +    -0.23139090963669 * Marital_StatusMarried
2382899   +          +     0.04816197463249 * Marital_StatusSingle
2382900   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2382901   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2382902   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2382903   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2382904   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2382905   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2382906   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2382907   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2382908   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2382909   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2382910   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2382911   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2382912   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2382913   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2382914   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2382915   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2382916   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2382917   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2382918   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2382919   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2382920   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2382921   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2382922   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2382923   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2382924   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2382925   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2382926   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2382927   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2382928   +END;
MPRINT(EM_DIAGRAM):   END;
2382929   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382930   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2382931   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2382932   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2382933   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2382934   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2382935   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2382936   +END;
MPRINT(EM_DIAGRAM):   END;
2382937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382938   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2382939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382940   +
2382941   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2382942   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2382943   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2382944   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2382945   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2382946   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2382947   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2382948   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2382949   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2382950   +end;
MPRINT(EM_DIAGRAM):   end;
2382951   +else do;
MPRINT(EM_DIAGRAM):   else do;
2382952   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2382953   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2382954   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2382955   +   end;
MPRINT(EM_DIAGRAM):   end;
2382956   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2382957   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2382958   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2382959   +   end;
MPRINT(EM_DIAGRAM):   end;
2382960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2382961   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2382962   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2382963   +   end;
MPRINT(EM_DIAGRAM):   end;
2382964   +end;
MPRINT(EM_DIAGRAM):   end;
2382965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2382966   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2382967   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2382968   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2382969   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2382970   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2382971   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2382972   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2382973   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2382974   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2382975   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2382976   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2382977   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2382978   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2382979   +END;
MPRINT(EM_DIAGRAM):   END;
2382980   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2382981   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2382982   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2382983   +END;
MPRINT(EM_DIAGRAM):   END;
2382984   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2382985   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2382986   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2382987   +END;
MPRINT(EM_DIAGRAM):   END;
2382988   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2382989   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2382990   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2382991   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2382992   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2382993   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2382994   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2382995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382996   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2382997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2382998   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2382999   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2383000   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2383001   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2383002   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2383003   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2383004   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2383005   +END;
MPRINT(EM_DIAGRAM):   END;
2383006   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2383007   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2383008   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2383009   +drop
2383010   +H1x1_1
2383011   +H1x1_2
2383012   +H1x1_3
2383013   +H1x1_4
2383014   +H1x1_5
2383015   +H1x1_6
2383016   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2383017   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2383018   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2383019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383020   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2383021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383022   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2383023   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2383024   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2383025   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2383026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383027   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2383028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383029   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2383030   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2383031   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2383032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383033   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
2383034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383036   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2383037   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2383038   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2383039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2383040   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2383041   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2383042   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2383043   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2383044   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2383045   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2383046   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2383047   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2383048   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2383049   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2383050   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2383051   +LENGTH _WARN_ $4
2383052   +      F_DepVar  $ 12
2383053   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2383054   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2383055   +
2383056   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2383057   +
2383058   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2383059   +
2383060   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2383061   +
2383062   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2383063   +
2383064   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2383065   +
2383066   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2383067   +
2383068   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2383069   +
2383070   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2383071   +
2383072   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2383073   +
2383074   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2383075   +
2383076   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2383077   +
2383078   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2383079   +
2383080   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2383081   +
2383082   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2383083   +
2383084   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2383085   +
2383086   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2383087   +
2383088   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2383089   +
2383090   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2383091   +
2383092   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2383093   +
2383094   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2383095   +
2383096   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2383097   +
2383098   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2383099   +
2383100   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2383101   +
2383102   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2383103   +
2383104   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2383105   +
2383106   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2383107   +
2383108   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2383109   +
2383110   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2383111   +
2383112   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2383113   +
2383114   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2383115   +
2383116   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2383117   +
2383118   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2383119   +
2383120   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2383121   +
2383122   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2383123   +
2383124   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2383125   +
2383126   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2383127   +
2383128   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2383129   +
2383130   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2383131   +
2383132   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2383133   +
2383134   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2383135   +
2383136   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2383137   +
2383138   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2383139   +
2383140   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2383141   +
2383142   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2383143   +
2383144   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2383145   +
2383146   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2383147   +
2383148   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2383149   +
2383150   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2383151   +
2383152   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2383153   +
2383154   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2383155   +
2383156   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2383157   +
2383158   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2383159   +
2383160   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2383161   +
2383162   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2383163   +
2383164   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2383165   +
2383166   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2383167   +
2383168   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2383169   +
2383170   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2383171   +
2383172   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2383173   +
2383174   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2383175   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2383176   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2383177   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2383178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383180   +end;
MPRINT(EM_DIAGRAM):   end;
2383181   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383183   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2383184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383186   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2383187   +   end;
MPRINT(EM_DIAGRAM):   end;
2383188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383189   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2383190   +   end;
MPRINT(EM_DIAGRAM):   end;
2383191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383192   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2383193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383195   +   end;
MPRINT(EM_DIAGRAM):   end;
2383196   +end;
MPRINT(EM_DIAGRAM):   end;
2383197   +
2383198   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2383199   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2383200   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2383201   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2383202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383204   +end;
MPRINT(EM_DIAGRAM):   end;
2383205   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383207   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2383208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383210   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2383211   +   end;
MPRINT(EM_DIAGRAM):   end;
2383212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383213   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2383214   +   end;
MPRINT(EM_DIAGRAM):   end;
2383215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383216   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2383217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383219   +   end;
MPRINT(EM_DIAGRAM):   end;
2383220   +end;
MPRINT(EM_DIAGRAM):   end;
2383221   +
2383222   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2383223   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2383224   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2383225   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2383226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383228   +end;
MPRINT(EM_DIAGRAM):   end;
2383229   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383231   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2383232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383234   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2383235   +   end;
MPRINT(EM_DIAGRAM):   end;
2383236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383237   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2383238   +   end;
MPRINT(EM_DIAGRAM):   end;
2383239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383240   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2383241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383243   +   end;
MPRINT(EM_DIAGRAM):   end;
2383244   +end;
MPRINT(EM_DIAGRAM):   end;
2383245   +
2383246   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2383247   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2383248   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2383249   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2383250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383252   +end;
MPRINT(EM_DIAGRAM):   end;
2383253   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383255   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2383256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383257   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383258   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2383259   +   end;
MPRINT(EM_DIAGRAM):   end;
2383260   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383261   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2383262   +   end;
MPRINT(EM_DIAGRAM):   end;
2383263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383264   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2383265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383267   +   end;
MPRINT(EM_DIAGRAM):   end;
2383268   +end;
MPRINT(EM_DIAGRAM):   end;
2383269   +
2383270   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2383271   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2383272   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2383273   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2383274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383276   +end;
MPRINT(EM_DIAGRAM):   end;
2383277   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383278   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383279   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2383280   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383281   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383282   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2383283   +   end;
MPRINT(EM_DIAGRAM):   end;
2383284   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383285   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2383286   +   end;
MPRINT(EM_DIAGRAM):   end;
2383287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383288   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2383289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383291   +   end;
MPRINT(EM_DIAGRAM):   end;
2383292   +end;
MPRINT(EM_DIAGRAM):   end;
2383293   +
2383294   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2383295   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2383296   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2383297   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2383298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383300   +end;
MPRINT(EM_DIAGRAM):   end;
2383301   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383303   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2383304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2383306   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2383307   +   end;
MPRINT(EM_DIAGRAM):   end;
2383308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2383309   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2383310   +   end;
MPRINT(EM_DIAGRAM):   end;
2383311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383312   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2383313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383315   +   end;
MPRINT(EM_DIAGRAM):   end;
2383316   +end;
MPRINT(EM_DIAGRAM):   end;
2383317   +
2383318   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2383319   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2383320   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2383321   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2383322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383324   +end;
MPRINT(EM_DIAGRAM):   end;
2383325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2383327   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2383328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383329   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2383330   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2383331   +   end;
MPRINT(EM_DIAGRAM):   end;
2383332   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2383333   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2383334   +   end;
MPRINT(EM_DIAGRAM):   end;
2383335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383336   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2383337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383339   +   end;
MPRINT(EM_DIAGRAM):   end;
2383340   +end;
MPRINT(EM_DIAGRAM):   end;
2383341   +
2383342   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2383343   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2383344   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2383345   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2383346   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2383347   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2383348   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2383349   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2383350   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2383351   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2383352   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2383353   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2383354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383356   +end;
MPRINT(EM_DIAGRAM):   end;
2383357   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383358   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2383359   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2383360   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383361   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2383362   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2383363   +   end;
MPRINT(EM_DIAGRAM):   end;
2383364   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2383365   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2383366   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2383367   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2383368   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2383369   +   end;
MPRINT(EM_DIAGRAM):   end;
2383370   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2383371   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2383372   +   end;
MPRINT(EM_DIAGRAM):   end;
2383373   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2383374   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2383375   +   end;
MPRINT(EM_DIAGRAM):   end;
2383376   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2383377   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2383378   +   end;
MPRINT(EM_DIAGRAM):   end;
2383379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383380   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2383381   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2383382   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2383383   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2383384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383386   +   end;
MPRINT(EM_DIAGRAM):   end;
2383387   +end;
MPRINT(EM_DIAGRAM):   end;
2383388   +
2383389   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2383390   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2383391   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2383392   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2383393   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2383394   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2383395   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2383396   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2383397   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2383398   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2383399   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2383400   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2383401   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2383402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2383403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383404   +end;
MPRINT(EM_DIAGRAM):   end;
2383405   +else do;
MPRINT(EM_DIAGRAM):   else do;
2383406   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2383407   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2383408   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2383409   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2383410   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2383411   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2383412   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2383413   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2383414   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2383415   +         end;
MPRINT(EM_DIAGRAM):   end;
2383416   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2383417   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2383418   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2383419   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2383420   +            end;
MPRINT(EM_DIAGRAM):   end;
2383421   +         end;
MPRINT(EM_DIAGRAM):   end;
2383422   +      end;
MPRINT(EM_DIAGRAM):   end;
2383423   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2383424   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2383425   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2383426   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2383427   +         end;
MPRINT(EM_DIAGRAM):   end;
2383428   +      end;
MPRINT(EM_DIAGRAM):   end;
2383429   +   end;
MPRINT(EM_DIAGRAM):   end;
2383430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2383431   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2383432   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2383433   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2383434   +      end;
MPRINT(EM_DIAGRAM):   end;
2383435   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2383436   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2383437   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2383438   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2383439   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2383440   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2383441   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2383442   +         end;
MPRINT(EM_DIAGRAM):   end;
2383443   +      end;
MPRINT(EM_DIAGRAM):   end;
2383444   +   end;
MPRINT(EM_DIAGRAM):   end;
2383445   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2383446   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2383447   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2383448   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2383449   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2383450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2383451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383452   +   end;
MPRINT(EM_DIAGRAM):   end;
2383453   +end;
MPRINT(EM_DIAGRAM):   end;
2383454   +
2383455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383456   +*** Checking missing input Interval
2383457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2383458   +
2383459   +IF NMISS(
2383460   +   AcceptedCmpTotal ,
2383461   +   Age ,
2383462   +   Frq ,
2383463   +   Income ,
2383464   +   Kidhome ,
2383465   +   Mnt ,
2383466   +   MntFishProducts ,
2383467   +   MntFruits ,
2383468   +   MntGoldProds ,
2383469   +   MntMeatProducts ,
2383470   +   MntSweetProducts ,
2383471   +   MntWines ,
2383472   +   MonthsAsCustomer ,
2383473   +   NumCatalogPurchases ,
2383474   +   NumDealsPurchases ,
2383475   +   NumDistPurchases ,
2383476   +   NumStorePurchases ,
2383477   +   NumWebPurchases ,
2383478   +   NumWebVisitsMonth ,
2383479   +   RFMstat ,
2383480   +   RMntFrq ,
2383481   +   Recency ,
2383482   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2383483   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2383484   +
2383485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2383486   +END;
MPRINT(EM_DIAGRAM):   END;
2383487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383488   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2383489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383490   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2383491   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2383492   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2383493   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2383494   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2383495   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2383496   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2383497   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2383498   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2383499   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2383500   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2383501   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2383502   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2383503   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2383504   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2383505   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2383506   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2383507   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2383508   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2383509   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2383510   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2383511   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2383512   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2383513   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2383514   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2383515   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2383516   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2383517   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2383518   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2383519   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2383520   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2383521   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2383522   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2383523   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2383524   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2383525   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2383526   +END;
MPRINT(EM_DIAGRAM):   END;
2383527   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2383528   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2383529   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2383530   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2383531   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2383532   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2383533   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2383534   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2383535   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2383536   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2383537   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2383538   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2383539   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2383540   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2383541   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2383542   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2383543   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2383544   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2383545   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2383546   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2383547   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2383548   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2383549   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2383550   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2383551   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2383552   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2383553   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2383554   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2383555   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2383556   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2383557   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2383558   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2383559   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2383560   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2383561   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2383562   +   ELSE S_NumCatalogPurchases
2383563   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2383564   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2383565   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2383566   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2383567   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2383568   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2383569   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2383570   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2383571   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2383572   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2383573   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2383574   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2383575   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2383576   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2383577   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2383578   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2383579   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2383580   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2383581   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2383582   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2383583   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2383584   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2383585   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2383586   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2383587   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2383588   +END;
MPRINT(EM_DIAGRAM):   END;
2383589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383590   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2383591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383593   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2383594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383596   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2383597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2383599   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2383600   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2383601   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2383602   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2383603   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2383604   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2383605   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2383606   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2383607   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2383608   +          +      0.1112677116841 * S_NumDealsPurchases
2383609   +          +     0.01563584187072 * S_NumDistPurchases
2383610   +          +     0.19193969522995 * S_NumStorePurchases
2383611   +          +      0.3133556199984 * S_NumWebPurchases
2383612   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2383613   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2383614   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2383615   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2383616   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2383617   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2383618   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2383619   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2383620   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2383621   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2383622   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2383623   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2383624   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2383625   +          +     0.30225032753275 * S_NumDealsPurchases
2383626   +          +     0.33833359923595 * S_NumDistPurchases
2383627   +          +    -0.20255599575849 * S_NumStorePurchases
2383628   +          +    -0.12040071168942 * S_NumWebPurchases
2383629   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2383630   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2383631   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2383632   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
The SAS System

S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2383633   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2383634   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2383635   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2383636   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2383637   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2383638   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2383639   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2383640   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2383641   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2383642   +          +     0.16792903091627 * S_NumDealsPurchases
2383643   +          +    -0.37408945626745 * S_NumDistPurchases
2383644   +          +    -0.18067262995566 * S_NumStorePurchases
2383645   +          +     0.21192146789881 * S_NumWebPurchases
2383646   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2383647   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2383648   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2383649   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2383650   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2383651   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2383652   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2383653   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2383654   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2383655   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2383656   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2383657   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2383658   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2383659   +          +     0.29407429399136 * S_NumDealsPurchases
2383660   +          +     0.01610745252195 * S_NumDistPurchases
2383661   +          +    -0.17767939085628 * S_NumStorePurchases
2383662   +          +    -0.15168958538637 * S_NumWebPurchases
2383663   +          +     0.17433622143988 * S_NumWebVisitsMonth
2383664   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2383665   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2383666   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2383667   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2383668   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2383669   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2383670   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2383671   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2383672   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2383673   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2383674   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2383675   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2383676   +          +    -0.37976451362108 * S_NumDealsPurchases
2383677   +          +    -0.17027731520801 * S_NumDistPurchases
2383678   +          +     0.59849493667087 * S_NumStorePurchases
2383679   +          +     0.65481480560301 * S_NumWebPurchases
2383680   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2383681   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2383682   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2383683   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2383684   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2383685   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2383686   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2383687   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2383688   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2383689   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2383690   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2383691   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2383692   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2383693   +          +    -0.07686699131623 * S_NumDealsPurchases
2383694   +          +    -0.07220460738926 * S_NumDistPurchases
2383695   +          +    -0.06554027468389 * S_NumStorePurchases
2383696   +          +     0.10422838158001 * S_NumWebPurchases
2383697   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2383698   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2383699   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2383700   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2383701   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2383702   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2383703   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2383704   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2383705   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2383706   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2383707   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2383708   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2383709   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2383710   +          +    -0.07920122387563 * S_NumDealsPurchases
2383711   +          +      0.3649244061347 * S_NumDistPurchases
2383712   +          +     0.36475853688403 * S_NumStorePurchases
2383713   +          +     0.02153991404063 * S_NumWebPurchases
2383714   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2383715   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2383716   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2383717   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2383718   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2383719   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2383720   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2383721   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2383722   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2383723   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2383724   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2383725   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2383726   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2383727   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2383728   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2383729   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2383730   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2383731   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2383732   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2383733   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2383734   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2383735   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2383736   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2383737   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2383738   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2383739   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2383740   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2383741   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2383742   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2383743   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2383744   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2383745   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2383746   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2383747   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2383748   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2383749   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2383750   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2383751   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2383752   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2383753   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2383754   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2383755   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2383756   +          +     0.07744097241553 * Marital_StatusDivorced
2383757   +          +     -0.0247463100385 * Marital_StatusMarried
2383758   +          +     0.05804915234573 * Marital_StatusSingle
2383759   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2383760   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2383761   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2383762   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2383763   +          +     0.01390668926269 * Marital_StatusDivorced
2383764   +          +     0.01136282152074 * Marital_StatusMarried
2383765   +          +     0.12450246418789 * Marital_StatusSingle
2383766   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2383767   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2383768   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2383769   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2383770   +          +    -0.19133456931879 * Marital_StatusDivorced
2383771   +          +     0.56263566654996 * Marital_StatusMarried
2383772   +          +    -0.42172822038882 * Marital_StatusSingle
2383773   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2383774   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2383775   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2383776   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2383777   +          +    -0.19871205065609 * Marital_StatusDivorced
2383778   +          +    -0.14730795681603 * Marital_StatusMarried
2383779   +          +     0.05055432510362 * Marital_StatusSingle
2383780   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2383781   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2383782   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2383783   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2383784   +          +    -0.35623807358995 * Marital_StatusDivorced
2383785   +          +     0.30324726283965 * Marital_StatusMarried
2383786   +          +    -0.18561093467927 * Marital_StatusSingle
2383787   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2383788   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2383789   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2383790   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2383791   +          +     0.11581014663368 * Marital_StatusDivorced
2383792   +          +    -0.31070638037659 * Marital_StatusMarried
2383793   +          +     0.17131747253949 * Marital_StatusSingle
2383794   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2383795   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2383796   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2383797   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2383798   +          +    -0.42450599871892 * Marital_StatusDivorced
2383799   +          +     0.48162905075885 * Marital_StatusMarried
2383800   +          +    -0.26618507749283 * Marital_StatusSingle
2383801   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2383802   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2383803   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2383804   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2383805   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2383806   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2383807   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2383808   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2383809   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2383810   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2383811   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2383812   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2383813   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2383814   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2383815   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2383816   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2383817   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2383818   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2383819   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2383820   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2383821   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2383822   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2383823   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2383824   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2383825   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2383826   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2383827   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2383828   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2383829   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2383830   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2383831   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2383832   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2383833   +END;
MPRINT(EM_DIAGRAM):   END;
2383834   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2383835   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2383836   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2383837   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2383838   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2383839   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2383840   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2383841   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2383842   +END;
MPRINT(EM_DIAGRAM):   END;
2383843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383844   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2383845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2383846   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2383847   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2383848   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2383849   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2383850   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2383851   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2383852   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2383853   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2383854   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2383855   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2383856   +          +     1.96719021971894 * S_NumDealsPurchases
2383857   +          +    -0.44535354794671 * S_NumDistPurchases
2383858   +          +    -0.54827762736866 * S_NumStorePurchases
2383859   +          +     1.02703310241897 * S_NumWebPurchases
2383860   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2383861   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2383862   +        S_RMntFrq  +       0.651688575044 * S_Recency
2383863   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2383864   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2383865   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2383866   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2383867   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2383868   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2383869   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2383870   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2383871   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2383872   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2383873   +          +     1.34659447971131 * S_NumDealsPurchases
2383874   +          +    -0.51624251310423 * S_NumDistPurchases
2383875   +          +      -1.283121574848 * S_NumStorePurchases
2383876   +          +    -1.83517806228926 * S_NumWebPurchases
2383877   +          +     0.51321339475285 * S_NumWebVisitsMonth
2383878   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2383879   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2383880   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2383881   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2383882   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2383883   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2383884   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2383885   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2383886   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2383887   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2383888   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2383889   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2383890   +          +     0.67492297345004 * S_NumDealsPurchases
2383891   +          +    -0.40437875375926 * S_NumDistPurchases
2383892   +          +     0.36322603681545 * S_NumStorePurchases
2383893   +          +    -1.15315070635524 * S_NumWebPurchases
2383894   +          +     1.20707272201156 * S_NumWebVisitsMonth
2383895   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2383896   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2383897   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2383898   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2383899   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2383900   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2383901   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2383902   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2383903   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2383904   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2383905   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2383906   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2383907   +          +    -0.41427983342148 * S_NumDealsPurchases
2383908   +          +    -0.22714305629205 * S_NumDistPurchases
2383909   +          +    -0.78763182048862 * S_NumStorePurchases
2383910   +          +    -0.26669253451501 * S_NumWebPurchases
2383911   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2383912   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2383913   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2383914   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2383915   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2383916   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2383917   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2383918   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2383919   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2383920   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2383921   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2383922   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2383923   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2383924   +          +      0.7697882092212 * S_NumDealsPurchases
2383925   +          +     0.51864835453056 * S_NumDistPurchases
2383926   +          +    -1.18320366630444 * S_NumStorePurchases
2383927   +          +     -0.6608394639529 * S_NumWebPurchases
2383928   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2383929   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2383930   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2383931   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2383932   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2383933   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2383934   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2383935   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2383936   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2383937   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2383938   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2383939   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2383940   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2383941   +          +     1.45707983202269 * S_NumDealsPurchases
2383942   +          +     0.83341887728641 * S_NumDistPurchases
2383943   +          +    -0.36664450469423 * S_NumStorePurchases
2383944   +          +     0.63911579043339 * S_NumWebPurchases
2383945   +          +     0.67144790303554 * S_NumWebVisitsMonth
2383946   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2383947   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2383948   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2383949   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2383950   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2383951   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2383952   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2383953   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2383954   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2383955   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2383956   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2383957   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2383958   +          +     0.68491896063662 * S_NumDealsPurchases
2383959   +          +      0.5386312048592 * S_NumDistPurchases
2383960   +          +     1.28108942503912 * S_NumStorePurchases
2383961   +          +    -0.88282270505969 * S_NumWebPurchases
2383962   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2383963   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2383964   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2383965   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2383966   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2383967   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2383968   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2383969   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2383970   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2383971   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2383972   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2383973   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2383974   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2383975   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2383976   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2383977   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2383978   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2383979   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2383980   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2383981   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2383982   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2383983   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2383984   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2383985   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2383986   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2383987   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2383988   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2383989   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2383990   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2383991   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2383992   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2383993   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2383994   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2383995   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2383996   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2383997   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2383998   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2383999   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2384000   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2384001   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2384002   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2384003   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2384004   +          +    -3.97961426831865 * Marital_StatusDivorced
2384005   +          +     0.00932639813867 * Marital_StatusMarried
2384006   +          +     1.29310186574718 * Marital_StatusSingle
2384007   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2384008   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2384009   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2384010   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2384011   +          +    -0.30358516578188 * Marital_StatusDivorced
2384012   +          +    -0.96176709360703 * Marital_StatusMarried
2384013   +          +     1.26977690921649 * Marital_StatusSingle
2384014   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2384015   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2384016   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2384017   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2384018   +          +     0.55272671490757 * Marital_StatusDivorced
2384019   +          +      0.1499239288334 * Marital_StatusMarried
2384020   +          +    -0.46840941760604 * Marital_StatusSingle
2384021   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2384022   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2384023   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2384024   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2384025   +          +      -1.240735370138 * Marital_StatusDivorced
2384026   +          +    -1.20089294883599 * Marital_StatusMarried
2384027   +          +     0.57492674426149 * Marital_StatusSingle
2384028   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2384029   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2384030   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2384031   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2384032   +          +     1.05435442049802 * Marital_StatusDivorced
2384033   +          +      0.3571256349717 * Marital_StatusMarried
2384034   +          +    -0.44741267266578 * Marital_StatusSingle
2384035   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2384036   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2384037   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2384038   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2384039   +          +     2.06026721980778 * Marital_StatusDivorced
2384040   +          +    -0.49583258645166 * Marital_StatusMarried
2384041   +          +    -1.14824900824474 * Marital_StatusSingle
2384042   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2384043   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2384044   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2384045   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2384046   +          +     -1.1890908607447 * Marital_StatusDivorced
2384047   +          +    -0.46668809907123 * Marital_StatusMarried
2384048   +          +     1.20342564763422 * Marital_StatusSingle
2384049   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2384050   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2384051   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2384052   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2384053   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2384054   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2384055   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2384056   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2384057   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2384058   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2384059   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2384060   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2384061   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2384062   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2384063   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2384064   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2384065   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2384066   +END;
MPRINT(EM_DIAGRAM):   END;
2384067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2384068   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2384069   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2384070   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2384071   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2384072   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2384073   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2384074   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2384075   +END;
MPRINT(EM_DIAGRAM):   END;
2384076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384077   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2384078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384079   +
2384080   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2384081   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2384082   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2384083   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2384084   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2384085   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384086   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2384087   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2384088   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2384089   +end;
MPRINT(EM_DIAGRAM):   end;
2384090   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384091   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2384092   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2384093   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2384094   +   end;
MPRINT(EM_DIAGRAM):   end;
2384095   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2384096   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2384097   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2384098   +   end;
MPRINT(EM_DIAGRAM):   end;
2384099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384100   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2384101   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2384102   +   end;
MPRINT(EM_DIAGRAM):   end;
2384103   +end;
MPRINT(EM_DIAGRAM):   end;
2384104   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2384105   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2384106   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2384107   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2384108   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2384109   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2384110   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2384111   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2384112   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2384113   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2384114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2384115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2384116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2384117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2384118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2384119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2384120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2384121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2384122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2384123   +END;
MPRINT(EM_DIAGRAM):   END;
2384124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2384125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2384126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2384127   +END;
MPRINT(EM_DIAGRAM):   END;
2384128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2384129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2384130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2384131   +END;
MPRINT(EM_DIAGRAM):   END;
2384132   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2384133   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2384134   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2384135   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2384136   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2384137   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2384138   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2384139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384140   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2384141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384142   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2384143   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2384144   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2384145   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2384146   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2384147   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2384148   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2384149   +END;
MPRINT(EM_DIAGRAM):   END;
2384150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2384151   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2384152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2384153   +drop
2384154   +H1x1_1
2384155   +H1x1_2
2384156   +H1x1_3
2384157   +H1x1_4
2384158   +H1x1_5
2384159   +H1x1_6
2384160   +H1x1_7
2384161   +H1x2_1
2384162   +H1x2_2
2384163   +H1x2_3
2384164   +H1x2_4
2384165   +H1x2_5
2384166   +H1x2_6
2384167   +H1x2_7
2384168   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2384169   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2384170   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2384171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384172   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2384173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384174   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2384175   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2384176   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2384177   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2384178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384179   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2384180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384181   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2384182   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2384183   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2384184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384185   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
2384186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384187   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2384188   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2384189   +P_DepVar1 = max(
2384190   +AutoNeural9_P_DepVar1 ,
2384191   +AutoNeural11_P_DepVar1 ,
2384192   +AutoNeural12_P_DepVar1
2384193   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural12_P_DepVar1 );
2384194   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2384195   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2384196   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2384197   +end;
MPRINT(EM_DIAGRAM):   end;
2384198   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2384199   +P_DepVar0 = max(
2384200   +AutoNeural9_P_DepVar0 ,
2384201   +AutoNeural11_P_DepVar0 ,
2384202   +AutoNeural12_P_DepVar0
2384203   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural12_P_DepVar0 );
2384204   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2384205   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2384206   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2384207   +end;
MPRINT(EM_DIAGRAM):   end;
2384208   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2384209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384210   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
2384211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384212   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2384213   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2384214   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2384215   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2384216   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2384217   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2384218   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2384219   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2384220   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2384221   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2384222   +end;
MPRINT(EM_DIAGRAM):   end;
2384223   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2384224   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2384225   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2384226   +end;
MPRINT(EM_DIAGRAM):   end;
2384227   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2384228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384229   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
2384230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384231   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2384232   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2384233   +else
2384234   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2384235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384236   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
2384237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384238   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2384239   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2384240   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2384241   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2384241  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2384242   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2384242  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2384243   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2384243  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2384244   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2384244  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2384245   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2384245  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2384246   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2384246  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2384247   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2384247  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2384248   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2384248  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2384249   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2384249  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2384250   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2384250  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2384251   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2384251  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2384252   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2384252  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2384253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384254   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
2384255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384256   +if
2384257   +F_DepVar NE '1'
2384258   +AND F_DepVar NE '0'
2384259   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2384260   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2384261   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2384262   +end;
MPRINT(EM_DIAGRAM):   end;
2384263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384264   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2384265   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2384266   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2384267   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2384268   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2384269   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2384270   +END;
MPRINT(EM_DIAGRAM):   END;
2384271   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2384272    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2384273    quit;
2384274    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2384275    filename emflow
2384275  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384276    *------------------------------------------------------------*;
2384277    * Ensmbl43: Scoring AUTONEURAL9_VALIDATE data;
2384278    *------------------------------------------------------------*;
2384279    data EMWS8.Ensmbl43_VALIDATE
2384280    / view=EMWS8.Ensmbl43_VALIDATE
2384281    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_VALIDATE / view=EMWS8.Ensmbl43_VALIDATE ;
2384282    set EMWS8.AutoNeural9_VALIDATE
2384283    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2384284    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\EMFLOWSCORE.sas.
2384285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384286   +* Ensmbl43: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Combine model for DepVar;
2384287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384288   +* Ensmbl43: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 1 of 3;
2384289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384291   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2384292   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2384293   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2384294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384296   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2384297   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2384298   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2384299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384301   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2384302   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2384303   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2384304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384306   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2384307   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2384308   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2384309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384310   +
2384311   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2384312   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2384312  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2384313   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2384314   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2384315   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2384316   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2384317   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2384318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384319   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2384320   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2384321   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2384322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384324   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2384325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384326   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2384327   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2384328   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2384329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384330   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2384331   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2384332   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2384333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384335   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2384336   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2384337   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2384338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384340   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2384341   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2384342   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2384343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2384344   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2384345   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2384346   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2384347   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2384348   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2384349   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2384350   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2384351   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2384352   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2384353   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2384354   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2384355   +LENGTH _WARN_ $4
2384356   +      F_DepVar  $ 12
2384357   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2384358   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2384359   +
2384360   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2384361   +
2384362   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2384363   +
2384364   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2384365   +
2384366   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2384367   +
2384368   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2384369   +
2384370   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2384371   +
2384372   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2384373   +
2384374   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2384375   +
2384376   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2384377   +
2384378   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2384379   +
2384380   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2384381   +
2384382   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2384383   +
2384384   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2384385   +
2384386   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2384387   +
2384388   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2384389   +
2384390   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2384391   +
2384392   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2384393   +
2384394   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2384395   +
2384396   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2384397   +
2384398   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2384399   +
2384400   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2384401   +
2384402   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2384403   +
2384404   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2384405   +
2384406   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2384407   +
2384408   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2384409   +
2384410   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2384411   +
2384412   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2384413   +
2384414   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2384415   +
2384416   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2384417   +
2384418   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2384419   +
2384420   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2384421   +
2384422   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2384423   +
2384424   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2384425   +
2384426   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2384427   +
2384428   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2384429   +
2384430   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2384431   +
2384432   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2384433   +
2384434   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2384435   +
2384436   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2384437   +
2384438   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2384439   +
2384440   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2384441   +
2384442   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2384443   +
2384444   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2384445   +
2384446   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2384447   +
2384448   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2384449   +
2384450   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2384451   +
2384452   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2384453   +
2384454   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2384455   +
2384456   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2384457   +
2384458   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2384459   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2384460   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2384461   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2384462   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384463   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384464   +end;
MPRINT(EM_DIAGRAM):   end;
2384465   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384466   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384467   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2384468   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384469   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384470   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2384471   +   end;
MPRINT(EM_DIAGRAM):   end;
2384472   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384473   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2384474   +   end;
MPRINT(EM_DIAGRAM):   end;
2384475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384476   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2384477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384479   +   end;
MPRINT(EM_DIAGRAM):   end;
2384480   +end;
MPRINT(EM_DIAGRAM):   end;
2384481   +
2384482   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2384483   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2384484   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2384485   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2384486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384488   +end;
MPRINT(EM_DIAGRAM):   end;
2384489   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384490   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384491   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2384492   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384493   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384494   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2384495   +   end;
MPRINT(EM_DIAGRAM):   end;
2384496   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384497   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2384498   +   end;
MPRINT(EM_DIAGRAM):   end;
2384499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384500   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2384501   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384502   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384503   +   end;
MPRINT(EM_DIAGRAM):   end;
2384504   +end;
MPRINT(EM_DIAGRAM):   end;
2384505   +
2384506   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2384507   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2384508   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2384509   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2384510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384512   +end;
MPRINT(EM_DIAGRAM):   end;
2384513   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384514   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384515   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2384516   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384517   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384518   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2384519   +   end;
MPRINT(EM_DIAGRAM):   end;
2384520   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384521   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2384522   +   end;
MPRINT(EM_DIAGRAM):   end;
2384523   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384524   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2384525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384527   +   end;
MPRINT(EM_DIAGRAM):   end;
2384528   +end;
MPRINT(EM_DIAGRAM):   end;
2384529   +
2384530   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2384531   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2384532   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2384533   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2384534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384536   +end;
MPRINT(EM_DIAGRAM):   end;
2384537   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384538   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384539   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2384540   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384541   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384542   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2384543   +   end;
MPRINT(EM_DIAGRAM):   end;
2384544   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384545   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2384546   +   end;
MPRINT(EM_DIAGRAM):   end;
2384547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384548   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2384549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384551   +   end;
MPRINT(EM_DIAGRAM):   end;
2384552   +end;
MPRINT(EM_DIAGRAM):   end;
2384553   +
2384554   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2384555   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2384556   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2384557   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2384558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384560   +end;
MPRINT(EM_DIAGRAM):   end;
2384561   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384562   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384563   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2384564   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384565   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384566   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2384567   +   end;
MPRINT(EM_DIAGRAM):   end;
2384568   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384569   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2384570   +   end;
MPRINT(EM_DIAGRAM):   end;
2384571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384572   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2384573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384575   +   end;
MPRINT(EM_DIAGRAM):   end;
2384576   +end;
MPRINT(EM_DIAGRAM):   end;
2384577   +
2384578   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2384579   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2384580   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2384581   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2384582   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384584   +end;
MPRINT(EM_DIAGRAM):   end;
2384585   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384586   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384587   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2384588   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384589   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2384590   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2384591   +   end;
MPRINT(EM_DIAGRAM):   end;
2384592   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2384593   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2384594   +   end;
MPRINT(EM_DIAGRAM):   end;
2384595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384596   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2384597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384599   +   end;
MPRINT(EM_DIAGRAM):   end;
2384600   +end;
MPRINT(EM_DIAGRAM):   end;
2384601   +
2384602   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2384603   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2384604   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2384605   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2384606   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384607   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384608   +end;
MPRINT(EM_DIAGRAM):   end;
2384609   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384610   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2384611   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2384612   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384613   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2384614   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2384615   +   end;
MPRINT(EM_DIAGRAM):   end;
2384616   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2384617   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2384618   +   end;
MPRINT(EM_DIAGRAM):   end;
2384619   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384620   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2384621   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384622   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384623   +   end;
MPRINT(EM_DIAGRAM):   end;
2384624   +end;
MPRINT(EM_DIAGRAM):   end;
2384625   +
2384626   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2384627   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2384628   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2384629   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2384630   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2384631   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2384632   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2384633   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2384634   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2384635   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2384636   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2384637   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2384638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384640   +end;
MPRINT(EM_DIAGRAM):   end;
2384641   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384642   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2384643   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2384644   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384645   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2384646   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2384647   +   end;
MPRINT(EM_DIAGRAM):   end;
2384648   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2384649   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2384650   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2384651   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2384652   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2384653   +   end;
MPRINT(EM_DIAGRAM):   end;
2384654   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2384655   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2384656   +   end;
MPRINT(EM_DIAGRAM):   end;
2384657   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2384658   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2384659   +   end;
MPRINT(EM_DIAGRAM):   end;
2384660   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2384661   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2384662   +   end;
MPRINT(EM_DIAGRAM):   end;
2384663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384664   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2384665   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2384666   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2384667   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2384668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384670   +   end;
MPRINT(EM_DIAGRAM):   end;
2384671   +end;
MPRINT(EM_DIAGRAM):   end;
2384672   +
2384673   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2384674   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2384675   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2384676   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2384677   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2384678   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2384679   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2384680   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2384681   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2384682   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2384683   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2384684   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2384685   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2384686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2384687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384688   +end;
MPRINT(EM_DIAGRAM):   end;
2384689   +else do;
MPRINT(EM_DIAGRAM):   else do;
2384690   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2384691   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2384692   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2384693   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2384694   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2384695   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2384696   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2384697   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2384698   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2384699   +         end;
MPRINT(EM_DIAGRAM):   end;
2384700   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2384701   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2384702   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2384703   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2384704   +            end;
MPRINT(EM_DIAGRAM):   end;
2384705   +         end;
MPRINT(EM_DIAGRAM):   end;
2384706   +      end;
MPRINT(EM_DIAGRAM):   end;
2384707   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2384708   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2384709   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2384710   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2384711   +         end;
MPRINT(EM_DIAGRAM):   end;
2384712   +      end;
MPRINT(EM_DIAGRAM):   end;
2384713   +   end;
MPRINT(EM_DIAGRAM):   end;
2384714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2384715   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2384716   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2384717   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2384718   +      end;
MPRINT(EM_DIAGRAM):   end;
2384719   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2384720   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2384721   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2384722   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2384723   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2384724   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2384725   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2384726   +         end;
MPRINT(EM_DIAGRAM):   end;
2384727   +      end;
MPRINT(EM_DIAGRAM):   end;
2384728   +   end;
MPRINT(EM_DIAGRAM):   end;
2384729   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2384730   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2384731   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2384732   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2384733   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2384734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2384735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384736   +   end;
MPRINT(EM_DIAGRAM):   end;
2384737   +end;
MPRINT(EM_DIAGRAM):   end;
2384738   +
2384739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384740   +*** Checking missing input Interval
2384741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2384742   +
2384743   +IF NMISS(
2384744   +   AcceptedCmpTotal ,
2384745   +   Age ,
2384746   +   Frq ,
2384747   +   Income ,
2384748   +   Kidhome ,
2384749   +   Mnt ,
2384750   +   MntFishProducts ,
2384751   +   MntFruits ,
2384752   +   MntGoldProds ,
2384753   +   MntMeatProducts ,
2384754   +   MntSweetProducts ,
2384755   +   MntWines ,
2384756   +   MonthsAsCustomer ,
2384757   +   NumCatalogPurchases ,
2384758   +   NumDealsPurchases ,
2384759   +   NumDistPurchases ,
2384760   +   NumStorePurchases ,
2384761   +   NumWebPurchases ,
2384762   +   NumWebVisitsMonth ,
2384763   +   RFMstat ,
2384764   +   RMntFrq ,
2384765   +   Recency ,
2384766   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2384767   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2384768   +
2384769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2384770   +END;
MPRINT(EM_DIAGRAM):   END;
2384771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384772   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2384773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2384775   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2384776   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2384777   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2384778   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2384779   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2384780   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2384781   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2384782   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2384783   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2384784   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2384785   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2384786   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2384787   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2384788   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2384789   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2384790   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2384791   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2384792   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2384793   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2384794   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2384795   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2384796   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2384797   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2384798   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2384799   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2384800   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2384801   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2384802   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2384803   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2384804   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2384805   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2384806   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2384807   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2384808   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2384809   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2384810   +END;
MPRINT(EM_DIAGRAM):   END;
2384811   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2384812   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2384813   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2384814   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2384815   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2384816   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2384817   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2384818   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2384819   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2384820   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2384821   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2384822   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2384823   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2384824   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2384825   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2384826   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2384827   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2384828   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2384829   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2384830   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2384831   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2384832   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2384833   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2384834   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2384835   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2384836   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2384837   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2384838   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2384839   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2384840   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2384841   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2384842   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2384843   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2384844   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2384845   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2384846   +   ELSE S_NumCatalogPurchases
2384847   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2384848   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2384849   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2384850   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2384851   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2384852   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2384853   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2384854   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2384855   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2384856   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2384857   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2384858   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2384859   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2384860   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2384861   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2384862   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2384863   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2384864   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2384865   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2384866   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2384867   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2384868   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2384869   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2384870   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2384871   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2384872   +END;
MPRINT(EM_DIAGRAM):   END;
2384873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384874   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2384875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384877   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2384878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384880   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2384881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384882   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2384883   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2384884   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2384885   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2384886   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2384887   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2384888   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2384889   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2384890   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2384891   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2384892   +          +    -1.09856598010056 * S_NumDealsPurchases
2384893   +          +    -0.10571850472514 * S_NumDistPurchases
2384894   +          +     0.11898210654227 * S_NumStorePurchases
2384895   +          +      0.5984912060231 * S_NumWebPurchases
2384896   +          +     0.78592531126942 * S_NumWebVisitsMonth
2384897   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2384898   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2384899   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2384900   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2384901   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2384902   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2384903   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2384904   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2384905   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2384906   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2384907   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2384908   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2384909   +          +    -0.84042044250624 * S_NumDealsPurchases
2384910   +          +    -0.10246261015488 * S_NumDistPurchases
2384911   +          +     0.06886149708824 * S_NumStorePurchases
2384912   +          +     0.63156910388199 * S_NumWebPurchases
2384913   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2384914   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2384915   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2384916   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2384917   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2384918   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2384919   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2384920   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2384921   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2384922   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2384923   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2384924   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2384925   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2384926   +          +     0.45393712455366 * S_NumDealsPurchases
2384927   +          +    -0.25292198053552 * S_NumDistPurchases
2384928   +          +    -1.35582215064749 * S_NumStorePurchases
2384929   +          +    -0.83132202302639 * S_NumWebPurchases
2384930   +          +     1.87116225272678 * S_NumWebVisitsMonth
2384931   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2384932   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2384933   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2384934   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2384935   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2384936   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2384937   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2384938   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2384939   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2384940   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2384941   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2384942   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2384943   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2384944   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2384945   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2384946   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2384947   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2384948   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2384949   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2384950   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2384951   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2384952   +          +      0.4695898100094 * Marital_StatusDivorced
2384953   +          +    -0.52137742289262 * Marital_StatusMarried
2384954   +          +    -0.32382086914936 * Marital_StatusSingle
2384955   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2384956   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2384957   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2384958   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2384959   +          +    -1.04858218653238 * Marital_StatusDivorced
2384960   +          +     2.41098335093061 * Marital_StatusMarried
2384961   +          +    -1.94696044861334 * Marital_StatusSingle
2384962   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2384963   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2384964   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2384965   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2384966   +          +     0.42964114177062 * Marital_StatusDivorced
2384967   +          +    -0.38607635605816 * Marital_StatusMarried
2384968   +          +    -0.02157405407852 * Marital_StatusSingle
2384969   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2384970   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2384971   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2384972   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2384973   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2384974   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2384975   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2384976   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2384977   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2384978   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2384979   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2384980   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2384981   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2384982   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2384983   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2384984   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2384985   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2384986   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2384987   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2384988   +END;
MPRINT(EM_DIAGRAM):   END;
2384989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2384990   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2384991   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2384992   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2384993   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2384994   +END;
MPRINT(EM_DIAGRAM):   END;
2384995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384996   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2384997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2384998   +
2384999   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2385000   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2385001   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2385002   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2385003   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2385004   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385005   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2385006   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2385007   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2385008   +end;
MPRINT(EM_DIAGRAM):   end;
2385009   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385010   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2385011   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2385012   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2385013   +   end;
MPRINT(EM_DIAGRAM):   end;
2385014   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2385015   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2385016   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2385017   +   end;
MPRINT(EM_DIAGRAM):   end;
2385018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385019   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2385020   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2385021   +   end;
MPRINT(EM_DIAGRAM):   end;
2385022   +end;
MPRINT(EM_DIAGRAM):   end;
2385023   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2385024   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2385025   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2385026   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2385027   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2385028   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2385029   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2385030   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2385031   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2385032   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2385033   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2385034   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2385035   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2385036   +END;
MPRINT(EM_DIAGRAM):   END;
2385037   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2385038   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2385039   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2385040   +END;
MPRINT(EM_DIAGRAM):   END;
2385041   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2385042   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2385043   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2385044   +END;
MPRINT(EM_DIAGRAM):   END;
2385045   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2385046   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2385047   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2385048   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2385049   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2385050   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2385051   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2385052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385053   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2385054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385055   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2385056   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2385057   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2385058   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2385059   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2385060   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2385061   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2385062   +END;
MPRINT(EM_DIAGRAM):   END;
2385063   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2385064   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2385065   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2385066   +drop
2385067   +H1x1_1
2385068   +H1x1_2
2385069   +H1x1_3
2385070   +H1x1_4
2385071   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2385072   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2385073   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2385074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385075   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2385076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385077   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2385078   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2385079   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2385080   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2385081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385082   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2385083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385084   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2385085   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2385086   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2385087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385088   +* Ensmbl43: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 2 of 3;
2385089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385091   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2385092   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2385093   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2385094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385095   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2385096   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2385097   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2385098   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2385099   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2385100   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2385101   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2385102   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2385103   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2385104   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2385105   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2385106   +LENGTH _WARN_ $4
2385107   +      F_DepVar  $ 12
2385108   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2385109   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2385110   +
2385111   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2385112   +
2385113   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2385114   +
2385115   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2385116   +
2385117   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2385118   +
2385119   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2385120   +
2385121   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2385122   +
2385123   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2385124   +
2385125   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2385126   +
2385127   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2385128   +
2385129   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2385130   +
2385131   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2385132   +
2385133   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2385134   +
2385135   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2385136   +
2385137   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2385138   +
2385139   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2385140   +
2385141   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2385142   +
2385143   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2385144   +
2385145   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2385146   +
2385147   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2385148   +
2385149   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2385150   +
2385151   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2385152   +
2385153   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2385154   +
2385155   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2385156   +
2385157   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2385158   +
2385159   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2385160   +
2385161   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2385162   +
2385163   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2385164   +
2385165   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2385166   +
2385167   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2385168   +
2385169   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2385170   +
2385171   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2385172   +
2385173   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2385174   +
2385175   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2385176   +
2385177   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2385178   +
2385179   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2385180   +
2385181   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2385182   +
2385183   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2385184   +
2385185   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2385186   +
2385187   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2385188   +
2385189   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2385190   +
2385191   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2385192   +
2385193   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2385194   +
2385195   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2385196   +
2385197   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2385198   +
2385199   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2385200   +
2385201   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2385202   +
2385203   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2385204   +
2385205   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2385206   +
2385207   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2385208   +
2385209   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2385210   +
2385211   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2385212   +
2385213   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2385214   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2385215   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2385216   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2385217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385219   +end;
MPRINT(EM_DIAGRAM):   end;
2385220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385222   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2385223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385225   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2385226   +   end;
MPRINT(EM_DIAGRAM):   end;
2385227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385228   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2385229   +   end;
MPRINT(EM_DIAGRAM):   end;
2385230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385231   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2385232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385234   +   end;
MPRINT(EM_DIAGRAM):   end;
2385235   +end;
MPRINT(EM_DIAGRAM):   end;
2385236   +
2385237   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2385238   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2385239   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2385240   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2385241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385243   +end;
MPRINT(EM_DIAGRAM):   end;
2385244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385246   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2385247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385249   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2385250   +   end;
MPRINT(EM_DIAGRAM):   end;
2385251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385252   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2385253   +   end;
MPRINT(EM_DIAGRAM):   end;
2385254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385255   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2385256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385258   +   end;
MPRINT(EM_DIAGRAM):   end;
2385259   +end;
MPRINT(EM_DIAGRAM):   end;
2385260   +
2385261   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2385262   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2385263   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2385264   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2385265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385267   +end;
MPRINT(EM_DIAGRAM):   end;
2385268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385270   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2385271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385273   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2385274   +   end;
MPRINT(EM_DIAGRAM):   end;
2385275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385276   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2385277   +   end;
MPRINT(EM_DIAGRAM):   end;
2385278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385279   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2385280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385282   +   end;
MPRINT(EM_DIAGRAM):   end;
2385283   +end;
MPRINT(EM_DIAGRAM):   end;
2385284   +
2385285   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2385286   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2385287   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2385288   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2385289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385291   +end;
MPRINT(EM_DIAGRAM):   end;
2385292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385294   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2385295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385296   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385297   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2385298   +   end;
MPRINT(EM_DIAGRAM):   end;
2385299   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385300   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2385301   +   end;
MPRINT(EM_DIAGRAM):   end;
2385302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385303   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2385304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385306   +   end;
MPRINT(EM_DIAGRAM):   end;
2385307   +end;
MPRINT(EM_DIAGRAM):   end;
2385308   +
2385309   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2385310   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2385311   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2385312   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2385313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385315   +end;
MPRINT(EM_DIAGRAM):   end;
2385316   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385317   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385318   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2385319   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385320   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385321   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2385322   +   end;
MPRINT(EM_DIAGRAM):   end;
2385323   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385324   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2385325   +   end;
MPRINT(EM_DIAGRAM):   end;
2385326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385327   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2385328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385330   +   end;
MPRINT(EM_DIAGRAM):   end;
2385331   +end;
MPRINT(EM_DIAGRAM):   end;
2385332   +
2385333   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2385334   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2385335   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2385336   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2385337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385339   +end;
MPRINT(EM_DIAGRAM):   end;
2385340   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385341   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385342   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2385343   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385344   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2385345   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2385346   +   end;
MPRINT(EM_DIAGRAM):   end;
2385347   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2385348   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2385349   +   end;
MPRINT(EM_DIAGRAM):   end;
2385350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385351   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2385352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385354   +   end;
MPRINT(EM_DIAGRAM):   end;
2385355   +end;
MPRINT(EM_DIAGRAM):   end;
2385356   +
2385357   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2385358   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2385359   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2385360   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2385361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385363   +end;
MPRINT(EM_DIAGRAM):   end;
2385364   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2385366   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2385367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385368   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2385369   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2385370   +   end;
MPRINT(EM_DIAGRAM):   end;
2385371   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2385372   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2385373   +   end;
MPRINT(EM_DIAGRAM):   end;
2385374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385375   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2385376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385378   +   end;
MPRINT(EM_DIAGRAM):   end;
2385379   +end;
MPRINT(EM_DIAGRAM):   end;
2385380   +
2385381   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2385382   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2385383   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2385384   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2385385   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2385386   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2385387   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2385388   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2385389   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2385390   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2385391   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2385392   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2385393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385395   +end;
MPRINT(EM_DIAGRAM):   end;
2385396   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385397   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2385398   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2385399   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385400   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2385401   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2385402   +   end;
MPRINT(EM_DIAGRAM):   end;
2385403   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2385404   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2385405   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2385406   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2385407   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2385408   +   end;
MPRINT(EM_DIAGRAM):   end;
2385409   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2385410   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2385411   +   end;
MPRINT(EM_DIAGRAM):   end;
2385412   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2385413   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2385414   +   end;
MPRINT(EM_DIAGRAM):   end;
2385415   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2385416   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2385417   +   end;
MPRINT(EM_DIAGRAM):   end;
2385418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385419   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2385420   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2385421   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2385422   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2385423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385425   +   end;
MPRINT(EM_DIAGRAM):   end;
2385426   +end;
MPRINT(EM_DIAGRAM):   end;
2385427   +
2385428   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2385429   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2385430   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2385431   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2385432   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2385433   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2385434   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2385435   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2385436   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2385437   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2385438   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2385439   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2385440   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2385441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2385442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385443   +end;
MPRINT(EM_DIAGRAM):   end;
2385444   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385445   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2385446   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2385447   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385448   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2385449   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2385450   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2385451   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2385452   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2385453   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2385454   +         end;
MPRINT(EM_DIAGRAM):   end;
2385455   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2385456   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2385457   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2385458   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2385459   +            end;
MPRINT(EM_DIAGRAM):   end;
2385460   +         end;
MPRINT(EM_DIAGRAM):   end;
2385461   +      end;
MPRINT(EM_DIAGRAM):   end;
2385462   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2385463   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2385464   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2385465   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2385466   +         end;
MPRINT(EM_DIAGRAM):   end;
2385467   +      end;
MPRINT(EM_DIAGRAM):   end;
2385468   +   end;
MPRINT(EM_DIAGRAM):   end;
2385469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385470   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2385471   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2385472   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2385473   +      end;
MPRINT(EM_DIAGRAM):   end;
2385474   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2385475   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2385476   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2385477   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2385478   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2385479   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2385480   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2385481   +         end;
MPRINT(EM_DIAGRAM):   end;
2385482   +      end;
MPRINT(EM_DIAGRAM):   end;
2385483   +   end;
MPRINT(EM_DIAGRAM):   end;
2385484   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2385485   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2385486   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2385487   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2385488   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2385489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2385490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385491   +   end;
MPRINT(EM_DIAGRAM):   end;
2385492   +end;
MPRINT(EM_DIAGRAM):   end;
2385493   +
2385494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385495   +*** Checking missing input Interval
2385496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2385497   +
2385498   +IF NMISS(
2385499   +   AcceptedCmpTotal ,
2385500   +   Age ,
2385501   +   Frq ,
2385502   +   Income ,
2385503   +   Kidhome ,
2385504   +   Mnt ,
2385505   +   MntFishProducts ,
2385506   +   MntFruits ,
2385507   +   MntGoldProds ,
2385508   +   MntMeatProducts ,
2385509   +   MntSweetProducts ,
2385510   +   MntWines ,
2385511   +   MonthsAsCustomer ,
2385512   +   NumCatalogPurchases ,
2385513   +   NumDealsPurchases ,
2385514   +   NumDistPurchases ,
2385515   +   NumStorePurchases ,
2385516   +   NumWebPurchases ,
2385517   +   NumWebVisitsMonth ,
2385518   +   RFMstat ,
2385519   +   RMntFrq ,
2385520   +   Recency ,
2385521   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2385522   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2385523   +
2385524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2385525   +END;
MPRINT(EM_DIAGRAM):   END;
2385526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385527   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2385528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385529   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2385530   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2385531   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2385532   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2385533   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2385534   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2385535   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2385536   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2385537   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2385538   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2385539   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2385540   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2385541   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2385542   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2385543   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2385544   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2385545   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2385546   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2385547   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2385548   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2385549   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2385550   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2385551   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2385552   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2385553   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2385554   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2385555   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2385556   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2385557   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2385558   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2385559   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2385560   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2385561   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2385562   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2385563   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2385564   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2385565   +END;
MPRINT(EM_DIAGRAM):   END;
2385566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2385567   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2385568   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2385569   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2385570   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2385571   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2385572   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2385573   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2385574   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2385575   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2385576   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2385577   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2385578   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2385579   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2385580   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2385581   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2385582   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2385583   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2385584   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2385585   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2385586   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2385587   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2385588   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2385589   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2385590   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2385591   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2385592   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2385593   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2385594   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2385595   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2385596   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2385597   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2385598   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2385599   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2385600   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2385601   +   ELSE S_NumCatalogPurchases
2385602   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2385603   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2385604   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2385605   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2385606   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2385607   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2385608   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2385609   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2385610   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2385611   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2385612   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2385613   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2385614   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2385615   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2385616   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2385617   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2385618   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2385619   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2385620   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2385621   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2385622   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2385623   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2385624   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2385625   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2385626   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2385627   +END;
MPRINT(EM_DIAGRAM):   END;
2385628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385629   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2385630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385632   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2385633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385635   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2385636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385637   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2385638   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2385639   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2385640   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2385641   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2385642   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2385643   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2385644   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2385645   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2385646   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2385647   +          +     0.19770934886328 * S_NumDealsPurchases
2385648   +          +      0.0515215988111 * S_NumDistPurchases
2385649   +          +    -0.34569346346089 * S_NumStorePurchases
2385650   +          +    -0.27122293596124 * S_NumWebPurchases
2385651   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2385652   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2385653   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2385654   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2385655   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2385656   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2385657   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2385658   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2385659   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2385660   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2385661   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2385662   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2385663   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2385664   +          +     0.54308887602031 * S_NumDealsPurchases
2385665   +          +    -0.22507315320192 * S_NumDistPurchases
2385666   +          +    -0.79861387328361 * S_NumStorePurchases
2385667   +          +    -0.45467494002747 * S_NumWebPurchases
2385668   +          +      0.2119048824613 * S_NumWebVisitsMonth
2385669   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2385670   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2385671   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2385672   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2385673   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2385674   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2385675   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2385676   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2385677   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2385678   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2385679   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2385680   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2385681   +          +     -0.0771083149302 * S_NumDealsPurchases
2385682   +          +     0.03403621221162 * S_NumDistPurchases
2385683   +          +     0.61303946422025 * S_NumStorePurchases
2385684   +          +     0.27126793634053 * S_NumWebPurchases
2385685   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2385686   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2385687   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2385688   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2385689   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2385690   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2385691   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2385692   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2385693   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2385694   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2385695   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2385696   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2385697   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2385698   +          +     0.29894603062327 * S_NumDealsPurchases
2385699   +          +     0.07614620530875 * S_NumDistPurchases
2385700   +          +     0.15402335009896 * S_NumStorePurchases
2385701   +          +     0.10615749096863 * S_NumWebPurchases
2385702   +          +     0.41962286816879 * S_NumWebVisitsMonth
2385703   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2385704   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2385705   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2385706   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2385707   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2385708   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2385709   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2385710   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2385711   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2385712   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2385713   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2385714   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2385715   +          +     0.14392502416642 * S_NumDealsPurchases
2385716   +          +    -0.10026304978633 * S_NumDistPurchases
2385717   +          +     -0.0588453022746 * S_NumStorePurchases
2385718   +          +     0.24799398610395 * S_NumWebPurchases
2385719   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2385720   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2385721   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2385722   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2385723   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2385724   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2385725   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2385726   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2385727   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2385728   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2385729   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2385730   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2385731   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2385732   +          +     0.08149600854964 * S_NumDealsPurchases
2385733   +          +     0.16873541613513 * S_NumDistPurchases
2385734   +          +    -0.20437343413446 * S_NumStorePurchases
2385735   +          +     -0.1671107527288 * S_NumWebPurchases
2385736   +          +     0.03677043100993 * S_NumWebVisitsMonth
2385737   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2385738   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2385739   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2385740   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2385741   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2385742   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2385743   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2385744   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2385745   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2385746   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2385747   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2385748   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2385749   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2385750   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2385751   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2385752   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2385753   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2385754   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2385755   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2385756   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2385757   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2385758   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2385759   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2385760   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2385761   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2385762   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2385763   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2385764   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2385765   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2385766   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2385767   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2385768   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2385769   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2385770   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2385771   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2385772   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2385773   +          +    -0.31045295887604 * Marital_StatusDivorced
2385774   +          +    -0.01109401001539 * Marital_StatusMarried
2385775   +          +     0.01325135981025 * Marital_StatusSingle
2385776   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2385777   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2385778   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2385779   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2385780   +          +     0.02275101861599 * Marital_StatusDivorced
2385781   +          +     0.20271548664903 * Marital_StatusMarried
2385782   +          +    -0.12132069210718 * Marital_StatusSingle
2385783   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2385784   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2385785   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2385786   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2385787   +          +     -0.4992959703281 * Marital_StatusDivorced
2385788   +          +     0.62071659624138 * Marital_StatusMarried
2385789   +          +    -0.21776202274494 * Marital_StatusSingle
2385790   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2385791   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2385792   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2385793   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2385794   +          +     0.05626212670587 * Marital_StatusDivorced
2385795   +          +     0.14353891364597 * Marital_StatusMarried
2385796   +          +    -0.29006765622997 * Marital_StatusSingle
2385797   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2385798   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2385799   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2385800   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2385801   +          +    -0.21206913700604 * Marital_StatusDivorced
2385802   +          +     0.58790643614629 * Marital_StatusMarried
2385803   +          +    -0.65995982578062 * Marital_StatusSingle
2385804   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2385805   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2385806   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2385807   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2385808   +          +    -0.05047370516008 * Marital_StatusDivorced
2385809   +          +    -0.23139090963669 * Marital_StatusMarried
2385810   +          +     0.04816197463249 * Marital_StatusSingle
2385811   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2385812   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2385813   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2385814   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2385815   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2385816   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2385817   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2385818   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2385819   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2385820   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2385821   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2385822   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2385823   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2385824   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2385825   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2385826   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2385827   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2385828   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2385829   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2385830   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2385831   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2385832   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2385833   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2385834   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2385835   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2385836   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2385837   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2385838   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2385839   +END;
MPRINT(EM_DIAGRAM):   END;
2385840   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2385841   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2385842   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2385843   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2385844   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2385845   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2385846   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2385847   +END;
MPRINT(EM_DIAGRAM):   END;
2385848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385849   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2385850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385851   +
2385852   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2385853   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2385854   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2385855   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2385856   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2385857   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2385858   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2385859   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2385860   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2385861   +end;
MPRINT(EM_DIAGRAM):   end;
2385862   +else do;
MPRINT(EM_DIAGRAM):   else do;
2385863   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2385864   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2385865   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2385866   +   end;
MPRINT(EM_DIAGRAM):   end;
2385867   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2385868   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2385869   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2385870   +   end;
MPRINT(EM_DIAGRAM):   end;
2385871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2385872   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2385873   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2385874   +   end;
MPRINT(EM_DIAGRAM):   end;
2385875   +end;
MPRINT(EM_DIAGRAM):   end;
2385876   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2385877   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2385878   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2385879   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2385880   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2385881   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2385882   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2385883   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2385884   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2385885   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2385886   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2385887   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2385888   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2385889   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2385890   +END;
MPRINT(EM_DIAGRAM):   END;
2385891   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2385892   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2385893   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2385894   +END;
MPRINT(EM_DIAGRAM):   END;
2385895   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2385896   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2385897   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2385898   +END;
MPRINT(EM_DIAGRAM):   END;
2385899   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2385900   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2385901   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2385902   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2385903   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2385904   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2385905   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2385906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385907   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2385908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2385909   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2385910   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2385911   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2385912   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2385913   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2385914   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2385915   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2385916   +END;
MPRINT(EM_DIAGRAM):   END;
2385917   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2385918   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2385919   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2385920   +drop
2385921   +H1x1_1
2385922   +H1x1_2
2385923   +H1x1_3
2385924   +H1x1_4
2385925   +H1x1_5
2385926   +H1x1_6
2385927   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2385928   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2385929   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2385930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385931   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2385932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385933   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2385934   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2385935   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2385936   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2385937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385938   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2385939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385940   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2385941   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2385942   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2385943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385944   +* Ensmbl43: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Scoring Code of model 3 of 3;
2385945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385947   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2385948   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2385949   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2385950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2385951   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2385952   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2385953   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2385954   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2385955   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2385956   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2385957   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2385958   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2385959   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2385960   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2385961   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2385962   +LENGTH _WARN_ $4
2385963   +      F_DepVar  $ 12
2385964   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2385965   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2385966   +
2385967   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2385968   +
2385969   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2385970   +
2385971   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2385972   +
2385973   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2385974   +
2385975   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2385976   +
2385977   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2385978   +
2385979   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2385980   +
2385981   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2385982   +
2385983   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2385984   +
2385985   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2385986   +
2385987   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2385988   +
2385989   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2385990   +
2385991   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2385992   +
2385993   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2385994   +
2385995   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2385996   +
2385997   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2385998   +
2385999   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2386000   +
2386001   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2386002   +
2386003   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2386004   +
2386005   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2386006   +
2386007   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2386008   +
2386009   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2386010   +
2386011   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2386012   +
2386013   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2386014   +
2386015   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2386016   +
2386017   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2386018   +
2386019   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2386020   +
2386021   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2386022   +
2386023   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2386024   +
2386025   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2386026   +
2386027   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2386028   +
2386029   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2386030   +
2386031   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2386032   +
2386033   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2386034   +
2386035   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2386036   +
2386037   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2386038   +
2386039   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2386040   +
2386041   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2386042   +
2386043   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2386044   +
2386045   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2386046   +
2386047   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2386048   +
2386049   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2386050   +
2386051   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2386052   +
2386053   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2386054   +
2386055   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2386056   +
2386057   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2386058   +
2386059   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2386060   +
2386061   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2386062   +
2386063   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2386064   +
2386065   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2386066   +
2386067   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2386068   +
2386069   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2386070   +
2386071   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2386072   +
2386073   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2386074   +
2386075   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2386076   +
2386077   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2386078   +
2386079   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2386080   +
2386081   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2386082   +
2386083   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2386084   +
2386085   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2386086   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2386087   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2386088   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2386089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386091   +end;
MPRINT(EM_DIAGRAM):   end;
2386092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386094   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2386095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386097   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2386098   +   end;
MPRINT(EM_DIAGRAM):   end;
2386099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386100   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2386101   +   end;
MPRINT(EM_DIAGRAM):   end;
2386102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386103   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2386104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386106   +   end;
MPRINT(EM_DIAGRAM):   end;
2386107   +end;
MPRINT(EM_DIAGRAM):   end;
2386108   +
2386109   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2386110   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2386111   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2386112   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2386113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386115   +end;
MPRINT(EM_DIAGRAM):   end;
2386116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386118   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2386119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386121   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2386122   +   end;
MPRINT(EM_DIAGRAM):   end;
2386123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386124   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2386125   +   end;
MPRINT(EM_DIAGRAM):   end;
2386126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386127   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2386128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386130   +   end;
MPRINT(EM_DIAGRAM):   end;
2386131   +end;
MPRINT(EM_DIAGRAM):   end;
2386132   +
2386133   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2386134   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2386135   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2386136   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2386137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386139   +end;
MPRINT(EM_DIAGRAM):   end;
2386140   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386142   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2386143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386145   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2386146   +   end;
MPRINT(EM_DIAGRAM):   end;
2386147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386148   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2386149   +   end;
MPRINT(EM_DIAGRAM):   end;
2386150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386151   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2386152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386154   +   end;
MPRINT(EM_DIAGRAM):   end;
2386155   +end;
MPRINT(EM_DIAGRAM):   end;
2386156   +
2386157   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2386158   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2386159   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2386160   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2386161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386163   +end;
MPRINT(EM_DIAGRAM):   end;
2386164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386166   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2386167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386169   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2386170   +   end;
MPRINT(EM_DIAGRAM):   end;
2386171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386172   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2386173   +   end;
MPRINT(EM_DIAGRAM):   end;
2386174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386175   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2386176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386178   +   end;
MPRINT(EM_DIAGRAM):   end;
2386179   +end;
MPRINT(EM_DIAGRAM):   end;
2386180   +
2386181   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2386182   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2386183   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2386184   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2386185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386187   +end;
MPRINT(EM_DIAGRAM):   end;
2386188   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386190   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2386191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386193   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2386194   +   end;
MPRINT(EM_DIAGRAM):   end;
2386195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386196   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2386197   +   end;
MPRINT(EM_DIAGRAM):   end;
2386198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386199   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2386200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386202   +   end;
MPRINT(EM_DIAGRAM):   end;
2386203   +end;
MPRINT(EM_DIAGRAM):   end;
2386204   +
2386205   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2386206   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2386207   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2386208   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2386209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386211   +end;
MPRINT(EM_DIAGRAM):   end;
2386212   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386214   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2386215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386216   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2386217   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2386218   +   end;
MPRINT(EM_DIAGRAM):   end;
2386219   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2386220   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2386221   +   end;
MPRINT(EM_DIAGRAM):   end;
2386222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386223   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2386224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386226   +   end;
MPRINT(EM_DIAGRAM):   end;
2386227   +end;
MPRINT(EM_DIAGRAM):   end;
2386228   +
2386229   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2386230   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2386231   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2386232   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2386233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386235   +end;
MPRINT(EM_DIAGRAM):   end;
2386236   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2386238   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2386239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386240   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2386241   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2386242   +   end;
MPRINT(EM_DIAGRAM):   end;
2386243   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2386244   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2386245   +   end;
MPRINT(EM_DIAGRAM):   end;
2386246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386247   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2386248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386250   +   end;
MPRINT(EM_DIAGRAM):   end;
2386251   +end;
MPRINT(EM_DIAGRAM):   end;
2386252   +
2386253   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2386254   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2386255   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2386256   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2386257   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2386258   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2386259   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2386260   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2386261   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2386262   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2386263   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2386264   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2386265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386267   +end;
MPRINT(EM_DIAGRAM):   end;
2386268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386269   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2386270   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2386271   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386272   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2386273   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2386274   +   end;
MPRINT(EM_DIAGRAM):   end;
2386275   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2386276   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2386277   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2386278   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2386279   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2386280   +   end;
MPRINT(EM_DIAGRAM):   end;
2386281   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2386282   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2386283   +   end;
MPRINT(EM_DIAGRAM):   end;
2386284   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2386285   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2386286   +   end;
MPRINT(EM_DIAGRAM):   end;
2386287   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2386288   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2386289   +   end;
MPRINT(EM_DIAGRAM):   end;
2386290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386291   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2386292   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2386293   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2386294   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2386295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386297   +   end;
MPRINT(EM_DIAGRAM):   end;
2386298   +end;
MPRINT(EM_DIAGRAM):   end;
2386299   +
2386300   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2386301   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2386302   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2386303   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2386304   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2386305   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2386306   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2386307   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2386308   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2386309   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2386310   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2386311   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2386312   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2386313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2386314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386315   +end;
MPRINT(EM_DIAGRAM):   end;
2386316   +else do;
MPRINT(EM_DIAGRAM):   else do;
2386317   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2386318   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2386319   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386320   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2386321   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2386322   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2386323   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2386324   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2386325   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2386326   +         end;
MPRINT(EM_DIAGRAM):   end;
2386327   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2386328   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2386329   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2386330   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2386331   +            end;
MPRINT(EM_DIAGRAM):   end;
2386332   +         end;
MPRINT(EM_DIAGRAM):   end;
2386333   +      end;
MPRINT(EM_DIAGRAM):   end;
2386334   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2386335   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2386336   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2386337   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2386338   +         end;
MPRINT(EM_DIAGRAM):   end;
2386339   +      end;
MPRINT(EM_DIAGRAM):   end;
2386340   +   end;
MPRINT(EM_DIAGRAM):   end;
2386341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2386342   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2386343   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2386344   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2386345   +      end;
MPRINT(EM_DIAGRAM):   end;
2386346   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2386347   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2386348   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2386349   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2386350   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2386351   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2386352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2386353   +         end;
MPRINT(EM_DIAGRAM):   end;
2386354   +      end;
MPRINT(EM_DIAGRAM):   end;
2386355   +   end;
MPRINT(EM_DIAGRAM):   end;
2386356   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2386357   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2386358   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2386359   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2386360   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2386361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2386362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386363   +   end;
MPRINT(EM_DIAGRAM):   end;
2386364   +end;
MPRINT(EM_DIAGRAM):   end;
2386365   +
2386366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386367   +*** Checking missing input Interval
2386368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2386369   +
2386370   +IF NMISS(
2386371   +   AcceptedCmpTotal ,
2386372   +   Age ,
2386373   +   Frq ,
2386374   +   Income ,
2386375   +   Kidhome ,
2386376   +   Mnt ,
2386377   +   MntFishProducts ,
2386378   +   MntFruits ,
2386379   +   MntGoldProds ,
2386380   +   MntMeatProducts ,
2386381   +   MntSweetProducts ,
2386382   +   MntWines ,
2386383   +   MonthsAsCustomer ,
2386384   +   NumCatalogPurchases ,
2386385   +   NumDealsPurchases ,
2386386   +   NumDistPurchases ,
2386387   +   NumStorePurchases ,
2386388   +   NumWebPurchases ,
2386389   +   NumWebVisitsMonth ,
2386390   +   RFMstat ,
2386391   +   RMntFrq ,
2386392   +   Recency ,
2386393   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2386394   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2386395   +
2386396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2386397   +END;
MPRINT(EM_DIAGRAM):   END;
2386398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386399   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2386400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386401   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2386402   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2386403   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2386404   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2386405   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2386406   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2386407   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2386408   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2386409   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2386410   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2386411   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2386412   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2386413   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2386414   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2386415   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2386416   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2386417   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2386418   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2386419   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2386420   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2386421   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2386422   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2386423   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2386424   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2386425   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2386426   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2386427   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2386428   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2386429   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2386430   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2386431   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2386432   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2386433   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2386434   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2386435   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2386436   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2386437   +END;
MPRINT(EM_DIAGRAM):   END;
2386438   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2386439   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2386440   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2386441   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2386442   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2386443   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2386444   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2386445   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2386446   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2386447   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2386448   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2386449   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2386450   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2386451   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2386452   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2386453   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2386454   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2386455   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2386456   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2386457   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2386458   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2386459   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2386460   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2386461   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2386462   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2386463   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2386464   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2386465   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2386466   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2386467   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2386468   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2386469   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2386470   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2386471   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2386472   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2386473   +   ELSE S_NumCatalogPurchases
2386474   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2386475   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2386476   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2386477   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2386478   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2386479   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2386480   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2386481   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2386482   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2386483   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2386484   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2386485   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2386486   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2386487   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2386488   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2386489   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2386490   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2386491   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2386492   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2386493   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2386494   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2386495   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2386496   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2386497   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2386498   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2386499   +END;
MPRINT(EM_DIAGRAM):   END;
2386500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386501   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2386502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386504   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2386505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386507   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2386508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2386510   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2386511   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2386512   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2386513   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2386514   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2386515   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2386516   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2386517   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2386518   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2386519   +          +      0.1112677116841 * S_NumDealsPurchases
2386520   +          +     0.01563584187072 * S_NumDistPurchases
2386521   +          +     0.19193969522995 * S_NumStorePurchases
2386522   +          +      0.3133556199984 * S_NumWebPurchases
2386523   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2386524   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2386525   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2386526   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2386527   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2386528   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2386529   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2386530   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2386531   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2386532   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2386533   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2386534   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2386535   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2386536   +          +     0.30225032753275 * S_NumDealsPurchases
2386537   +          +     0.33833359923595 * S_NumDistPurchases
2386538   +          +    -0.20255599575849 * S_NumStorePurchases
2386539   +          +    -0.12040071168942 * S_NumWebPurchases
2386540   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2386541   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2386542   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2386543   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2386544   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2386545   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2386546   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2386547   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2386548   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2386549   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2386550   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2386551   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2386552   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2386553   +          +     0.16792903091627 * S_NumDealsPurchases
2386554   +          +    -0.37408945626745 * S_NumDistPurchases
2386555   +          +    -0.18067262995566 * S_NumStorePurchases
2386556   +          +     0.21192146789881 * S_NumWebPurchases
2386557   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2386558   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2386559   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2386560   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2386561   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2386562   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2386563   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2386564   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2386565   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2386566   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2386567   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2386568   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2386569   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2386570   +          +     0.29407429399136 * S_NumDealsPurchases
2386571   +          +     0.01610745252195 * S_NumDistPurchases
2386572   +          +    -0.17767939085628 * S_NumStorePurchases
2386573   +          +    -0.15168958538637 * S_NumWebPurchases
2386574   +          +     0.17433622143988 * S_NumWebVisitsMonth
2386575   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2386576   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2386577   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2386578   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2386579   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2386580   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2386581   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2386582   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2386583   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2386584   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2386585   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2386586   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2386587   +          +    -0.37976451362108 * S_NumDealsPurchases
2386588   +          +    -0.17027731520801 * S_NumDistPurchases
2386589   +          +     0.59849493667087 * S_NumStorePurchases
2386590   +          +     0.65481480560301 * S_NumWebPurchases
2386591   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2386592   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2386593   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2386594   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2386595   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2386596   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2386597   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2386598   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2386599   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2386600   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2386601   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2386602   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2386603   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2386604   +          +    -0.07686699131623 * S_NumDealsPurchases
2386605   +          +    -0.07220460738926 * S_NumDistPurchases
2386606   +          +    -0.06554027468389 * S_NumStorePurchases
2386607   +          +     0.10422838158001 * S_NumWebPurchases
2386608   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2386609   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2386610   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2386611   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2386612   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2386613   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2386614   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2386615   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2386616   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2386617   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2386618   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2386619   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2386620   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2386621   +          +    -0.07920122387563 * S_NumDealsPurchases
2386622   +          +      0.3649244061347 * S_NumDistPurchases
2386623   +          +     0.36475853688403 * S_NumStorePurchases
2386624   +          +     0.02153991404063 * S_NumWebPurchases
2386625   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2386626   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2386627   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2386628   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2386629   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2386630   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2386631   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2386632   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2386633   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2386634   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2386635   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2386636   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2386637   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2386638   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2386639   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2386640   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2386641   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2386642   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2386643   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2386644   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2386645   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2386646   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2386647   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2386648   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2386649   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2386650   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2386651   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2386652   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2386653   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2386654   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2386655   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2386656   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2386657   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2386658   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2386659   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2386660   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2386661   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2386662   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2386663   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2386664   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2386665   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2386666   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2386667   +          +     0.07744097241553 * Marital_StatusDivorced
2386668   +          +     -0.0247463100385 * Marital_StatusMarried
2386669   +          +     0.05804915234573 * Marital_StatusSingle
2386670   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2386671   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2386672   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2386673   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2386674   +          +     0.01390668926269 * Marital_StatusDivorced
2386675   +          +     0.01136282152074 * Marital_StatusMarried
2386676   +          +     0.12450246418789 * Marital_StatusSingle
2386677   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2386678   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2386679   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2386680   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2386681   +          +    -0.19133456931879 * Marital_StatusDivorced
2386682   +          +     0.56263566654996 * Marital_StatusMarried
2386683   +          +    -0.42172822038882 * Marital_StatusSingle
2386684   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2386685   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2386686   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2386687   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2386688   +          +    -0.19871205065609 * Marital_StatusDivorced
2386689   +          +    -0.14730795681603 * Marital_StatusMarried
2386690   +          +     0.05055432510362 * Marital_StatusSingle
2386691   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2386692   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2386693   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2386694   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2386695   +          +    -0.35623807358995 * Marital_StatusDivorced
2386696   +          +     0.30324726283965 * Marital_StatusMarried
2386697   +          +    -0.18561093467927 * Marital_StatusSingle
2386698   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2386699   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2386700   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2386701   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2386702   +          +     0.11581014663368 * Marital_StatusDivorced
2386703   +          +    -0.31070638037659 * Marital_StatusMarried
2386704   +          +     0.17131747253949 * Marital_StatusSingle
2386705   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2386706   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2386707   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2386708   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2386709   +          +    -0.42450599871892 * Marital_StatusDivorced
2386710   +          +     0.48162905075885 * Marital_StatusMarried
2386711   +          +    -0.26618507749283 * Marital_StatusSingle
2386712   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2386713   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2386714   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2386715   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2386716   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2386717   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2386718   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2386719   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2386720   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2386721   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2386722   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2386723   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2386724   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2386725   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2386726   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2386727   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2386728   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2386729   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2386730   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2386731   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2386732   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2386733   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2386734   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2386735   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2386736   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2386737   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2386738   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2386739   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2386740   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2386741   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2386742   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2386743   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2386744   +END;
MPRINT(EM_DIAGRAM):   END;
2386745   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2386746   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2386747   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2386748   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2386749   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2386750   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2386751   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2386752   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2386753   +END;
MPRINT(EM_DIAGRAM):   END;
2386754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386755   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2386756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386757   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2386758   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2386759   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2386760   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2386761   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2386762   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2386763   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2386764   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2386765   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2386766   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2386767   +          +     1.96719021971894 * S_NumDealsPurchases
2386768   +          +    -0.44535354794671 * S_NumDistPurchases
2386769   +          +    -0.54827762736866 * S_NumStorePurchases
2386770   +          +     1.02703310241897 * S_NumWebPurchases
2386771   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2386772   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2386773   +        S_RMntFrq  +       0.651688575044 * S_Recency
2386774   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2386775   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2386776   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2386777   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2386778   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2386779   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2386780   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2386781   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2386782   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2386783   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2386784   +          +     1.34659447971131 * S_NumDealsPurchases
2386785   +          +    -0.51624251310423 * S_NumDistPurchases
2386786   +          +      -1.283121574848 * S_NumStorePurchases
2386787   +          +    -1.83517806228926 * S_NumWebPurchases
2386788   +          +     0.51321339475285 * S_NumWebVisitsMonth
2386789   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2386790   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2386791   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2386792   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2386793   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2386794   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2386795   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2386796   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2386797   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2386798   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2386799   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2386800   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2386801   +          +     0.67492297345004 * S_NumDealsPurchases
2386802   +          +    -0.40437875375926 * S_NumDistPurchases
2386803   +          +     0.36322603681545 * S_NumStorePurchases
2386804   +          +    -1.15315070635524 * S_NumWebPurchases
2386805   +          +     1.20707272201156 * S_NumWebVisitsMonth
2386806   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2386807   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2386808   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2386809   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2386810   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2386811   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2386812   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2386813   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2386814   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2386815   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2386816   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2386817   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2386818   +          +    -0.41427983342148 * S_NumDealsPurchases
2386819   +          +    -0.22714305629205 * S_NumDistPurchases
2386820   +          +    -0.78763182048862 * S_NumStorePurchases
2386821   +          +    -0.26669253451501 * S_NumWebPurchases
2386822   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2386823   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2386824   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2386825   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2386826   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2386827   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2386828   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2386829   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2386830   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2386831   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2386832   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2386833   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2386834   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2386835   +          +      0.7697882092212 * S_NumDealsPurchases
2386836   +          +     0.51864835453056 * S_NumDistPurchases
2386837   +          +    -1.18320366630444 * S_NumStorePurchases
2386838   +          +     -0.6608394639529 * S_NumWebPurchases
2386839   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2386840   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2386841   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2386842   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2386843   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2386844   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2386845   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2386846   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2386847   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2386848   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2386849   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2386850   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2386851   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2386852   +          +     1.45707983202269 * S_NumDealsPurchases
2386853   +          +     0.83341887728641 * S_NumDistPurchases
2386854   +          +    -0.36664450469423 * S_NumStorePurchases
2386855   +          +     0.63911579043339 * S_NumWebPurchases
2386856   +          +     0.67144790303554 * S_NumWebVisitsMonth
2386857   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2386858   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2386859   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2386860   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2386861   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2386862   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2386863   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2386864   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2386865   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2386866   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2386867   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2386868   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2386869   +          +     0.68491896063662 * S_NumDealsPurchases
2386870   +          +      0.5386312048592 * S_NumDistPurchases
2386871   +          +     1.28108942503912 * S_NumStorePurchases
2386872   +          +    -0.88282270505969 * S_NumWebPurchases
2386873   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2386874   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2386875   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2386876   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2386877   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2386878   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2386879   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2386880   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2386881   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2386882   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2386883   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2386884   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2386885   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2386886   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2386887   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2386888   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2386889   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2386890   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2386891   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2386892   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2386893   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2386894   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2386895   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2386896   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2386897   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2386898   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2386899   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2386900   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2386901   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2386902   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2386903   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2386904   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2386905   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2386906   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2386907   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2386908   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2386909   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2386910   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2386911   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2386912   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2386913   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2386914   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2386915   +          +    -3.97961426831865 * Marital_StatusDivorced
2386916   +          +     0.00932639813867 * Marital_StatusMarried
2386917   +          +     1.29310186574718 * Marital_StatusSingle
2386918   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2386919   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2386920   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2386921   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2386922   +          +    -0.30358516578188 * Marital_StatusDivorced
2386923   +          +    -0.96176709360703 * Marital_StatusMarried
2386924   +          +     1.26977690921649 * Marital_StatusSingle
2386925   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2386926   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2386927   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2386928   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2386929   +          +     0.55272671490757 * Marital_StatusDivorced
2386930   +          +      0.1499239288334 * Marital_StatusMarried
2386931   +          +    -0.46840941760604 * Marital_StatusSingle
2386932   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2386933   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2386934   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2386935   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2386936   +          +      -1.240735370138 * Marital_StatusDivorced
2386937   +          +    -1.20089294883599 * Marital_StatusMarried
2386938   +          +     0.57492674426149 * Marital_StatusSingle
2386939   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2386940   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2386941   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2386942   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2386943   +          +     1.05435442049802 * Marital_StatusDivorced
2386944   +          +      0.3571256349717 * Marital_StatusMarried
2386945   +          +    -0.44741267266578 * Marital_StatusSingle
2386946   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2386947   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2386948   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2386949   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2386950   +          +     2.06026721980778 * Marital_StatusDivorced
2386951   +          +    -0.49583258645166 * Marital_StatusMarried
2386952   +          +    -1.14824900824474 * Marital_StatusSingle
2386953   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2386954   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2386955   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2386956   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2386957   +          +     -1.1890908607447 * Marital_StatusDivorced
2386958   +          +    -0.46668809907123 * Marital_StatusMarried
2386959   +          +     1.20342564763422 * Marital_StatusSingle
2386960   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2386961   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2386962   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2386963   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2386964   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2386965   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2386966   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2386967   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2386968   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2386969   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2386970   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2386971   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2386972   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2386973   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2386974   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2386975   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2386976   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2386977   +END;
MPRINT(EM_DIAGRAM):   END;
2386978   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2386979   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2386980   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2386981   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2386982   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2386983   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2386984   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2386985   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2386986   +END;
MPRINT(EM_DIAGRAM):   END;
2386987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386988   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2386989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2386990   +
2386991   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2386992   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2386993   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2386994   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2386995   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2386996   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2386997   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2386998   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2386999   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2387000   +end;
MPRINT(EM_DIAGRAM):   end;
2387001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387002   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2387003   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2387004   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2387005   +   end;
MPRINT(EM_DIAGRAM):   end;
2387006   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2387007   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2387008   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2387009   +   end;
MPRINT(EM_DIAGRAM):   end;
2387010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387011   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2387012   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2387013   +   end;
MPRINT(EM_DIAGRAM):   end;
2387014   +end;
MPRINT(EM_DIAGRAM):   end;
2387015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2387016   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2387017   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2387018   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2387019   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2387020   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2387021   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2387022   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2387023   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2387024   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2387025   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2387026   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2387027   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2387028   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2387029   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2387030   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2387031   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2387032   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2387033   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2387034   +END;
MPRINT(EM_DIAGRAM):   END;
2387035   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2387036   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2387037   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2387038   +END;
MPRINT(EM_DIAGRAM):   END;
2387039   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2387040   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2387041   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2387042   +END;
MPRINT(EM_DIAGRAM):   END;
2387043   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2387044   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2387045   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2387046   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2387047   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2387048   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2387049   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2387050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387051   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2387052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387053   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2387054   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2387055   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2387056   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2387057   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2387058   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2387059   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2387060   +END;
MPRINT(EM_DIAGRAM):   END;
2387061   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2387062   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2387063   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2387064   +drop
2387065   +H1x1_1
2387066   +H1x1_2
2387067   +H1x1_3
2387068   +H1x1_4
2387069   +H1x1_5
2387070   +H1x1_6
2387071   +H1x1_7
2387072   +H1x2_1
2387073   +H1x2_2
2387074   +H1x2_3
2387075   +H1x2_4
2387076   +H1x2_5
2387077   +H1x2_6
2387078   +H1x2_7
2387079   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2387080   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2387081   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2387082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387083   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2387084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387085   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2387086   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2387087   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2387088   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2387089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387090   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2387091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387092   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2387093   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2387094   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2387095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387096   +* Ensmbl43: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Maximum Posteriors of 3 models;
2387097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387098   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2387099   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2387100   +P_DepVar1 = max(
2387101   +AutoNeural9_P_DepVar1 ,
2387102   +AutoNeural11_P_DepVar1 ,
2387103   +AutoNeural12_P_DepVar1
2387104   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 , 
AutoNeural12_P_DepVar1 );
2387105   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2387106   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2387107   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2387108   +end;
MPRINT(EM_DIAGRAM):   end;
2387109   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2387110   +P_DepVar0 = max(
2387111   +AutoNeural9_P_DepVar0 ,
2387112   +AutoNeural11_P_DepVar0 ,
2387113   +AutoNeural12_P_DepVar0
2387114   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 , 
AutoNeural12_P_DepVar0 );
2387115   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2387116   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2387117   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2387118   +end;
MPRINT(EM_DIAGRAM):   end;
2387119   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2387120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387121   +* Ensmbl43: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Classification Vars;
2387122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387123   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2387124   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2387125   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2387126   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2387127   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2387128   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2387129   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2387130   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2387131   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2387132   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2387133   +end;
MPRINT(EM_DIAGRAM):   end;
2387134   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2387135   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2387136   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2387137   +end;
MPRINT(EM_DIAGRAM):   end;
2387138   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2387139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387140   +* Ensmbl43: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Producing Unformatted variable;
2387141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387142   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2387143   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2387144   +else
2387145   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2387146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387147   +* Ensmbl43: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing _WARN_ Variable;
2387148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387149   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2387150   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2387151   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2387152   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2387152  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2387153   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2387153  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2387154   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2387154  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2387155   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2387155  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2387156   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2387156  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2387157   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2387157  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2387158   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2387158  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2387159   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2387159  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2387160   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2387160  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2387161   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2387161  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2387162   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2387162  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2387163   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2387163  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2387164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387165   +* Ensmbl43: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing Residual Vars;
2387166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387167   +if
2387168   +F_DepVar NE '1'
2387169   +AND F_DepVar NE '0'
2387170   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2387171   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2387172   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2387173   +end;
MPRINT(EM_DIAGRAM):   end;
2387174   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387175   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2387176   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2387177   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2387178   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2387179   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2387180   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2387181   +END;
MPRINT(EM_DIAGRAM):   END;
2387182   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2387183    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL43_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2387184    quit;
2387185    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl43_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl43_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2387245    filename _pref
2387245  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2387246    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2387247    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2387248   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2387249   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2387250   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2387251   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2387252   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2387253   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2387254   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2387255   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2387256   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2387257   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2387258   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2387259   +LENGTH _WARN_ $4
2387260   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2387261   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2387262   +
2387263   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2387264   +
2387265   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2387266   +
2387267   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2387268   +
2387269   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2387270   +
2387271   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2387272   +
2387273   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2387274   +
2387275   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2387276   +
2387277   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2387278   +
2387279   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2387280   +
2387281   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2387282   +
2387283   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2387284   +
2387285   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2387286   +
2387287   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2387288   +
2387289   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2387290   +
2387291   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2387292   +
2387293   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2387294   +
2387295   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2387296   +
2387297   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2387298   +
2387299   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2387300   +
2387301   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2387302   +
2387303   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2387304   +
2387305   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2387306   +
2387307   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2387308   +
2387309   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2387310   +
2387311   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2387312   +
2387313   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2387314   +
2387315   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2387316   +
2387317   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2387318   +
2387319   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2387320   +
2387321   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2387322   +
2387323   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2387324   +
2387325   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2387326   +
2387327   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2387328   +
2387329   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2387330   +
2387331   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2387332   +
2387333   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2387334   +
2387335   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2387336   +
2387337   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2387338   +
2387339   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2387340   +
2387341   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2387342   +
2387343   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2387344   +
2387345   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2387346   +
2387347   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2387348   +
2387349   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2387350   +
2387351   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2387352   +
2387353   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2387354   +
2387355   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2387356   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2387357   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2387358   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2387359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387361   +end;
MPRINT(EM_DIAGRAM):   end;
2387362   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387364   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2387365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387367   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2387368   +   end;
MPRINT(EM_DIAGRAM):   end;
2387369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387370   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2387371   +   end;
MPRINT(EM_DIAGRAM):   end;
2387372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387373   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2387374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387376   +   end;
MPRINT(EM_DIAGRAM):   end;
2387377   +end;
MPRINT(EM_DIAGRAM):   end;
2387378   +
2387379   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2387380   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2387381   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2387382   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2387383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387385   +end;
MPRINT(EM_DIAGRAM):   end;
2387386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387388   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2387389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387391   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2387392   +   end;
MPRINT(EM_DIAGRAM):   end;
2387393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387394   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2387395   +   end;
MPRINT(EM_DIAGRAM):   end;
2387396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387397   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2387398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387400   +   end;
MPRINT(EM_DIAGRAM):   end;
2387401   +end;
MPRINT(EM_DIAGRAM):   end;
2387402   +
2387403   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2387404   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2387405   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2387406   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2387407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387409   +end;
MPRINT(EM_DIAGRAM):   end;
2387410   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387412   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2387413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387415   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2387416   +   end;
MPRINT(EM_DIAGRAM):   end;
2387417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387418   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2387419   +   end;
MPRINT(EM_DIAGRAM):   end;
2387420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387421   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2387422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387424   +   end;
MPRINT(EM_DIAGRAM):   end;
2387425   +end;
MPRINT(EM_DIAGRAM):   end;
2387426   +
2387427   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2387428   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2387429   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2387430   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2387431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387433   +end;
MPRINT(EM_DIAGRAM):   end;
2387434   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387436   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2387437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387439   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2387440   +   end;
MPRINT(EM_DIAGRAM):   end;
2387441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387442   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2387443   +   end;
MPRINT(EM_DIAGRAM):   end;
2387444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387445   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2387446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387448   +   end;
MPRINT(EM_DIAGRAM):   end;
2387449   +end;
MPRINT(EM_DIAGRAM):   end;
2387450   +
2387451   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2387452   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2387453   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2387454   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2387455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387457   +end;
MPRINT(EM_DIAGRAM):   end;
2387458   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387460   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2387461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387463   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2387464   +   end;
MPRINT(EM_DIAGRAM):   end;
2387465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387466   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2387467   +   end;
MPRINT(EM_DIAGRAM):   end;
2387468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387469   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2387470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387472   +   end;
MPRINT(EM_DIAGRAM):   end;
2387473   +end;
MPRINT(EM_DIAGRAM):   end;
2387474   +
2387475   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2387476   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2387477   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2387478   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2387479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387481   +end;
MPRINT(EM_DIAGRAM):   end;
2387482   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387484   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2387485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2387487   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2387488   +   end;
MPRINT(EM_DIAGRAM):   end;
2387489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2387490   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2387491   +   end;
MPRINT(EM_DIAGRAM):   end;
2387492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387493   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2387494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387496   +   end;
MPRINT(EM_DIAGRAM):   end;
2387497   +end;
MPRINT(EM_DIAGRAM):   end;
2387498   +
2387499   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2387500   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2387501   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2387502   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2387503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387505   +end;
MPRINT(EM_DIAGRAM):   end;
2387506   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2387508   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2387509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387510   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2387511   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2387512   +   end;
MPRINT(EM_DIAGRAM):   end;
2387513   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2387514   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2387515   +   end;
MPRINT(EM_DIAGRAM):   end;
2387516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387517   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2387518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387520   +   end;
MPRINT(EM_DIAGRAM):   end;
2387521   +end;
MPRINT(EM_DIAGRAM):   end;
2387522   +
2387523   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2387524   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2387525   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2387526   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2387527   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2387528   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2387529   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2387530   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2387531   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2387532   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2387533   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2387534   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2387535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387537   +end;
MPRINT(EM_DIAGRAM):   end;
2387538   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387539   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2387540   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2387541   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387542   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2387543   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2387544   +   end;
MPRINT(EM_DIAGRAM):   end;
2387545   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2387546   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2387547   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2387548   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2387549   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2387550   +   end;
MPRINT(EM_DIAGRAM):   end;
2387551   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2387552   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2387553   +   end;
MPRINT(EM_DIAGRAM):   end;
2387554   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2387555   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2387556   +   end;
MPRINT(EM_DIAGRAM):   end;
2387557   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2387558   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2387559   +   end;
MPRINT(EM_DIAGRAM):   end;
2387560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387561   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2387562   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2387563   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2387564   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2387565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387567   +   end;
MPRINT(EM_DIAGRAM):   end;
2387568   +end;
MPRINT(EM_DIAGRAM):   end;
2387569   +
2387570   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2387571   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2387572   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2387573   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2387574   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2387575   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2387576   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2387577   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2387578   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2387579   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2387580   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2387581   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2387582   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2387583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2387584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387585   +end;
MPRINT(EM_DIAGRAM):   end;
2387586   +else do;
MPRINT(EM_DIAGRAM):   else do;
2387587   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2387588   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2387589   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2387590   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2387591   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2387592   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2387593   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2387594   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2387595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2387596   +         end;
MPRINT(EM_DIAGRAM):   end;
2387597   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2387598   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2387599   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2387600   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2387601   +            end;
MPRINT(EM_DIAGRAM):   end;
2387602   +         end;
MPRINT(EM_DIAGRAM):   end;
2387603   +      end;
MPRINT(EM_DIAGRAM):   end;
2387604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2387605   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2387606   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2387607   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2387608   +         end;
MPRINT(EM_DIAGRAM):   end;
2387609   +      end;
MPRINT(EM_DIAGRAM):   end;
2387610   +   end;
MPRINT(EM_DIAGRAM):   end;
2387611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2387612   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2387613   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2387614   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2387615   +      end;
MPRINT(EM_DIAGRAM):   end;
2387616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2387617   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2387618   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2387619   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2387620   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2387621   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2387622   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2387623   +         end;
MPRINT(EM_DIAGRAM):   end;
2387624   +      end;
MPRINT(EM_DIAGRAM):   end;
2387625   +   end;
MPRINT(EM_DIAGRAM):   end;
2387626   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2387627   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2387628   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2387629   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2387630   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2387631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2387632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387633   +   end;
MPRINT(EM_DIAGRAM):   end;
2387634   +end;
MPRINT(EM_DIAGRAM):   end;
2387635   +
2387636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387637   +*** Checking missing input Interval
2387638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2387639   +
2387640   +IF NMISS(
2387641   +   AcceptedCmpTotal ,
2387642   +   Age ,
2387643   +   Frq ,
2387644   +   Income ,
2387645   +   Kidhome ,
2387646   +   Mnt ,
2387647   +   MntFishProducts ,
2387648   +   MntFruits ,
2387649   +   MntGoldProds ,
2387650   +   MntMeatProducts ,
2387651   +   MntSweetProducts ,
2387652   +   MntWines ,
2387653   +   MonthsAsCustomer ,
2387654   +   NumCatalogPurchases ,
2387655   +   NumDealsPurchases ,
2387656   +   NumDistPurchases ,
2387657   +   NumStorePurchases ,
2387658   +   NumWebPurchases ,
2387659   +   NumWebVisitsMonth ,
2387660   +   RFMstat ,
2387661   +   RMntFrq ,
2387662   +   Recency ,
2387663   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2387664   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2387665   +
2387666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2387667   +END;
MPRINT(EM_DIAGRAM):   END;
2387668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387669   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2387670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387671   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2387672   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2387673   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2387674   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2387675   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2387676   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2387677   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2387678   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2387679   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2387680   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2387681   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2387682   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2387683   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2387684   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2387685   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2387686   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2387687   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2387688   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2387689   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2387690   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2387691   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2387692   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2387693   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2387694   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2387695   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2387696   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2387697   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2387698   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2387699   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2387700   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2387701   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2387702   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2387703   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2387704   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2387705   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2387706   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2387707   +END;
MPRINT(EM_DIAGRAM):   END;
2387708   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2387709   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2387710   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2387711   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2387712   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2387713   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2387714   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2387715   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2387716   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2387717   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2387718   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2387719   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2387720   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2387721   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2387722   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2387723   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2387724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2387725   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2387726   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2387727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2387728   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2387729   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2387730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2387731   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2387732   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2387733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2387734   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2387735   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2387736   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2387737   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2387738   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2387739   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2387740   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2387741   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2387742   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2387743   +   ELSE S_NumCatalogPurchases
2387744   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2387745   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2387746   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2387747   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2387748   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2387749   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2387750   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2387751   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2387752   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2387753   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2387754   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2387755   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2387756   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2387757   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2387758   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2387759   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2387760   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2387761   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2387762   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2387763   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2387764   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2387765   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2387766   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2387767   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2387768   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2387769   +END;
MPRINT(EM_DIAGRAM):   END;
2387770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387771   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2387772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387774   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2387775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387777   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2387778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2387780   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2387781   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2387782   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2387783   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2387784   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2387785   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2387786   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2387787   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2387788   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2387789   +          +    -1.09856598010056 * S_NumDealsPurchases
2387790   +          +    -0.10571850472514 * S_NumDistPurchases
2387791   +          +     0.11898210654227 * S_NumStorePurchases
2387792   +          +      0.5984912060231 * S_NumWebPurchases
2387793   +          +     0.78592531126942 * S_NumWebVisitsMonth
2387794   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2387795   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2387796   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2387797   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2387798   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2387799   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2387800   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2387801   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2387802   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2387803   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2387804   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2387805   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2387806   +          +    -0.84042044250624 * S_NumDealsPurchases
2387807   +          +    -0.10246261015488 * S_NumDistPurchases
2387808   +          +     0.06886149708824 * S_NumStorePurchases
2387809   +          +     0.63156910388199 * S_NumWebPurchases
2387810   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2387811   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2387812   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2387813   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2387814   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2387815   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2387816   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2387817   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2387818   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2387819   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2387820   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2387821   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2387822   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2387823   +          +     0.45393712455366 * S_NumDealsPurchases
2387824   +          +    -0.25292198053552 * S_NumDistPurchases
2387825   +          +    -1.35582215064749 * S_NumStorePurchases
2387826   +          +    -0.83132202302639 * S_NumWebPurchases
2387827   +          +     1.87116225272678 * S_NumWebVisitsMonth
2387828   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2387829   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2387830   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2387831   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2387832   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2387833   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2387834   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2387835   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2387836   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2387837   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2387838   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2387839   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2387840   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2387841   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2387842   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2387843   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2387844   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2387845   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2387846   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2387847   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2387848   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2387849   +          +      0.4695898100094 * Marital_StatusDivorced
2387850   +          +    -0.52137742289262 * Marital_StatusMarried
2387851   +          +    -0.32382086914936 * Marital_StatusSingle
2387852   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2387853   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2387854   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2387855   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2387856   +          +    -1.04858218653238 * Marital_StatusDivorced
2387857   +          +     2.41098335093061 * Marital_StatusMarried
2387858   +          +    -1.94696044861334 * Marital_StatusSingle
2387859   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2387860   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2387861   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2387862   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2387863   +          +     0.42964114177062 * Marital_StatusDivorced
2387864   +          +    -0.38607635605816 * Marital_StatusMarried
2387865   +          +    -0.02157405407852 * Marital_StatusSingle
2387866   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2387867   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2387868   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2387869   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2387870   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2387871   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2387872   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2387873   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2387874   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2387875   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2387876   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2387877   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2387878   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2387879   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2387880   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2387881   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2387882   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2387883   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2387884   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2387885   +END;
MPRINT(EM_DIAGRAM):   END;
2387886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2387887   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2387888   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2387889   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2387890   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2387891   +END;
MPRINT(EM_DIAGRAM):   END;
2387892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387893   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2387894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387895   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2387896   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2387897   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2387898   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2387899   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2387900   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2387901   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2387902   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2387903   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2387904   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2387905   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2387906   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2387907   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2387908   +END;
MPRINT(EM_DIAGRAM):   END;
2387909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2387910   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2387911   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2387912   +END;
MPRINT(EM_DIAGRAM):   END;
2387913   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2387914   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2387915   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2387916   +END;
MPRINT(EM_DIAGRAM):   END;
2387917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387918   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2387919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2387920   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2387921   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2387922   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2387923   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2387924   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2387925   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2387926   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2387927   +END;
MPRINT(EM_DIAGRAM):   END;
2387928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2387929   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2387930   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2387931   +drop
2387932   +H1x1_1
2387933   +H1x1_2
2387934   +H1x1_3
2387935   +H1x1_4
2387936   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2387937   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2387938    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2387939    quit;
2387940    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2387941    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2387942    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2387943    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2387944    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2387945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387946    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2387947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2387949    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2387950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2387953    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2387954    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2387955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2387956    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2387957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2387958    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2387959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2387961    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2387962    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2387963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387964    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387965    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2387966    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2387966  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.

2387967    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387968    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2387969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387970    filename _pref
2387970  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2387971    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2387972    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2387973   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387974   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2387975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387976   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2387977   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2387978   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2387979    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2387980    quit;
2387981    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2387982    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2387983    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2387984    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2387985    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2387986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387987    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2387988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387990    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2387991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2387992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2387993    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2387994    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2387995    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2387996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2387997    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2387998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2387999    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2388000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2388003    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2388004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388005    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2388007    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2388007  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2388008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2388009    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2388010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388011    filename _pref
2388011  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2388012    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2388013    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2388014   +
2388015   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2388016   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2388016  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2388017   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2388018   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2388019   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2388020   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2388021   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2388022    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2388023    quit;
2388024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2388025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2388026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2388027    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2388028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2388029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2388031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2388033    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2388034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2388037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2388038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2388039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388040    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2388041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2388042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2388043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2388046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2388047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388048    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2388050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2388050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2388051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388052    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2388053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388054    filename _pref
2388054  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2388055    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2388056    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2388057   +
2388058   +
2388059   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2388060   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2388061   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2388062   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2388063   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2388064   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388065   +
2388066   +
2388067   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2388068   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2388069   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2388070   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2388071   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2388072   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388073   +
2388074   +
2388075   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2388076   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2388077   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2388078   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2388079   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2388080   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388081   +
2388082   +
2388083   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2388084   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2388085   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2388086   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2388087   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2388088   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388089   +
2388090   +
2388091   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2388092   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2388093   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2388094   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2388095   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2388096   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388097   +
2388098   +
2388099   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2388100   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2388101   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2388102   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2388103   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2388104   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388105   +
2388106   +
2388107   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2388108   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2388109   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2388110   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2388111   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2388112   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388113   +
2388114   +
2388115   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2388116   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2388117   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2388118   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2388119   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2388120   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2388121   +if
2388122   +_FILTERNORM1 not in ( '.')
2388123   + and
2388124   +_FILTERNORM2 not in ( '.')
2388125   + and
2388126   +_FILTERNORM3 not in ( '.')
2388127   + and
2388128   +_FILTERNORM4 not in ( '.')
2388129   + and
2388130   +_FILTERNORM5 not in ( '.')
2388131   + and
2388132   +_FILTERNORM6 not in ( '.')
2388133   + and
2388134   +_FILTERNORM7 not in ( ' ')
2388135   + and
2388136   +_FILTERNORM8 not in ( ' ')
2388137   +and
2388138   +( Dt_Customer ne .)
2388139   +and ( Income ne . and (Income<=107000))
2388140   +and ( Kidhome ne .)
2388141   +and ( MntFishProducts ne .)
2388142   +and ( MntFruits ne .)
2388143   +and ( MntGoldProds ne .)
2388144   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2388145   +and ( MntSweetProducts ne .)
2388146   +and ( MntWines ne .)
2388147   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2388148   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2388149   +and ( NumStorePurchases ne .)
2388150   +and ( NumWebPurchases ne .)
2388151   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2388152   +and ( Recency ne .)
2388153   +and ( Teenhome ne .)
2388154   +and ( Year_Birth ne .)
2388155   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2388156   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2388157   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2388158   +end;
MPRINT(EM_DIAGRAM):   end;
2388159   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2388160   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2388161    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2388162    quit;
2388163    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2388164    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2388165    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2388166    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2388167    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2388168    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388169    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2388170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2388172    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2388173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2388176    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2388177    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2388178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388179    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2388180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2388181    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2388182    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388183    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388184    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2388185    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2388186    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388187    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388188    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2388189    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2388189  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2388190    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388191    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2388192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388193    %macro varDept(fcmpdata=,id=);
2388194    %global nobs&id scoreFlag&id;
2388195    %let scoreFlag&id = 0;
2388196    %if &id=1 or ^&fcmpStart %then %do;
2388197    proc sort data=&fcmpdata out=_temp&id nodupkey;
2388198    by NAME;
2388199    where id=&id and LHS in( %let j=1;
2388200    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2388201    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2388202    "&var" %let j = %eval(&j+1);
2388203    %end;
2388204    );
2388205    run;
2388206    %let dsid = %sysfunc(open(_temp&id));
2388207    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2388208    %let dsid = %sysfunc(close(&dsid));
2388209    %if &&nobs&id %then %do;
2388210    %let scoreFlag&id = 1;
2388211    %let fcmpStart = 1;
2388212    %end;
2388213    %else %let fcmpStart = 0;
2388214    %end;
2388215    %else %do;
2388216    proc sort data=&fcmpdata out=_tempid;
2388217    where id=&id;
2388218    by LHS;
2388219    run;
2388220    %let dsid = %sysfunc(open(_tempid));
2388221    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2388222    %let dsid = %sysfunc(close(&dsid));
2388223    %if ^&&nobs&id %then %do;
2388224    proc datasets lib=work nolist;
2388225    delete _tempid;
2388226    run;
2388227    quit;
2388228    %end;
2388229    %else %do;
2388230    data _tempAll;
2388231    set %let j=%eval(&id-1);
2388232    %do x=1 %to &j;
2388233    %if &&nobs&x %then %do;
2388234    _temp&x %end;
2388235    %end;
2388236    ;
2388237    run;
2388238    proc sql;
2388239    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2388239  ! work._tempid p2 where p.name=p2.lhs;
2388240    quit;
2388241    data _temp&id;
2388242    set _temp&id;
2388243    where LHS ne '' and NAME ne '' and Node ne '';
2388244    run;
2388245    proc datasets lib=work nolist;
2388246    delete _tempAll;
2388247    run;
2388248    %let dsid = %sysfunc(open(_temp&id));
2388249    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2388250    %let dsid = %sysfunc(close(&dsid));
2388251    %if ^&&nobs&id %then %do;
2388252    proc datasets lib=work nolist;
2388253    delete _temp&id;
2388254    run;
2388255    quit;
2388256    %end;
2388257    %else %do;
2388258    %let scoreFlag&id = 1;
2388259    data _temp&id;
2388260    set _temp&id;
2388261    where LHS ne NAME and node ne '';
2388262    run;
2388263    %let dsid = %sysfunc(open(_temp&id));
2388264    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2388265    %let dsid = %sysfunc(close(&dsid));
2388266    %if ^&&nobs&id %then %do;
2388267    proc datasets lib=work nolist;
2388268    delete _temp&id;
2388269    run;
2388270    quit;
2388271    %end;
2388272    %else %do;
2388273    proc sort data=_temp&id nodupkey;
2388274    by LHS NAME;
2388275    run;
2388276    %end;
2388277    %end;
2388278    %end;
2388279    %end;
2388280    %mend varDept;
2388281    %macro optCode(outdata=fcmpdata);
2388282    %global fcmpStart;
2388283    %let fcmpStart = 0;
2388284    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2388285    %let NumNodes=9;
2388286    %do k=1 %to &NumNodes;
2388287    %vardept(fcmpdata=&outdata, id=&k);
2388288    %end;
2388289    %mend optCode;
2388290    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2388291    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2388292    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2388293    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2388294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388295    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2388296    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2388297    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2388298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388299    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2388300    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2388300  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2388301    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2388302    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2388303    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2388304    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2388305    filename _pref
2388305  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2388306    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2388307    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2388308   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2388309   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2388310   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2388311   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2388312   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2388313   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2388314   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2388315   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2388316   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2388317   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2388318   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2388319   +LENGTH _WARN_ $4
2388320   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2388321   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2388322   +
2388323   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2388324   +
2388325   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2388326   +
2388327   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2388328   +
2388329   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2388330   +
2388331   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2388332   +
2388333   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2388334   +
2388335   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2388336   +
2388337   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2388338   +
2388339   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2388340   +
2388341   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2388342   +
2388343   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2388344   +
2388345   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2388346   +
2388347   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2388348   +
2388349   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2388350   +
2388351   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2388352   +
2388353   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2388354   +
2388355   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2388356   +
2388357   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2388358   +
2388359   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2388360   +
2388361   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2388362   +
2388363   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2388364   +
2388365   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2388366   +
2388367   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2388368   +
2388369   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2388370   +
2388371   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2388372   +
2388373   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2388374   +
2388375   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2388376   +
2388377   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2388378   +
2388379   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2388380   +
2388381   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2388382   +
2388383   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2388384   +
2388385   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2388386   +
2388387   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2388388   +
2388389   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2388390   +
2388391   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2388392   +
2388393   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2388394   +
2388395   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2388396   +
2388397   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2388398   +
2388399   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2388400   +
2388401   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2388402   +
2388403   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2388404   +
2388405   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2388406   +
2388407   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2388408   +
2388409   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2388410   +
2388411   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2388412   +
2388413   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2388414   +
2388415   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2388416   +
2388417   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2388418   +
2388419   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2388420   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2388421   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2388422   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2388423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388425   +end;
MPRINT(EM_DIAGRAM):   end;
2388426   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388428   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2388429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388431   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2388432   +   end;
MPRINT(EM_DIAGRAM):   end;
2388433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388434   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2388435   +   end;
MPRINT(EM_DIAGRAM):   end;
2388436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388437   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2388438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388440   +   end;
MPRINT(EM_DIAGRAM):   end;
2388441   +end;
MPRINT(EM_DIAGRAM):   end;
2388442   +
2388443   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2388444   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2388445   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2388446   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2388447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388449   +end;
MPRINT(EM_DIAGRAM):   end;
2388450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388452   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2388453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388455   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2388456   +   end;
MPRINT(EM_DIAGRAM):   end;
2388457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388458   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2388459   +   end;
MPRINT(EM_DIAGRAM):   end;
2388460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388461   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2388462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388464   +   end;
MPRINT(EM_DIAGRAM):   end;
2388465   +end;
MPRINT(EM_DIAGRAM):   end;
2388466   +
2388467   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2388468   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2388469   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2388470   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2388471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388473   +end;
MPRINT(EM_DIAGRAM):   end;
2388474   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388476   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2388477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388479   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2388480   +   end;
MPRINT(EM_DIAGRAM):   end;
2388481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388482   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2388483   +   end;
MPRINT(EM_DIAGRAM):   end;
2388484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388485   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2388486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388488   +   end;
MPRINT(EM_DIAGRAM):   end;
2388489   +end;
MPRINT(EM_DIAGRAM):   end;
2388490   +
2388491   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2388492   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2388493   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2388494   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2388495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388497   +end;
MPRINT(EM_DIAGRAM):   end;
2388498   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388500   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2388501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388503   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2388504   +   end;
MPRINT(EM_DIAGRAM):   end;
2388505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388506   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2388507   +   end;
MPRINT(EM_DIAGRAM):   end;
2388508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388509   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2388510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388512   +   end;
MPRINT(EM_DIAGRAM):   end;
2388513   +end;
MPRINT(EM_DIAGRAM):   end;
2388514   +
2388515   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2388516   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2388517   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2388518   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2388519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388521   +end;
MPRINT(EM_DIAGRAM):   end;
2388522   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388524   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2388525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388527   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2388528   +   end;
MPRINT(EM_DIAGRAM):   end;
2388529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388530   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2388531   +   end;
MPRINT(EM_DIAGRAM):   end;
2388532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388533   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2388534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388536   +   end;
MPRINT(EM_DIAGRAM):   end;
2388537   +end;
MPRINT(EM_DIAGRAM):   end;
2388538   +
2388539   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2388540   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2388541   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2388542   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2388543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388545   +end;
MPRINT(EM_DIAGRAM):   end;
2388546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388548   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2388549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2388551   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2388552   +   end;
MPRINT(EM_DIAGRAM):   end;
2388553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2388554   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2388555   +   end;
MPRINT(EM_DIAGRAM):   end;
2388556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388557   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2388558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388560   +   end;
MPRINT(EM_DIAGRAM):   end;
2388561   +end;
MPRINT(EM_DIAGRAM):   end;
2388562   +
2388563   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2388564   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2388565   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2388566   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2388567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388569   +end;
MPRINT(EM_DIAGRAM):   end;
2388570   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2388572   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2388573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388574   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2388575   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2388576   +   end;
MPRINT(EM_DIAGRAM):   end;
2388577   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2388578   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2388579   +   end;
MPRINT(EM_DIAGRAM):   end;
2388580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388581   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2388582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388584   +   end;
MPRINT(EM_DIAGRAM):   end;
2388585   +end;
MPRINT(EM_DIAGRAM):   end;
2388586   +
2388587   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2388588   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2388589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2388590   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2388591   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2388592   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2388593   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2388594   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2388595   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2388596   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2388597   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2388598   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2388599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388601   +end;
MPRINT(EM_DIAGRAM):   end;
2388602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388603   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2388604   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2388605   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388606   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2388607   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2388608   +   end;
MPRINT(EM_DIAGRAM):   end;
2388609   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2388610   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2388611   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2388612   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2388613   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2388614   +   end;
MPRINT(EM_DIAGRAM):   end;
2388615   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2388616   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2388617   +   end;
MPRINT(EM_DIAGRAM):   end;
2388618   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2388619   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2388620   +   end;
MPRINT(EM_DIAGRAM):   end;
2388621   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2388622   +      EducationBasic = 1;
The SAS System

MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2388623   +   end;
MPRINT(EM_DIAGRAM):   end;
2388624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388625   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2388626   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2388627   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2388628   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2388629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388631   +   end;
MPRINT(EM_DIAGRAM):   end;
2388632   +end;
MPRINT(EM_DIAGRAM):   end;
2388633   +
2388634   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2388635   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2388636   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2388637   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2388638   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2388639   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2388640   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2388641   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2388642   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2388643   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2388644   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2388645   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2388646   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2388647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2388648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388649   +end;
MPRINT(EM_DIAGRAM):   end;
2388650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2388651   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2388652   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2388653   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2388654   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2388655   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2388656   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2388657   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2388658   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2388659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2388660   +         end;
MPRINT(EM_DIAGRAM):   end;
2388661   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2388662   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2388663   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2388664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2388665   +            end;
MPRINT(EM_DIAGRAM):   end;
2388666   +         end;
MPRINT(EM_DIAGRAM):   end;
2388667   +      end;
MPRINT(EM_DIAGRAM):   end;
2388668   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2388669   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2388670   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2388671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2388672   +         end;
MPRINT(EM_DIAGRAM):   end;
2388673   +      end;
MPRINT(EM_DIAGRAM):   end;
2388674   +   end;
MPRINT(EM_DIAGRAM):   end;
2388675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2388676   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2388677   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2388678   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2388679   +      end;
MPRINT(EM_DIAGRAM):   end;
2388680   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2388681   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2388682   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2388683   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2388684   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2388685   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2388686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2388687   +         end;
MPRINT(EM_DIAGRAM):   end;
2388688   +      end;
MPRINT(EM_DIAGRAM):   end;
2388689   +   end;
MPRINT(EM_DIAGRAM):   end;
2388690   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2388691   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2388692   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2388693   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2388694   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2388695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2388696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388697   +   end;
MPRINT(EM_DIAGRAM):   end;
2388698   +end;
MPRINT(EM_DIAGRAM):   end;
2388699   +
2388700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388701   +*** Checking missing input Interval
2388702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2388703   +
2388704   +IF NMISS(
2388705   +   AcceptedCmpTotal ,
2388706   +   Age ,
2388707   +   Frq ,
2388708   +   Income ,
2388709   +   Kidhome ,
2388710   +   Mnt ,
2388711   +   MntFishProducts ,
2388712   +   MntFruits ,
2388713   +   MntGoldProds ,
2388714   +   MntMeatProducts ,
2388715   +   MntSweetProducts ,
2388716   +   MntWines ,
2388717   +   MonthsAsCustomer ,
2388718   +   NumCatalogPurchases ,
2388719   +   NumDealsPurchases ,
2388720   +   NumDistPurchases ,
2388721   +   NumStorePurchases ,
2388722   +   NumWebPurchases ,
2388723   +   NumWebVisitsMonth ,
2388724   +   RFMstat ,
2388725   +   RMntFrq ,
2388726   +   Recency ,
2388727   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2388728   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2388729   +
2388730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2388731   +END;
MPRINT(EM_DIAGRAM):   END;
2388732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388733   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2388734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2388736   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2388737   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2388738   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2388739   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2388740   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2388741   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2388742   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2388743   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2388744   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2388745   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2388746   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2388747   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2388748   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2388749   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2388750   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2388751   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2388752   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2388753   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2388754   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2388755   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2388756   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2388757   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2388758   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2388759   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2388760   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2388761   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2388762   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2388763   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2388764   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2388765   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2388766   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2388767   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2388768   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2388769   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2388770   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2388771   +END;
MPRINT(EM_DIAGRAM):   END;
2388772   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2388773   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2388774   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2388775   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2388776   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2388777   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2388778   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2388779   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2388780   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2388781   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2388782   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2388783   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2388784   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2388785   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2388786   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2388787   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2388788   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2388789   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2388790   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2388791   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2388792   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2388793   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2388794   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2388795   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2388796   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2388797   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2388798   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2388799   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2388800   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2388801   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2388802   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2388803   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2388804   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2388805   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2388806   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2388807   +   ELSE S_NumCatalogPurchases
2388808   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2388809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2388810   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2388811   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2388812   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2388813   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2388814   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2388815   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2388816   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2388817   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2388818   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2388819   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2388820   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2388821   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2388822   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2388823   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2388824   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2388825   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2388826   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2388827   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2388828   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2388829   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2388830   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2388831   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2388832   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2388833   +END;
MPRINT(EM_DIAGRAM):   END;
2388834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388835   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2388836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388838   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2388839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388841   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2388842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2388843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2388844   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2388845   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2388846   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2388847   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2388848   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2388849   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2388850   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2388851   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2388852   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2388853   +          +     0.19770934886328 * S_NumDealsPurchases
2388854   +          +      0.0515215988111 * S_NumDistPurchases
2388855   +          +    -0.34569346346089 * S_NumStorePurchases
2388856   +          +    -0.27122293596124 * S_NumWebPurchases
2388857   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2388858   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2388859   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2388860   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2388861   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2388862   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2388863   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2388864   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2388865   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2388866   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2388867   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2388868   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2388869   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2388870   +          +     0.54308887602031 * S_NumDealsPurchases
2388871   +          +    -0.22507315320192 * S_NumDistPurchases
2388872   +          +    -0.79861387328361 * S_NumStorePurchases
2388873   +          +    -0.45467494002747 * S_NumWebPurchases
2388874   +          +      0.2119048824613 * S_NumWebVisitsMonth
2388875   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2388876   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2388877   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2388878   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2388879   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2388880   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2388881   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2388882   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2388883   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2388884   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2388885   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2388886   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2388887   +          +     -0.0771083149302 * S_NumDealsPurchases
2388888   +          +     0.03403621221162 * S_NumDistPurchases
2388889   +          +     0.61303946422025 * S_NumStorePurchases
2388890   +          +     0.27126793634053 * S_NumWebPurchases
2388891   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2388892   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2388893   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2388894   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2388895   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2388896   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2388897   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2388898   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2388899   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2388900   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2388901   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2388902   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2388903   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2388904   +          +     0.29894603062327 * S_NumDealsPurchases
2388905   +          +     0.07614620530875 * S_NumDistPurchases
2388906   +          +     0.15402335009896 * S_NumStorePurchases
2388907   +          +     0.10615749096863 * S_NumWebPurchases
2388908   +          +     0.41962286816879 * S_NumWebVisitsMonth
2388909   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2388910   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2388911   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2388912   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2388913   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2388914   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2388915   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2388916   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2388917   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2388918   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2388919   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2388920   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2388921   +          +     0.14392502416642 * S_NumDealsPurchases
2388922   +          +    -0.10026304978633 * S_NumDistPurchases
2388923   +          +     -0.0588453022746 * S_NumStorePurchases
2388924   +          +     0.24799398610395 * S_NumWebPurchases
2388925   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2388926   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2388927   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2388928   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2388929   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2388930   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2388931   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2388932   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2388933   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2388934   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2388935   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2388936   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2388937   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2388938   +          +     0.08149600854964 * S_NumDealsPurchases
2388939   +          +     0.16873541613513 * S_NumDistPurchases
2388940   +          +    -0.20437343413446 * S_NumStorePurchases
2388941   +          +     -0.1671107527288 * S_NumWebPurchases
2388942   +          +     0.03677043100993 * S_NumWebVisitsMonth
2388943   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2388944   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2388945   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2388946   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2388947   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2388948   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2388949   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2388950   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2388951   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2388952   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2388953   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2388954   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2388955   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2388956   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2388957   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2388958   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2388959   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2388960   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2388961   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2388962   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2388963   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2388964   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2388965   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2388966   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2388967   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2388968   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2388969   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2388970   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2388971   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2388972   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2388973   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2388974   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2388975   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2388976   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2388977   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2388978   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2388979   +          +    -0.31045295887604 * Marital_StatusDivorced
2388980   +          +    -0.01109401001539 * Marital_StatusMarried
2388981   +          +     0.01325135981025 * Marital_StatusSingle
2388982   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2388983   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2388984   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2388985   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2388986   +          +     0.02275101861599 * Marital_StatusDivorced
2388987   +          +     0.20271548664903 * Marital_StatusMarried
2388988   +          +    -0.12132069210718 * Marital_StatusSingle
2388989   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2388990   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2388991   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2388992   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2388993   +          +     -0.4992959703281 * Marital_StatusDivorced
2388994   +          +     0.62071659624138 * Marital_StatusMarried
2388995   +          +    -0.21776202274494 * Marital_StatusSingle
2388996   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2388997   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2388998   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2388999   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2389000   +          +     0.05626212670587 * Marital_StatusDivorced
2389001   +          +     0.14353891364597 * Marital_StatusMarried
2389002   +          +    -0.29006765622997 * Marital_StatusSingle
2389003   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2389004   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2389005   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2389006   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2389007   +          +    -0.21206913700604 * Marital_StatusDivorced
2389008   +          +     0.58790643614629 * Marital_StatusMarried
2389009   +          +    -0.65995982578062 * Marital_StatusSingle
2389010   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2389011   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2389012   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2389013   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2389014   +          +    -0.05047370516008 * Marital_StatusDivorced
2389015   +          +    -0.23139090963669 * Marital_StatusMarried
2389016   +          +     0.04816197463249 * Marital_StatusSingle
2389017   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2389018   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2389019   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2389020   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2389021   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2389022   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2389023   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2389024   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2389025   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2389026   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2389027   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2389028   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2389029   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2389030   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2389031   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2389032   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2389033   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2389034   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2389035   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2389036   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2389037   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2389038   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2389039   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2389040   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2389041   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2389042   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2389043   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2389044   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2389045   +END;
MPRINT(EM_DIAGRAM):   END;
2389046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2389047   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2389048   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2389049   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2389050   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2389051   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2389052   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2389053   +END;
MPRINT(EM_DIAGRAM):   END;
2389054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389055   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2389056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389057   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2389058   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2389059   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2389060   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2389061   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2389062   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2389063   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2389064   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2389065   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2389066   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2389067   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2389068   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2389069   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2389070   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2389071   +END;
MPRINT(EM_DIAGRAM):   END;
2389072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2389073   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2389074   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2389075   +END;
MPRINT(EM_DIAGRAM):   END;
2389076   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2389077   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2389078   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2389079   +END;
MPRINT(EM_DIAGRAM):   END;
2389080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389081   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2389082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389083   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2389084   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2389085   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2389086   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2389087   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2389088   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2389089   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2389090   +END;
MPRINT(EM_DIAGRAM):   END;
2389091   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2389092   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2389093   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2389094   +drop
2389095   +H1x1_1
2389096   +H1x1_2
2389097   +H1x1_3
2389098   +H1x1_4
2389099   +H1x1_5
2389100   +H1x1_6
2389101   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2389102   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2389103    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2389104    quit;
2389105    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2389106    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2389107    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2389108    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2389109    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2389110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389111    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2389112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389114    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2389115    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389117    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389118    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2389119    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2389120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389121    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2389122    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2389123    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2389124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389126    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389127    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2389128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389129    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389130    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2389131    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2389131  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2389132    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389133    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2389134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389135    filename _pref
2389135  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2389136    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2389137    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2389138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2389139   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2389140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2389141   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2389142   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2389143   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2389144    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2389145    quit;
2389146    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2389147    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2389148    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2389149    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2389150    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2389151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389152    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2389153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389155    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2389156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389158    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389159    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2389160    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2389161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389162    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2389163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2389164    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2389165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389167    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389168    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2389169    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389170    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389171    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2389172    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2389172  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2389173    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389174    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2389175    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389176    filename _pref
2389176  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2389177    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2389178    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2389179   +
2389180   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2389181   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2389181  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2389182   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2389183   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2389184   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2389185   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2389186   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2389187    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2389188    quit;
2389189    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2389190    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2389191    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2389192    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2389193    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2389194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389195    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2389196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389198    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2389199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389201    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389202    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2389203    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2389204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389205    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2389206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389207    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2389208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389210    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389211    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2389212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389213    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389214    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2389215    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2389215  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2389216    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389217    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2389218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389219    filename _pref
2389219  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2389220    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2389221    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2389222   +
2389223   +
2389224   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2389225   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2389226   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2389227   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2389228   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2389229   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389230   +
2389231   +
2389232   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2389233   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2389234   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2389235   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2389236   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2389237   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389238   +
2389239   +
2389240   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2389241   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2389242   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2389243   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2389244   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2389245   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389246   +
2389247   +
2389248   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2389249   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2389250   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2389251   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2389252   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2389253   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389254   +
2389255   +
2389256   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2389257   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2389258   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2389259   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2389260   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2389261   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389262   +
2389263   +
2389264   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2389265   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2389266   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2389267   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2389268   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2389269   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389270   +
2389271   +
2389272   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2389273   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2389274   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2389275   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2389276   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2389277   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389278   +
2389279   +
2389280   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2389281   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2389282   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2389283   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2389284   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2389285   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2389286   +if
2389287   +_FILTERNORM1 not in ( '.')
2389288   + and
2389289   +_FILTERNORM2 not in ( '.')
2389290   + and
2389291   +_FILTERNORM3 not in ( '.')
2389292   + and
2389293   +_FILTERNORM4 not in ( '.')
2389294   + and
2389295   +_FILTERNORM5 not in ( '.')
2389296   + and
2389297   +_FILTERNORM6 not in ( '.')
2389298   + and
2389299   +_FILTERNORM7 not in ( ' ')
2389300   + and
2389301   +_FILTERNORM8 not in ( ' ')
2389302   +and
2389303   +( Dt_Customer ne .)
2389304   +and ( Income ne . and (Income<=107000))
2389305   +and ( Kidhome ne .)
2389306   +and ( MntFishProducts ne .)
2389307   +and ( MntFruits ne .)
2389308   +and ( MntGoldProds ne .)
2389309   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2389310   +and ( MntSweetProducts ne .)
2389311   +and ( MntWines ne .)
2389312   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2389313   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2389314   +and ( NumStorePurchases ne .)
2389315   +and ( NumWebPurchases ne .)
2389316   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2389317   +and ( Recency ne .)
2389318   +and ( Teenhome ne .)
2389319   +and ( Year_Birth ne .)
2389320   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2389321   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2389322   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2389323   +end;
MPRINT(EM_DIAGRAM):   end;
2389324   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2389325   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2389326    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2389327    quit;
2389328    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2389329    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2389330    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2389331    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2389332    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2389333    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389334    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2389335    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389337    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2389338    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389340    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389341    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2389342    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2389343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389344    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2389345    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2389346    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2389347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389349    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2389350    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2389351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2389352    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389353    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2389354    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2389354  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2389355    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389356    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2389357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389358    %macro varDept(fcmpdata=,id=);
2389359    %global nobs&id scoreFlag&id;
2389360    %let scoreFlag&id = 0;
2389361    %if &id=1 or ^&fcmpStart %then %do;
2389362    proc sort data=&fcmpdata out=_temp&id nodupkey;
2389363    by NAME;
2389364    where id=&id and LHS in( %let j=1;
2389365    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2389366    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2389367    "&var" %let j = %eval(&j+1);
2389368    %end;
2389369    );
2389370    run;
2389371    %let dsid = %sysfunc(open(_temp&id));
2389372    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2389373    %let dsid = %sysfunc(close(&dsid));
2389374    %if &&nobs&id %then %do;
2389375    %let scoreFlag&id = 1;
2389376    %let fcmpStart = 1;
2389377    %end;
2389378    %else %let fcmpStart = 0;
2389379    %end;
2389380    %else %do;
2389381    proc sort data=&fcmpdata out=_tempid;
2389382    where id=&id;
2389383    by LHS;
2389384    run;
2389385    %let dsid = %sysfunc(open(_tempid));
2389386    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2389387    %let dsid = %sysfunc(close(&dsid));
2389388    %if ^&&nobs&id %then %do;
2389389    proc datasets lib=work nolist;
2389390    delete _tempid;
2389391    run;
2389392    quit;
2389393    %end;
2389394    %else %do;
2389395    data _tempAll;
2389396    set %let j=%eval(&id-1);
2389397    %do x=1 %to &j;
2389398    %if &&nobs&x %then %do;
2389399    _temp&x %end;
2389400    %end;
2389401    ;
2389402    run;
2389403    proc sql;
2389404    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2389404  ! work._tempid p2 where p.name=p2.lhs;
2389405    quit;
2389406    data _temp&id;
2389407    set _temp&id;
2389408    where LHS ne '' and NAME ne '' and Node ne '';
2389409    run;
2389410    proc datasets lib=work nolist;
2389411    delete _tempAll;
2389412    run;
2389413    %let dsid = %sysfunc(open(_temp&id));
2389414    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2389415    %let dsid = %sysfunc(close(&dsid));
2389416    %if ^&&nobs&id %then %do;
2389417    proc datasets lib=work nolist;
2389418    delete _temp&id;
2389419    run;
2389420    quit;
2389421    %end;
2389422    %else %do;
2389423    %let scoreFlag&id = 1;
2389424    data _temp&id;
2389425    set _temp&id;
2389426    where LHS ne NAME and node ne '';
2389427    run;
2389428    %let dsid = %sysfunc(open(_temp&id));
2389429    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2389430    %let dsid = %sysfunc(close(&dsid));
2389431    %if ^&&nobs&id %then %do;
2389432    proc datasets lib=work nolist;
2389433    delete _temp&id;
2389434    run;
2389435    quit;
2389436    %end;
2389437    %else %do;
2389438    proc sort data=_temp&id nodupkey;
2389439    by LHS NAME;
2389440    run;
2389441    %end;
2389442    %end;
2389443    %end;
2389444    %end;
2389445    %mend varDept;
2389446    %macro optCode(outdata=fcmpdata);
2389447    %global fcmpStart;
2389448    %let fcmpStart = 0;
2389449    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2389450    %let NumNodes=9;
2389451    %do k=1 %to &NumNodes;
2389452    %vardept(fcmpdata=&outdata, id=&k);
2389453    %end;
2389454    %mend optCode;
2389455    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2389456    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2389457    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2389458    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2389459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389460    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2389461    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2389462    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2389463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389464    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2389465    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2389465  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2389466    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2389467    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2389468    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2389469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2389470    filename _pref
2389470  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2389471    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2389472    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2389473   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2389474   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2389475   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2389476   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2389477   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2389478   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2389479   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2389480   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2389481   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2389482   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2389483   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2389484   +LENGTH _WARN_ $4
2389485   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2389486   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2389487   +
2389488   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2389489   +
2389490   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2389491   +
2389492   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2389493   +
2389494   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2389495   +
2389496   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2389497   +
2389498   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2389499   +
2389500   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2389501   +
2389502   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2389503   +
2389504   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2389505   +
2389506   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2389507   +
2389508   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2389509   +
2389510   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2389511   +
2389512   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2389513   +
2389514   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2389515   +
2389516   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2389517   +
2389518   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2389519   +
2389520   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2389521   +
2389522   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2389523   +
2389524   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2389525   +
2389526   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2389527   +
2389528   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2389529   +
2389530   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2389531   +
2389532   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2389533   +
2389534   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2389535   +
2389536   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2389537   +
2389538   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2389539   +
2389540   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2389541   +
2389542   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2389543   +
2389544   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2389545   +
2389546   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2389547   +
2389548   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2389549   +
2389550   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2389551   +
2389552   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2389553   +
2389554   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2389555   +
2389556   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2389557   +
2389558   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2389559   +
2389560   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2389561   +
2389562   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2389563   +
2389564   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2389565   +
2389566   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2389567   +
2389568   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2389569   +
2389570   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2389571   +
2389572   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2389573   +
2389574   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2389575   +
2389576   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2389577   +
2389578   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2389579   +
2389580   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2389581   +
2389582   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2389583   +
2389584   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2389585   +
2389586   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2389587   +
2389588   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2389589   +
2389590   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2389591   +
2389592   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2389593   +
2389594   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2389595   +
2389596   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2389597   +
2389598   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2389599   +
2389600   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2389601   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2389602   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2389603   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2389604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389606   +end;
MPRINT(EM_DIAGRAM):   end;
2389607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389609   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2389610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389612   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2389613   +   end;
MPRINT(EM_DIAGRAM):   end;
2389614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389615   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2389616   +   end;
MPRINT(EM_DIAGRAM):   end;
2389617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389618   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2389619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389621   +   end;
MPRINT(EM_DIAGRAM):   end;
2389622   +end;
MPRINT(EM_DIAGRAM):   end;
2389623   +
2389624   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2389625   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2389626   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2389627   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2389628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389630   +end;
MPRINT(EM_DIAGRAM):   end;
2389631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389633   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2389634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389636   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2389637   +   end;
MPRINT(EM_DIAGRAM):   end;
2389638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389639   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2389640   +   end;
MPRINT(EM_DIAGRAM):   end;
2389641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389642   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2389643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389645   +   end;
MPRINT(EM_DIAGRAM):   end;
2389646   +end;
MPRINT(EM_DIAGRAM):   end;
2389647   +
2389648   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2389649   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2389650   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2389651   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2389652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389654   +end;
MPRINT(EM_DIAGRAM):   end;
2389655   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389657   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2389658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389660   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2389661   +   end;
MPRINT(EM_DIAGRAM):   end;
2389662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389663   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2389664   +   end;
MPRINT(EM_DIAGRAM):   end;
2389665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389666   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2389667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389669   +   end;
MPRINT(EM_DIAGRAM):   end;
2389670   +end;
MPRINT(EM_DIAGRAM):   end;
2389671   +
2389672   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2389673   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2389674   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2389675   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2389676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389678   +end;
MPRINT(EM_DIAGRAM):   end;
2389679   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389681   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2389682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389684   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2389685   +   end;
MPRINT(EM_DIAGRAM):   end;
2389686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389687   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2389688   +   end;
MPRINT(EM_DIAGRAM):   end;
2389689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389690   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2389691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389693   +   end;
MPRINT(EM_DIAGRAM):   end;
2389694   +end;
MPRINT(EM_DIAGRAM):   end;
2389695   +
2389696   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2389697   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2389698   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2389699   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2389700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389702   +end;
MPRINT(EM_DIAGRAM):   end;
2389703   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389705   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2389706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389708   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2389709   +   end;
MPRINT(EM_DIAGRAM):   end;
2389710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389711   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2389712   +   end;
MPRINT(EM_DIAGRAM):   end;
2389713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389714   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2389715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389717   +   end;
MPRINT(EM_DIAGRAM):   end;
2389718   +end;
MPRINT(EM_DIAGRAM):   end;
2389719   +
2389720   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2389721   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2389722   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2389723   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2389724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389726   +end;
MPRINT(EM_DIAGRAM):   end;
2389727   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389729   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2389730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2389732   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2389733   +   end;
MPRINT(EM_DIAGRAM):   end;
2389734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2389735   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2389736   +   end;
MPRINT(EM_DIAGRAM):   end;
2389737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389738   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2389739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389741   +   end;
MPRINT(EM_DIAGRAM):   end;
2389742   +end;
MPRINT(EM_DIAGRAM):   end;
2389743   +
2389744   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2389745   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2389746   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2389747   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2389748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389750   +end;
MPRINT(EM_DIAGRAM):   end;
2389751   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2389753   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2389754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389755   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2389756   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2389757   +   end;
MPRINT(EM_DIAGRAM):   end;
2389758   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2389759   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2389760   +   end;
MPRINT(EM_DIAGRAM):   end;
2389761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389762   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2389763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389765   +   end;
MPRINT(EM_DIAGRAM):   end;
2389766   +end;
MPRINT(EM_DIAGRAM):   end;
2389767   +
2389768   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2389769   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2389770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2389771   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2389772   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2389773   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2389774   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2389775   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2389776   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2389777   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2389778   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2389779   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2389780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389782   +end;
MPRINT(EM_DIAGRAM):   end;
2389783   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389784   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2389785   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2389786   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389787   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2389788   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2389789   +   end;
MPRINT(EM_DIAGRAM):   end;
2389790   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2389791   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2389792   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2389793   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2389794   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2389795   +   end;
MPRINT(EM_DIAGRAM):   end;
2389796   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2389797   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2389798   +   end;
MPRINT(EM_DIAGRAM):   end;
2389799   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2389800   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2389801   +   end;
MPRINT(EM_DIAGRAM):   end;
2389802   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2389803   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2389804   +   end;
MPRINT(EM_DIAGRAM):   end;
2389805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389806   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2389807   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2389808   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2389809   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2389810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389812   +   end;
MPRINT(EM_DIAGRAM):   end;
2389813   +end;
MPRINT(EM_DIAGRAM):   end;
2389814   +
2389815   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2389816   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2389817   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2389818   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2389819   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2389820   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2389821   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2389822   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2389823   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2389824   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2389825   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2389826   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2389827   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2389828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2389829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389830   +end;
MPRINT(EM_DIAGRAM):   end;
2389831   +else do;
MPRINT(EM_DIAGRAM):   else do;
2389832   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2389833   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2389834   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2389835   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2389836   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2389837   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2389838   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2389839   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2389840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2389841   +         end;
MPRINT(EM_DIAGRAM):   end;
2389842   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2389843   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2389844   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2389845   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2389846   +            end;
MPRINT(EM_DIAGRAM):   end;
2389847   +         end;
MPRINT(EM_DIAGRAM):   end;
2389848   +      end;
MPRINT(EM_DIAGRAM):   end;
2389849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2389850   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2389851   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2389852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2389853   +         end;
MPRINT(EM_DIAGRAM):   end;
2389854   +      end;
MPRINT(EM_DIAGRAM):   end;
2389855   +   end;
MPRINT(EM_DIAGRAM):   end;
2389856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2389857   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2389858   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2389859   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2389860   +      end;
MPRINT(EM_DIAGRAM):   end;
2389861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2389862   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2389863   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2389864   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2389865   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2389866   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2389867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2389868   +         end;
MPRINT(EM_DIAGRAM):   end;
2389869   +      end;
MPRINT(EM_DIAGRAM):   end;
2389870   +   end;
MPRINT(EM_DIAGRAM):   end;
2389871   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2389872   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2389873   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2389874   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2389875   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2389876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2389877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389878   +   end;
MPRINT(EM_DIAGRAM):   end;
2389879   +end;
MPRINT(EM_DIAGRAM):   end;
2389880   +
2389881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389882   +*** Checking missing input Interval
2389883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2389884   +
2389885   +IF NMISS(
2389886   +   AcceptedCmpTotal ,
2389887   +   Age ,
2389888   +   Frq ,
2389889   +   Income ,
2389890   +   Kidhome ,
2389891   +   Mnt ,
2389892   +   MntFishProducts ,
2389893   +   MntFruits ,
2389894   +   MntGoldProds ,
2389895   +   MntMeatProducts ,
2389896   +   MntSweetProducts ,
2389897   +   MntWines ,
2389898   +   MonthsAsCustomer ,
2389899   +   NumCatalogPurchases ,
2389900   +   NumDealsPurchases ,
2389901   +   NumDistPurchases ,
2389902   +   NumStorePurchases ,
2389903   +   NumWebPurchases ,
2389904   +   NumWebVisitsMonth ,
2389905   +   RFMstat ,
2389906   +   RMntFrq ,
2389907   +   Recency ,
2389908   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2389909   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2389910   +
2389911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2389912   +END;
MPRINT(EM_DIAGRAM):   END;
2389913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389914   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2389915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2389916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2389917   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2389918   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2389919   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2389920   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2389921   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2389922   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2389923   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2389924   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2389925   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2389926   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2389927   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2389928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2389929   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2389930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2389931   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2389932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2389933   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2389934   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2389935   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2389936   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2389937   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2389938   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2389939   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2389940   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2389941   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2389942   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2389943   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2389944   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2389945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2389946   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2389947   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2389948   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2389949   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2389950   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2389951   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2389952   +END;
MPRINT(EM_DIAGRAM):   END;
2389953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2389954   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2389955   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2389956   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2389957   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2389958   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2389959   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2389960   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2389961   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2389962   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2389963   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2389964   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2389965   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2389966   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2389967   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2389968   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2389969   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2389970   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2389971   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2389972   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2389973   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2389974   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2389975   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2389976   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2389977   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2389978   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2389979   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2389980   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2389981   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2389982   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2389983   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2389984   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2389985   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2389986   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2389987   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2389988   +   ELSE S_NumCatalogPurchases
2389989   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2389990   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2389991   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2389992   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2389993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2389994   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2389995   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2389996   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2389997   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2389998   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2389999   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2390000   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2390001   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2390002   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2390003   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2390004   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2390005   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2390006   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2390007   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2390008   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2390009   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2390010   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2390011   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2390012   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2390013   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2390014   +END;
MPRINT(EM_DIAGRAM):   END;
2390015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390016   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2390017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390019   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2390020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390022   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2390023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2390025   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2390026   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2390027   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2390028   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2390029   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2390030   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2390031   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2390032   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2390033   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2390034   +          +      0.1112677116841 * S_NumDealsPurchases
2390035   +          +     0.01563584187072 * S_NumDistPurchases
2390036   +          +     0.19193969522995 * S_NumStorePurchases
2390037   +          +      0.3133556199984 * S_NumWebPurchases
2390038   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2390039   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2390040   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2390041   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2390042   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2390043   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2390044   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2390045   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2390046   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2390047   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2390048   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2390049   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2390050   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2390051   +          +     0.30225032753275 * S_NumDealsPurchases
2390052   +          +     0.33833359923595 * S_NumDistPurchases
2390053   +          +    -0.20255599575849 * S_NumStorePurchases
2390054   +          +    -0.12040071168942 * S_NumWebPurchases
2390055   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2390056   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2390057   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2390058   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2390059   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2390060   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2390061   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2390062   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2390063   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2390064   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2390065   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2390066   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2390067   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2390068   +          +     0.16792903091627 * S_NumDealsPurchases
2390069   +          +    -0.37408945626745 * S_NumDistPurchases
2390070   +          +    -0.18067262995566 * S_NumStorePurchases
2390071   +          +     0.21192146789881 * S_NumWebPurchases
2390072   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2390073   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2390074   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2390075   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2390076   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2390077   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2390078   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2390079   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2390080   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2390081   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2390082   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2390083   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2390084   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2390085   +          +     0.29407429399136 * S_NumDealsPurchases
2390086   +          +     0.01610745252195 * S_NumDistPurchases
2390087   +          +    -0.17767939085628 * S_NumStorePurchases
2390088   +          +    -0.15168958538637 * S_NumWebPurchases
2390089   +          +     0.17433622143988 * S_NumWebVisitsMonth
2390090   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2390091   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2390092   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2390093   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2390094   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2390095   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2390096   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2390097   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2390098   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2390099   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2390100   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2390101   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2390102   +          +    -0.37976451362108 * S_NumDealsPurchases
2390103   +          +    -0.17027731520801 * S_NumDistPurchases
2390104   +          +     0.59849493667087 * S_NumStorePurchases
2390105   +          +     0.65481480560301 * S_NumWebPurchases
2390106   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2390107   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2390108   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2390109   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2390110   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2390111   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2390112   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2390113   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2390114   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2390115   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2390116   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2390117   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2390118   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2390119   +          +    -0.07686699131623 * S_NumDealsPurchases
2390120   +          +    -0.07220460738926 * S_NumDistPurchases
2390121   +          +    -0.06554027468389 * S_NumStorePurchases
2390122   +          +     0.10422838158001 * S_NumWebPurchases
2390123   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2390124   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2390125   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2390126   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2390127   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2390128   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2390129   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2390130   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2390131   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2390132   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2390133   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2390134   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2390135   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2390136   +          +    -0.07920122387563 * S_NumDealsPurchases
2390137   +          +      0.3649244061347 * S_NumDistPurchases
2390138   +          +     0.36475853688403 * S_NumStorePurchases
2390139   +          +     0.02153991404063 * S_NumWebPurchases
2390140   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2390141   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2390142   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2390143   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2390144   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2390145   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2390146   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2390147   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2390148   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2390149   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2390150   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2390151   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2390152   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2390153   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2390154   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2390155   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2390156   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2390157   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2390158   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2390159   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2390160   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2390161   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2390162   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2390163   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2390164   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2390165   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2390166   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2390167   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2390168   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2390169   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2390170   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2390171   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2390172   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2390173   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2390174   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2390175   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2390176   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2390177   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2390178   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2390179   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2390180   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2390181   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2390182   +          +     0.07744097241553 * Marital_StatusDivorced
2390183   +          +     -0.0247463100385 * Marital_StatusMarried
2390184   +          +     0.05804915234573 * Marital_StatusSingle
2390185   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2390186   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2390187   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2390188   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2390189   +          +     0.01390668926269 * Marital_StatusDivorced
2390190   +          +     0.01136282152074 * Marital_StatusMarried
2390191   +          +     0.12450246418789 * Marital_StatusSingle
2390192   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2390193   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2390194   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2390195   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2390196   +          +    -0.19133456931879 * Marital_StatusDivorced
2390197   +          +     0.56263566654996 * Marital_StatusMarried
2390198   +          +    -0.42172822038882 * Marital_StatusSingle
2390199   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2390200   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2390201   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2390202   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2390203   +          +    -0.19871205065609 * Marital_StatusDivorced
2390204   +          +    -0.14730795681603 * Marital_StatusMarried
2390205   +          +     0.05055432510362 * Marital_StatusSingle
2390206   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2390207   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2390208   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2390209   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2390210   +          +    -0.35623807358995 * Marital_StatusDivorced
2390211   +          +     0.30324726283965 * Marital_StatusMarried
2390212   +          +    -0.18561093467927 * Marital_StatusSingle
2390213   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2390214   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2390215   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2390216   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2390217   +          +     0.11581014663368 * Marital_StatusDivorced
2390218   +          +    -0.31070638037659 * Marital_StatusMarried
2390219   +          +     0.17131747253949 * Marital_StatusSingle
2390220   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2390221   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2390222   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2390223   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2390224   +          +    -0.42450599871892 * Marital_StatusDivorced
2390225   +          +     0.48162905075885 * Marital_StatusMarried
2390226   +          +    -0.26618507749283 * Marital_StatusSingle
2390227   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2390228   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2390229   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2390230   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2390231   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2390232   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2390233   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2390234   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2390235   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2390236   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2390237   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2390238   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2390239   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2390240   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2390241   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2390242   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2390243   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2390244   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2390245   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2390246   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2390247   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2390248   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2390249   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2390250   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2390251   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2390252   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2390253   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2390254   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2390255   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2390256   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2390257   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2390258   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2390259   +END;
MPRINT(EM_DIAGRAM):   END;
2390260   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2390261   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2390262   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2390263   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2390264   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2390265   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2390266   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2390267   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2390268   +END;
MPRINT(EM_DIAGRAM):   END;
2390269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390270   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2390271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390272   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2390273   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2390274   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2390275   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2390276   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2390277   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2390278   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2390279   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2390280   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2390281   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2390282   +          +     1.96719021971894 * S_NumDealsPurchases
2390283   +          +    -0.44535354794671 * S_NumDistPurchases
2390284   +          +    -0.54827762736866 * S_NumStorePurchases
2390285   +          +     1.02703310241897 * S_NumWebPurchases
2390286   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2390287   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2390288   +        S_RMntFrq  +       0.651688575044 * S_Recency
2390289   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2390290   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2390291   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2390292   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2390293   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2390294   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2390295   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2390296   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2390297   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2390298   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2390299   +          +     1.34659447971131 * S_NumDealsPurchases
2390300   +          +    -0.51624251310423 * S_NumDistPurchases
2390301   +          +      -1.283121574848 * S_NumStorePurchases
2390302   +          +    -1.83517806228926 * S_NumWebPurchases
2390303   +          +     0.51321339475285 * S_NumWebVisitsMonth
2390304   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2390305   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2390306   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2390307   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2390308   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2390309   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2390310   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2390311   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2390312   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2390313   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2390314   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2390315   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2390316   +          +     0.67492297345004 * S_NumDealsPurchases
2390317   +          +    -0.40437875375926 * S_NumDistPurchases
2390318   +          +     0.36322603681545 * S_NumStorePurchases
2390319   +          +    -1.15315070635524 * S_NumWebPurchases
2390320   +          +     1.20707272201156 * S_NumWebVisitsMonth
2390321   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2390322   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2390323   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2390324   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2390325   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2390326   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2390327   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2390328   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2390329   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2390330   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2390331   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2390332   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2390333   +          +    -0.41427983342148 * S_NumDealsPurchases
2390334   +          +    -0.22714305629205 * S_NumDistPurchases
2390335   +          +    -0.78763182048862 * S_NumStorePurchases
2390336   +          +    -0.26669253451501 * S_NumWebPurchases
2390337   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2390338   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2390339   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2390340   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2390341   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2390342   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2390343   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2390344   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2390345   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2390346   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2390347   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2390348   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2390349   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2390350   +          +      0.7697882092212 * S_NumDealsPurchases
2390351   +          +     0.51864835453056 * S_NumDistPurchases
2390352   +          +    -1.18320366630444 * S_NumStorePurchases
2390353   +          +     -0.6608394639529 * S_NumWebPurchases
2390354   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2390355   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2390356   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2390357   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2390358   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2390359   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2390360   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2390361   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2390362   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2390363   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2390364   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2390365   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2390366   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2390367   +          +     1.45707983202269 * S_NumDealsPurchases
2390368   +          +     0.83341887728641 * S_NumDistPurchases
2390369   +          +    -0.36664450469423 * S_NumStorePurchases
2390370   +          +     0.63911579043339 * S_NumWebPurchases
2390371   +          +     0.67144790303554 * S_NumWebVisitsMonth
2390372   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2390373   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2390374   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2390375   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2390376   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2390377   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2390378   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2390379   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2390380   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2390381   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2390382   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2390383   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2390384   +          +     0.68491896063662 * S_NumDealsPurchases
2390385   +          +      0.5386312048592 * S_NumDistPurchases
2390386   +          +     1.28108942503912 * S_NumStorePurchases
2390387   +          +    -0.88282270505969 * S_NumWebPurchases
2390388   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2390389   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2390390   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2390391   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2390392   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2390393   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2390394   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2390395   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2390396   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2390397   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2390398   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2390399   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2390400   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2390401   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2390402   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2390403   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2390404   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2390405   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2390406   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2390407   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2390408   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2390409   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2390410   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2390411   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2390412   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2390413   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2390414   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2390415   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2390416   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2390417   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2390418   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2390419   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2390420   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2390421   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2390422   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2390423   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2390424   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2390425   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2390426   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2390427   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2390428   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2390429   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2390430   +          +    -3.97961426831865 * Marital_StatusDivorced
2390431   +          +     0.00932639813867 * Marital_StatusMarried
2390432   +          +     1.29310186574718 * Marital_StatusSingle
2390433   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2390434   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2390435   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2390436   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2390437   +          +    -0.30358516578188 * Marital_StatusDivorced
2390438   +          +    -0.96176709360703 * Marital_StatusMarried
2390439   +          +     1.26977690921649 * Marital_StatusSingle
2390440   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2390441   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2390442   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2390443   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2390444   +          +     0.55272671490757 * Marital_StatusDivorced
2390445   +          +      0.1499239288334 * Marital_StatusMarried
2390446   +          +    -0.46840941760604 * Marital_StatusSingle
2390447   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2390448   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2390449   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2390450   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2390451   +          +      -1.240735370138 * Marital_StatusDivorced
2390452   +          +    -1.20089294883599 * Marital_StatusMarried
2390453   +          +     0.57492674426149 * Marital_StatusSingle
2390454   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2390455   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2390456   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2390457   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2390458   +          +     1.05435442049802 * Marital_StatusDivorced
2390459   +          +      0.3571256349717 * Marital_StatusMarried
2390460   +          +    -0.44741267266578 * Marital_StatusSingle
2390461   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2390462   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2390463   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2390464   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2390465   +          +     2.06026721980778 * Marital_StatusDivorced
2390466   +          +    -0.49583258645166 * Marital_StatusMarried
2390467   +          +    -1.14824900824474 * Marital_StatusSingle
2390468   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2390469   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2390470   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2390471   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2390472   +          +     -1.1890908607447 * Marital_StatusDivorced
2390473   +          +    -0.46668809907123 * Marital_StatusMarried
2390474   +          +     1.20342564763422 * Marital_StatusSingle
2390475   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2390476   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2390477   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2390478   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2390479   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2390480   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2390481   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2390482   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2390483   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2390484   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2390485   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2390486   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2390487   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2390488   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2390489   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2390490   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2390491   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2390492   +END;
MPRINT(EM_DIAGRAM):   END;
2390493   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2390494   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2390495   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2390496   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2390497   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2390498   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2390499   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2390500   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2390501   +END;
MPRINT(EM_DIAGRAM):   END;
2390502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390503   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2390504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390505   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2390506   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2390507   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2390508   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2390509   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2390510   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2390511   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2390512   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2390513   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2390514   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2390515   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2390516   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2390517   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2390518   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2390519   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2390520   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2390521   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2390522   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2390523   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2390524   +END;
MPRINT(EM_DIAGRAM):   END;
2390525   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2390526   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2390527   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2390528   +END;
MPRINT(EM_DIAGRAM):   END;
2390529   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2390530   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2390531   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2390532   +END;
MPRINT(EM_DIAGRAM):   END;
2390533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390534   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2390535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2390536   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2390537   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2390538   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2390539   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2390540   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2390541   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2390542   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2390543   +END;
MPRINT(EM_DIAGRAM):   END;
2390544   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2390545   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2390546   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2390547   +drop
2390548   +H1x1_1
2390549   +H1x1_2
2390550   +H1x1_3
2390551   +H1x1_4
2390552   +H1x1_5
2390553   +H1x1_6
2390554   +H1x1_7
2390555   +H1x2_1
2390556   +H1x2_2
2390557   +H1x2_3
2390558   +H1x2_4
2390559   +H1x2_5
2390560   +H1x2_6
2390561   +H1x2_7
2390562   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2390563   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2390564    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2390565    quit;
2390566    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2390567    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2390568    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2390569    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2390570    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2390571    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390572    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2390573    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390574    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390575    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2390576    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390578    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390579    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2390580    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2390581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390582    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2390583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2390584    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2390585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390587    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390588    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2390589    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390590    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390591    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2390592    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2390592  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.

2390593    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390594    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2390595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390596    filename _pref
2390596  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2390597    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2390598    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2390599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2390600   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2390601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2390602   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2390603   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2390604   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2390605    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2390606    quit;
2390607    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2390608    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2390609    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2390610    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2390611    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2390612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390613    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2390614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390616    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2390617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390619    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390620    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2390621    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2390622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390623    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2390624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2390625    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2390626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390629    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2390630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390631    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390632    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2390633    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2390633  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2390634    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390635    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2390636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390637    filename _pref
2390637  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2390638    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2390639    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2390640   +
2390641   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2390642   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2390642  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2390643   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2390644   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2390645   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2390646   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2390647   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2390648    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2390649    quit;
2390650    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2390651    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2390652    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2390653    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2390654    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2390655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390656    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2390657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390659    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2390660    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390662    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390663    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2390664    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2390665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390666    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2390667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390668    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2390669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390671    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390672    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2390673    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390674    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390675    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2390676    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2390676  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2390677    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390678    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2390679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390680    filename _pref
2390680  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2390681    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2390682    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2390683   +
2390684   +
2390685   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2390686   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2390687   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2390688   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2390689   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2390690   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390691   +
2390692   +
2390693   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2390694   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2390695   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2390696   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2390697   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2390698   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390699   +
2390700   +
2390701   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2390702   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2390703   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2390704   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2390705   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2390706   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390707   +
2390708   +
2390709   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2390710   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2390711   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2390712   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2390713   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2390714   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390715   +
2390716   +
2390717   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2390718   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2390719   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2390720   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2390721   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2390722   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390723   +
2390724   +
2390725   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2390726   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2390727   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2390728   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2390729   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2390730   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390731   +
2390732   +
2390733   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2390734   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2390735   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2390736   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2390737   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2390738   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390739   +
2390740   +
2390741   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2390742   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2390743   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2390744   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2390745   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2390746   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2390747   +if
2390748   +_FILTERNORM1 not in ( '.')
2390749   + and
2390750   +_FILTERNORM2 not in ( '.')
2390751   + and
2390752   +_FILTERNORM3 not in ( '.')
2390753   + and
2390754   +_FILTERNORM4 not in ( '.')
2390755   + and
2390756   +_FILTERNORM5 not in ( '.')
2390757   + and
2390758   +_FILTERNORM6 not in ( '.')
2390759   + and
2390760   +_FILTERNORM7 not in ( ' ')
2390761   + and
2390762   +_FILTERNORM8 not in ( ' ')
2390763   +and
2390764   +( Dt_Customer ne .)
2390765   +and ( Income ne . and (Income<=107000))
2390766   +and ( Kidhome ne .)
2390767   +and ( MntFishProducts ne .)
2390768   +and ( MntFruits ne .)
2390769   +and ( MntGoldProds ne .)
2390770   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2390771   +and ( MntSweetProducts ne .)
2390772   +and ( MntWines ne .)
2390773   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2390774   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2390775   +and ( NumStorePurchases ne .)
2390776   +and ( NumWebPurchases ne .)
2390777   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2390778   +and ( Recency ne .)
2390779   +and ( Teenhome ne .)
2390780   +and ( Year_Birth ne .)
2390781   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2390782   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2390783   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2390784   +end;
MPRINT(EM_DIAGRAM):   end;
2390785   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2390786   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2390787    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2390788    quit;
2390789    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2390790    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2390791    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2390792    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2390793    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2390794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390795    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2390796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390798    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2390799    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390800    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390801    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390802    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2390803    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2390804    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390805    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2390806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2390807    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2390808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390810    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2390811    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2390812    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2390813    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390814    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2390815    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2390815  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2390816    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390817    proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl43_FCMP data=_tempx;
2390818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL43_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL43_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2390819    %macro varDept(fcmpdata=,id=);
2390820    %global nobs&id scoreFlag&id;
2390821    %let scoreFlag&id = 0;
2390822    %if &id=1 or ^&fcmpStart %then %do;
2390823    proc sort data=&fcmpdata out=_temp&id nodupkey;
2390824    by NAME;
2390825    where id=&id and LHS in( %let j=1;
2390826    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2390827    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2390828    "&var" %let j = %eval(&j+1);
2390829    %end;
2390830    );
2390831    run;
2390832    %let dsid = %sysfunc(open(_temp&id));
2390833    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2390834    %let dsid = %sysfunc(close(&dsid));
2390835    %if &&nobs&id %then %do;
2390836    %let scoreFlag&id = 1;
2390837    %let fcmpStart = 1;
2390838    %end;
2390839    %else %let fcmpStart = 0;
2390840    %end;
2390841    %else %do;
2390842    proc sort data=&fcmpdata out=_tempid;
2390843    where id=&id;
2390844    by LHS;
2390845    run;
2390846    %let dsid = %sysfunc(open(_tempid));
2390847    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2390848    %let dsid = %sysfunc(close(&dsid));
2390849    %if ^&&nobs&id %then %do;
2390850    proc datasets lib=work nolist;
2390851    delete _tempid;
2390852    run;
2390853    quit;
2390854    %end;
2390855    %else %do;
2390856    data _tempAll;
2390857    set %let j=%eval(&id-1);
2390858    %do x=1 %to &j;
2390859    %if &&nobs&x %then %do;
2390860    _temp&x %end;
2390861    %end;
2390862    ;
2390863    run;
2390864    proc sql;
2390865    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2390865  ! work._tempid p2 where p.name=p2.lhs;
2390866    quit;
2390867    data _temp&id;
2390868    set _temp&id;
2390869    where LHS ne '' and NAME ne '' and Node ne '';
2390870    run;
2390871    proc datasets lib=work nolist;
2390872    delete _tempAll;
2390873    run;
2390874    %let dsid = %sysfunc(open(_temp&id));
2390875    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2390876    %let dsid = %sysfunc(close(&dsid));
2390877    %if ^&&nobs&id %then %do;
2390878    proc datasets lib=work nolist;
2390879    delete _temp&id;
2390880    run;
2390881    quit;
2390882    %end;
2390883    %else %do;
2390884    %let scoreFlag&id = 1;
2390885    data _temp&id;
2390886    set _temp&id;
2390887    where LHS ne NAME and node ne '';
2390888    run;
2390889    %let dsid = %sysfunc(open(_temp&id));
2390890    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2390891    %let dsid = %sysfunc(close(&dsid));
2390892    %if ^&&nobs&id %then %do;
2390893    proc datasets lib=work nolist;
2390894    delete _temp&id;
2390895    run;
2390896    quit;
2390897    %end;
2390898    %else %do;
2390899    proc sort data=_temp&id nodupkey;
2390900    by LHS NAME;
2390901    run;
2390902    %end;
2390903    %end;
2390904    %end;
2390905    %end;
2390906    %mend varDept;
2390907    %macro optCode(outdata=fcmpdata);
2390908    %global fcmpStart;
2390909    %let fcmpStart = 0;
2390910    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2390911    %let NumNodes=9;
2390912    %do k=1 %to &NumNodes;
2390913    %vardept(fcmpdata=&outdata, id=&k);
2390914    %end;
2390915    %mend optCode;
2390916    %optcode(outData=EMWS8.Ensmbl43_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl43_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2390917    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2390918    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2390919    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2390920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390921    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2390922    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2390923    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2390924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390925    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2390926    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2390926  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2390927    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390928    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2390929    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2390930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2390931    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2390932    * Ensmbl43: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Computing metadata for TRAIN data;
2390933    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl43\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl43_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl43_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl43_TRAIN out=WORK.M05_BEHQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05_BEHQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M05_BEHQ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05_BEHQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M05_BEHQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1JGIW6E NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2AP_9H7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JGIW6E;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl43";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl43";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl43: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl43";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2391253    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2391254    set EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO;
2391255    where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2391256    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL43_EMINFO.
      WHERE (DATA='Ensmbl43') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391257    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl43_EMINFO;
2391258    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2391259    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2391260    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2391264    run;
2391265    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
2391266    set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl43_EMINFO WORK.MODELTEMP_INFO;
2391267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391268    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl43_EMINFO NOTHREADS;
2391269    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2391270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391271    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2391272    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2391273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391274    proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2391275    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2391276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL43_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391277    data EMWS8.Ensmbl43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl43_EMINFO;
2391278    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2391279    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2391280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL43_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2391281    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2391282    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2391283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2391284    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL43_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL43_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
