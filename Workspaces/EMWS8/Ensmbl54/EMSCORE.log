MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1VRXMY1 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1VRXMY1 new;
MPRINT(EM_DIAGRAM):   run;
121110     filename emflow
121110   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring AUTONEURAL36_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121111     *------------------------------------------------------------*;
121112     * Ensmbl54: Scoring AUTONEURAL36_TRAIN data;
121113     *------------------------------------------------------------*;
121114     data EMWS8.Ensmbl54_TRAIN
121115     / view=EMWS8.Ensmbl54_TRAIN
121116     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_TRAIN / view=EMWS8.Ensmbl54_TRAIN ;
121117     set EMWS8.AutoNeural36_TRAIN
121118     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_TRAIN ;
121119     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas.
121120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121121    +* Ensmbl54: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Combine model for DepVar;
121122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121123    +* Ensmbl54: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 1 of 7;
121124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121125    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121126    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
121127    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
121128    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
121129    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121131    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
121132    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
121133    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
121134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121136    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
121137    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
121138    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
121139    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121140    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121141    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
121142    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
121143    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
121144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121145    +
121146    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
121147    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
121147   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
121148    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
121149    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
121150    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
121151    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
121152    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
121153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121154    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
121155    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
121156    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
121157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121159    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
121160    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121161    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
121162    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
121163    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
121164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121165    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
121166    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
121167    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
121168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121170    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
121171    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
121172    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
121173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121175    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
121176    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
121177    +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
121178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121179    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
121180    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
121181    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
121182    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
121183    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
121184    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
121185    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
121186    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
121187    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
121188    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
121189    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
121190    +LENGTH _WARN_ $4
121191    +      F_DepVar  $ 12
121192    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
121193    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
121194    +
121195    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
121196    +
121197    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
121198    +
121199    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
121200    +
121201    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
121202    +
121203    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
121204    +
121205    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
121206    +
121207    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
121208    +
121209    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
121210    +
121211    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
121212    +
121213    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
121214    +
121215    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
121216    +
121217    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
121218    +
121219    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
121220    +
121221    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
121222    +
121223    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
121224    +
121225    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
121226    +
121227    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
121228    +
121229    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
121230    +
121231    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
121232    +
121233    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
121234    +
121235    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
121236    +
121237    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
121238    +
121239    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
121240    +
121241    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
121242    +
121243    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
121244    +
121245    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
121246    +
121247    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
121248    +
121249    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
121250    +
121251    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
121252    +
121253    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
121254    +
121255    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
121256    +
121257    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
121258    +
121259    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
121260    +
121261    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
121262    +
121263    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
121264    +
121265    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
121266    +
121267    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
121268    +
121269    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
121270    +
121271    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
121272    +
121273    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
121274    +
121275    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
121276    +
121277    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
121278    +
121279    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
121280    +
121281    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
121282    +
121283    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
121284    +
121285    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
121286    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
121287    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
121288    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
121289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121291    +end;
MPRINT(EM_DIAGRAM):   end;
121292    +else do;
MPRINT(EM_DIAGRAM):   else do;
121293    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121294    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
121295    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121296    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121297    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
121298    +   end;
MPRINT(EM_DIAGRAM):   end;
121299    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121300    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
121301    +   end;
MPRINT(EM_DIAGRAM):   end;
121302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121303    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
121304    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121305    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121306    +   end;
MPRINT(EM_DIAGRAM):   end;
121307    +end;
MPRINT(EM_DIAGRAM):   end;
121308    +
121309    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
121310    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
121311    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
121312    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
121313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121315    +end;
MPRINT(EM_DIAGRAM):   end;
121316    +else do;
MPRINT(EM_DIAGRAM):   else do;
121317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121318    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
121319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121320    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121321    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
121322    +   end;
MPRINT(EM_DIAGRAM):   end;
121323    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121324    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
121325    +   end;
MPRINT(EM_DIAGRAM):   end;
121326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121327    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
121328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121330    +   end;
MPRINT(EM_DIAGRAM):   end;
121331    +end;
MPRINT(EM_DIAGRAM):   end;
121332    +
121333    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
121334    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
121335    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
121336    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
121337    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121338    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121339    +end;
MPRINT(EM_DIAGRAM):   end;
121340    +else do;
MPRINT(EM_DIAGRAM):   else do;
121341    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121342    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
121343    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121344    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121345    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
121346    +   end;
MPRINT(EM_DIAGRAM):   end;
121347    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121348    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
121349    +   end;
MPRINT(EM_DIAGRAM):   end;
121350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121351    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
121352    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121353    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121354    +   end;
MPRINT(EM_DIAGRAM):   end;
121355    +end;
MPRINT(EM_DIAGRAM):   end;
121356    +
121357    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
121358    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
121359    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
121360    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
121361    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121363    +end;
MPRINT(EM_DIAGRAM):   end;
121364    +else do;
MPRINT(EM_DIAGRAM):   else do;
121365    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121366    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
121367    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121368    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121369    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
121370    +   end;
MPRINT(EM_DIAGRAM):   end;
121371    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121372    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
121373    +   end;
MPRINT(EM_DIAGRAM):   end;
121374    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121375    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
121376    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121377    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121378    +   end;
MPRINT(EM_DIAGRAM):   end;
121379    +end;
MPRINT(EM_DIAGRAM):   end;
121380    +
121381    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
121382    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
121383    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
121384    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
121385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121387    +end;
MPRINT(EM_DIAGRAM):   end;
121388    +else do;
MPRINT(EM_DIAGRAM):   else do;
121389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121390    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
121391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121392    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121393    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
121394    +   end;
MPRINT(EM_DIAGRAM):   end;
121395    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121396    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
121397    +   end;
MPRINT(EM_DIAGRAM):   end;
121398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121399    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
121400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121402    +   end;
MPRINT(EM_DIAGRAM):   end;
121403    +end;
MPRINT(EM_DIAGRAM):   end;
121404    +
121405    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
121406    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
121407    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
121408    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
121409    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121411    +end;
MPRINT(EM_DIAGRAM):   end;
121412    +else do;
MPRINT(EM_DIAGRAM):   else do;
121413    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121414    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
121415    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121416    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
121417    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
121418    +   end;
MPRINT(EM_DIAGRAM):   end;
121419    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
121420    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
121421    +   end;
MPRINT(EM_DIAGRAM):   end;
121422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121423    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
121424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121426    +   end;
MPRINT(EM_DIAGRAM):   end;
121427    +end;
MPRINT(EM_DIAGRAM):   end;
121428    +
121429    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
121430    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
121431    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
121432    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
121433    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121434    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121435    +end;
MPRINT(EM_DIAGRAM):   end;
121436    +else do;
MPRINT(EM_DIAGRAM):   else do;
121437    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
121438    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
121439    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121440    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
121441    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
121442    +   end;
MPRINT(EM_DIAGRAM):   end;
121443    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
121444    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
121445    +   end;
MPRINT(EM_DIAGRAM):   end;
121446    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121447    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
121448    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121449    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121450    +   end;
MPRINT(EM_DIAGRAM):   end;
121451    +end;
MPRINT(EM_DIAGRAM):   end;
121452    +
121453    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
121454    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
121455    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
121456    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
121457    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
121458    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
121459    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
121460    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
121461    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
121462    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
121463    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
121464    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
121465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121467    +end;
MPRINT(EM_DIAGRAM):   end;
121468    +else do;
MPRINT(EM_DIAGRAM):   else do;
121469    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
121470    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
121471    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121472    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
121473    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
121474    +   end;
MPRINT(EM_DIAGRAM):   end;
121475    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
121476    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
121477    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
121478    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
121479    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
121480    +   end;
MPRINT(EM_DIAGRAM):   end;
121481    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
121482    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
121483    +   end;
MPRINT(EM_DIAGRAM):   end;
121484    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
121485    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
121486    +   end;
MPRINT(EM_DIAGRAM):   end;
121487    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
121488    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
121489    +   end;
MPRINT(EM_DIAGRAM):   end;
121490    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121491    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
121492    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
121493    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
121494    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
121495    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121496    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121497    +   end;
MPRINT(EM_DIAGRAM):   end;
121498    +end;
MPRINT(EM_DIAGRAM):   end;
121499    +
121500    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
121501    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
121502    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
121503    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
121504    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
121505    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
121506    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
121507    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
121508    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
121509    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
121510    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
121511    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
121512    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
121513    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
121514    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121515    +end;
MPRINT(EM_DIAGRAM):   end;
121516    +else do;
MPRINT(EM_DIAGRAM):   else do;
121517    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
121518    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
121519    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121520    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
121521    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
121522    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
121523    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
121524    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
121525    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
121526    +         end;
MPRINT(EM_DIAGRAM):   end;
121527    +         else do;
MPRINT(EM_DIAGRAM):   else do;
121528    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
121529    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
121530    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
121531    +            end;
MPRINT(EM_DIAGRAM):   end;
121532    +         end;
MPRINT(EM_DIAGRAM):   end;
121533    +      end;
MPRINT(EM_DIAGRAM):   end;
121534    +      else do;
MPRINT(EM_DIAGRAM):   else do;
121535    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
121536    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
121537    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
121538    +         end;
MPRINT(EM_DIAGRAM):   end;
121539    +      end;
MPRINT(EM_DIAGRAM):   end;
121540    +   end;
MPRINT(EM_DIAGRAM):   end;
121541    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121542    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
121543    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
121544    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
121545    +      end;
MPRINT(EM_DIAGRAM):   end;
121546    +      else do;
MPRINT(EM_DIAGRAM):   else do;
121547    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
121548    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
121549    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
121550    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
121551    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
121552    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
121553    +         end;
MPRINT(EM_DIAGRAM):   end;
121554    +      end;
MPRINT(EM_DIAGRAM):   end;
121555    +   end;
MPRINT(EM_DIAGRAM):   end;
121556    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
121557    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
121558    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
121559    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
121560    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
121561    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
121562    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121563    +   end;
MPRINT(EM_DIAGRAM):   end;
121564    +end;
MPRINT(EM_DIAGRAM):   end;
121565    +
121566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121567    +*** Checking missing input Interval
121568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
121569    +
121570    +IF NMISS(
121571    +   AcceptedCmpTotal ,
121572    +   Age ,
121573    +   Frq ,
121574    +   Income ,
121575    +   Kidhome ,
121576    +   MntFishProducts ,
121577    +   MntFruits ,
121578    +   MntGoldProds ,
121579    +   MntSweetProducts ,
121580    +   MonthsAsCustomer ,
121581    +   NumDealsPurchases ,
121582    +   NumWebVisitsMonth ,
121583    +   RFMstat ,
121584    +   RMntFrq ,
121585    +   Recency ,
121586    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
121587    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
121588    +
121589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
121590    +END;
MPRINT(EM_DIAGRAM):   END;
121591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121592    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
121593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121594    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
121595    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
121596    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
121597    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
121598    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
121599    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
121600    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
121601    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
121602    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
121603    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
121604    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
121605    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
121606    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
121607    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
121608    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
121609    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
121610    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
121611    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
121612    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
121613    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
121614    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
121615    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
121616    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
121617    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
121618    +END;
MPRINT(EM_DIAGRAM):   END;
121619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
121620    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
121621    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
121622    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
121623    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
121624    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
121625    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
121626    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
121627    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
121628    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
121629    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
121630    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
121631    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
121632    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
121633    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
121634    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
121635    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
121636    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
121637    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
121638    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
121639    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
121640    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
121641    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
121642    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
121643    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
121644    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
121645    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
121646    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
121647    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
121648    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
121649    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
121650    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
121651    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
121652    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
121653    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
121654    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
121655    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
121656    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
121657    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
121658    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
121659    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
121660    +END;
MPRINT(EM_DIAGRAM):   END;
121661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121662    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
121663    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121665    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
121666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121668    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
121669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121670    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
121671    +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
121672    +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
121673    +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
121674    +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
121675    +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
121676    +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
121677    +          +     1.47210732135355 * S_MonthsAsCustomer
121678    +          +     0.85741098948561 * S_NumDealsPurchases
121679    +          +     0.47124997442086 * S_NumWebVisitsMonth
121680    +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
121681    +        S_RMntFrq  +     0.42017826752434 * S_Recency
121682    +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
121683    +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
121684    +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
121685    +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
121686    +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
121687    +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
121688    +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
121689    +          +     0.74811152666015 * S_MonthsAsCustomer
121690    +          +    -0.13168708818154 * S_NumDealsPurchases
121691    +          +    -0.51935779196522 * S_NumWebVisitsMonth
121692    +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
121693    +        S_RMntFrq  +     1.96758846931972 * S_Recency
121694    +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
121695    +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
121696    +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
121697    +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
121698    +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
121699    +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
121700    +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
121701    +          +     0.11776941975292 * S_MonthsAsCustomer
121702    +          +    -0.69977862189457 * S_NumDealsPurchases
121703    +          +    -0.26676589341422 * S_NumWebVisitsMonth
121704    +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
121705    +        S_RMntFrq  +     1.53487074713045 * S_Recency
121706    +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
121707    +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
121708    +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
121709    +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
121710    +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
121711    +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
121712    +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
121713    +          +     0.46606320110885 * S_MonthsAsCustomer
121714    +          +     1.64885970718717 * S_NumDealsPurchases
121715    +          +     1.70233049691156 * S_NumWebVisitsMonth
121716    +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
121717    +        S_RMntFrq  +    -1.33025042025966 * S_Recency
121718    +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
121719    +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
121720    +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
121721    +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
121722    +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
121723    +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
121724    +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
121725    +          +     0.25703511103123 * S_MonthsAsCustomer
121726    +          +     0.81449309285524 * S_NumDealsPurchases
121727    +          +     0.65863550896078 * S_NumWebVisitsMonth
121728    +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
121729    +        S_RMntFrq  +     0.35298837231553 * S_Recency
121730    +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
121731    +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
121732    +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
121733    +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
121734    +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
121735    +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
121736    +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
121737    +          +     0.79681190434731 * S_MonthsAsCustomer
121738    +          +    -0.93973916927987 * S_NumDealsPurchases
121739    +          +     1.37415777280471 * S_NumWebVisitsMonth
121740    +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
121741    +        S_RMntFrq  +     0.25579910148098 * S_Recency
121742    +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
121743    +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
121744    +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
121745    +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
121746    +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
121747    +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
121748    +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
121749    +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
121750    +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
121751    +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
121752    +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
121753    +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
121754    +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
121755    +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
121756    +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
121757    +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
121758    +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
121759    +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
121760    +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
121761    +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
121762    +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
121763    +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
121764    +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
121765    +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
121766    +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
121767    +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
121768    +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
121769    +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
121770    +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
121771    +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
121772    +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
121773    +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
121774    +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
121775    +        EducationGraduation  +     0.53978142914157 * EducationMaster
121776    +          +    -0.28915302940579 * Marital_StatusDivorced
121777    +          +     0.36400858753372 * Marital_StatusMarried
121778    +          +     0.64088916620982 * Marital_StatusSingle
121779    +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
121780    +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
121781    +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
121782    +        EducationGraduation  +     0.31774696403611 * EducationMaster
121783    +          +    -0.48311224079569 * Marital_StatusDivorced
121784    +          +     0.78522892664414 * Marital_StatusMarried
121785    +          +    -0.52144588286939 * Marital_StatusSingle
121786    +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
121787    +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
121788    +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
121789    +        EducationGraduation  +     1.62119993408702 * EducationMaster
121790    +          +    -1.10138941531054 * Marital_StatusDivorced
121791    +          +     1.91098461544032 * Marital_StatusMarried
121792    +          +    -1.96662881570281 * Marital_StatusSingle
121793    +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
121794    +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
121795    +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
121796    +        EducationGraduation  +    -0.47265183904634 * EducationMaster
121797    +          +    -0.26938567401241 * Marital_StatusDivorced
121798    +          +      0.5252138734125 * Marital_StatusMarried
121799    +          +    -0.77744801183604 * Marital_StatusSingle
121800    +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
121801    +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
121802    +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
121803    +        EducationGraduation  +     1.34706628408556 * EducationMaster
121804    +          +    -0.49116995167497 * Marital_StatusDivorced
121805    +          +     1.22243596432371 * Marital_StatusMarried
121806    +          +    -1.22268267917833 * Marital_StatusSingle
121807    +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
121808    +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
121809    +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
121810    +        EducationGraduation  +     0.19530936178176 * EducationMaster
121811    +          +    -0.21134253419933 * Marital_StatusDivorced
121812    +          +     0.87168965818013 * Marital_StatusMarried
121813    +          +     0.07539748751767 * Marital_StatusSingle
121814    +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
121815    +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
121816    +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
121817    +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
121818    +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
121819    +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
121820    +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
121821    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
121822    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
121823    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
121824    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
121825    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
121826    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
121827    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
121828    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
121829    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
121830    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
121831    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
121832    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
121833    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
121834    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
121835    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
121836    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
121837    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
121838    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
121839    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
121840    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
121841    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
121842    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
121843    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
121844    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
121845    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
121846    +END;
MPRINT(EM_DIAGRAM):   END;
121847    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
121848    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
121849    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
121850    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
121851    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
121852    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
121853    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
121854    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
121855    +END;
MPRINT(EM_DIAGRAM):   END;
121856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121857    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
121858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121859    +
121860    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
121861    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
121862    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
121863    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
121864    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
121865    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
121866    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
121867    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
121868    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
121869    +end;
MPRINT(EM_DIAGRAM):   end;
121870    +else do;
MPRINT(EM_DIAGRAM):   else do;
121871    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
121872    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
121873    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
121874    +   end;
MPRINT(EM_DIAGRAM):   end;
121875    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
121876    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
121877    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
121878    +   end;
MPRINT(EM_DIAGRAM):   end;
121879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
121880    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
121881    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
121882    +   end;
MPRINT(EM_DIAGRAM):   end;
121883    +end;
MPRINT(EM_DIAGRAM):   end;
121884    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
121885    +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
121886    +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
121887    +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
121888    +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
121889    +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
121890    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
121891    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
121892    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
121893    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
121894    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
121895    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
121896    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
121897    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
121898    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
121899    +END;
MPRINT(EM_DIAGRAM):   END;
121900    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
121901    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
121902    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
121903    +END;
MPRINT(EM_DIAGRAM):   END;
121904    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
121905    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
121906    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
121907    +END;
MPRINT(EM_DIAGRAM):   END;
121908    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
121909    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
121910    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
121911    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
121912    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
121913    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
121914    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
121915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121916    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
121917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
121918    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
121919    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
121920    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
121921    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
121922    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
121923    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
121924    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
121925    +END;
MPRINT(EM_DIAGRAM):   END;
121926    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
121927    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
121928    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
121929    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
121930    +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
121931    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121932    +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
121933    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121934    +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
121935    +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
121936    +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
121937    +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
121938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121939    +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
121940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121941    +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
121942    +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
121943    +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
121944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121945    +* Ensmbl54: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 2 of 7;
121946    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121948    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
121949    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
121950    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
121951    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
121952    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
121953    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
121954    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
121955    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
121956    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
121957    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
121958    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
121959    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
121960    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
121961    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
121962    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
121963    +LENGTH _WARN_ $4
121964    +      F_DepVar  $ 12
121965    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
121966    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
121967    +
121968    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
121969    +
121970    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
121971    +
121972    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
121973    +
121974    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
121975    +
121976    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
121977    +
121978    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
121979    +
121980    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
121981    +
121982    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
121983    +
121984    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
121985    +
121986    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
121987    +
121988    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
121989    +
121990    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
121991    +
121992    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
121993    +
121994    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
121995    +
121996    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
121997    +
121998    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
121999    +
122000    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
122001    +
122002    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
122003    +
122004    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
122005    +
122006    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
122007    +
122008    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
122009    +
122010    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
122011    +
122012    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
122013    +
122014    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
122015    +
122016    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
122017    +
122018    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
122019    +
122020    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
122021    +
122022    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
122023    +
122024    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
122025    +
122026    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
122027    +
122028    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
122029    +
122030    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
122031    +
122032    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
122033    +
122034    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
122035    +
122036    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
122037    +
122038    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
122039    +
122040    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
122041    +
122042    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
122043    +
122044    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
122045    +
122046    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
122047    +
122048    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
122049    +
122050    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
122051    +
122052    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
122053    +
122054    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
122055    +
122056    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
122057    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
122058    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
122059    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
122060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122062    +end;
MPRINT(EM_DIAGRAM):   end;
122063    +else do;
MPRINT(EM_DIAGRAM):   else do;
122064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122065    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
122066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122067    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122068    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
122069    +   end;
MPRINT(EM_DIAGRAM):   end;
122070    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122071    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
122072    +   end;
MPRINT(EM_DIAGRAM):   end;
122073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122074    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
122075    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122076    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122077    +   end;
MPRINT(EM_DIAGRAM):   end;
122078    +end;
MPRINT(EM_DIAGRAM):   end;
122079    +
122080    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
122081    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
122082    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
122083    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
122084    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122085    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122086    +end;
MPRINT(EM_DIAGRAM):   end;
122087    +else do;
MPRINT(EM_DIAGRAM):   else do;
122088    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122089    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
122090    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122091    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122092    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
122093    +   end;
MPRINT(EM_DIAGRAM):   end;
122094    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122095    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
122096    +   end;
MPRINT(EM_DIAGRAM):   end;
122097    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122098    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
122099    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122100    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122101    +   end;
MPRINT(EM_DIAGRAM):   end;
122102    +end;
MPRINT(EM_DIAGRAM):   end;
122103    +
122104    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
122105    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
122106    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
122107    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
122108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122110    +end;
MPRINT(EM_DIAGRAM):   end;
122111    +else do;
MPRINT(EM_DIAGRAM):   else do;
122112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122113    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
122114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122115    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122116    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
122117    +   end;
MPRINT(EM_DIAGRAM):   end;
122118    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122119    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
122120    +   end;
MPRINT(EM_DIAGRAM):   end;
122121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122122    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
122123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122125    +   end;
MPRINT(EM_DIAGRAM):   end;
122126    +end;
MPRINT(EM_DIAGRAM):   end;
122127    +
122128    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
122129    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
122130    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
122131    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
122132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122134    +end;
MPRINT(EM_DIAGRAM):   end;
122135    +else do;
MPRINT(EM_DIAGRAM):   else do;
122136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122137    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
122138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122139    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122140    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
122141    +   end;
MPRINT(EM_DIAGRAM):   end;
122142    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122143    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
122144    +   end;
MPRINT(EM_DIAGRAM):   end;
122145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122146    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
122147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122149    +   end;
MPRINT(EM_DIAGRAM):   end;
122150    +end;
MPRINT(EM_DIAGRAM):   end;
122151    +
122152    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
122153    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
122154    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
122155    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
122156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122158    +end;
MPRINT(EM_DIAGRAM):   end;
122159    +else do;
MPRINT(EM_DIAGRAM):   else do;
122160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122161    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
122162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122163    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122164    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
122165    +   end;
MPRINT(EM_DIAGRAM):   end;
122166    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122167    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
122168    +   end;
MPRINT(EM_DIAGRAM):   end;
122169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122170    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
122171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122173    +   end;
MPRINT(EM_DIAGRAM):   end;
122174    +end;
MPRINT(EM_DIAGRAM):   end;
122175    +
122176    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
122177    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
122178    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
122179    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
122180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122182    +end;
MPRINT(EM_DIAGRAM):   end;
122183    +else do;
MPRINT(EM_DIAGRAM):   else do;
122184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122185    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
122186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122187    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122188    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
122189    +   end;
MPRINT(EM_DIAGRAM):   end;
122190    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122191    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
122192    +   end;
MPRINT(EM_DIAGRAM):   end;
122193    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122194    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
122195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122197    +   end;
MPRINT(EM_DIAGRAM):   end;
122198    +end;
MPRINT(EM_DIAGRAM):   end;
122199    +
122200    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
122201    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
122202    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
122203    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
122204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122206    +end;
MPRINT(EM_DIAGRAM):   end;
122207    +else do;
MPRINT(EM_DIAGRAM):   else do;
122208    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122209    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
122210    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122211    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
122212    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
122213    +   end;
MPRINT(EM_DIAGRAM):   end;
122214    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
122215    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
122216    +   end;
MPRINT(EM_DIAGRAM):   end;
122217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122218    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
122219    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122220    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122221    +   end;
MPRINT(EM_DIAGRAM):   end;
122222    +end;
MPRINT(EM_DIAGRAM):   end;
122223    +
122224    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
122225    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
122226    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
122227    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
122228    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
122229    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
122230    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
122231    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
122232    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
122233    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
122234    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
122235    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
122236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122238    +end;
MPRINT(EM_DIAGRAM):   end;
122239    +else do;
MPRINT(EM_DIAGRAM):   else do;
122240    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
122241    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
122242    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122243    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
122244    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
122245    +   end;
MPRINT(EM_DIAGRAM):   end;
122246    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
122247    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
122248    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
122249    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
122250    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
122251    +   end;
MPRINT(EM_DIAGRAM):   end;
122252    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
122253    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
122254    +   end;
MPRINT(EM_DIAGRAM):   end;
122255    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
122256    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
122257    +   end;
MPRINT(EM_DIAGRAM):   end;
122258    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
122259    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
122260    +   end;
MPRINT(EM_DIAGRAM):   end;
122261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122262    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
122263    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
122264    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
122265    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
122266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122268    +   end;
MPRINT(EM_DIAGRAM):   end;
122269    +end;
MPRINT(EM_DIAGRAM):   end;
122270    +
122271    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
122272    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
122273    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
122274    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
122275    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
122276    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
122277    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
122278    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
122279    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
122280    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
122281    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
122282    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
122283    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
122284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122286    +end;
MPRINT(EM_DIAGRAM):   end;
122287    +else do;
MPRINT(EM_DIAGRAM):   else do;
122288    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
122289    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
122290    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122291    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
122292    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
122293    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
122294    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
122295    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
122296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
122297    +         end;
MPRINT(EM_DIAGRAM):   end;
122298    +         else do;
MPRINT(EM_DIAGRAM):   else do;
122299    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
122300    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
122301    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
122302    +            end;
MPRINT(EM_DIAGRAM):   end;
122303    +         end;
MPRINT(EM_DIAGRAM):   end;
122304    +      end;
MPRINT(EM_DIAGRAM):   end;
122305    +      else do;
MPRINT(EM_DIAGRAM):   else do;
122306    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
122307    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
122308    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
122309    +         end;
MPRINT(EM_DIAGRAM):   end;
122310    +      end;
MPRINT(EM_DIAGRAM):   end;
122311    +   end;
MPRINT(EM_DIAGRAM):   end;
122312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122313    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
122314    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
122315    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
122316    +      end;
MPRINT(EM_DIAGRAM):   end;
122317    +      else do;
MPRINT(EM_DIAGRAM):   else do;
122318    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
122319    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
122320    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
122321    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
122322    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
122323    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
122324    +         end;
MPRINT(EM_DIAGRAM):   end;
122325    +      end;
MPRINT(EM_DIAGRAM):   end;
122326    +   end;
MPRINT(EM_DIAGRAM):   end;
122327    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
122328    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
122329    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
122330    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
122331    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
122332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122334    +   end;
MPRINT(EM_DIAGRAM):   end;
122335    +end;
MPRINT(EM_DIAGRAM):   end;
122336    +
122337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122338    +*** Checking missing input Interval
122339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
122340    +
122341    +IF NMISS(
122342    +   AcceptedCmpTotal ,
122343    +   Age ,
122344    +   Frq ,
122345    +   Income ,
122346    +   Kidhome ,
122347    +   MntFishProducts ,
122348    +   MntFruits ,
122349    +   MntGoldProds ,
122350    +   MntSweetProducts ,
122351    +   MonthsAsCustomer ,
122352    +   NumDealsPurchases ,
122353    +   NumWebVisitsMonth ,
122354    +   RFMstat ,
122355    +   RMntFrq ,
122356    +   Recency ,
122357    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
122358    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
122359    +
122360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122361    +END;
MPRINT(EM_DIAGRAM):   END;
122362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122363    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
122364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122365    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
122366    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
122367    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
122368    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
122369    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
122370    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
122371    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
122372    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
122373    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
122374    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
122375    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
122376    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
122377    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
122378    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
122379    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
122380    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
122381    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
122382    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
122383    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
122384    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
122385    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
122386    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
122387    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
122388    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
122389    +END;
MPRINT(EM_DIAGRAM):   END;
122390    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
122391    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
122392    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
122393    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
122394    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
122395    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
122396    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
122397    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
122398    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
122399    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
122400    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
122401    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
122402    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
122403    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
122404    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
122405    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
122406    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
122407    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
122408    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
122409    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
122410    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
122411    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
122412    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
122413    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
122414    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
122415    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
122416    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
122417    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
122418    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
122419    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
122420    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
122421    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
122422    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
122423    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
122424    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
122425    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
122426    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
122427    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
122428    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
122429    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
122430    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
122431    +END;
MPRINT(EM_DIAGRAM):   END;
122432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122433    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
122434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122436    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
122437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122439    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
122440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122441    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
122442    +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
122443    +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
122444    +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
122445    +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
122446    +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
122447    +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
122448    +          +    -0.63886071804247 * S_MonthsAsCustomer
122449    +          +      2.3488612891037 * S_NumDealsPurchases
122450    +          +     2.32996461229282 * S_NumWebVisitsMonth
122451    +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
122452    +        S_RMntFrq  +    -3.18599476886695 * S_Recency
122453    +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
122454    +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
122455    +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
122456    +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
122457    +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
122458    +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
122459    +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
122460    +          +     0.67699646331113 * S_MonthsAsCustomer
122461    +          +     0.70523055739254 * S_NumDealsPurchases
122462    +          +    -2.06406682205141 * S_NumWebVisitsMonth
122463    +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
122464    +        S_RMntFrq  +      5.0273672656487 * S_Recency
122465    +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
122466    +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
122467    +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
122468    +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
122469    +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
122470    +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
122471    +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
122472    +          +    -0.53694216899543 * S_MonthsAsCustomer
122473    +          +     0.25908508836257 * S_NumDealsPurchases
122474    +          +    -1.18459231573601 * S_NumWebVisitsMonth
122475    +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
122476    +        S_RMntFrq  +    -1.22457627833901 * S_Recency
122477    +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
122478    +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
122479    +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
122480    +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
122481    +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
122482    +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
122483    +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
122484    +          +    -0.08931078748332 * S_MonthsAsCustomer
122485    +          +    -0.46561962814047 * S_NumDealsPurchases
122486    +          +    -0.12241295445297 * S_NumWebVisitsMonth
122487    +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
122488    +        S_RMntFrq  +     0.96804234233608 * S_Recency
122489    +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
122490    +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
122491    +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
122492    +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
122493    +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
122494    +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
122495    +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
122496    +          +     -0.9186653552138 * S_MonthsAsCustomer
122497    +          +     2.17624393037629 * S_NumDealsPurchases
122498    +          +    -0.41699900714758 * S_NumWebVisitsMonth
122499    +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
122500    +        S_RMntFrq  +    -0.28987089218356 * S_Recency
122501    +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
122502    +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
122503    +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
122504    +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
122505    +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
122506    +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
122507    +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
122508    +          +     1.32865070741283 * S_MonthsAsCustomer
122509    +          +      0.8173864987673 * S_NumDealsPurchases
122510    +          +     1.04804775338375 * S_NumWebVisitsMonth
122511    +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
122512    +        S_RMntFrq  +     0.08690587270493 * S_Recency
122513    +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
122514    +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
122515    +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
122516    +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
122517    +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
122518    +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
122519    +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
122520    +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
122521    +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
122522    +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
122523    +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
122524    +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
122525    +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
122526    +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
122527    +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
122528    +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
122529    +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
122530    +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
122531    +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
122532    +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
122533    +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
122534    +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
122535    +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
122536    +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
122537    +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
122538    +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
122539    +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
122540    +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
122541    +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
122542    +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
122543    +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
122544    +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
122545    +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
122546    +        EducationGraduation  +    -0.31624019107181 * EducationMaster
122547    +          +    -0.82783034099773 * Marital_StatusDivorced
122548    +          +     0.39651075241405 * Marital_StatusMarried
122549    +          +     0.17323156170107 * Marital_StatusSingle
122550    +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
122551    +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
122552    +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
122553    +        EducationGraduation  +    -0.05323450200928 * EducationMaster
122554    +          +    -2.42314580112302 * Marital_StatusDivorced
122555    +          +     1.72709251267075 * Marital_StatusMarried
122556    +          +    -0.94350561587168 * Marital_StatusSingle
122557    +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
122558    +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
122559    +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
122560    +        EducationGraduation  +    -1.41317064722862 * EducationMaster
122561    +          +    -1.25323701705333 * Marital_StatusDivorced
122562    +          +    -0.72618091015379 * Marital_StatusMarried
122563    +          +     0.20594885266863 * Marital_StatusSingle
122564    +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
122565    +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
122566    +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
122567    +        EducationGraduation  +     0.75559299844055 * EducationMaster
122568    +          +     -0.9159957275063 * Marital_StatusDivorced
122569    +          +     2.06164757358796 * Marital_StatusMarried
122570    +          +    -1.61544310412168 * Marital_StatusSingle
122571    +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
122572    +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
122573    +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
122574    +        EducationGraduation  +     0.27594869585414 * EducationMaster
122575    +          +    -0.72418104768251 * Marital_StatusDivorced
122576    +          +     0.51077116161056 * Marital_StatusMarried
122577    +          +     -2.0857896888723 * Marital_StatusSingle
122578    +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
122579    +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
122580    +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
122581    +        EducationGraduation  +     -0.7287361872795 * EducationMaster
122582    +          +     0.64139965212864 * Marital_StatusDivorced
122583    +          +    -1.52338846336783 * Marital_StatusMarried
122584    +          +     1.94794784762286 * Marital_StatusSingle
122585    +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
122586    +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
122587    +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
122588    +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
122589    +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
122590    +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
122591    +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
122592    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
122593    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
122594    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
122595    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
122596    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
122597    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
122598    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
122599    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
122600    +END;
MPRINT(EM_DIAGRAM):   END;
122601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
122602    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
122603    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
122604    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
122605    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
122606    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
122607    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
122608    +END;
MPRINT(EM_DIAGRAM):   END;
122609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122610    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
122611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122612    +
122613    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
122614    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
122615    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
122616    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
122617    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
122618    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122619    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
122620    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
122621    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
122622    +end;
MPRINT(EM_DIAGRAM):   end;
122623    +else do;
MPRINT(EM_DIAGRAM):   else do;
122624    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
122625    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
122626    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
122627    +   end;
MPRINT(EM_DIAGRAM):   end;
122628    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
122629    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
122630    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
122631    +   end;
MPRINT(EM_DIAGRAM):   end;
122632    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122633    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
122634    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
122635    +   end;
MPRINT(EM_DIAGRAM):   end;
122636    +end;
MPRINT(EM_DIAGRAM):   end;
122637    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
122638    +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
122639    +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
122640    +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
122641    +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
122642    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
122643    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
122644    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
122645    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
122646    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
122647    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
122648    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
122649    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
122650    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
122651    +END;
MPRINT(EM_DIAGRAM):   END;
122652    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
122653    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
122654    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
122655    +END;
MPRINT(EM_DIAGRAM):   END;
122656    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
122657    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
122658    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
122659    +END;
MPRINT(EM_DIAGRAM):   END;
122660    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
122661    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
122662    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
122663    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
122664    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
122665    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
122666    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
122667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122668    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
122669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
122670    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
122671    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
122672    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
122673    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
122674    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
122675    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
122676    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
122677    +END;
MPRINT(EM_DIAGRAM):   END;
122678    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
122679    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
122680    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
122681    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
122682    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
122683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122684    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
122685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122686    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
122687    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
122688    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
122689    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
122690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122691    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
122692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122693    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
122694    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
122695    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
122696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122697    +* Ensmbl54: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 3 of 7;
122698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122700    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
122701    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
122702    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
122703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
122704    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
122705    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
122706    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
122707    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
122708    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
122709    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
122710    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
122711    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
122712    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
122713    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
122714    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
122715    +LENGTH _WARN_ $4
122716    +      F_DepVar  $ 12
122717    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
122718    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
122719    +
122720    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
122721    +
122722    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
122723    +
122724    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
122725    +
122726    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
122727    +
122728    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
122729    +
122730    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
122731    +
122732    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
122733    +
122734    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
122735    +
122736    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
122737    +
122738    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
122739    +
122740    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
122741    +
122742    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
122743    +
122744    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
122745    +
122746    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
122747    +
122748    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
122749    +
122750    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
122751    +
122752    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
122753    +
122754    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
122755    +
122756    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
122757    +
122758    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
122759    +
122760    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
122761    +
122762    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
122763    +
122764    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
122765    +
122766    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
122767    +
122768    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
122769    +
122770    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
122771    +
122772    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
122773    +
122774    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
122775    +
122776    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
122777    +
122778    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
122779    +
122780    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
122781    +
122782    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
122783    +
122784    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
122785    +
122786    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
122787    +
122788    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
122789    +
122790    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
122791    +
122792    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
122793    +
122794    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
122795    +
122796    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
122797    +
122798    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
122799    +
122800    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
122801    +
122802    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
122803    +
122804    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
122805    +
122806    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
122807    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
122808    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
122809    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
122810    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122811    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122812    +end;
MPRINT(EM_DIAGRAM):   end;
122813    +else do;
MPRINT(EM_DIAGRAM):   else do;
122814    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122815    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
122816    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122817    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122818    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
122819    +   end;
MPRINT(EM_DIAGRAM):   end;
122820    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122821    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
122822    +   end;
MPRINT(EM_DIAGRAM):   end;
122823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122824    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
122825    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122826    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122827    +   end;
MPRINT(EM_DIAGRAM):   end;
122828    +end;
MPRINT(EM_DIAGRAM):   end;
122829    +
122830    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
122831    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
122832    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
122833    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
122834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122836    +end;
MPRINT(EM_DIAGRAM):   end;
122837    +else do;
MPRINT(EM_DIAGRAM):   else do;
122838    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122839    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
122840    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122841    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122842    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
122843    +   end;
MPRINT(EM_DIAGRAM):   end;
122844    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122845    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
122846    +   end;
MPRINT(EM_DIAGRAM):   end;
122847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122848    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
122849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122851    +   end;
MPRINT(EM_DIAGRAM):   end;
122852    +end;
MPRINT(EM_DIAGRAM):   end;
122853    +
122854    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
122855    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
122856    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
122857    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
122858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122860    +end;
MPRINT(EM_DIAGRAM):   end;
122861    +else do;
MPRINT(EM_DIAGRAM):   else do;
122862    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122863    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
122864    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122865    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122866    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
122867    +   end;
MPRINT(EM_DIAGRAM):   end;
122868    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122869    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
122870    +   end;
MPRINT(EM_DIAGRAM):   end;
122871    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122872    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
122873    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122874    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122875    +   end;
MPRINT(EM_DIAGRAM):   end;
122876    +end;
MPRINT(EM_DIAGRAM):   end;
122877    +
122878    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
122879    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
122880    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
122881    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
122882    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122883    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122884    +end;
MPRINT(EM_DIAGRAM):   end;
122885    +else do;
MPRINT(EM_DIAGRAM):   else do;
122886    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122887    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
122888    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122889    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122890    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
122891    +   end;
MPRINT(EM_DIAGRAM):   end;
122892    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122893    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
122894    +   end;
MPRINT(EM_DIAGRAM):   end;
122895    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122896    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
122897    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122898    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122899    +   end;
MPRINT(EM_DIAGRAM):   end;
122900    +end;
MPRINT(EM_DIAGRAM):   end;
122901    +
122902    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
122903    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
122904    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
122905    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
122906    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122908    +end;
MPRINT(EM_DIAGRAM):   end;
122909    +else do;
MPRINT(EM_DIAGRAM):   else do;
122910    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122911    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
122912    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122913    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122914    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
122915    +   end;
MPRINT(EM_DIAGRAM):   end;
122916    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122917    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
122918    +   end;
MPRINT(EM_DIAGRAM):   end;
122919    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122920    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
122921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122923    +   end;
MPRINT(EM_DIAGRAM):   end;
122924    +end;
MPRINT(EM_DIAGRAM):   end;
122925    +
122926    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
122927    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
122928    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
122929    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
122930    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122932    +end;
MPRINT(EM_DIAGRAM):   end;
122933    +else do;
MPRINT(EM_DIAGRAM):   else do;
122934    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122935    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
122936    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122937    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
122938    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
122939    +   end;
MPRINT(EM_DIAGRAM):   end;
122940    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
122941    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
122942    +   end;
MPRINT(EM_DIAGRAM):   end;
122943    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122944    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
122945    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122946    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122947    +   end;
MPRINT(EM_DIAGRAM):   end;
122948    +end;
MPRINT(EM_DIAGRAM):   end;
122949    +
122950    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
122951    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
122952    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
122953    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
122954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122956    +end;
MPRINT(EM_DIAGRAM):   end;
122957    +else do;
MPRINT(EM_DIAGRAM):   else do;
122958    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
122959    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
122960    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122961    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
122962    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
122963    +   end;
MPRINT(EM_DIAGRAM):   end;
122964    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
122965    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
122966    +   end;
MPRINT(EM_DIAGRAM):   end;
122967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
122968    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
122969    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
122970    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122971    +   end;
MPRINT(EM_DIAGRAM):   end;
122972    +end;
MPRINT(EM_DIAGRAM):   end;
122973    +
122974    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
122975    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
122976    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
122977    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
122978    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
122979    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
122980    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
122981    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
122982    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
122983    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
122984    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
122985    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
122986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
122987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
122988    +end;
MPRINT(EM_DIAGRAM):   end;
122989    +else do;
MPRINT(EM_DIAGRAM):   else do;
122990    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
122991    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
122992    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
122993    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
122994    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
122995    +   end;
MPRINT(EM_DIAGRAM):   end;
122996    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
122997    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
122998    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
122999    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
123000    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
123001    +   end;
MPRINT(EM_DIAGRAM):   end;
123002    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
123003    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
123004    +   end;
MPRINT(EM_DIAGRAM):   end;
123005    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
123006    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
123007    +   end;
MPRINT(EM_DIAGRAM):   end;
123008    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
123009    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
123010    +   end;
MPRINT(EM_DIAGRAM):   end;
123011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123012    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
123013    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
123014    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
123015    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
123016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123018    +   end;
MPRINT(EM_DIAGRAM):   end;
123019    +end;
MPRINT(EM_DIAGRAM):   end;
123020    +
123021    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
123022    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
123023    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
123024    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
123025    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
123026    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
123027    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
123028    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
123029    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
123030    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
123031    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
123032    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
123033    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
123034    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123036    +end;
MPRINT(EM_DIAGRAM):   end;
123037    +else do;
MPRINT(EM_DIAGRAM):   else do;
123038    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
123039    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
123040    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123041    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
123042    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
123043    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
123044    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
123045    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
123046    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123047    +         end;
MPRINT(EM_DIAGRAM):   end;
123048    +         else do;
MPRINT(EM_DIAGRAM):   else do;
123049    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
123050    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
123051    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123052    +            end;
MPRINT(EM_DIAGRAM):   end;
123053    +         end;
MPRINT(EM_DIAGRAM):   end;
123054    +      end;
MPRINT(EM_DIAGRAM):   end;
123055    +      else do;
MPRINT(EM_DIAGRAM):   else do;
123056    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
123057    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
123058    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123059    +         end;
MPRINT(EM_DIAGRAM):   end;
123060    +      end;
MPRINT(EM_DIAGRAM):   end;
123061    +   end;
MPRINT(EM_DIAGRAM):   end;
123062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123063    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
123064    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
123065    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123066    +      end;
MPRINT(EM_DIAGRAM):   end;
123067    +      else do;
MPRINT(EM_DIAGRAM):   else do;
123068    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
123069    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
123070    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
123071    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
123072    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
123073    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123074    +         end;
MPRINT(EM_DIAGRAM):   end;
123075    +      end;
MPRINT(EM_DIAGRAM):   end;
123076    +   end;
MPRINT(EM_DIAGRAM):   end;
123077    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
123078    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
123079    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
123080    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
123081    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
123082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123084    +   end;
MPRINT(EM_DIAGRAM):   end;
123085    +end;
MPRINT(EM_DIAGRAM):   end;
123086    +
123087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123088    +*** Checking missing input Interval
123089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
123090    +
123091    +IF NMISS(
123092    +   AcceptedCmpTotal ,
123093    +   Age ,
123094    +   Frq ,
123095    +   Income ,
123096    +   Kidhome ,
123097    +   MntFishProducts ,
123098    +   MntFruits ,
123099    +   MntGoldProds ,
123100    +   MntSweetProducts ,
123101    +   MonthsAsCustomer ,
123102    +   NumDealsPurchases ,
123103    +   NumWebVisitsMonth ,
123104    +   RFMstat ,
123105    +   RMntFrq ,
123106    +   Recency ,
123107    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
123108    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
123109    +
123110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123111    +END;
MPRINT(EM_DIAGRAM):   END;
123112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123113    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
123114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123115    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
123116    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
123117    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
123118    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
123119    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
123120    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
123121    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
123122    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
123123    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
123124    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
123125    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
123126    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
123127    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
123128    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
123129    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
123130    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
123131    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
123132    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
123133    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
123134    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
123135    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
123136    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
123137    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
123138    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
123139    +END;
MPRINT(EM_DIAGRAM):   END;
123140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
123141    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
123142    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
123143    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
123144    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
123145    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
123146    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
123147    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
123148    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
123149    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
123150    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
123151    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
123152    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
123153    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
123154    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
123155    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
123156    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
123157    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
123158    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
123159    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
123160    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
123161    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
123162    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
123163    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
123164    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
123165    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
123166    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
123167    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
123168    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
123169    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
123170    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
123171    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
123172    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
123173    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
123174    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
123175    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
123176    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
123177    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
123178    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
123179    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
123180    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
123181    +END;
MPRINT(EM_DIAGRAM):   END;
123182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123183    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
123184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123186    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
123187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123189    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
123190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123191    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
123192    +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
123193    +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
123194    +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
123195    +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
123196    +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
123197    +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
123198    +          +     0.04740894983714 * S_MonthsAsCustomer
123199    +          +     1.39008006467326 * S_NumDealsPurchases
123200    +          +     0.21608999126738 * S_NumWebVisitsMonth
123201    +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
123202    +        S_RMntFrq  +    -0.30830265825486 * S_Recency
123203    +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
123204    +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
123205    +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
123206    +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
123207    +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
123208    +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
123209    +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
123210    +          +     0.11090137331567 * S_MonthsAsCustomer
123211    +          +     0.22617410760471 * S_NumDealsPurchases
123212    +          +    -1.50612324994247 * S_NumWebVisitsMonth
123213    +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
123214    +        S_RMntFrq  +     1.36064773168913 * S_Recency
123215    +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
123216    +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
123217    +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
123218    +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
123219    +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
123220    +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
123221    +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
123222    +          +     1.12489244540865 * S_MonthsAsCustomer
123223    +          +     0.65186273365438 * S_NumDealsPurchases
123224    +          +    -2.32770073685469 * S_NumWebVisitsMonth
123225    +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
123226    +        S_RMntFrq  +     2.60277611818411 * S_Recency
123227    +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
123228    +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
123229    +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
123230    +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
123231    +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
123232    +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
123233    +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
123234    +          +     0.30886829972356 * S_MonthsAsCustomer
123235    +          +     0.65492907685123 * S_NumDealsPurchases
123236    +          +     0.10822300736498 * S_NumWebVisitsMonth
123237    +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
123238    +        S_RMntFrq  +     -0.7378392134822 * S_Recency
123239    +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
123240    +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
123241    +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
123242    +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
123243    +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
123244    +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
123245    +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
123246    +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
123247    +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
123248    +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
123249    +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
123250    +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
123251    +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
123252    +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
123253    +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
123254    +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
123255    +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
123256    +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
123257    +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
123258    +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
123259    +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
123260    +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
123261    +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
123262    +        EducationGraduation  +     0.30922934477029 * EducationMaster
123263    +          +     0.01556098790048 * Marital_StatusDivorced
123264    +          +     0.00512523764645 * Marital_StatusMarried
123265    +          +    -0.33980799511448 * Marital_StatusSingle
123266    +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
123267    +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
123268    +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
123269    +        EducationGraduation  +     0.69751348344321 * EducationMaster
123270    +          +     0.01069434029942 * Marital_StatusDivorced
123271    +          +      0.3116587285334 * Marital_StatusMarried
123272    +          +    -0.98635795023549 * Marital_StatusSingle
123273    +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
123274    +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
123275    +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
123276    +        EducationGraduation  +     -0.8155628950024 * EducationMaster
123277    +          +    -0.60393077836174 * Marital_StatusDivorced
123278    +          +    -0.18138878944937 * Marital_StatusMarried
123279    +          +     0.53013032587101 * Marital_StatusSingle
123280    +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
123281    +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
123282    +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
123283    +        EducationGraduation  +    -0.40675219343984 * EducationMaster
123284    +          +     0.43223311502025 * Marital_StatusDivorced
123285    +          +    -1.15741416919552 * Marital_StatusMarried
123286    +          +     0.83939799284264 * Marital_StatusSingle
123287    +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
123288    +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
123289    +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
123290    +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
123291    +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
123292    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
123293    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
123294    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
123295    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
123296    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
123297    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
123298    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
123299    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
123300    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
123301    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
123302    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
123303    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
123304    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
123305    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
123306    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
123307    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
123308    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
123309    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
123310    +END;
MPRINT(EM_DIAGRAM):   END;
123311    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
123312    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
123313    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
123314    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
123315    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
123316    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
123317    +END;
MPRINT(EM_DIAGRAM):   END;
123318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123319    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
123320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123321    +
123322    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
123323    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
123324    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
123325    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
123326    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
123327    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123328    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
123329    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
123330    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
123331    +end;
MPRINT(EM_DIAGRAM):   end;
123332    +else do;
MPRINT(EM_DIAGRAM):   else do;
123333    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
123334    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
123335    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
123336    +   end;
MPRINT(EM_DIAGRAM):   end;
123337    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
123338    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
123339    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
123340    +   end;
MPRINT(EM_DIAGRAM):   end;
123341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123342    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
123343    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
123344    +   end;
MPRINT(EM_DIAGRAM):   end;
123345    +end;
MPRINT(EM_DIAGRAM):   end;
123346    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
123347    +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
123348    +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
123349    +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
123350    +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
123351    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
123352    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
123353    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
123354    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
123355    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
123356    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
123357    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
123358    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
123359    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
123360    +END;
MPRINT(EM_DIAGRAM):   END;
123361    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
123362    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
123363    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
123364    +END;
MPRINT(EM_DIAGRAM):   END;
123365    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
123366    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
123367    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
123368    +END;
MPRINT(EM_DIAGRAM):   END;
123369    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
123370    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
123371    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
123372    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
123373    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
123374    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
123375    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
123376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123377    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
123378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123379    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
123380    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
123381    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
123382    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
123383    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
123384    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
123385    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
123386    +END;
MPRINT(EM_DIAGRAM):   END;
123387    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
123388    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
123389    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
123390    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
123391    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
123392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123393    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
123394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123395    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
123396    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
123397    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
123398    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
123399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123400    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
123401    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123402    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
123403    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
123404    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
123405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123406    +* Ensmbl54: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 4 of 7;
123407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123409    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
123410    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
123411    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
123412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
123413    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
123414    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
123415    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
123416    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
123417    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
123418    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
123419    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
123420    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
123421    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
123422    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
123423    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
123424    +LENGTH _WARN_ $4
123425    +      F_DepVar  $ 12
123426    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
123427    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
123428    +
123429    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
123430    +
123431    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
123432    +
123433    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
123434    +
123435    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
123436    +
123437    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
123438    +
123439    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
123440    +
123441    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
123442    +
123443    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
123444    +
123445    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
123446    +
123447    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
123448    +
123449    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
123450    +
123451    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
123452    +
123453    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
123454    +
123455    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
123456    +
123457    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
123458    +
123459    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
123460    +
123461    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
123462    +
123463    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
123464    +
123465    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
123466    +
123467    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
123468    +
123469    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
123470    +
123471    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
123472    +
123473    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
123474    +
123475    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
123476    +
123477    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
123478    +
123479    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
123480    +
123481    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
123482    +
123483    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
123484    +
123485    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
123486    +
123487    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
123488    +
123489    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
123490    +
123491    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
123492    +
123493    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
123494    +
123495    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
123496    +
123497    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
123498    +
123499    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
123500    +
123501    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
123502    +
123503    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
123504    +
123505    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
123506    +
123507    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
123508    +
123509    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
123510    +
123511    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
123512    +
123513    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
123514    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
123515    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
123516    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
123517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123519    +end;
MPRINT(EM_DIAGRAM):   end;
123520    +else do;
MPRINT(EM_DIAGRAM):   else do;
123521    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123522    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
123523    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123524    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123525    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
123526    +   end;
MPRINT(EM_DIAGRAM):   end;
123527    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123528    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
123529    +   end;
MPRINT(EM_DIAGRAM):   end;
123530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123531    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
123532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123534    +   end;
MPRINT(EM_DIAGRAM):   end;
123535    +end;
MPRINT(EM_DIAGRAM):   end;
123536    +
123537    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
123538    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
123539    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
123540    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
123541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123543    +end;
MPRINT(EM_DIAGRAM):   end;
123544    +else do;
MPRINT(EM_DIAGRAM):   else do;
123545    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123546    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
123547    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123548    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123549    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
123550    +   end;
MPRINT(EM_DIAGRAM):   end;
123551    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123552    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
123553    +   end;
MPRINT(EM_DIAGRAM):   end;
123554    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123555    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
123556    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123557    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123558    +   end;
MPRINT(EM_DIAGRAM):   end;
123559    +end;
MPRINT(EM_DIAGRAM):   end;
123560    +
123561    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
123562    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
123563    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
123564    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
123565    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123567    +end;
MPRINT(EM_DIAGRAM):   end;
123568    +else do;
MPRINT(EM_DIAGRAM):   else do;
123569    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123570    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
123571    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123572    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123573    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
123574    +   end;
MPRINT(EM_DIAGRAM):   end;
123575    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123576    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
123577    +   end;
MPRINT(EM_DIAGRAM):   end;
123578    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123579    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
123580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123582    +   end;
MPRINT(EM_DIAGRAM):   end;
123583    +end;
MPRINT(EM_DIAGRAM):   end;
123584    +
123585    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
123586    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
123587    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
123588    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
123589    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123590    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123591    +end;
MPRINT(EM_DIAGRAM):   end;
123592    +else do;
MPRINT(EM_DIAGRAM):   else do;
123593    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123594    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
123595    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123596    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123597    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
123598    +   end;
MPRINT(EM_DIAGRAM):   end;
123599    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123600    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
123601    +   end;
MPRINT(EM_DIAGRAM):   end;
123602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123603    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
123604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123606    +   end;
MPRINT(EM_DIAGRAM):   end;
123607    +end;
MPRINT(EM_DIAGRAM):   end;
123608    +
123609    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
123610    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
123611    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
123612    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
123613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123615    +end;
MPRINT(EM_DIAGRAM):   end;
123616    +else do;
MPRINT(EM_DIAGRAM):   else do;
123617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123618    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
123619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123620    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123621    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
123622    +   end;
MPRINT(EM_DIAGRAM):   end;
123623    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123624    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
123625    +   end;
MPRINT(EM_DIAGRAM):   end;
123626    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123627    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
123628    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123629    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123630    +   end;
MPRINT(EM_DIAGRAM):   end;
123631    +end;
MPRINT(EM_DIAGRAM):   end;
123632    +
123633    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
123634    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
123635    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
123636    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
123637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123639    +end;
MPRINT(EM_DIAGRAM):   end;
123640    +else do;
MPRINT(EM_DIAGRAM):   else do;
123641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123642    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
123643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123644    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
123645    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
123646    +   end;
MPRINT(EM_DIAGRAM):   end;
123647    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
123648    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
123649    +   end;
MPRINT(EM_DIAGRAM):   end;
123650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123651    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
123652    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123653    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123654    +   end;
MPRINT(EM_DIAGRAM):   end;
123655    +end;
MPRINT(EM_DIAGRAM):   end;
123656    +
123657    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
123658    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
123659    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
123660    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
123661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123663    +end;
MPRINT(EM_DIAGRAM):   end;
123664    +else do;
MPRINT(EM_DIAGRAM):   else do;
123665    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
123666    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
123667    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123668    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
123669    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
123670    +   end;
MPRINT(EM_DIAGRAM):   end;
123671    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
123672    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
123673    +   end;
MPRINT(EM_DIAGRAM):   end;
123674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123675    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
123676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123678    +   end;
MPRINT(EM_DIAGRAM):   end;
123679    +end;
MPRINT(EM_DIAGRAM):   end;
123680    +
123681    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
123682    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
123683    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
123684    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
123685    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
123686    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
123687    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
123688    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
123689    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
123690    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
123691    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
123692    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
123693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123695    +end;
MPRINT(EM_DIAGRAM):   end;
123696    +else do;
MPRINT(EM_DIAGRAM):   else do;
123697    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
123698    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
123699    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123700    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
123701    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
123702    +   end;
MPRINT(EM_DIAGRAM):   end;
123703    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
123704    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
123705    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
123706    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
123707    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
123708    +   end;
MPRINT(EM_DIAGRAM):   end;
123709    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
123710    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
123711    +   end;
MPRINT(EM_DIAGRAM):   end;
123712    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
123713    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
123714    +   end;
MPRINT(EM_DIAGRAM):   end;
123715    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
123716    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
123717    +   end;
MPRINT(EM_DIAGRAM):   end;
123718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123719    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
123720    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
123721    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
123722    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
123723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123725    +   end;
MPRINT(EM_DIAGRAM):   end;
123726    +end;
MPRINT(EM_DIAGRAM):   end;
123727    +
123728    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
123729    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
123730    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
123731    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
123732    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
123733    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
123734    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
123735    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
123736    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
123737    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
123738    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
123739    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
123740    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
123741    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
123742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123743    +end;
MPRINT(EM_DIAGRAM):   end;
123744    +else do;
MPRINT(EM_DIAGRAM):   else do;
123745    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
123746    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
123747    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
123748    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
123749    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
123750    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
123751    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
123752    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
123753    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123754    +         end;
MPRINT(EM_DIAGRAM):   end;
123755    +         else do;
MPRINT(EM_DIAGRAM):   else do;
123756    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
123757    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
123758    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123759    +            end;
MPRINT(EM_DIAGRAM):   end;
123760    +         end;
MPRINT(EM_DIAGRAM):   end;
123761    +      end;
MPRINT(EM_DIAGRAM):   end;
123762    +      else do;
MPRINT(EM_DIAGRAM):   else do;
123763    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
123764    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
123765    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123766    +         end;
MPRINT(EM_DIAGRAM):   end;
123767    +      end;
MPRINT(EM_DIAGRAM):   end;
123768    +   end;
MPRINT(EM_DIAGRAM):   end;
123769    +   else do;
MPRINT(EM_DIAGRAM):   else do;
123770    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
123771    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
123772    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123773    +      end;
MPRINT(EM_DIAGRAM):   end;
123774    +      else do;
MPRINT(EM_DIAGRAM):   else do;
123775    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
123776    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
123777    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
123778    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
123779    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
123780    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
123781    +         end;
MPRINT(EM_DIAGRAM):   end;
123782    +      end;
MPRINT(EM_DIAGRAM):   end;
123783    +   end;
MPRINT(EM_DIAGRAM):   end;
123784    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
123785    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
123786    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
123787    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
123788    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
123789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
123790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123791    +   end;
MPRINT(EM_DIAGRAM):   end;
123792    +end;
MPRINT(EM_DIAGRAM):   end;
123793    +
123794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123795    +*** Checking missing input Interval
123796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
123797    +
123798    +IF NMISS(
123799    +   AcceptedCmpTotal ,
123800    +   Age ,
123801    +   Frq ,
123802    +   Income ,
123803    +   Kidhome ,
123804    +   MntFishProducts ,
123805    +   MntFruits ,
123806    +   MntGoldProds ,
123807    +   MntSweetProducts ,
123808    +   MonthsAsCustomer ,
123809    +   NumDealsPurchases ,
123810    +   NumWebVisitsMonth ,
123811    +   RFMstat ,
123812    +   RMntFrq ,
123813    +   Recency ,
123814    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
123815    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
123816    +
123817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
123818    +END;
MPRINT(EM_DIAGRAM):   END;
123819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123820    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
123821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123822    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
123823    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
123824    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
123825    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
123826    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
123827    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
123828    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
123829    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
123830    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
123831    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
123832    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
123833    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
123834    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
123835    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
123836    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
123837    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
123838    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
123839    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
123840    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
123841    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
123842    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
123843    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
123844    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
123845    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
123846    +END;
MPRINT(EM_DIAGRAM):   END;
123847    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
123848    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
123849    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
123850    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
123851    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
123852    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
123853    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
123854    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
123855    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
123856    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
123857    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
123858    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
123859    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
123860    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
123861    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
123862    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
123863    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
123864    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
123865    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
123866    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
123867    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
123868    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
123869    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
123870    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
123871    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
123872    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
123873    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
123874    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
123875    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
123876    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
123877    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
123878    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
123879    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
123880    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
123881    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
123882    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
123883    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
123884    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
123885    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
123886    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
123887    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
123888    +END;
MPRINT(EM_DIAGRAM):   END;
123889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123890    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
123891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123893    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
123894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123896    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
123897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123898    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
123899    +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
123900    +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
123901    +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
123902    +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
123903    +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
123904    +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
123905    +          +     -0.6473961304074 * S_MonthsAsCustomer
123906    +          +     0.68960902951007 * S_NumDealsPurchases
123907    +          +    -0.03600585273268 * S_NumWebVisitsMonth
123908    +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
123909    +        S_RMntFrq  +    -0.37413569649471 * S_Recency
123910    +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
123911    +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
123912    +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
123913    +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
123914    +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
123915    +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
123916    +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
123917    +          +    -0.70674764548268 * S_MonthsAsCustomer
123918    +          +     0.03761139203619 * S_NumDealsPurchases
123919    +          +    -0.69359662485747 * S_NumWebVisitsMonth
123920    +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
123921    +        S_RMntFrq  +    -1.62720417424557 * S_Recency
123922    +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
123923    +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
123924    +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
123925    +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
123926    +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
123927    +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
123928    +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
123929    +          +    -0.47559913836984 * S_MonthsAsCustomer
123930    +          +    -0.26961781245749 * S_NumDealsPurchases
123931    +          +    -0.67017962977412 * S_NumWebVisitsMonth
123932    +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
123933    +        S_RMntFrq  +     0.67120737584665 * S_Recency
123934    +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
123935    +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
123936    +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
123937    +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
123938    +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
123939    +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
123940    +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
123941    +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
123942    +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
123943    +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
123944    +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
123945    +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
123946    +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
123947    +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
123948    +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
123949    +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
123950    +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
123951    +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
123952    +        EducationGraduation  +     0.46172475127934 * EducationMaster
123953    +          +    -0.18858032329482 * Marital_StatusDivorced
123954    +          +     0.16067956508072 * Marital_StatusMarried
123955    +          +    -0.90926406046237 * Marital_StatusSingle
123956    +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
123957    +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
123958    +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
123959    +        EducationGraduation  +    -0.74629011053947 * EducationMaster
123960    +          +     0.71998738170149 * Marital_StatusDivorced
123961    +          +    -1.53543515752013 * Marital_StatusMarried
123962    +          +     0.44068743694663 * Marital_StatusSingle
123963    +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
123964    +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
123965    +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
123966    +        EducationGraduation  +     0.11252156068047 * EducationMaster
123967    +          +    -0.31683932084863 * Marital_StatusDivorced
123968    +          +     0.17674162427585 * Marital_StatusMarried
123969    +          +    -0.67064017247711 * Marital_StatusSingle
123970    +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
123971    +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
123972    +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
123973    +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
123974    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
123975    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
123976    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
123977    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
123978    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
123979    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
123980    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
123981    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
123982    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
123983    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
123984    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
123985    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
123986    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
123987    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
123988    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
123989    +END;
MPRINT(EM_DIAGRAM):   END;
123990    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
123991    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
123992    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
123993    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
123994    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
123995    +END;
MPRINT(EM_DIAGRAM):   END;
123996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123997    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
123998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
123999    +
124000    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
124001    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
124002    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
124003    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
124004    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
124005    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124006    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
124007    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
124008    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
124009    +end;
MPRINT(EM_DIAGRAM):   end;
124010    +else do;
MPRINT(EM_DIAGRAM):   else do;
124011    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
124012    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
124013    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
124014    +   end;
MPRINT(EM_DIAGRAM):   end;
124015    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
124016    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
124017    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
124018    +   end;
MPRINT(EM_DIAGRAM):   end;
124019    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124020    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
124021    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
124022    +   end;
MPRINT(EM_DIAGRAM):   end;
124023    +end;
MPRINT(EM_DIAGRAM):   end;
124024    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
124025    +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
124026    +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
124027    +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
124028    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
124029    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
124030    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
124031    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
124032    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
124033    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
124034    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
124035    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
124036    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
124037    +END;
MPRINT(EM_DIAGRAM):   END;
124038    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
124039    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
124040    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
124041    +END;
MPRINT(EM_DIAGRAM):   END;
124042    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
124043    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
124044    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
124045    +END;
MPRINT(EM_DIAGRAM):   END;
124046    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
124047    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
124048    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
124049    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
124050    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
124051    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
124052    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
124053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124054    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
124055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124056    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
124057    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
124058    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
124059    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
124060    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
124061    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
124062    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
124063    +END;
MPRINT(EM_DIAGRAM):   END;
124064    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
124065    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
124066    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
124067    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
124068    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
124069    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124070    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
124071    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124072    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
124073    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
124074    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
124075    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
124076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124077    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
124078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124079    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
124080    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
124081    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
124082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124083    +* Ensmbl54: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 5 of 7;
124084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124086    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
124087    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
124088    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
124089    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124090    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
124091    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
124092    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
124093    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
124094    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
124095    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
124096    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
124097    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
124098    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
124099    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
124100    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
124101    +LENGTH _WARN_ $4
124102    +      F_DepVar  $ 12
124103    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
124104    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
124105    +
124106    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
124107    +
124108    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
124109    +
124110    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
124111    +
124112    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
124113    +
124114    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
124115    +
124116    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
124117    +
124118    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
124119    +
124120    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
124121    +
124122    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
124123    +
124124    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
124125    +
124126    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
124127    +
124128    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
124129    +
124130    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
124131    +
124132    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
124133    +
124134    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
124135    +
124136    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
124137    +
124138    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
124139    +
124140    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
124141    +
124142    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
124143    +
124144    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
124145    +
124146    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
124147    +
124148    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
124149    +
124150    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
124151    +
124152    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
124153    +
124154    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
124155    +
124156    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
124157    +
124158    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
124159    +
124160    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
124161    +
124162    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
124163    +
124164    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
124165    +
124166    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
124167    +
124168    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
124169    +
124170    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
124171    +
124172    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
124173    +
124174    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
124175    +
124176    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
124177    +
124178    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
124179    +
124180    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
124181    +
124182    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
124183    +
124184    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
124185    +
124186    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
124187    +
124188    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
124189    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
124190    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
124191    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
124192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124194    +end;
MPRINT(EM_DIAGRAM):   end;
124195    +else do;
MPRINT(EM_DIAGRAM):   else do;
124196    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124197    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
124198    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124199    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124200    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
124201    +   end;
MPRINT(EM_DIAGRAM):   end;
124202    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124203    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
124204    +   end;
MPRINT(EM_DIAGRAM):   end;
124205    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124206    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
124207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124209    +   end;
MPRINT(EM_DIAGRAM):   end;
124210    +end;
MPRINT(EM_DIAGRAM):   end;
124211    +
124212    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
124213    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
124214    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
124215    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
124216    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124217    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124218    +end;
MPRINT(EM_DIAGRAM):   end;
124219    +else do;
MPRINT(EM_DIAGRAM):   else do;
124220    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124221    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
124222    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124223    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124224    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
124225    +   end;
MPRINT(EM_DIAGRAM):   end;
124226    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124227    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
124228    +   end;
MPRINT(EM_DIAGRAM):   end;
124229    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124230    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
124231    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124232    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124233    +   end;
MPRINT(EM_DIAGRAM):   end;
124234    +end;
MPRINT(EM_DIAGRAM):   end;
124235    +
124236    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
124237    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
124238    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
124239    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
124240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124242    +end;
MPRINT(EM_DIAGRAM):   end;
124243    +else do;
MPRINT(EM_DIAGRAM):   else do;
124244    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124245    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
124246    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124247    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124248    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
124249    +   end;
MPRINT(EM_DIAGRAM):   end;
124250    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124251    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
124252    +   end;
MPRINT(EM_DIAGRAM):   end;
124253    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124254    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
124255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124257    +   end;
MPRINT(EM_DIAGRAM):   end;
124258    +end;
MPRINT(EM_DIAGRAM):   end;
124259    +
124260    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
124261    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
124262    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
124263    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
124264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124266    +end;
MPRINT(EM_DIAGRAM):   end;
124267    +else do;
MPRINT(EM_DIAGRAM):   else do;
124268    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124269    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
124270    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124271    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124272    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
124273    +   end;
MPRINT(EM_DIAGRAM):   end;
124274    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124275    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
124276    +   end;
MPRINT(EM_DIAGRAM):   end;
124277    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124278    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
124279    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124280    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124281    +   end;
MPRINT(EM_DIAGRAM):   end;
124282    +end;
MPRINT(EM_DIAGRAM):   end;
124283    +
124284    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
124285    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
124286    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
124287    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
124288    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124289    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124290    +end;
MPRINT(EM_DIAGRAM):   end;
124291    +else do;
MPRINT(EM_DIAGRAM):   else do;
124292    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124293    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
124294    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124295    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124296    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
124297    +   end;
MPRINT(EM_DIAGRAM):   end;
124298    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124299    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
124300    +   end;
MPRINT(EM_DIAGRAM):   end;
124301    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124302    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
124303    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124304    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124305    +   end;
MPRINT(EM_DIAGRAM):   end;
124306    +end;
MPRINT(EM_DIAGRAM):   end;
124307    +
124308    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
124309    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
124310    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
124311    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
124312    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124313    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124314    +end;
MPRINT(EM_DIAGRAM):   end;
124315    +else do;
MPRINT(EM_DIAGRAM):   else do;
124316    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124317    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
124318    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124319    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124320    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
124321    +   end;
MPRINT(EM_DIAGRAM):   end;
124322    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124323    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
124324    +   end;
MPRINT(EM_DIAGRAM):   end;
124325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124326    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
124327    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124328    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124329    +   end;
MPRINT(EM_DIAGRAM):   end;
124330    +end;
MPRINT(EM_DIAGRAM):   end;
124331    +
124332    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
124333    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
124334    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
124335    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
124336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124338    +end;
MPRINT(EM_DIAGRAM):   end;
124339    +else do;
MPRINT(EM_DIAGRAM):   else do;
124340    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124341    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
124342    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124343    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
124344    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
124345    +   end;
MPRINT(EM_DIAGRAM):   end;
124346    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
124347    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
124348    +   end;
MPRINT(EM_DIAGRAM):   end;
124349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124350    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
124351    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124352    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124353    +   end;
MPRINT(EM_DIAGRAM):   end;
124354    +end;
MPRINT(EM_DIAGRAM):   end;
124355    +
124356    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
124357    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
124358    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
124359    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
124360    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
124361    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
124362    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
124363    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
124364    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
124365    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
124366    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
124367    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
124368    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124370    +end;
MPRINT(EM_DIAGRAM):   end;
124371    +else do;
MPRINT(EM_DIAGRAM):   else do;
124372    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
124373    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
124374    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124375    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
124376    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
124377    +   end;
MPRINT(EM_DIAGRAM):   end;
124378    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
124379    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
124380    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
124381    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
124382    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
124383    +   end;
MPRINT(EM_DIAGRAM):   end;
124384    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
124385    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
124386    +   end;
MPRINT(EM_DIAGRAM):   end;
124387    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
124388    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
124389    +   end;
MPRINT(EM_DIAGRAM):   end;
124390    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
124391    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
124392    +   end;
MPRINT(EM_DIAGRAM):   end;
124393    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124394    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
124395    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
124396    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
124397    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
124398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124400    +   end;
MPRINT(EM_DIAGRAM):   end;
124401    +end;
MPRINT(EM_DIAGRAM):   end;
124402    +
124403    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
124404    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
124405    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
124406    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
124407    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
124408    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
124409    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
124410    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
124411    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
124412    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
124413    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
124414    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
124415    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
124416    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124417    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124418    +end;
MPRINT(EM_DIAGRAM):   end;
124419    +else do;
MPRINT(EM_DIAGRAM):   else do;
124420    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
124421    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
124422    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124423    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
124424    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
124425    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
124426    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
124427    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
124428    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
124429    +         end;
MPRINT(EM_DIAGRAM):   end;
124430    +         else do;
MPRINT(EM_DIAGRAM):   else do;
124431    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
124432    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
124433    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
124434    +            end;
MPRINT(EM_DIAGRAM):   end;
124435    +         end;
MPRINT(EM_DIAGRAM):   end;
124436    +      end;
MPRINT(EM_DIAGRAM):   end;
124437    +      else do;
MPRINT(EM_DIAGRAM):   else do;
124438    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
124439    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
124440    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
124441    +         end;
MPRINT(EM_DIAGRAM):   end;
124442    +      end;
MPRINT(EM_DIAGRAM):   end;
124443    +   end;
MPRINT(EM_DIAGRAM):   end;
124444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124445    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
124446    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
124447    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
124448    +      end;
MPRINT(EM_DIAGRAM):   end;
124449    +      else do;
MPRINT(EM_DIAGRAM):   else do;
124450    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
124451    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
124452    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
124453    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
124454    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
124455    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
124456    +         end;
MPRINT(EM_DIAGRAM):   end;
124457    +      end;
MPRINT(EM_DIAGRAM):   end;
124458    +   end;
MPRINT(EM_DIAGRAM):   end;
124459    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
124460    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
124461    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
124462    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
124463    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
124464    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124465    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124466    +   end;
MPRINT(EM_DIAGRAM):   end;
124467    +end;
MPRINT(EM_DIAGRAM):   end;
124468    +
124469    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124470    +*** Checking missing input Interval
124471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
124472    +
124473    +IF NMISS(
124474    +   AcceptedCmpTotal ,
124475    +   Age ,
124476    +   Frq ,
124477    +   Income ,
124478    +   Kidhome ,
124479    +   MntFishProducts ,
124480    +   MntFruits ,
124481    +   MntGoldProds ,
124482    +   MntSweetProducts ,
124483    +   MonthsAsCustomer ,
124484    +   NumDealsPurchases ,
124485    +   NumWebVisitsMonth ,
124486    +   RFMstat ,
124487    +   RMntFrq ,
124488    +   Recency ,
124489    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
124490    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
124491    +
124492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124493    +END;
MPRINT(EM_DIAGRAM):   END;
124494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124495    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
124496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124497    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
124498    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
124499    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
124500    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
124501    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
124502    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
124503    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
124504    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
124505    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
124506    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
124507    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
124508    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
124509    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
124510    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
124511    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
124512    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
124513    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
124514    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
124515    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
124516    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
124517    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
124518    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
124519    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
124520    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
124521    +END;
MPRINT(EM_DIAGRAM):   END;
124522    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
124523    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
124524    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
124525    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
124526    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
124527    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
124528    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
124529    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
124530    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
124531    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
124532    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
124533    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
124534    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
124535    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
124536    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
124537    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
124538    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
124539    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
124540    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
124541    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
124542    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
124543    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
124544    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
124545    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
124546    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
124547    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
124548    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
124549    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
124550    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
124551    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
124552    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
124553    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
124554    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
124555    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
124556    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
124557    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
124558    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
124559    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
124560    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
124561    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
124562    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
124563    +END;
MPRINT(EM_DIAGRAM):   END;
124564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124565    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
124566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124568    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
124569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124571    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
124572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124573    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
124574    +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
124575    +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
124576    +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
124577    +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
124578    +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
124579    +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
124580    +          +     -0.1740957673716 * S_MonthsAsCustomer
124581    +          +     0.66565026405117 * S_NumDealsPurchases
124582    +          +     0.43247206282836 * S_NumWebVisitsMonth
124583    +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
124584    +        S_RMntFrq  +    -0.28002323732518 * S_Recency
124585    +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
124586    +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
124587    +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
124588    +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
124589    +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
124590    +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
124591    +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
124592    +          +    -0.06176784990963 * S_MonthsAsCustomer
124593    +          +    -0.11740415005833 * S_NumDealsPurchases
124594    +          +    -0.17084845478672 * S_NumWebVisitsMonth
124595    +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
124596    +        S_RMntFrq  +     0.54983271222574 * S_Recency
124597    +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
124598    +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
124599    +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
124600    +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
124601    +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
124602    +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
124603    +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
124604    +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
124605    +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
124606    +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
124607    +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
124608    +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
124609    +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
124610    +        EducationGraduation  +     0.22632282500966 * EducationMaster
124611    +          +     -0.0800438380883 * Marital_StatusDivorced
124612    +          +     0.44505766937623 * Marital_StatusMarried
124613    +          +    -0.57546515626468 * Marital_StatusSingle
124614    +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
124615    +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
124616    +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
124617    +        EducationGraduation  +      0.0794165981215 * EducationMaster
124618    +          +    -0.20291653465543 * Marital_StatusDivorced
124619    +          +     0.39547414450617 * Marital_StatusMarried
124620    +          +    -0.37001331184001 * Marital_StatusSingle
124621    +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
124622    +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
124623    +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
124624    +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
124625    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
124626    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
124627    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
124628    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
124629    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
124630    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
124631    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
124632    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
124633    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
124634    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
124635    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
124636    +END;
MPRINT(EM_DIAGRAM):   END;
124637    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
124638    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
124639    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
124640    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
124641    +END;
MPRINT(EM_DIAGRAM):   END;
124642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124643    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
124644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124645    +
124646    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
124647    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
124648    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
124649    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
124650    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
124651    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124652    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
124653    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
124654    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
124655    +end;
MPRINT(EM_DIAGRAM):   end;
124656    +else do;
MPRINT(EM_DIAGRAM):   else do;
124657    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
124658    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
124659    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
124660    +   end;
MPRINT(EM_DIAGRAM):   end;
124661    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
124662    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
124663    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
124664    +   end;
MPRINT(EM_DIAGRAM):   end;
124665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124666    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
124667    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
124668    +   end;
MPRINT(EM_DIAGRAM):   end;
124669    +end;
MPRINT(EM_DIAGRAM):   end;
124670    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
124671    +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
124672    +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
124673    +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
124674    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
124675    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
124676    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
124677    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
124678    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
124679    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
124680    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
124681    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
124682    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
124683    +END;
MPRINT(EM_DIAGRAM):   END;
124684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
124685    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
124686    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
124687    +END;
MPRINT(EM_DIAGRAM):   END;
124688    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
124689    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
124690    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
124691    +END;
MPRINT(EM_DIAGRAM):   END;
124692    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
124693    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
124694    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
124695    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
124696    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
124697    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
124698    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
124699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124700    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
124701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
124702    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
124703    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
124704    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
124705    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
124706    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
124707    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
124708    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
124709    +END;
MPRINT(EM_DIAGRAM):   END;
124710    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
124711    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
124712    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
124713    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
124714    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
124715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124716    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
124717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124718    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
124719    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
124720    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
124721    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
124722    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124723    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
124724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124725    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
124726    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
124727    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
124728    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124729    +* Ensmbl54: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 6 of 7;
124730    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124732    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
124733    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
124734    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
124735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
124736    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
124737    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
124738    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
124739    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
124740    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
124741    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
124742    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
124743    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
124744    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
124745    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
124746    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
124747    +LENGTH _WARN_ $4
124748    +      F_DepVar  $ 12
124749    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
124750    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
124751    +
124752    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
124753    +
124754    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
124755    +
124756    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
124757    +
124758    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
124759    +
124760    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
124761    +
124762    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
124763    +
124764    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
124765    +
124766    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
124767    +
124768    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
124769    +
124770    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
124771    +
124772    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
124773    +
124774    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
124775    +
124776    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
124777    +
124778    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
124779    +
124780    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
124781    +
124782    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
124783    +
124784    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
124785    +
124786    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
124787    +
124788    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
124789    +
124790    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
124791    +
124792    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
124793    +
124794    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
124795    +
124796    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
124797    +
124798    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
124799    +
124800    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
124801    +
124802    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
124803    +
124804    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
124805    +
124806    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
124807    +
124808    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
124809    +
124810    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
124811    +
124812    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
124813    +
124814    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
124815    +
124816    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
124817    +
124818    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
124819    +
124820    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
124821    +
124822    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
124823    +
124824    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
124825    +
124826    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
124827    +
124828    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
124829    +
124830    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
124831    +
124832    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
124833    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
124834    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
124835    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
124836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124838    +end;
MPRINT(EM_DIAGRAM):   end;
124839    +else do;
MPRINT(EM_DIAGRAM):   else do;
124840    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124841    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
124842    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124843    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124844    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
124845    +   end;
MPRINT(EM_DIAGRAM):   end;
124846    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124847    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
124848    +   end;
MPRINT(EM_DIAGRAM):   end;
124849    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124850    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
124851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124853    +   end;
MPRINT(EM_DIAGRAM):   end;
124854    +end;
MPRINT(EM_DIAGRAM):   end;
124855    +
124856    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
124857    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
124858    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
124859    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
124860    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124862    +end;
MPRINT(EM_DIAGRAM):   end;
124863    +else do;
MPRINT(EM_DIAGRAM):   else do;
124864    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124865    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
124866    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124867    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124868    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
124869    +   end;
MPRINT(EM_DIAGRAM):   end;
124870    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124871    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
124872    +   end;
MPRINT(EM_DIAGRAM):   end;
124873    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124874    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
124875    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124876    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124877    +   end;
MPRINT(EM_DIAGRAM):   end;
124878    +end;
MPRINT(EM_DIAGRAM):   end;
124879    +
124880    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
124881    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
124882    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
124883    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
124884    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124885    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124886    +end;
MPRINT(EM_DIAGRAM):   end;
124887    +else do;
MPRINT(EM_DIAGRAM):   else do;
124888    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124889    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
124890    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124891    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124892    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
124893    +   end;
MPRINT(EM_DIAGRAM):   end;
124894    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124895    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
124896    +   end;
MPRINT(EM_DIAGRAM):   end;
124897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124898    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
124899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124901    +   end;
MPRINT(EM_DIAGRAM):   end;
124902    +end;
MPRINT(EM_DIAGRAM):   end;
124903    +
124904    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
124905    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
124906    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
124907    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
124908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124910    +end;
MPRINT(EM_DIAGRAM):   end;
124911    +else do;
MPRINT(EM_DIAGRAM):   else do;
124912    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124913    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
124914    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124915    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124916    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
124917    +   end;
MPRINT(EM_DIAGRAM):   end;
124918    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124919    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
124920    +   end;
MPRINT(EM_DIAGRAM):   end;
124921    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124922    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
124923    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124924    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124925    +   end;
MPRINT(EM_DIAGRAM):   end;
124926    +end;
MPRINT(EM_DIAGRAM):   end;
124927    +
124928    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
124929    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
124930    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
124931    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
124932    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124934    +end;
MPRINT(EM_DIAGRAM):   end;
124935    +else do;
MPRINT(EM_DIAGRAM):   else do;
124936    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124937    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
124938    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124939    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124940    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
124941    +   end;
MPRINT(EM_DIAGRAM):   end;
124942    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124943    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
124944    +   end;
MPRINT(EM_DIAGRAM):   end;
124945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124946    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
124947    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124948    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124949    +   end;
MPRINT(EM_DIAGRAM):   end;
124950    +end;
MPRINT(EM_DIAGRAM):   end;
124951    +
124952    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
124953    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
124954    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
124955    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
124956    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124958    +end;
MPRINT(EM_DIAGRAM):   end;
124959    +else do;
MPRINT(EM_DIAGRAM):   else do;
124960    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124961    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
124962    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124963    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
124964    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
124965    +   end;
MPRINT(EM_DIAGRAM):   end;
124966    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
124967    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
124968    +   end;
MPRINT(EM_DIAGRAM):   end;
124969    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124970    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
124971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124973    +   end;
MPRINT(EM_DIAGRAM):   end;
124974    +end;
MPRINT(EM_DIAGRAM):   end;
124975    +
124976    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
124977    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
124978    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
124979    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
124980    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
124981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124982    +end;
MPRINT(EM_DIAGRAM):   end;
124983    +else do;
MPRINT(EM_DIAGRAM):   else do;
124984    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
124985    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
124986    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
124987    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
124988    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
124989    +   end;
MPRINT(EM_DIAGRAM):   end;
124990    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
124991    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
124992    +   end;
MPRINT(EM_DIAGRAM):   end;
124993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
124994    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
124995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
124996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
124997    +   end;
MPRINT(EM_DIAGRAM):   end;
124998    +end;
MPRINT(EM_DIAGRAM):   end;
124999    +
125000    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
125001    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
125002    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
125003    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
125004    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
125005    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
125006    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
125007    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
125008    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
125009    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
125010    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
125011    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
125012    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125013    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125014    +end;
MPRINT(EM_DIAGRAM):   end;
125015    +else do;
MPRINT(EM_DIAGRAM):   else do;
125016    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
125017    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
125018    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125019    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
125020    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
125021    +   end;
MPRINT(EM_DIAGRAM):   end;
125022    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
125023    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
125024    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
125025    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
125026    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
125027    +   end;
MPRINT(EM_DIAGRAM):   end;
125028    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
125029    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
125030    +   end;
MPRINT(EM_DIAGRAM):   end;
125031    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
125032    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
125033    +   end;
MPRINT(EM_DIAGRAM):   end;
125034    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
125035    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
125036    +   end;
MPRINT(EM_DIAGRAM):   end;
125037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125038    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
125039    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
125040    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
125041    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
125042    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125043    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125044    +   end;
MPRINT(EM_DIAGRAM):   end;
125045    +end;
MPRINT(EM_DIAGRAM):   end;
125046    +
125047    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
125048    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
125049    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
125050    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
125051    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
125052    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
125053    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
125054    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
125055    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
125056    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
125057    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
125058    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
125059    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
125060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125062    +end;
MPRINT(EM_DIAGRAM):   end;
125063    +else do;
MPRINT(EM_DIAGRAM):   else do;
125064    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
125065    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
125066    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125067    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
125068    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
125069    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
125070    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
125071    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
125072    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125073    +         end;
MPRINT(EM_DIAGRAM):   end;
125074    +         else do;
MPRINT(EM_DIAGRAM):   else do;
125075    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
125076    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
125077    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125078    +            end;
MPRINT(EM_DIAGRAM):   end;
125079    +         end;
MPRINT(EM_DIAGRAM):   end;
125080    +      end;
MPRINT(EM_DIAGRAM):   end;
125081    +      else do;
MPRINT(EM_DIAGRAM):   else do;
125082    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
125083    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
125084    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125085    +         end;
MPRINT(EM_DIAGRAM):   end;
125086    +      end;
MPRINT(EM_DIAGRAM):   end;
125087    +   end;
MPRINT(EM_DIAGRAM):   end;
125088    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125089    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
125090    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
125091    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125092    +      end;
MPRINT(EM_DIAGRAM):   end;
125093    +      else do;
MPRINT(EM_DIAGRAM):   else do;
125094    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
125095    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
125096    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
125097    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
125098    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
125099    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125100    +         end;
MPRINT(EM_DIAGRAM):   end;
125101    +      end;
MPRINT(EM_DIAGRAM):   end;
125102    +   end;
MPRINT(EM_DIAGRAM):   end;
125103    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
125104    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
125105    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
125106    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
125107    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
125108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125110    +   end;
MPRINT(EM_DIAGRAM):   end;
125111    +end;
MPRINT(EM_DIAGRAM):   end;
125112    +
125113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125114    +*** Checking missing input Interval
125115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
125116    +
125117    +IF NMISS(
125118    +   AcceptedCmpTotal ,
125119    +   Age ,
125120    +   Frq ,
125121    +   Income ,
125122    +   Kidhome ,
125123    +   MntFishProducts ,
125124    +   MntFruits ,
125125    +   MntGoldProds ,
125126    +   MntSweetProducts ,
125127    +   MonthsAsCustomer ,
125128    +   NumDealsPurchases ,
125129    +   NumWebVisitsMonth ,
125130    +   RFMstat ,
125131    +   RMntFrq ,
125132    +   Recency ,
125133    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
125134    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
125135    +
125136    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125137    +END;
MPRINT(EM_DIAGRAM):   END;
125138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125139    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
125140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125141    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125142    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
125143    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
125144    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
125145    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
125146    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
125147    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
125148    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
125149    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
125150    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
125151    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
125152    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
125153    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
125154    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
125155    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
125156    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
125157    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
125158    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
125159    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
125160    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
125161    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
125162    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
125163    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
125164    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
125165    +END;
MPRINT(EM_DIAGRAM):   END;
125166    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125167    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
125168    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
125169    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
125170    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
125171    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
125172    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
125173    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
125174    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
125175    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
125176    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
125177    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
125178    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
125179    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
125180    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
125181    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
125182    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
125183    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
125184    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
125185    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
125186    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
125187    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
125188    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
125189    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
125190    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
125191    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
125192    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
125193    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
125194    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
125195    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
125196    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
125197    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
125198    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
125199    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
125200    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
125201    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
125202    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
125203    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
125204    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
125205    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
125206    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
125207    +END;
MPRINT(EM_DIAGRAM):   END;
125208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125209    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
125210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125212    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
125213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125215    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
125216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125218    +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
125219    +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
125220    +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
125221    +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
125222    +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
125223    +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
125224    +          +     0.07696704519183 * S_MonthsAsCustomer
125225    +          +     0.06885982009617 * S_NumDealsPurchases
125226    +          +     0.18284147478918 * S_NumWebVisitsMonth
125227    +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
125228    +        S_RMntFrq  +    -0.65651411558717 * S_Recency
125229    +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
125230    +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
125231    +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
125232    +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
125233    +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
125234    +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
125235    +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
125236    +          +     0.19400730773464 * S_MonthsAsCustomer
125237    +          +    -1.36455521037197 * S_NumDealsPurchases
125238    +          +    -1.07068059346196 * S_NumWebVisitsMonth
125239    +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
125240    +        S_RMntFrq  +     1.36066079800227 * S_Recency
125241    +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
125242    +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
125243    +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
125244    +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
125245    +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
125246    +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
125247    +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
125248    +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
125249    +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
125250    +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
125251    +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
125252    +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
125253    +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
125254    +        EducationGraduation  +    -0.13796568916415 * EducationMaster
125255    +          +     0.23432241402098 * Marital_StatusDivorced
125256    +          +    -0.46302700269027 * Marital_StatusMarried
125257    +          +      0.4032168653504 * Marital_StatusSingle
125258    +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
125259    +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
125260    +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
125261    +        EducationGraduation  +     -0.3917553423088 * EducationMaster
125262    +          +    -0.31347503340603 * Marital_StatusDivorced
125263    +          +    -0.20319530959178 * Marital_StatusMarried
125264    +          +     0.48298350411196 * Marital_StatusSingle
125265    +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
125266    +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
125267    +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
125268    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
125269    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
125270    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
125271    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
125272    +END;
MPRINT(EM_DIAGRAM):   END;
125273    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125274    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
125275    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
125276    +END;
MPRINT(EM_DIAGRAM):   END;
125277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125278    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
125279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125280    +
125281    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
125282    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
125283    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
125284    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
125285    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
125286    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125287    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
125288    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
125289    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
125290    +end;
MPRINT(EM_DIAGRAM):   end;
125291    +else do;
MPRINT(EM_DIAGRAM):   else do;
125292    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
125293    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
125294    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
125295    +   end;
MPRINT(EM_DIAGRAM):   end;
125296    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
125297    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
125298    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
125299    +   end;
MPRINT(EM_DIAGRAM):   end;
125300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125301    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
125302    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
125303    +   end;
MPRINT(EM_DIAGRAM):   end;
125304    +end;
MPRINT(EM_DIAGRAM):   end;
125305    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125306    +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
125307    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
125308    +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
125309    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
125310    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
125311    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
125312    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
125313    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
125314    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
125315    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
125316    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
125317    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
125318    +END;
MPRINT(EM_DIAGRAM):   END;
125319    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125320    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
125321    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
125322    +END;
MPRINT(EM_DIAGRAM):   END;
125323    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
125324    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
125325    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
125326    +END;
MPRINT(EM_DIAGRAM):   END;
125327    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
125328    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
125329    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
125330    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
125331    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
125332    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
125333    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
125334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125335    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
125336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125337    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
125338    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
125339    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
125340    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
125341    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
125342    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
125343    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
125344    +END;
MPRINT(EM_DIAGRAM):   END;
125345    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
125346    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
125347    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
125348    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
125349    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
125350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125351    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
125352    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125353    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
125354    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
125355    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
125356    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
125357    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125358    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
125359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125360    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
125361    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
125362    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
125363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125364    +* Ensmbl54: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 7 of 7;
125365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125367    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
125368    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
125369    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
125370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
125371    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
125372    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
125373    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
125374    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
125375    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
125376    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
125377    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
125378    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
125379    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
125380    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
125381    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
125382    +LENGTH _WARN_ $4
125383    +      F_DepVar  $ 12
125384    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
125385    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
125386    +
125387    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
125388    +
125389    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
125390    +
125391    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
125392    +
125393    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
125394    +
125395    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
125396    +
125397    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
125398    +
125399    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
125400    +
125401    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
125402    +
125403    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
125404    +
125405    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
125406    +
125407    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
125408    +
125409    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
125410    +
125411    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
125412    +
125413    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
125414    +
125415    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
125416    +
125417    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
125418    +
125419    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
125420    +
125421    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
125422    +
125423    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
125424    +
125425    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
125426    +
125427    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
125428    +
125429    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
125430    +
125431    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
125432    +
125433    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
125434    +
125435    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
125436    +
125437    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
125438    +
125439    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
125440    +
125441    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
125442    +
125443    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
125444    +
125445    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
125446    +
125447    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
125448    +
125449    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
125450    +
125451    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
125452    +
125453    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
125454    +
125455    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
125456    +
125457    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
125458    +
125459    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
125460    +
125461    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
125462    +
125463    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
125464    +
125465    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
125466    +
125467    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
125468    +
125469    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
125470    +
125471    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
125472    +
125473    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
125474    +
125475    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
125476    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
125477    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
125478    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
125479    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125480    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125481    +end;
MPRINT(EM_DIAGRAM):   end;
125482    +else do;
MPRINT(EM_DIAGRAM):   else do;
125483    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125484    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
125485    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125486    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125487    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
125488    +   end;
MPRINT(EM_DIAGRAM):   end;
125489    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125490    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
125491    +   end;
MPRINT(EM_DIAGRAM):   end;
125492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125493    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
125494    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125495    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125496    +   end;
MPRINT(EM_DIAGRAM):   end;
125497    +end;
MPRINT(EM_DIAGRAM):   end;
125498    +
125499    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
125500    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
125501    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
125502    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
125503    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125504    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125505    +end;
MPRINT(EM_DIAGRAM):   end;
125506    +else do;
MPRINT(EM_DIAGRAM):   else do;
125507    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125508    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
125509    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125510    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125511    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
125512    +   end;
MPRINT(EM_DIAGRAM):   end;
125513    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125514    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
125515    +   end;
MPRINT(EM_DIAGRAM):   end;
125516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125517    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
125518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125520    +   end;
MPRINT(EM_DIAGRAM):   end;
125521    +end;
MPRINT(EM_DIAGRAM):   end;
125522    +
125523    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
125524    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
125525    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
125526    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
125527    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125529    +end;
MPRINT(EM_DIAGRAM):   end;
125530    +else do;
MPRINT(EM_DIAGRAM):   else do;
125531    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125532    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
125533    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125534    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125535    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
125536    +   end;
MPRINT(EM_DIAGRAM):   end;
125537    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125538    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
125539    +   end;
MPRINT(EM_DIAGRAM):   end;
125540    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125541    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
125542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125544    +   end;
MPRINT(EM_DIAGRAM):   end;
125545    +end;
MPRINT(EM_DIAGRAM):   end;
125546    +
125547    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
125548    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
125549    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
125550    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
125551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125553    +end;
MPRINT(EM_DIAGRAM):   end;
125554    +else do;
MPRINT(EM_DIAGRAM):   else do;
125555    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125556    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
125557    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125558    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125559    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
125560    +   end;
MPRINT(EM_DIAGRAM):   end;
125561    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125562    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
125563    +   end;
MPRINT(EM_DIAGRAM):   end;
125564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125565    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
125566    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125567    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125568    +   end;
MPRINT(EM_DIAGRAM):   end;
125569    +end;
MPRINT(EM_DIAGRAM):   end;
125570    +
125571    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
125572    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
125573    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
125574    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
125575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125577    +end;
MPRINT(EM_DIAGRAM):   end;
125578    +else do;
MPRINT(EM_DIAGRAM):   else do;
125579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125580    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
125581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125582    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125583    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
125584    +   end;
MPRINT(EM_DIAGRAM):   end;
125585    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125586    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
125587    +   end;
MPRINT(EM_DIAGRAM):   end;
125588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125589    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
125590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125592    +   end;
MPRINT(EM_DIAGRAM):   end;
125593    +end;
MPRINT(EM_DIAGRAM):   end;
125594    +
125595    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
125596    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
125597    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
125598    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
125599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125601    +end;
MPRINT(EM_DIAGRAM):   end;
125602    +else do;
MPRINT(EM_DIAGRAM):   else do;
125603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125604    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
125605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125606    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
125607    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
125608    +   end;
MPRINT(EM_DIAGRAM):   end;
125609    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
125610    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
125611    +   end;
MPRINT(EM_DIAGRAM):   end;
125612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125613    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
125614    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125615    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125616    +   end;
MPRINT(EM_DIAGRAM):   end;
125617    +end;
MPRINT(EM_DIAGRAM):   end;
125618    +
125619    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
125620    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
125621    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
125622    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
125623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125625    +end;
MPRINT(EM_DIAGRAM):   end;
125626    +else do;
MPRINT(EM_DIAGRAM):   else do;
125627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
125628    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
125629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125630    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
125631    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
125632    +   end;
MPRINT(EM_DIAGRAM):   end;
125633    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
125634    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
125635    +   end;
MPRINT(EM_DIAGRAM):   end;
125636    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125637    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
125638    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125639    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125640    +   end;
MPRINT(EM_DIAGRAM):   end;
125641    +end;
MPRINT(EM_DIAGRAM):   end;
125642    +
125643    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
125644    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
125645    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
125646    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
125647    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
125648    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
125649    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
125650    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
125651    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
125652    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
125653    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
125654    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
125655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125657    +end;
MPRINT(EM_DIAGRAM):   end;
125658    +else do;
MPRINT(EM_DIAGRAM):   else do;
125659    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
125660    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
125661    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125662    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
125663    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
125664    +   end;
MPRINT(EM_DIAGRAM):   end;
125665    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
125666    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
125667    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
125668    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
125669    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
125670    +   end;
MPRINT(EM_DIAGRAM):   end;
125671    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
125672    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
125673    +   end;
MPRINT(EM_DIAGRAM):   end;
125674    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
125675    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
125676    +   end;
MPRINT(EM_DIAGRAM):   end;
125677    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
125678    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
125679    +   end;
MPRINT(EM_DIAGRAM):   end;
125680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125681    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
125682    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
125683    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
125684    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
125685    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125686    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125687    +   end;
MPRINT(EM_DIAGRAM):   end;
125688    +end;
MPRINT(EM_DIAGRAM):   end;
125689    +
125690    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
125691    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
125692    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
125693    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
125694    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
125695    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
125696    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
125697    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
125698    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
125699    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
125700    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
125701    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
125702    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
125703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
125704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125705    +end;
MPRINT(EM_DIAGRAM):   end;
125706    +else do;
MPRINT(EM_DIAGRAM):   else do;
125707    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
125708    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
125709    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
125710    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
125711    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
125712    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
125713    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
125714    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
125715    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125716    +         end;
MPRINT(EM_DIAGRAM):   end;
125717    +         else do;
MPRINT(EM_DIAGRAM):   else do;
125718    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
125719    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
125720    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125721    +            end;
MPRINT(EM_DIAGRAM):   end;
125722    +         end;
MPRINT(EM_DIAGRAM):   end;
125723    +      end;
MPRINT(EM_DIAGRAM):   end;
125724    +      else do;
MPRINT(EM_DIAGRAM):   else do;
125725    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
125726    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
125727    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125728    +         end;
MPRINT(EM_DIAGRAM):   end;
125729    +      end;
MPRINT(EM_DIAGRAM):   end;
125730    +   end;
MPRINT(EM_DIAGRAM):   end;
125731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
125732    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
125733    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
125734    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125735    +      end;
MPRINT(EM_DIAGRAM):   end;
125736    +      else do;
MPRINT(EM_DIAGRAM):   else do;
125737    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
125738    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
125739    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
125740    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
125741    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
125742    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
125743    +         end;
MPRINT(EM_DIAGRAM):   end;
125744    +      end;
MPRINT(EM_DIAGRAM):   end;
125745    +   end;
MPRINT(EM_DIAGRAM):   end;
125746    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
125747    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
125748    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
125749    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
125750    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
125751    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
125752    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125753    +   end;
MPRINT(EM_DIAGRAM):   end;
125754    +end;
MPRINT(EM_DIAGRAM):   end;
125755    +
125756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125757    +*** Checking missing input Interval
125758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
125759    +
125760    +IF NMISS(
125761    +   AcceptedCmpTotal ,
125762    +   Age ,
125763    +   Frq ,
125764    +   Income ,
125765    +   Kidhome ,
125766    +   MntFishProducts ,
125767    +   MntFruits ,
125768    +   MntGoldProds ,
125769    +   MntSweetProducts ,
125770    +   MonthsAsCustomer ,
125771    +   NumDealsPurchases ,
125772    +   NumWebVisitsMonth ,
125773    +   RFMstat ,
125774    +   RMntFrq ,
125775    +   Recency ,
125776    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
125777    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
125778    +
125779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
125780    +END;
MPRINT(EM_DIAGRAM):   END;
125781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125782    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
125783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125784    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125785    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
125786    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
125787    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
125788    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
125789    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
125790    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
125791    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
125792    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
125793    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
125794    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
125795    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
125796    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
125797    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
125798    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
125799    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
125800    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
125801    +        NumDealsPurchases ;
The SAS System

MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
125802    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
125803    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
125804    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
125805    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
125806    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
125807    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
125808    +END;
MPRINT(EM_DIAGRAM):   END;
125809    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125810    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
125811    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
125812    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
125813    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
125814    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
125815    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
125816    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
125817    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
125818    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
125819    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
125820    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
125821    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
125822    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
125823    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
125824    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
125825    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
125826    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
125827    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
125828    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
125829    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
125830    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
125831    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
125832    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
125833    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
125834    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
125835    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
125836    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
125837    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
125838    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
125839    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
125840    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
125841    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
125842    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
125843    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
125844    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
125845    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
125846    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
125847    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
125848    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
125849    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
125850    +END;
MPRINT(EM_DIAGRAM):   END;
125851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125852    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
125853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125855    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
125856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125858    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
125859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125860    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125861    +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
125862    +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
125863    +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
125864    +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
125865    +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
125866    +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
125867    +          +    -0.01191239814261 * S_MonthsAsCustomer
125868    +          +      -0.307259983666 * S_NumDealsPurchases
125869    +          +    -0.23972300101674 * S_NumWebVisitsMonth
125870    +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
125871    +        S_RMntFrq  +     0.32671320165482 * S_Recency
125872    +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
125873    +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
125874    +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
125875    +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
125876    +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
125877    +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
125878    +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
125879    +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
125880    +        EducationGraduation  +    -0.14651231631393 * EducationMaster
125881    +          +     -0.0692762335753 * Marital_StatusDivorced
125882    +          +     0.02472293911071 * Marital_StatusMarried
125883    +          +     0.04038393550437 * Marital_StatusSingle
125884    +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
125885    +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
125886    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
125887    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
125888    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
125889    +END;
MPRINT(EM_DIAGRAM):   END;
125890    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125891    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
125892    +END;
MPRINT(EM_DIAGRAM):   END;
125893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125894    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
125895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125896    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125897    +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
125898    +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
125899    +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
125900    +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
125901    +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
125902    +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
125903    +          +     0.14524334187971 * S_MonthsAsCustomer
125904    +          +    -0.58464031025411 * S_NumDealsPurchases
125905    +          +    -0.10768856151333 * S_NumWebVisitsMonth
125906    +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
125907    +        S_RMntFrq  +    -0.04430281297191 * S_Recency
125908    +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
125909    +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
125910    +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
125911    +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
125912    +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
125913    +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
125914    +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
125915    +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
125916    +        EducationGraduation  +    -0.37768027773032 * EducationMaster
125917    +          +     0.07007941100006 * Marital_StatusDivorced
125918    +          +     -0.7850554528889 * Marital_StatusMarried
125919    +          +     1.17661634109847 * Marital_StatusSingle
125920    +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
125921    +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
125922    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
125923    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
125924    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
125925    +END;
MPRINT(EM_DIAGRAM):   END;
125926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125927    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
125928    +END;
MPRINT(EM_DIAGRAM):   END;
125929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125930    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
125931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125933    +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
125934    +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
125935    +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
125936    +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
125937    +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
125938    +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
125939    +          +    -2.17154324602167 * S_MonthsAsCustomer
125940    +          +    -1.39930460918007 * S_NumDealsPurchases
125941    +          +    -0.16044576482901 * S_NumWebVisitsMonth
125942    +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
125943    +        S_RMntFrq  +    -0.73252715992964 * S_Recency
125944    +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
125945    +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
125946    +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
125947    +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
125948    +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
125949    +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
125950    +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
125951    +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
125952    +        EducationGraduation  +    -0.35403398893388 * EducationMaster
125953    +          +     0.83271778325587 * Marital_StatusDivorced
125954    +          +     0.79137899511518 * Marital_StatusMarried
125955    +          +    -0.51320080030576 * Marital_StatusSingle
125956    +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
125957    +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
125958    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
125959    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
125960    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
125961    +END;
MPRINT(EM_DIAGRAM):   END;
125962    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125963    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
125964    +END;
MPRINT(EM_DIAGRAM):   END;
125965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125966    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
125967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125968    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125969    +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
125970    +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
125971    +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
125972    +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
125973    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
125974    +END;
MPRINT(EM_DIAGRAM):   END;
125975    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125976    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
125977    +END;
MPRINT(EM_DIAGRAM):   END;
125978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125979    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
125980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125981    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125982    +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
125983    +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
125984    +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
125985    +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
125986    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
125987    +END;
MPRINT(EM_DIAGRAM):   END;
125988    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
125989    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
125990    +END;
MPRINT(EM_DIAGRAM):   END;
125991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125992    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
125993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
125994    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
125995    +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
125996    +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
125997    +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
125998    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
125999    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
126000    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
126001    +END;
MPRINT(EM_DIAGRAM):   END;
126002    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
126003    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
126004    +END;
MPRINT(EM_DIAGRAM):   END;
126005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126006    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
126007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126008    +
126009    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
126010    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
126011    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
126012    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
126013    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
126014    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126015    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
126016    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
126017    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
126018    +end;
MPRINT(EM_DIAGRAM):   end;
126019    +else do;
MPRINT(EM_DIAGRAM):   else do;
126020    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
126021    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
126022    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
126023    +   end;
MPRINT(EM_DIAGRAM):   end;
126024    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
126025    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
126026    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
126027    +   end;
MPRINT(EM_DIAGRAM):   end;
126028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126029    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
126030    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
126031    +   end;
MPRINT(EM_DIAGRAM):   end;
126032    +end;
MPRINT(EM_DIAGRAM):   end;
126033    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
126034    +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
126035    +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
126036    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
126037    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
126038    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
126039    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
126040    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
126041    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
126042    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
126043    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
126044    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
126045    +END;
MPRINT(EM_DIAGRAM):   END;
126046    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
126047    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
126048    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
126049    +END;
MPRINT(EM_DIAGRAM):   END;
126050    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
126051    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
126052    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
126053    +END;
MPRINT(EM_DIAGRAM):   END;
126054    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
126055    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
126056    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
126057    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
126058    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
126059    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
126060    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
126061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126062    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
126063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126064    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
126065    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
126066    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
126067    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
126068    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
126069    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
126070    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
126071    +END;
MPRINT(EM_DIAGRAM):   END;
126072    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
126073    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
126074    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
126075    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
126076    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
126077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126078    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
126079    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126080    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
126081    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
126082    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
126083    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
126084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126085    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
126086    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126087    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
126088    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
126089    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
126090    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126091    +* Ensmbl54: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Average Posteriors of 7 models;
126092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126093    +P_DepVar1 = (
126094    +AutoNeural36_P_DepVar1 +
126095    +AutoNeural35_P_DepVar1 +
126096    +AutoNeural34_P_DepVar1 +
126097    +AutoNeural40_P_DepVar1 +
126098    +AutoNeural39_P_DepVar1 +
126099    +AutoNeural38_P_DepVar1 +
126100    +AutoNeural37_P_DepVar1
126101    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural36_P_DepVar1 + AutoNeural35_P_DepVar1 + 
AutoNeural34_P_DepVar1 + AutoNeural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + AutoNeural37_P_DepVar1 )/7;
126102    +P_DepVar0 = (
126103    +AutoNeural36_P_DepVar0 +
126104    +AutoNeural35_P_DepVar0 +
126105    +AutoNeural34_P_DepVar0 +
126106    +AutoNeural40_P_DepVar0 +
126107    +AutoNeural39_P_DepVar0 +
126108    +AutoNeural38_P_DepVar0 +
126109    +AutoNeural37_P_DepVar0
126110    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural36_P_DepVar0 + AutoNeural35_P_DepVar0 + 
AutoNeural34_P_DepVar0 + AutoNeural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + AutoNeural37_P_DepVar0 )/7;
126111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126112    +* Ensmbl54: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Classification Vars;
126113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126114    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
126115    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
126116    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
126117    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
126118    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
126119    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
126120    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
126121    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
126122    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
126123    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
126124    +end;
MPRINT(EM_DIAGRAM):   end;
126125    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
126126    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
126127    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
126128    +end;
MPRINT(EM_DIAGRAM):   end;
126129    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
126130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126131    +* Ensmbl54: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Producing Unformatted variable;
126132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126133    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
126134    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
126135    +else
126136    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
126137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126138    +* Ensmbl54: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing _WARN_ Variable;
126139    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126140    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
126141    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
126142    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
126143    +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126143   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126144    +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126144   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126145    +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126145   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126146    +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126146   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126147    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126147   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126148    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126148   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126149    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126149   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126150    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126150   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126151    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126151   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126152    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126152   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126153    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126153   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126154    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126154   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126155    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126155   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126156    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126156   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126157    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126157   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126158    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126158   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126159    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126159   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126160    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126160   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126161    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126161   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126162    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126162   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126163    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126163   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126164    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126164   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126165    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126165   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126166    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126166   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126167    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
126167   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
126168    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
126168   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
126169    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
126169   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
126170    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
126170   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
126171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126172    +* Ensmbl54: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Residual Vars;
126173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126174    +if
126175    +F_DepVar NE '1'
126176    +AND F_DepVar NE '0'
126177    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
126178    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
126179    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
126180    +end;
MPRINT(EM_DIAGRAM):   end;
126181    +else do;
MPRINT(EM_DIAGRAM):   else do;
126182    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
126183    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
126184    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
126185    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
126186    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
126187    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
126188    +END;
MPRINT(EM_DIAGRAM):   END;
126189    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
126190     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL54_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
126191     quit;
126192     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
126193     filename emflow
126193   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring AUTONEURAL36_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126194     *------------------------------------------------------------*;
126195     * Ensmbl54: Scoring AUTONEURAL36_VALIDATE data;
126196     *------------------------------------------------------------*;
126197     data EMWS8.Ensmbl54_VALIDATE
126198     / view=EMWS8.Ensmbl54_VALIDATE
126199     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_VALIDATE / view=EMWS8.Ensmbl54_VALIDATE ;
126200     set EMWS8.AutoNeural36_VALIDATE
126201     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_VALIDATE ;
126202     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas.
126203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126204    +* Ensmbl54: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Combine model for DepVar;
126205    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126206    +* Ensmbl54: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 1 of 7;
126207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126209    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
126210    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
126211    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
126212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126214    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
126215    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
126216    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
126217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126219    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
126220    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
126221    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
126222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126224    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
126225    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
126226    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
126227    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126228    +
126229    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
126230    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
126230   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
126231    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
126232    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
126233    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
126234    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
126235    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
126236    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126237    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
126238    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
126239    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
126240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126241    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126242    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
126243    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126244    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
126245    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
126246    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
126247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126248    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
126249    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
126250    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
126251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126253    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
126254    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
126255    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
126256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126258    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
126259    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
126260    +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
126261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
126262    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
126263    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
126264    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
126265    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
126266    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
126267    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
126268    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
126269    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
126270    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
126271    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
126272    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
126273    +LENGTH _WARN_ $4
126274    +      F_DepVar  $ 12
126275    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
126276    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
126277    +
126278    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
126279    +
126280    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
126281    +
126282    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
126283    +
126284    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
126285    +
126286    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
126287    +
126288    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
126289    +
126290    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
126291    +
126292    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
126293    +
126294    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
126295    +
126296    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
126297    +
126298    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
126299    +
126300    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
126301    +
126302    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
126303    +
126304    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
126305    +
126306    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
126307    +
126308    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
126309    +
126310    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
126311    +
126312    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
126313    +
126314    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
126315    +
126316    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
126317    +
126318    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
126319    +
126320    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
126321    +
126322    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
126323    +
126324    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
126325    +
126326    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
126327    +
126328    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
126329    +
126330    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
126331    +
126332    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
126333    +
126334    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
126335    +
126336    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
126337    +
126338    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
126339    +
126340    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
126341    +
126342    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
126343    +
126344    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
126345    +
126346    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
126347    +
126348    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
126349    +
126350    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
126351    +
126352    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
126353    +
126354    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
126355    +
126356    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
126357    +
126358    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
126359    +
126360    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
126361    +
126362    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
126363    +
126364    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
126365    +
126366    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
126367    +
126368    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
126369    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
126370    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
126371    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
126372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126374    +end;
MPRINT(EM_DIAGRAM):   end;
126375    +else do;
MPRINT(EM_DIAGRAM):   else do;
126376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126377    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
126378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126379    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126380    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
126381    +   end;
MPRINT(EM_DIAGRAM):   end;
126382    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126383    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
126384    +   end;
MPRINT(EM_DIAGRAM):   end;
126385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126386    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
126387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126389    +   end;
MPRINT(EM_DIAGRAM):   end;
126390    +end;
MPRINT(EM_DIAGRAM):   end;
126391    +
126392    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
126393    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
126394    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
126395    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
126396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126398    +end;
MPRINT(EM_DIAGRAM):   end;
126399    +else do;
MPRINT(EM_DIAGRAM):   else do;
126400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126401    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
126402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126403    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126404    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
126405    +   end;
MPRINT(EM_DIAGRAM):   end;
126406    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126407    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
126408    +   end;
MPRINT(EM_DIAGRAM):   end;
126409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126410    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
126411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126413    +   end;
MPRINT(EM_DIAGRAM):   end;
126414    +end;
MPRINT(EM_DIAGRAM):   end;
126415    +
126416    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
126417    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
126418    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
126419    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
126420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126422    +end;
MPRINT(EM_DIAGRAM):   end;
126423    +else do;
MPRINT(EM_DIAGRAM):   else do;
126424    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126425    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
126426    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126427    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126428    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
126429    +   end;
MPRINT(EM_DIAGRAM):   end;
126430    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126431    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
126432    +   end;
MPRINT(EM_DIAGRAM):   end;
126433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126434    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
126435    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126436    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126437    +   end;
MPRINT(EM_DIAGRAM):   end;
126438    +end;
MPRINT(EM_DIAGRAM):   end;
126439    +
126440    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
126441    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
126442    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
126443    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
126444    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126445    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126446    +end;
MPRINT(EM_DIAGRAM):   end;
126447    +else do;
MPRINT(EM_DIAGRAM):   else do;
126448    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126449    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
126450    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126451    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126452    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
126453    +   end;
MPRINT(EM_DIAGRAM):   end;
126454    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126455    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
126456    +   end;
MPRINT(EM_DIAGRAM):   end;
126457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126458    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
126459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126461    +   end;
MPRINT(EM_DIAGRAM):   end;
126462    +end;
MPRINT(EM_DIAGRAM):   end;
126463    +
126464    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
126465    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
126466    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
126467    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
126468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126470    +end;
MPRINT(EM_DIAGRAM):   end;
126471    +else do;
MPRINT(EM_DIAGRAM):   else do;
126472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126473    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
126474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126475    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126476    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
126477    +   end;
MPRINT(EM_DIAGRAM):   end;
126478    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126479    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
126480    +   end;
MPRINT(EM_DIAGRAM):   end;
126481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126482    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
126483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126485    +   end;
MPRINT(EM_DIAGRAM):   end;
126486    +end;
MPRINT(EM_DIAGRAM):   end;
126487    +
126488    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
126489    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
126490    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
126491    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
126492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126494    +end;
MPRINT(EM_DIAGRAM):   end;
126495    +else do;
MPRINT(EM_DIAGRAM):   else do;
126496    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126497    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
126498    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126499    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
126500    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
126501    +   end;
MPRINT(EM_DIAGRAM):   end;
126502    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
126503    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
126504    +   end;
MPRINT(EM_DIAGRAM):   end;
126505    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126506    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
126507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126509    +   end;
MPRINT(EM_DIAGRAM):   end;
126510    +end;
MPRINT(EM_DIAGRAM):   end;
126511    +
126512    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
126513    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
126514    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
126515    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
126516    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126517    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126518    +end;
MPRINT(EM_DIAGRAM):   end;
126519    +else do;
MPRINT(EM_DIAGRAM):   else do;
126520    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
126521    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
126522    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126523    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
126524    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
126525    +   end;
MPRINT(EM_DIAGRAM):   end;
126526    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
126527    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
126528    +   end;
MPRINT(EM_DIAGRAM):   end;
126529    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126530    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
126531    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126532    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126533    +   end;
MPRINT(EM_DIAGRAM):   end;
126534    +end;
MPRINT(EM_DIAGRAM):   end;
126535    +
126536    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
126537    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
126538    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
126539    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
126540    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
126541    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
126542    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
126543    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
126544    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
126545    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
126546    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
126547    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
126548    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126549    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126550    +end;
MPRINT(EM_DIAGRAM):   end;
126551    +else do;
MPRINT(EM_DIAGRAM):   else do;
126552    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
126553    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
126554    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126555    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
126556    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
126557    +   end;
MPRINT(EM_DIAGRAM):   end;
126558    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
126559    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
126560    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
126561    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
126562    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
126563    +   end;
MPRINT(EM_DIAGRAM):   end;
126564    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
126565    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
126566    +   end;
MPRINT(EM_DIAGRAM):   end;
126567    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
126568    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
126569    +   end;
MPRINT(EM_DIAGRAM):   end;
126570    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
126571    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
126572    +   end;
MPRINT(EM_DIAGRAM):   end;
126573    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126574    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
126575    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
126576    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
126577    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
126578    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126579    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126580    +   end;
MPRINT(EM_DIAGRAM):   end;
126581    +end;
MPRINT(EM_DIAGRAM):   end;
126582    +
126583    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
126584    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
126585    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
126586    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
126587    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
126588    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
126589    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
126590    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
126591    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
126592    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
126593    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
126594    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
126595    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
126596    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
126597    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126598    +end;
MPRINT(EM_DIAGRAM):   end;
126599    +else do;
MPRINT(EM_DIAGRAM):   else do;
126600    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
126601    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
126602    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126603    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
126604    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
126605    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
126606    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
126607    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
126608    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
126609    +         end;
MPRINT(EM_DIAGRAM):   end;
126610    +         else do;
MPRINT(EM_DIAGRAM):   else do;
126611    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
126612    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
126613    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
126614    +            end;
MPRINT(EM_DIAGRAM):   end;
126615    +         end;
MPRINT(EM_DIAGRAM):   end;
126616    +      end;
MPRINT(EM_DIAGRAM):   end;
126617    +      else do;
MPRINT(EM_DIAGRAM):   else do;
126618    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
126619    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
126620    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
126621    +         end;
MPRINT(EM_DIAGRAM):   end;
126622    +      end;
MPRINT(EM_DIAGRAM):   end;
126623    +   end;
MPRINT(EM_DIAGRAM):   end;
126624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126625    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
126626    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
126627    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
126628    +      end;
MPRINT(EM_DIAGRAM):   end;
126629    +      else do;
MPRINT(EM_DIAGRAM):   else do;
126630    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
126631    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
126632    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
126633    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
126634    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
126635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
126636    +         end;
MPRINT(EM_DIAGRAM):   end;
126637    +      end;
MPRINT(EM_DIAGRAM):   end;
126638    +   end;
MPRINT(EM_DIAGRAM):   end;
126639    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
126640    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
126641    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
126642    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
126643    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
126644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
126645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126646    +   end;
MPRINT(EM_DIAGRAM):   end;
126647    +end;
MPRINT(EM_DIAGRAM):   end;
126648    +
126649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126650    +*** Checking missing input Interval
126651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
126652    +
126653    +IF NMISS(
126654    +   AcceptedCmpTotal ,
126655    +   Age ,
126656    +   Frq ,
126657    +   Income ,
126658    +   Kidhome ,
126659    +   MntFishProducts ,
126660    +   MntFruits ,
126661    +   MntGoldProds ,
126662    +   MntSweetProducts ,
126663    +   MonthsAsCustomer ,
126664    +   NumDealsPurchases ,
126665    +   NumWebVisitsMonth ,
126666    +   RFMstat ,
126667    +   RMntFrq ,
126668    +   Recency ,
126669    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
126670    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
126671    +
126672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
126673    +END;
MPRINT(EM_DIAGRAM):   END;
126674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126675    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
126676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126677    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
126678    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
126679    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
126680    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
126681    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
126682    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
126683    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
126684    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
126685    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
126686    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
126687    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
126688    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
126689    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
126690    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
126691    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
126692    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
126693    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
126694    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
126695    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
126696    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
126697    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
126698    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
126699    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
126700    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
126701    +END;
MPRINT(EM_DIAGRAM):   END;
126702    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
126703    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
126704    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
126705    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
126706    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
126707    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
126708    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
126709    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
126710    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
126711    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
126712    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
126713    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
126714    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
126715    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
126716    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
126717    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
126718    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
126719    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
126720    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
126721    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
126722    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
126723    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
126724    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
126725    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
126726    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
126727    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
126728    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
126729    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
126730    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
126731    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
126732    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
126733    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
126734    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
126735    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
126736    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
126737    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
126738    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
126739    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
126740    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
126741    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
126742    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
126743    +END;
MPRINT(EM_DIAGRAM):   END;
126744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126745    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
126746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126748    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
126749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126751    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
126752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
126754    +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
126755    +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
126756    +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
126757    +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
126758    +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
126759    +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
126760    +          +     1.47210732135355 * S_MonthsAsCustomer
126761    +          +     0.85741098948561 * S_NumDealsPurchases
126762    +          +     0.47124997442086 * S_NumWebVisitsMonth
126763    +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
126764    +        S_RMntFrq  +     0.42017826752434 * S_Recency
126765    +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
126766    +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
126767    +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
126768    +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
126769    +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
126770    +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
126771    +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
126772    +          +     0.74811152666015 * S_MonthsAsCustomer
126773    +          +    -0.13168708818154 * S_NumDealsPurchases
126774    +          +    -0.51935779196522 * S_NumWebVisitsMonth
126775    +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
126776    +        S_RMntFrq  +     1.96758846931972 * S_Recency
126777    +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
126778    +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
126779    +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
126780    +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
126781    +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
126782    +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
126783    +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
126784    +          +     0.11776941975292 * S_MonthsAsCustomer
126785    +          +    -0.69977862189457 * S_NumDealsPurchases
126786    +          +    -0.26676589341422 * S_NumWebVisitsMonth
126787    +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
126788    +        S_RMntFrq  +     1.53487074713045 * S_Recency
126789    +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
126790    +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
126791    +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
126792    +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
126793    +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
126794    +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
126795    +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
126796    +          +     0.46606320110885 * S_MonthsAsCustomer
126797    +          +     1.64885970718717 * S_NumDealsPurchases
126798    +          +     1.70233049691156 * S_NumWebVisitsMonth
126799    +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
126800    +        S_RMntFrq  +    -1.33025042025966 * S_Recency
126801    +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
126802    +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
126803    +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
126804    +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
126805    +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
126806    +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
126807    +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
126808    +          +     0.25703511103123 * S_MonthsAsCustomer
126809    +          +     0.81449309285524 * S_NumDealsPurchases
126810    +          +     0.65863550896078 * S_NumWebVisitsMonth
126811    +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
126812    +        S_RMntFrq  +     0.35298837231553 * S_Recency
126813    +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
126814    +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
126815    +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
126816    +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
126817    +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
126818    +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
126819    +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
126820    +          +     0.79681190434731 * S_MonthsAsCustomer
126821    +          +    -0.93973916927987 * S_NumDealsPurchases
126822    +          +     1.37415777280471 * S_NumWebVisitsMonth
126823    +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
126824    +        S_RMntFrq  +     0.25579910148098 * S_Recency
126825    +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
126826    +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
126827    +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
126828    +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
126829    +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
126830    +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
126831    +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
126832    +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
126833    +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
126834    +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
126835    +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
126836    +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
126837    +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
126838    +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
126839    +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
126840    +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
126841    +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
126842    +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
126843    +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
126844    +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
126845    +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
126846    +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
126847    +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
126848    +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
126849    +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
126850    +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
126851    +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
126852    +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
126853    +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
126854    +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
126855    +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
126856    +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
126857    +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
126858    +        EducationGraduation  +     0.53978142914157 * EducationMaster
126859    +          +    -0.28915302940579 * Marital_StatusDivorced
126860    +          +     0.36400858753372 * Marital_StatusMarried
126861    +          +     0.64088916620982 * Marital_StatusSingle
126862    +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
126863    +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
126864    +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
126865    +        EducationGraduation  +     0.31774696403611 * EducationMaster
126866    +          +    -0.48311224079569 * Marital_StatusDivorced
126867    +          +     0.78522892664414 * Marital_StatusMarried
126868    +          +    -0.52144588286939 * Marital_StatusSingle
126869    +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
126870    +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
126871    +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
126872    +        EducationGraduation  +     1.62119993408702 * EducationMaster
126873    +          +    -1.10138941531054 * Marital_StatusDivorced
126874    +          +     1.91098461544032 * Marital_StatusMarried
126875    +          +    -1.96662881570281 * Marital_StatusSingle
126876    +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
126877    +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
126878    +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
126879    +        EducationGraduation  +    -0.47265183904634 * EducationMaster
126880    +          +    -0.26938567401241 * Marital_StatusDivorced
126881    +          +      0.5252138734125 * Marital_StatusMarried
126882    +          +    -0.77744801183604 * Marital_StatusSingle
126883    +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
126884    +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
126885    +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
126886    +        EducationGraduation  +     1.34706628408556 * EducationMaster
126887    +          +    -0.49116995167497 * Marital_StatusDivorced
126888    +          +     1.22243596432371 * Marital_StatusMarried
126889    +          +    -1.22268267917833 * Marital_StatusSingle
126890    +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
126891    +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
126892    +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
126893    +        EducationGraduation  +     0.19530936178176 * EducationMaster
126894    +          +    -0.21134253419933 * Marital_StatusDivorced
126895    +          +     0.87168965818013 * Marital_StatusMarried
126896    +          +     0.07539748751767 * Marital_StatusSingle
126897    +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
126898    +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
126899    +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
126900    +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
126901    +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
126902    +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
126903    +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
126904    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
126905    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
126906    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
126907    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
126908    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
126909    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
126910    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
126911    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
126912    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
126913    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
126914    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
126915    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
126916    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
126917    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
126918    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
126919    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
126920    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
126921    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
126922    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
126923    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
126924    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
126925    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
126926    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
126927    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
126928    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
126929    +END;
MPRINT(EM_DIAGRAM):   END;
126930    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
126931    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
126932    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
126933    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
126934    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
126935    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
126936    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
126937    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
126938    +END;
MPRINT(EM_DIAGRAM):   END;
126939    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126940    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
126941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126942    +
126943    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
126944    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
126945    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
126946    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
126947    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
126948    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
126949    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
126950    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
126951    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
126952    +end;
MPRINT(EM_DIAGRAM):   end;
126953    +else do;
MPRINT(EM_DIAGRAM):   else do;
126954    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
126955    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
126956    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
126957    +   end;
MPRINT(EM_DIAGRAM):   end;
126958    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
126959    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
126960    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
126961    +   end;
MPRINT(EM_DIAGRAM):   end;
126962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
126963    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
126964    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
126965    +   end;
MPRINT(EM_DIAGRAM):   end;
126966    +end;
MPRINT(EM_DIAGRAM):   end;
126967    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
126968    +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
126969    +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
126970    +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
126971    +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
126972    +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
126973    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
126974    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
126975    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
126976    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
126977    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
126978    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
126979    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
126980    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
126981    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
126982    +END;
MPRINT(EM_DIAGRAM):   END;
126983    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
126984    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
126985    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
126986    +END;
MPRINT(EM_DIAGRAM):   END;
126987    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
126988    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
126989    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
126990    +END;
MPRINT(EM_DIAGRAM):   END;
126991    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
126992    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
126993    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
126994    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
126995    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
126996    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
126997    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
126998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
126999    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
127000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127001    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
127002    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
127003    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
127004    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
127005    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
127006    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
127007    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
127008    +END;
MPRINT(EM_DIAGRAM):   END;
127009    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
127010    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
127011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
127012    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
127013    +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
127014    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127015    +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
127016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127017    +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
127018    +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
127019    +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
127020    +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
127021    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127022    +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
127023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127024    +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
127025    +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
127026    +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
127027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127028    +* Ensmbl54: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 2 of 7;
127029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127031    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
127032    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
127033    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
127034    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127035    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
127036    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
127037    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
127038    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
127039    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
127040    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
127041    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
127042    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
127043    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
127044    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
127045    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
127046    +LENGTH _WARN_ $4
127047    +      F_DepVar  $ 12
127048    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
127049    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
127050    +
127051    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
127052    +
127053    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
127054    +
127055    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
127056    +
127057    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
127058    +
127059    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
127060    +
127061    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
127062    +
127063    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
127064    +
127065    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
127066    +
127067    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
127068    +
127069    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
127070    +
127071    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
127072    +
127073    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
127074    +
127075    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
127076    +
127077    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
127078    +
127079    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
127080    +
127081    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
127082    +
127083    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
127084    +
127085    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
127086    +
127087    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
127088    +
127089    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
127090    +
127091    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
127092    +
127093    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
127094    +
127095    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
127096    +
127097    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
127098    +
127099    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
127100    +
127101    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
127102    +
127103    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
127104    +
127105    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
127106    +
127107    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
127108    +
127109    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
127110    +
127111    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
127112    +
127113    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
127114    +
127115    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
127116    +
127117    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
127118    +
127119    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
127120    +
127121    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
127122    +
127123    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
127124    +
127125    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
127126    +
127127    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
127128    +
127129    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
127130    +
127131    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
127132    +
127133    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
127134    +
127135    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
127136    +
127137    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
127138    +
127139    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
127140    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
127141    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
127142    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
127143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127145    +end;
MPRINT(EM_DIAGRAM):   end;
127146    +else do;
MPRINT(EM_DIAGRAM):   else do;
127147    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127148    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
127149    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127150    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127151    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
127152    +   end;
MPRINT(EM_DIAGRAM):   end;
127153    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127154    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
127155    +   end;
MPRINT(EM_DIAGRAM):   end;
127156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127157    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
127158    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127159    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127160    +   end;
MPRINT(EM_DIAGRAM):   end;
127161    +end;
MPRINT(EM_DIAGRAM):   end;
127162    +
127163    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
127164    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
127165    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
127166    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
127167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127169    +end;
MPRINT(EM_DIAGRAM):   end;
127170    +else do;
MPRINT(EM_DIAGRAM):   else do;
127171    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127172    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
127173    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127174    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127175    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
127176    +   end;
MPRINT(EM_DIAGRAM):   end;
127177    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127178    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
127179    +   end;
MPRINT(EM_DIAGRAM):   end;
127180    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127181    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
127182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127184    +   end;
MPRINT(EM_DIAGRAM):   end;
127185    +end;
MPRINT(EM_DIAGRAM):   end;
127186    +
127187    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
127188    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
127189    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
127190    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
127191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127193    +end;
MPRINT(EM_DIAGRAM):   end;
127194    +else do;
MPRINT(EM_DIAGRAM):   else do;
127195    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127196    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
127197    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127198    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127199    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
127200    +   end;
MPRINT(EM_DIAGRAM):   end;
127201    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127202    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
127203    +   end;
MPRINT(EM_DIAGRAM):   end;
127204    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127205    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
127206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127208    +   end;
MPRINT(EM_DIAGRAM):   end;
127209    +end;
MPRINT(EM_DIAGRAM):   end;
127210    +
127211    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
127212    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
127213    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
127214    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
127215    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127216    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127217    +end;
MPRINT(EM_DIAGRAM):   end;
127218    +else do;
MPRINT(EM_DIAGRAM):   else do;
127219    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127220    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
127221    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127222    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127223    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
127224    +   end;
MPRINT(EM_DIAGRAM):   end;
127225    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127226    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
127227    +   end;
MPRINT(EM_DIAGRAM):   end;
127228    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127229    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
127230    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127231    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127232    +   end;
MPRINT(EM_DIAGRAM):   end;
127233    +end;
MPRINT(EM_DIAGRAM):   end;
127234    +
127235    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
127236    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
127237    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
127238    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
127239    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127241    +end;
MPRINT(EM_DIAGRAM):   end;
127242    +else do;
MPRINT(EM_DIAGRAM):   else do;
127243    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127244    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
127245    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127246    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127247    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
127248    +   end;
MPRINT(EM_DIAGRAM):   end;
127249    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127250    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
127251    +   end;
MPRINT(EM_DIAGRAM):   end;
127252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127253    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
127254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127256    +   end;
MPRINT(EM_DIAGRAM):   end;
127257    +end;
MPRINT(EM_DIAGRAM):   end;
127258    +
127259    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
127260    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
127261    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
127262    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
127263    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127264    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127265    +end;
MPRINT(EM_DIAGRAM):   end;
127266    +else do;
MPRINT(EM_DIAGRAM):   else do;
127267    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127268    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
127269    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127270    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127271    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
127272    +   end;
MPRINT(EM_DIAGRAM):   end;
127273    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127274    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
127275    +   end;
MPRINT(EM_DIAGRAM):   end;
127276    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127277    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
127278    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127279    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127280    +   end;
MPRINT(EM_DIAGRAM):   end;
127281    +end;
MPRINT(EM_DIAGRAM):   end;
127282    +
127283    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
127284    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
127285    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
127286    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
127287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127289    +end;
MPRINT(EM_DIAGRAM):   end;
127290    +else do;
MPRINT(EM_DIAGRAM):   else do;
127291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127292    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
127293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127294    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
127295    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
127296    +   end;
MPRINT(EM_DIAGRAM):   end;
127297    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
127298    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
127299    +   end;
MPRINT(EM_DIAGRAM):   end;
127300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127301    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
127302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127304    +   end;
MPRINT(EM_DIAGRAM):   end;
127305    +end;
MPRINT(EM_DIAGRAM):   end;
127306    +
127307    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
127308    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
127309    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
127310    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
127311    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
127312    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
127313    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
127314    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
127315    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
127316    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
127317    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
127318    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
127319    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127321    +end;
MPRINT(EM_DIAGRAM):   end;
127322    +else do;
MPRINT(EM_DIAGRAM):   else do;
127323    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
127324    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
127325    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127326    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
127327    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
127328    +   end;
MPRINT(EM_DIAGRAM):   end;
127329    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
127330    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
127331    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
127332    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
127333    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
127334    +   end;
MPRINT(EM_DIAGRAM):   end;
127335    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
127336    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
127337    +   end;
MPRINT(EM_DIAGRAM):   end;
127338    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
127339    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
127340    +   end;
MPRINT(EM_DIAGRAM):   end;
127341    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
127342    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
127343    +   end;
MPRINT(EM_DIAGRAM):   end;
127344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127345    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
127346    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
127347    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
127348    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
127349    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127350    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127351    +   end;
MPRINT(EM_DIAGRAM):   end;
127352    +end;
MPRINT(EM_DIAGRAM):   end;
127353    +
127354    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
127355    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
127356    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
127357    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
127358    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
127359    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
127360    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
127361    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
127362    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
127363    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
127364    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
127365    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
127366    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
127367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127369    +end;
MPRINT(EM_DIAGRAM):   end;
127370    +else do;
MPRINT(EM_DIAGRAM):   else do;
127371    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
127372    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
127373    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127374    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
127375    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
127376    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
127377    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
127378    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
127379    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
127380    +         end;
MPRINT(EM_DIAGRAM):   end;
127381    +         else do;
MPRINT(EM_DIAGRAM):   else do;
127382    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
127383    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
127384    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
127385    +            end;
MPRINT(EM_DIAGRAM):   end;
127386    +         end;
MPRINT(EM_DIAGRAM):   end;
127387    +      end;
MPRINT(EM_DIAGRAM):   end;
127388    +      else do;
MPRINT(EM_DIAGRAM):   else do;
127389    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
127390    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
127391    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
127392    +         end;
MPRINT(EM_DIAGRAM):   end;
127393    +      end;
MPRINT(EM_DIAGRAM):   end;
127394    +   end;
MPRINT(EM_DIAGRAM):   end;
127395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127396    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
127397    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
127398    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
127399    +      end;
MPRINT(EM_DIAGRAM):   end;
127400    +      else do;
MPRINT(EM_DIAGRAM):   else do;
127401    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
127402    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
127403    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
127404    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
127405    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
127406    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
127407    +         end;
MPRINT(EM_DIAGRAM):   end;
127408    +      end;
MPRINT(EM_DIAGRAM):   end;
127409    +   end;
MPRINT(EM_DIAGRAM):   end;
127410    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
127411    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
127412    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
127413    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
127414    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
127415    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127416    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127417    +   end;
MPRINT(EM_DIAGRAM):   end;
127418    +end;
MPRINT(EM_DIAGRAM):   end;
127419    +
127420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127421    +*** Checking missing input Interval
127422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
127423    +
127424    +IF NMISS(
127425    +   AcceptedCmpTotal ,
127426    +   Age ,
127427    +   Frq ,
127428    +   Income ,
127429    +   Kidhome ,
127430    +   MntFishProducts ,
127431    +   MntFruits ,
127432    +   MntGoldProds ,
127433    +   MntSweetProducts ,
127434    +   MonthsAsCustomer ,
127435    +   NumDealsPurchases ,
127436    +   NumWebVisitsMonth ,
127437    +   RFMstat ,
127438    +   RMntFrq ,
127439    +   Recency ,
127440    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
127441    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
127442    +
127443    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127444    +END;
MPRINT(EM_DIAGRAM):   END;
127445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127446    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
127447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127448    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
127449    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
127450    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
127451    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
127452    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
127453    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
127454    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
127455    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
127456    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
127457    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
127458    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
127459    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
127460    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
127461    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
127462    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
127463    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
127464    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
127465    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
127466    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
127467    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
127468    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
127469    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
127470    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
127471    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
127472    +END;
MPRINT(EM_DIAGRAM):   END;
127473    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
127474    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
127475    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
127476    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
127477    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
127478    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
127479    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
127480    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
127481    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
127482    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
127483    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
127484    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
127485    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
127486    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
127487    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
127488    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
127489    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
127490    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
127491    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
127492    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
127493    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
127494    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
127495    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
127496    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
127497    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
127498    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
127499    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
127500    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
127501    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
127502    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
127503    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
127504    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
127505    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
127506    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
127507    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
127508    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
127509    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
127510    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
127511    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
127512    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
127513    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
127514    +END;
MPRINT(EM_DIAGRAM):   END;
127515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127516    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
127517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127519    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
127520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127522    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
127523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127524    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
127525    +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
127526    +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
127527    +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
127528    +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
127529    +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
127530    +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
127531    +          +    -0.63886071804247 * S_MonthsAsCustomer
127532    +          +      2.3488612891037 * S_NumDealsPurchases
127533    +          +     2.32996461229282 * S_NumWebVisitsMonth
127534    +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
127535    +        S_RMntFrq  +    -3.18599476886695 * S_Recency
127536    +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
127537    +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
127538    +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
127539    +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
127540    +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
127541    +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
127542    +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
127543    +          +     0.67699646331113 * S_MonthsAsCustomer
127544    +          +     0.70523055739254 * S_NumDealsPurchases
127545    +          +    -2.06406682205141 * S_NumWebVisitsMonth
127546    +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
127547    +        S_RMntFrq  +      5.0273672656487 * S_Recency
127548    +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
127549    +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
127550    +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
127551    +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
127552    +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
127553    +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
127554    +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
127555    +          +    -0.53694216899543 * S_MonthsAsCustomer
127556    +          +     0.25908508836257 * S_NumDealsPurchases
127557    +          +    -1.18459231573601 * S_NumWebVisitsMonth
127558    +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
127559    +        S_RMntFrq  +    -1.22457627833901 * S_Recency
127560    +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
127561    +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
127562    +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
127563    +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
127564    +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
127565    +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
127566    +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
127567    +          +    -0.08931078748332 * S_MonthsAsCustomer
127568    +          +    -0.46561962814047 * S_NumDealsPurchases
127569    +          +    -0.12241295445297 * S_NumWebVisitsMonth
127570    +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
127571    +        S_RMntFrq  +     0.96804234233608 * S_Recency
127572    +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
127573    +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
127574    +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
127575    +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
127576    +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
127577    +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
127578    +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
127579    +          +     -0.9186653552138 * S_MonthsAsCustomer
127580    +          +     2.17624393037629 * S_NumDealsPurchases
127581    +          +    -0.41699900714758 * S_NumWebVisitsMonth
127582    +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
127583    +        S_RMntFrq  +    -0.28987089218356 * S_Recency
127584    +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
127585    +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
127586    +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
127587    +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
127588    +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
127589    +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
127590    +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
127591    +          +     1.32865070741283 * S_MonthsAsCustomer
127592    +          +      0.8173864987673 * S_NumDealsPurchases
127593    +          +     1.04804775338375 * S_NumWebVisitsMonth
127594    +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
127595    +        S_RMntFrq  +     0.08690587270493 * S_Recency
127596    +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
127597    +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
127598    +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
127599    +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
127600    +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
127601    +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
127602    +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
127603    +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
127604    +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
127605    +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
127606    +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
127607    +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
127608    +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
127609    +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
127610    +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
127611    +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
127612    +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
127613    +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
127614    +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
127615    +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
127616    +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
127617    +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
127618    +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
127619    +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
127620    +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
127621    +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
127622    +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
127623    +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
127624    +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
127625    +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
127626    +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
127627    +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
127628    +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
127629    +        EducationGraduation  +    -0.31624019107181 * EducationMaster
127630    +          +    -0.82783034099773 * Marital_StatusDivorced
127631    +          +     0.39651075241405 * Marital_StatusMarried
127632    +          +     0.17323156170107 * Marital_StatusSingle
127633    +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
127634    +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
127635    +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
127636    +        EducationGraduation  +    -0.05323450200928 * EducationMaster
127637    +          +    -2.42314580112302 * Marital_StatusDivorced
127638    +          +     1.72709251267075 * Marital_StatusMarried
127639    +          +    -0.94350561587168 * Marital_StatusSingle
127640    +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
127641    +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
127642    +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
127643    +        EducationGraduation  +    -1.41317064722862 * EducationMaster
127644    +          +    -1.25323701705333 * Marital_StatusDivorced
127645    +          +    -0.72618091015379 * Marital_StatusMarried
127646    +          +     0.20594885266863 * Marital_StatusSingle
127647    +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
127648    +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
127649    +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
127650    +        EducationGraduation  +     0.75559299844055 * EducationMaster
127651    +          +     -0.9159957275063 * Marital_StatusDivorced
127652    +          +     2.06164757358796 * Marital_StatusMarried
127653    +          +    -1.61544310412168 * Marital_StatusSingle
127654    +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
127655    +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
127656    +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
127657    +        EducationGraduation  +     0.27594869585414 * EducationMaster
127658    +          +    -0.72418104768251 * Marital_StatusDivorced
127659    +          +     0.51077116161056 * Marital_StatusMarried
127660    +          +     -2.0857896888723 * Marital_StatusSingle
127661    +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
127662    +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
127663    +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
127664    +        EducationGraduation  +     -0.7287361872795 * EducationMaster
127665    +          +     0.64139965212864 * Marital_StatusDivorced
127666    +          +    -1.52338846336783 * Marital_StatusMarried
127667    +          +     1.94794784762286 * Marital_StatusSingle
127668    +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
127669    +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
127670    +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
127671    +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
127672    +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
127673    +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
127674    +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
127675    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
127676    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
127677    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
127678    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
127679    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
127680    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
127681    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
127682    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
127683    +END;
MPRINT(EM_DIAGRAM):   END;
127684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
127685    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
127686    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
127687    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
127688    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
127689    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
127690    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
127691    +END;
MPRINT(EM_DIAGRAM):   END;
127692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127693    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
127694    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127695    +
127696    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
127697    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
127698    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
127699    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
127700    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
127701    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127702    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
127703    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
127704    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
127705    +end;
MPRINT(EM_DIAGRAM):   end;
127706    +else do;
MPRINT(EM_DIAGRAM):   else do;
127707    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
127708    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
127709    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
127710    +   end;
MPRINT(EM_DIAGRAM):   end;
127711    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
127712    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
127713    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
127714    +   end;
MPRINT(EM_DIAGRAM):   end;
127715    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127716    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
127717    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
127718    +   end;
MPRINT(EM_DIAGRAM):   end;
127719    +end;
MPRINT(EM_DIAGRAM):   end;
127720    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
127721    +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
127722    +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
127723    +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
127724    +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
127725    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
127726    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
127727    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
127728    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
127729    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
127730    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
127731    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
127732    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
127733    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
127734    +END;
MPRINT(EM_DIAGRAM):   END;
127735    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
127736    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
127737    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
127738    +END;
MPRINT(EM_DIAGRAM):   END;
127739    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
127740    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
127741    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
127742    +END;
MPRINT(EM_DIAGRAM):   END;
127743    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
127744    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
127745    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
127746    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
127747    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
127748    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
127749    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
127750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127751    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
127752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
127753    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
127754    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
127755    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
127756    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
127757    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
127758    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
127759    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
127760    +END;
MPRINT(EM_DIAGRAM):   END;
127761    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
127762    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
127763    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
127764    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
127765    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
127766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127767    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
127768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127769    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
127770    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
127771    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
127772    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
127773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127774    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
127775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127776    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
127777    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
127778    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
127779    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127780    +* Ensmbl54: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 3 of 7;
127781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127782    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127783    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
127784    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
127785    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
127786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
127787    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
127788    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
127789    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
127790    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
127791    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
127792    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
127793    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
127794    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
127795    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
127796    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
127797    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
127798    +LENGTH _WARN_ $4
127799    +      F_DepVar  $ 12
127800    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
127801    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
127802    +
127803    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
127804    +
127805    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
127806    +
127807    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
127808    +
127809    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
127810    +
127811    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
127812    +
127813    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
127814    +
127815    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
127816    +
127817    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
127818    +
127819    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
127820    +
127821    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
127822    +
127823    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
127824    +
127825    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
127826    +
127827    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
127828    +
127829    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
127830    +
127831    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
127832    +
127833    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
127834    +
127835    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
127836    +
127837    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
127838    +
127839    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
127840    +
127841    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
127842    +
127843    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
127844    +
127845    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
127846    +
127847    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
127848    +
127849    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
127850    +
127851    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
127852    +
127853    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
127854    +
127855    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
127856    +
127857    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
127858    +
127859    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
127860    +
127861    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
127862    +
127863    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
127864    +
127865    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
127866    +
127867    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
127868    +
127869    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
127870    +
127871    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
127872    +
127873    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
127874    +
127875    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
127876    +
127877    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
127878    +
127879    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
127880    +
127881    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
127882    +
127883    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
127884    +
127885    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
127886    +
127887    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
127888    +
127889    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
127890    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
127891    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
127892    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
127893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127895    +end;
MPRINT(EM_DIAGRAM):   end;
127896    +else do;
MPRINT(EM_DIAGRAM):   else do;
127897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127898    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
127899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127900    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127901    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
127902    +   end;
MPRINT(EM_DIAGRAM):   end;
127903    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127904    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
127905    +   end;
MPRINT(EM_DIAGRAM):   end;
127906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127907    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
127908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127910    +   end;
MPRINT(EM_DIAGRAM):   end;
127911    +end;
MPRINT(EM_DIAGRAM):   end;
127912    +
127913    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
127914    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
127915    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
127916    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
127917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127919    +end;
MPRINT(EM_DIAGRAM):   end;
127920    +else do;
MPRINT(EM_DIAGRAM):   else do;
127921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127922    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
127923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127924    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127925    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
127926    +   end;
MPRINT(EM_DIAGRAM):   end;
127927    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127928    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
127929    +   end;
MPRINT(EM_DIAGRAM):   end;
127930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127931    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
127932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127934    +   end;
MPRINT(EM_DIAGRAM):   end;
127935    +end;
MPRINT(EM_DIAGRAM):   end;
127936    +
127937    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
127938    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
127939    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
127940    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
127941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127943    +end;
MPRINT(EM_DIAGRAM):   end;
127944    +else do;
MPRINT(EM_DIAGRAM):   else do;
127945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127946    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
127947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127948    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127949    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
127950    +   end;
MPRINT(EM_DIAGRAM):   end;
127951    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127952    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
127953    +   end;
MPRINT(EM_DIAGRAM):   end;
127954    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127955    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
127956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127958    +   end;
MPRINT(EM_DIAGRAM):   end;
127959    +end;
MPRINT(EM_DIAGRAM):   end;
127960    +
127961    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
127962    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
127963    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
127964    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
127965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127967    +end;
MPRINT(EM_DIAGRAM):   end;
127968    +else do;
MPRINT(EM_DIAGRAM):   else do;
127969    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127970    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
127971    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127972    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127973    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
127974    +   end;
MPRINT(EM_DIAGRAM):   end;
127975    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
127976    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
127977    +   end;
MPRINT(EM_DIAGRAM):   end;
127978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
127979    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
127980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
127981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127982    +   end;
MPRINT(EM_DIAGRAM):   end;
127983    +end;
MPRINT(EM_DIAGRAM):   end;
127984    +
127985    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
127986    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
127987    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
127988    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
127989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
127990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
127991    +end;
MPRINT(EM_DIAGRAM):   end;
127992    +else do;
MPRINT(EM_DIAGRAM):   else do;
127993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
127994    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
127995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
127996    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
127997    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
127998    +   end;
MPRINT(EM_DIAGRAM):   end;
127999    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128000    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
128001    +   end;
MPRINT(EM_DIAGRAM):   end;
128002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128003    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
128004    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128005    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128006    +   end;
MPRINT(EM_DIAGRAM):   end;
128007    +end;
MPRINT(EM_DIAGRAM):   end;
128008    +
128009    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
128010    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
128011    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
128012    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
128013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128015    +end;
MPRINT(EM_DIAGRAM):   end;
128016    +else do;
MPRINT(EM_DIAGRAM):   else do;
128017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128018    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
128019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128020    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128021    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
128022    +   end;
MPRINT(EM_DIAGRAM):   end;
128023    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128024    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
128025    +   end;
MPRINT(EM_DIAGRAM):   end;
128026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128027    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
128028    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128029    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128030    +   end;
MPRINT(EM_DIAGRAM):   end;
128031    +end;
MPRINT(EM_DIAGRAM):   end;
128032    +
128033    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
128034    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
128035    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
128036    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
128037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128039    +end;
MPRINT(EM_DIAGRAM):   end;
128040    +else do;
MPRINT(EM_DIAGRAM):   else do;
128041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128042    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
128043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128044    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
128045    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
128046    +   end;
MPRINT(EM_DIAGRAM):   end;
128047    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
128048    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
128049    +   end;
MPRINT(EM_DIAGRAM):   end;
128050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128051    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
128052    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128053    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128054    +   end;
MPRINT(EM_DIAGRAM):   end;
128055    +end;
MPRINT(EM_DIAGRAM):   end;
128056    +
128057    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
128058    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
128059    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
128060    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
128061    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
128062    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
128063    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
128064    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
128065    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
128066    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
128067    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
128068    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
128069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128071    +end;
MPRINT(EM_DIAGRAM):   end;
128072    +else do;
MPRINT(EM_DIAGRAM):   else do;
128073    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
128074    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
128075    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128076    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
128077    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
128078    +   end;
MPRINT(EM_DIAGRAM):   end;
128079    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
128080    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
128081    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
128082    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
128083    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
128084    +   end;
MPRINT(EM_DIAGRAM):   end;
128085    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
128086    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
128087    +   end;
MPRINT(EM_DIAGRAM):   end;
128088    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
128089    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
128090    +   end;
MPRINT(EM_DIAGRAM):   end;
128091    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
128092    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
128093    +   end;
MPRINT(EM_DIAGRAM):   end;
128094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128095    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
128096    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
128097    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
128098    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
128099    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128100    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128101    +   end;
MPRINT(EM_DIAGRAM):   end;
128102    +end;
MPRINT(EM_DIAGRAM):   end;
128103    +
128104    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
128105    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
128106    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
128107    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
128108    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
128109    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
128110    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
128111    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
128112    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
128113    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
128114    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
128115    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
128116    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
128117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128119    +end;
MPRINT(EM_DIAGRAM):   end;
128120    +else do;
MPRINT(EM_DIAGRAM):   else do;
128121    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
128122    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
128123    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128124    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
128125    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
128126    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
128127    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
128128    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
128129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128130    +         end;
MPRINT(EM_DIAGRAM):   end;
128131    +         else do;
MPRINT(EM_DIAGRAM):   else do;
128132    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
128133    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
128134    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128135    +            end;
MPRINT(EM_DIAGRAM):   end;
128136    +         end;
MPRINT(EM_DIAGRAM):   end;
128137    +      end;
MPRINT(EM_DIAGRAM):   end;
128138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
128139    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
128140    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
128141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128142    +         end;
MPRINT(EM_DIAGRAM):   end;
128143    +      end;
MPRINT(EM_DIAGRAM):   end;
128144    +   end;
MPRINT(EM_DIAGRAM):   end;
128145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128146    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
128147    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
128148    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128149    +      end;
MPRINT(EM_DIAGRAM):   end;
128150    +      else do;
MPRINT(EM_DIAGRAM):   else do;
128151    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
128152    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
128153    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
128154    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
128155    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
128156    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128157    +         end;
MPRINT(EM_DIAGRAM):   end;
128158    +      end;
MPRINT(EM_DIAGRAM):   end;
128159    +   end;
MPRINT(EM_DIAGRAM):   end;
128160    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
128161    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
128162    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
128163    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
128164    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
128165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128167    +   end;
MPRINT(EM_DIAGRAM):   end;
128168    +end;
MPRINT(EM_DIAGRAM):   end;
128169    +
128170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128171    +*** Checking missing input Interval
128172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
128173    +
128174    +IF NMISS(
128175    +   AcceptedCmpTotal ,
128176    +   Age ,
128177    +   Frq ,
128178    +   Income ,
128179    +   Kidhome ,
128180    +   MntFishProducts ,
128181    +   MntFruits ,
128182    +   MntGoldProds ,
128183    +   MntSweetProducts ,
128184    +   MonthsAsCustomer ,
128185    +   NumDealsPurchases ,
128186    +   NumWebVisitsMonth ,
128187    +   RFMstat ,
128188    +   RMntFrq ,
128189    +   Recency ,
128190    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
128191    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
128192    +
128193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128194    +END;
MPRINT(EM_DIAGRAM):   END;
128195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128196    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
128197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128198    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128199    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
128200    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
128201    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
128202    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
128203    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
128204    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
128205    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
128206    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
128207    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
128208    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
128209    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
128210    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
128211    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
128212    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
128213    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
128214    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
128215    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
128216    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
128217    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
128218    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
128219    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
128220    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
128221    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
128222    +END;
MPRINT(EM_DIAGRAM):   END;
128223    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128224    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
128225    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
128226    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
128227    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
128228    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
128229    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
128230    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
128231    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
128232    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
128233    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
128234    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
128235    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
128236    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
128237    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
128238    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
128239    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
128240    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
128241    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
128242    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
128243    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
128244    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
128245    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
128246    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
128247    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
128248    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
128249    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
128250    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
128251    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
128252    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
128253    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
128254    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
128255    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
128256    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
128257    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
128258    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
128259    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
128260    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
128261    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
128262    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
128263    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
128264    +END;
MPRINT(EM_DIAGRAM):   END;
128265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128266    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
128267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128269    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
128270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128272    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
128273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128274    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128275    +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
128276    +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
128277    +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
128278    +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
128279    +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
128280    +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
128281    +          +     0.04740894983714 * S_MonthsAsCustomer
128282    +          +     1.39008006467326 * S_NumDealsPurchases
128283    +          +     0.21608999126738 * S_NumWebVisitsMonth
128284    +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
128285    +        S_RMntFrq  +    -0.30830265825486 * S_Recency
128286    +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
128287    +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
128288    +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
128289    +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
128290    +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
128291    +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
128292    +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
128293    +          +     0.11090137331567 * S_MonthsAsCustomer
128294    +          +     0.22617410760471 * S_NumDealsPurchases
128295    +          +    -1.50612324994247 * S_NumWebVisitsMonth
128296    +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
128297    +        S_RMntFrq  +     1.36064773168913 * S_Recency
128298    +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
128299    +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
128300    +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
128301    +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
128302    +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
128303    +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
128304    +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
128305    +          +     1.12489244540865 * S_MonthsAsCustomer
128306    +          +     0.65186273365438 * S_NumDealsPurchases
128307    +          +    -2.32770073685469 * S_NumWebVisitsMonth
128308    +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
128309    +        S_RMntFrq  +     2.60277611818411 * S_Recency
128310    +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
128311    +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
128312    +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
128313    +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
128314    +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
128315    +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
128316    +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
128317    +          +     0.30886829972356 * S_MonthsAsCustomer
128318    +          +     0.65492907685123 * S_NumDealsPurchases
128319    +          +     0.10822300736498 * S_NumWebVisitsMonth
128320    +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
128321    +        S_RMntFrq  +     -0.7378392134822 * S_Recency
128322    +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
128323    +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
128324    +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
128325    +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
128326    +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
128327    +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
128328    +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
128329    +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
128330    +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
128331    +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
128332    +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
128333    +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
128334    +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
128335    +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
128336    +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
128337    +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
128338    +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
128339    +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
128340    +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
128341    +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
128342    +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
128343    +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
128344    +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
128345    +        EducationGraduation  +     0.30922934477029 * EducationMaster
128346    +          +     0.01556098790048 * Marital_StatusDivorced
128347    +          +     0.00512523764645 * Marital_StatusMarried
128348    +          +    -0.33980799511448 * Marital_StatusSingle
128349    +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
128350    +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
128351    +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
128352    +        EducationGraduation  +     0.69751348344321 * EducationMaster
128353    +          +     0.01069434029942 * Marital_StatusDivorced
128354    +          +      0.3116587285334 * Marital_StatusMarried
128355    +          +    -0.98635795023549 * Marital_StatusSingle
128356    +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
128357    +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
128358    +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
128359    +        EducationGraduation  +     -0.8155628950024 * EducationMaster
128360    +          +    -0.60393077836174 * Marital_StatusDivorced
128361    +          +    -0.18138878944937 * Marital_StatusMarried
128362    +          +     0.53013032587101 * Marital_StatusSingle
128363    +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
128364    +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
128365    +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
128366    +        EducationGraduation  +    -0.40675219343984 * EducationMaster
128367    +          +     0.43223311502025 * Marital_StatusDivorced
128368    +          +    -1.15741416919552 * Marital_StatusMarried
128369    +          +     0.83939799284264 * Marital_StatusSingle
128370    +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
128371    +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
128372    +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
128373    +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
128374    +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
128375    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
128376    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
128377    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
128378    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
128379    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
128380    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
128381    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
128382    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
128383    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
128384    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
128385    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
128386    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
128387    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
128388    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
128389    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
128390    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
128391    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
128392    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
128393    +END;
MPRINT(EM_DIAGRAM):   END;
128394    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128395    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
128396    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
128397    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
128398    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
128399    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
128400    +END;
MPRINT(EM_DIAGRAM):   END;
128401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128402    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
128403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128404    +
128405    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
128406    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
128407    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
128408    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
128409    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
128410    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128411    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
128412    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
128413    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
128414    +end;
MPRINT(EM_DIAGRAM):   end;
128415    +else do;
MPRINT(EM_DIAGRAM):   else do;
128416    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
128417    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
128418    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
128419    +   end;
MPRINT(EM_DIAGRAM):   end;
128420    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
128421    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
128422    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
128423    +   end;
MPRINT(EM_DIAGRAM):   end;
128424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128425    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
128426    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
128427    +   end;
MPRINT(EM_DIAGRAM):   end;
128428    +end;
MPRINT(EM_DIAGRAM):   end;
128429    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128430    +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
128431    +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
128432    +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
128433    +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
128434    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
128435    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
128436    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
128437    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
128438    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
128439    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
128440    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
128441    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
128442    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
128443    +END;
MPRINT(EM_DIAGRAM):   END;
128444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128445    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
128446    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
128447    +END;
MPRINT(EM_DIAGRAM):   END;
128448    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
128449    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
128450    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
128451    +END;
MPRINT(EM_DIAGRAM):   END;
128452    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
128453    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
128454    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
128455    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
128456    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
128457    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
128458    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
128459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128460    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
128461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128462    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
128463    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
128464    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
128465    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
128466    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
128467    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
128468    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
128469    +END;
MPRINT(EM_DIAGRAM):   END;
128470    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
128471    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
128472    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
128473    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
128474    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
128475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128476    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
128477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128478    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
128479    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
128480    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
128481    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
128482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128483    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
128484    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128485    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
128486    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
128487    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
128488    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128489    +* Ensmbl54: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 4 of 7;
128490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128491    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128492    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
128493    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
128494    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
128495    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128496    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
128497    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
128498    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
128499    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
128500    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
128501    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
128502    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
128503    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
128504    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
128505    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
128506    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
128507    +LENGTH _WARN_ $4
128508    +      F_DepVar  $ 12
128509    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
128510    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
128511    +
128512    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
128513    +
128514    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
128515    +
128516    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
128517    +
128518    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
128519    +
128520    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
128521    +
128522    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
128523    +
128524    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
128525    +
128526    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
128527    +
128528    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
128529    +
128530    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
128531    +
128532    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
128533    +
128534    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
128535    +
128536    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
128537    +
128538    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
128539    +
128540    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
128541    +
128542    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
128543    +
128544    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
128545    +
128546    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
128547    +
128548    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
128549    +
128550    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
128551    +
128552    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
128553    +
128554    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
128555    +
128556    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
128557    +
128558    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
128559    +
128560    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
128561    +
128562    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
128563    +
128564    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
128565    +
128566    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
128567    +
128568    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
128569    +
128570    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
128571    +
128572    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
128573    +
128574    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
128575    +
128576    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
128577    +
128578    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
128579    +
128580    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
128581    +
128582    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
128583    +
128584    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
128585    +
128586    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
128587    +
128588    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
128589    +
128590    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
128591    +
128592    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
128593    +
128594    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
128595    +
128596    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
128597    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
128598    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
128599    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
128600    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128601    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128602    +end;
MPRINT(EM_DIAGRAM):   end;
128603    +else do;
MPRINT(EM_DIAGRAM):   else do;
128604    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128605    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
128606    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128607    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128608    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
128609    +   end;
MPRINT(EM_DIAGRAM):   end;
128610    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128611    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
128612    +   end;
MPRINT(EM_DIAGRAM):   end;
128613    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128614    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
128615    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128616    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128617    +   end;
MPRINT(EM_DIAGRAM):   end;
128618    +end;
MPRINT(EM_DIAGRAM):   end;
128619    +
128620    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
128621    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
128622    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
128623    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
128624    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128625    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128626    +end;
MPRINT(EM_DIAGRAM):   end;
128627    +else do;
MPRINT(EM_DIAGRAM):   else do;
128628    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128629    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
128630    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128631    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128632    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
128633    +   end;
MPRINT(EM_DIAGRAM):   end;
128634    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128635    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
128636    +   end;
MPRINT(EM_DIAGRAM):   end;
128637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128638    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
128639    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128640    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128641    +   end;
MPRINT(EM_DIAGRAM):   end;
128642    +end;
MPRINT(EM_DIAGRAM):   end;
128643    +
128644    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
128645    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
128646    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
128647    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
128648    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128649    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128650    +end;
MPRINT(EM_DIAGRAM):   end;
128651    +else do;
MPRINT(EM_DIAGRAM):   else do;
128652    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128653    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
128654    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128655    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128656    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
128657    +   end;
MPRINT(EM_DIAGRAM):   end;
128658    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128659    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
128660    +   end;
MPRINT(EM_DIAGRAM):   end;
128661    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128662    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
128663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128665    +   end;
MPRINT(EM_DIAGRAM):   end;
128666    +end;
MPRINT(EM_DIAGRAM):   end;
128667    +
128668    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
128669    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
128670    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
128671    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
128672    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128673    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128674    +end;
MPRINT(EM_DIAGRAM):   end;
128675    +else do;
MPRINT(EM_DIAGRAM):   else do;
128676    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128677    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
128678    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128679    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128680    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
128681    +   end;
MPRINT(EM_DIAGRAM):   end;
128682    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128683    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
128684    +   end;
MPRINT(EM_DIAGRAM):   end;
128685    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128686    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
128687    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128688    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128689    +   end;
MPRINT(EM_DIAGRAM):   end;
128690    +end;
MPRINT(EM_DIAGRAM):   end;
128691    +
128692    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
128693    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
128694    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
128695    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
128696    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128697    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128698    +end;
MPRINT(EM_DIAGRAM):   end;
128699    +else do;
MPRINT(EM_DIAGRAM):   else do;
128700    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128701    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
128702    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128703    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128704    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
128705    +   end;
MPRINT(EM_DIAGRAM):   end;
128706    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128707    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
128708    +   end;
MPRINT(EM_DIAGRAM):   end;
128709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128710    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
128711    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128712    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128713    +   end;
MPRINT(EM_DIAGRAM):   end;
128714    +end;
MPRINT(EM_DIAGRAM):   end;
128715    +
128716    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
128717    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
128718    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
128719    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
128720    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128721    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128722    +end;
MPRINT(EM_DIAGRAM):   end;
128723    +else do;
MPRINT(EM_DIAGRAM):   else do;
128724    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128725    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
128726    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128727    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128728    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
128729    +   end;
MPRINT(EM_DIAGRAM):   end;
128730    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128731    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
128732    +   end;
MPRINT(EM_DIAGRAM):   end;
128733    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128734    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
128735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128737    +   end;
MPRINT(EM_DIAGRAM):   end;
128738    +end;
MPRINT(EM_DIAGRAM):   end;
128739    +
128740    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
128741    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
128742    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
128743    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
128744    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128745    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128746    +end;
MPRINT(EM_DIAGRAM):   end;
128747    +else do;
MPRINT(EM_DIAGRAM):   else do;
128748    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128749    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
128750    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128751    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
128752    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
128753    +   end;
MPRINT(EM_DIAGRAM):   end;
128754    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
128755    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
128756    +   end;
MPRINT(EM_DIAGRAM):   end;
128757    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128758    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
128759    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128760    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128761    +   end;
MPRINT(EM_DIAGRAM):   end;
128762    +end;
MPRINT(EM_DIAGRAM):   end;
128763    +
128764    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
128765    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
128766    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
128767    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
128768    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
128769    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
128770    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
128771    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
128772    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
128773    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
128774    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
128775    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
128776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128778    +end;
MPRINT(EM_DIAGRAM):   end;
128779    +else do;
MPRINT(EM_DIAGRAM):   else do;
128780    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
128781    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
128782    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128783    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
128784    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
128785    +   end;
MPRINT(EM_DIAGRAM):   end;
128786    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
128787    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
128788    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
128789    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
128790    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
128791    +   end;
MPRINT(EM_DIAGRAM):   end;
128792    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
128793    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
128794    +   end;
MPRINT(EM_DIAGRAM):   end;
128795    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
128796    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
128797    +   end;
MPRINT(EM_DIAGRAM):   end;
128798    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
128799    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
128800    +   end;
MPRINT(EM_DIAGRAM):   end;
128801    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128802    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
128803    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
128804    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
128805    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
128806    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128807    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128808    +   end;
MPRINT(EM_DIAGRAM):   end;
128809    +end;
MPRINT(EM_DIAGRAM):   end;
128810    +
128811    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
128812    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
128813    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
128814    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
128815    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
128816    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
128817    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
128818    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
128819    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
128820    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
128821    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
128822    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
128823    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
128824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128826    +end;
MPRINT(EM_DIAGRAM):   end;
128827    +else do;
MPRINT(EM_DIAGRAM):   else do;
128828    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
128829    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
128830    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128831    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
128832    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
128833    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
128834    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
128835    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
128836    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128837    +         end;
MPRINT(EM_DIAGRAM):   end;
128838    +         else do;
MPRINT(EM_DIAGRAM):   else do;
128839    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
128840    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
128841    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128842    +            end;
MPRINT(EM_DIAGRAM):   end;
128843    +         end;
MPRINT(EM_DIAGRAM):   end;
128844    +      end;
MPRINT(EM_DIAGRAM):   end;
128845    +      else do;
MPRINT(EM_DIAGRAM):   else do;
128846    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
128847    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
128848    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128849    +         end;
MPRINT(EM_DIAGRAM):   end;
128850    +      end;
MPRINT(EM_DIAGRAM):   end;
128851    +   end;
MPRINT(EM_DIAGRAM):   end;
128852    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128853    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
128854    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
128855    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128856    +      end;
MPRINT(EM_DIAGRAM):   end;
128857    +      else do;
MPRINT(EM_DIAGRAM):   else do;
128858    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
128859    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
128860    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
128861    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
128862    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
128863    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
128864    +         end;
MPRINT(EM_DIAGRAM):   end;
128865    +      end;
MPRINT(EM_DIAGRAM):   end;
128866    +   end;
MPRINT(EM_DIAGRAM):   end;
128867    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
128868    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
128869    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
128870    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
128871    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
128872    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128873    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128874    +   end;
MPRINT(EM_DIAGRAM):   end;
128875    +end;
MPRINT(EM_DIAGRAM):   end;
128876    +
128877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128878    +*** Checking missing input Interval
128879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
128880    +
128881    +IF NMISS(
128882    +   AcceptedCmpTotal ,
128883    +   Age ,
128884    +   Frq ,
128885    +   Income ,
128886    +   Kidhome ,
128887    +   MntFishProducts ,
128888    +   MntFruits ,
128889    +   MntGoldProds ,
128890    +   MntSweetProducts ,
128891    +   MonthsAsCustomer ,
128892    +   NumDealsPurchases ,
128893    +   NumWebVisitsMonth ,
128894    +   RFMstat ,
128895    +   RMntFrq ,
128896    +   Recency ,
128897    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
128898    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
128899    +
128900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128901    +END;
MPRINT(EM_DIAGRAM):   END;
128902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128903    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
128904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128905    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128906    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
128907    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
128908    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
128909    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
128910    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
128911    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
128912    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
128913    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
128914    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
128915    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
128916    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
128917    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
128918    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
128919    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
128920    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
128921    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
128922    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
128923    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
128924    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
128925    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
128926    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
128927    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
128928    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
128929    +END;
MPRINT(EM_DIAGRAM):   END;
128930    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128931    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
128932    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
128933    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
128934    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
128935    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
128936    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
128937    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
128938    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
128939    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
128940    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
128941    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
128942    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
128943    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
128944    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
128945    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
128946    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
128947    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
128948    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
128949    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
128950    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
128951    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
128952    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
128953    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
128954    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
128955    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
128956    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
128957    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
128958    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
128959    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
128960    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
128961    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
128962    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
128963    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
128964    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
128965    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
128966    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
128967    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
128968    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
128969    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
128970    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
128971    +END;
MPRINT(EM_DIAGRAM):   END;
128972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128973    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
128974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128976    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
128977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128979    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
128980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128981    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128982    +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
128983    +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
128984    +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
128985    +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
128986    +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
128987    +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
128988    +          +     -0.6473961304074 * S_MonthsAsCustomer
128989    +          +     0.68960902951007 * S_NumDealsPurchases
128990    +          +    -0.03600585273268 * S_NumWebVisitsMonth
128991    +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
128992    +        S_RMntFrq  +    -0.37413569649471 * S_Recency
128993    +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
128994    +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
128995    +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
128996    +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
128997    +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
128998    +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
128999    +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
129000    +          +    -0.70674764548268 * S_MonthsAsCustomer
129001    +          +     0.03761139203619 * S_NumDealsPurchases
129002    +          +    -0.69359662485747 * S_NumWebVisitsMonth
129003    +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
129004    +        S_RMntFrq  +    -1.62720417424557 * S_Recency
129005    +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
129006    +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
129007    +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
129008    +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
129009    +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
129010    +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
129011    +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
129012    +          +    -0.47559913836984 * S_MonthsAsCustomer
129013    +          +    -0.26961781245749 * S_NumDealsPurchases
129014    +          +    -0.67017962977412 * S_NumWebVisitsMonth
129015    +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
129016    +        S_RMntFrq  +     0.67120737584665 * S_Recency
129017    +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
129018    +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
129019    +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
129020    +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
129021    +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
129022    +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
129023    +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
129024    +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
129025    +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
129026    +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
129027    +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
129028    +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
129029    +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
129030    +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
129031    +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
129032    +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
129033    +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
129034    +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
129035    +        EducationGraduation  +     0.46172475127934 * EducationMaster
129036    +          +    -0.18858032329482 * Marital_StatusDivorced
129037    +          +     0.16067956508072 * Marital_StatusMarried
129038    +          +    -0.90926406046237 * Marital_StatusSingle
129039    +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
129040    +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
129041    +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
129042    +        EducationGraduation  +    -0.74629011053947 * EducationMaster
129043    +          +     0.71998738170149 * Marital_StatusDivorced
129044    +          +    -1.53543515752013 * Marital_StatusMarried
129045    +          +     0.44068743694663 * Marital_StatusSingle
129046    +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
129047    +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
129048    +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
129049    +        EducationGraduation  +     0.11252156068047 * EducationMaster
129050    +          +    -0.31683932084863 * Marital_StatusDivorced
129051    +          +     0.17674162427585 * Marital_StatusMarried
129052    +          +    -0.67064017247711 * Marital_StatusSingle
129053    +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
129054    +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
129055    +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
129056    +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
129057    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
129058    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
129059    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129060    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
129061    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
129062    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
129063    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
129064    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
129065    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
129066    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
129067    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
129068    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
129069    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
129070    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
129071    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
129072    +END;
MPRINT(EM_DIAGRAM):   END;
129073    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129074    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
129075    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
129076    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
129077    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
129078    +END;
MPRINT(EM_DIAGRAM):   END;
129079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129080    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
129081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129082    +
129083    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
129084    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
129085    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
129086    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
129087    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
129088    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129089    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
129090    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
129091    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
129092    +end;
MPRINT(EM_DIAGRAM):   end;
129093    +else do;
MPRINT(EM_DIAGRAM):   else do;
129094    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
129095    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
129096    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
129097    +   end;
MPRINT(EM_DIAGRAM):   end;
129098    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
129099    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
129100    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
129101    +   end;
MPRINT(EM_DIAGRAM):   end;
129102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129103    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
129104    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
129105    +   end;
MPRINT(EM_DIAGRAM):   end;
129106    +end;
MPRINT(EM_DIAGRAM):   end;
129107    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129108    +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
129109    +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
129110    +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
129111    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
129112    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
129113    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129114    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
129115    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
129116    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
129117    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
129118    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
129119    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
129120    +END;
MPRINT(EM_DIAGRAM):   END;
129121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129122    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
129123    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
129124    +END;
MPRINT(EM_DIAGRAM):   END;
129125    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
129126    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
129127    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
129128    +END;
MPRINT(EM_DIAGRAM):   END;
129129    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
129130    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
129131    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
129132    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
129133    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
129134    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
129135    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
129136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129137    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
129138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129139    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
129140    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
129141    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
129142    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
129143    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
129144    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
129145    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
129146    +END;
MPRINT(EM_DIAGRAM):   END;
129147    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129148    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
129149    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129150    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
129151    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
129152    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129153    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
129154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129155    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
129156    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
129157    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
129158    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
129159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129160    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
129161    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129162    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
129163    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
129164    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
129165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129166    +* Ensmbl54: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 5 of 7;
129167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129169    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
129170    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
129171    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
129172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
129175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
129177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
129178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
129179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
129180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
129181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
129182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
129183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
129184    +LENGTH _WARN_ $4
129185    +      F_DepVar  $ 12
129186    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
129187    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
129188    +
129189    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
129190    +
129191    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
129192    +
129193    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
129194    +
129195    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
129196    +
129197    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
129198    +
129199    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
129200    +
129201    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
129202    +
129203    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
129204    +
129205    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
129206    +
129207    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
129208    +
129209    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
129210    +
129211    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
129212    +
129213    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
129214    +
129215    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
129216    +
129217    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
129218    +
129219    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
129220    +
129221    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
129222    +
129223    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
129224    +
129225    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
129226    +
129227    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
129228    +
129229    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
129230    +
129231    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
129232    +
129233    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
129234    +
129235    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
129236    +
129237    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
129238    +
129239    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
129240    +
129241    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
129242    +
129243    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
129244    +
129245    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
129246    +
129247    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
129248    +
129249    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
129250    +
129251    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
129252    +
129253    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
129254    +
129255    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
129256    +
129257    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
129258    +
129259    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
129260    +
129261    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
129262    +
129263    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
129264    +
129265    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
129266    +
129267    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
129268    +
129269    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
129270    +
129271    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
129272    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
129273    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
129274    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
129275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129277    +end;
MPRINT(EM_DIAGRAM):   end;
129278    +else do;
MPRINT(EM_DIAGRAM):   else do;
129279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129280    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
129281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129282    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129283    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
129284    +   end;
MPRINT(EM_DIAGRAM):   end;
129285    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129286    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
129287    +   end;
MPRINT(EM_DIAGRAM):   end;
129288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129289    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
129290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129292    +   end;
MPRINT(EM_DIAGRAM):   end;
129293    +end;
MPRINT(EM_DIAGRAM):   end;
129294    +
129295    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
129296    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
129297    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
129298    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
129299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129301    +end;
MPRINT(EM_DIAGRAM):   end;
129302    +else do;
MPRINT(EM_DIAGRAM):   else do;
129303    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129304    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
129305    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129306    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129307    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
129308    +   end;
MPRINT(EM_DIAGRAM):   end;
129309    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129310    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
129311    +   end;
MPRINT(EM_DIAGRAM):   end;
129312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129313    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
129314    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129315    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129316    +   end;
MPRINT(EM_DIAGRAM):   end;
129317    +end;
MPRINT(EM_DIAGRAM):   end;
129318    +
129319    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
129320    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
129321    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
129322    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
129323    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129324    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129325    +end;
MPRINT(EM_DIAGRAM):   end;
129326    +else do;
MPRINT(EM_DIAGRAM):   else do;
129327    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129328    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
129329    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129330    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129331    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
129332    +   end;
MPRINT(EM_DIAGRAM):   end;
129333    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129334    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
129335    +   end;
MPRINT(EM_DIAGRAM):   end;
129336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129337    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
129338    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129339    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129340    +   end;
MPRINT(EM_DIAGRAM):   end;
129341    +end;
MPRINT(EM_DIAGRAM):   end;
129342    +
129343    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
129344    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
129345    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
129346    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
129347    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129348    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129349    +end;
MPRINT(EM_DIAGRAM):   end;
129350    +else do;
MPRINT(EM_DIAGRAM):   else do;
129351    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129352    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
129353    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129354    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129355    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
129356    +   end;
MPRINT(EM_DIAGRAM):   end;
129357    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129358    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
129359    +   end;
MPRINT(EM_DIAGRAM):   end;
129360    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129361    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
129362    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129363    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129364    +   end;
MPRINT(EM_DIAGRAM):   end;
129365    +end;
MPRINT(EM_DIAGRAM):   end;
129366    +
129367    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
129368    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
129369    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
129370    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
129371    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129372    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129373    +end;
MPRINT(EM_DIAGRAM):   end;
129374    +else do;
MPRINT(EM_DIAGRAM):   else do;
129375    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129376    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
129377    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129378    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129379    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
129380    +   end;
MPRINT(EM_DIAGRAM):   end;
129381    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129382    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
129383    +   end;
MPRINT(EM_DIAGRAM):   end;
129384    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129385    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
129386    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129387    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129388    +   end;
MPRINT(EM_DIAGRAM):   end;
129389    +end;
MPRINT(EM_DIAGRAM):   end;
129390    +
129391    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
129392    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
129393    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
129394    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
129395    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129397    +end;
MPRINT(EM_DIAGRAM):   end;
129398    +else do;
MPRINT(EM_DIAGRAM):   else do;
129399    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129400    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
129401    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129402    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129403    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
129404    +   end;
MPRINT(EM_DIAGRAM):   end;
129405    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129406    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
129407    +   end;
MPRINT(EM_DIAGRAM):   end;
129408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129409    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
129410    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129411    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129412    +   end;
MPRINT(EM_DIAGRAM):   end;
129413    +end;
MPRINT(EM_DIAGRAM):   end;
129414    +
129415    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
129416    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
129417    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
129418    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
129419    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129420    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129421    +end;
MPRINT(EM_DIAGRAM):   end;
129422    +else do;
MPRINT(EM_DIAGRAM):   else do;
129423    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129424    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
129425    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129426    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
129427    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
129428    +   end;
MPRINT(EM_DIAGRAM):   end;
129429    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
129430    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
129431    +   end;
MPRINT(EM_DIAGRAM):   end;
129432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129433    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
129434    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129435    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129436    +   end;
MPRINT(EM_DIAGRAM):   end;
129437    +end;
MPRINT(EM_DIAGRAM):   end;
129438    +
129439    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
129440    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
129441    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
129442    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
129443    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
129444    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
129445    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
129446    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
129447    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
129448    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
129449    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
129450    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
129451    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129452    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129453    +end;
MPRINT(EM_DIAGRAM):   end;
129454    +else do;
MPRINT(EM_DIAGRAM):   else do;
129455    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
129456    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
129457    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129458    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
129459    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
129460    +   end;
MPRINT(EM_DIAGRAM):   end;
129461    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
129462    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
129463    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
129464    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
129465    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
129466    +   end;
MPRINT(EM_DIAGRAM):   end;
129467    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
129468    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
129469    +   end;
MPRINT(EM_DIAGRAM):   end;
129470    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
129471    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
129472    +   end;
MPRINT(EM_DIAGRAM):   end;
129473    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
129474    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
129475    +   end;
MPRINT(EM_DIAGRAM):   end;
129476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129477    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
129478    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
129479    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
129480    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
129481    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129482    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129483    +   end;
MPRINT(EM_DIAGRAM):   end;
129484    +end;
MPRINT(EM_DIAGRAM):   end;
129485    +
129486    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
129487    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
129488    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
129489    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
129490    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
129491    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
129492    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
129493    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
129494    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
129495    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
129496    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
129497    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
129498    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
129499    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129500    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129501    +end;
MPRINT(EM_DIAGRAM):   end;
129502    +else do;
MPRINT(EM_DIAGRAM):   else do;
129503    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
129504    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
129505    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129506    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
129507    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
129508    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
129509    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
129510    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
129511    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
129512    +         end;
MPRINT(EM_DIAGRAM):   end;
129513    +         else do;
MPRINT(EM_DIAGRAM):   else do;
129514    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
129515    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
129516    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
129517    +            end;
MPRINT(EM_DIAGRAM):   end;
129518    +         end;
MPRINT(EM_DIAGRAM):   end;
129519    +      end;
MPRINT(EM_DIAGRAM):   end;
129520    +      else do;
MPRINT(EM_DIAGRAM):   else do;
129521    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
129522    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
129523    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
129524    +         end;
MPRINT(EM_DIAGRAM):   end;
129525    +      end;
MPRINT(EM_DIAGRAM):   end;
129526    +   end;
MPRINT(EM_DIAGRAM):   end;
129527    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129528    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
129529    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
129530    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
129531    +      end;
MPRINT(EM_DIAGRAM):   end;
129532    +      else do;
MPRINT(EM_DIAGRAM):   else do;
129533    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
129534    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
129535    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
129536    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
129537    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
129538    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
129539    +         end;
MPRINT(EM_DIAGRAM):   end;
129540    +      end;
MPRINT(EM_DIAGRAM):   end;
129541    +   end;
MPRINT(EM_DIAGRAM):   end;
129542    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
129543    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
129544    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
129545    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
129546    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
129547    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129548    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129549    +   end;
MPRINT(EM_DIAGRAM):   end;
129550    +end;
MPRINT(EM_DIAGRAM):   end;
129551    +
129552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129553    +*** Checking missing input Interval
129554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
129555    +
129556    +IF NMISS(
129557    +   AcceptedCmpTotal ,
129558    +   Age ,
129559    +   Frq ,
129560    +   Income ,
129561    +   Kidhome ,
129562    +   MntFishProducts ,
129563    +   MntFruits ,
129564    +   MntGoldProds ,
129565    +   MntSweetProducts ,
129566    +   MonthsAsCustomer ,
129567    +   NumDealsPurchases ,
129568    +   NumWebVisitsMonth ,
129569    +   RFMstat ,
129570    +   RMntFrq ,
129571    +   Recency ,
129572    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
129573    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
129574    +
129575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129576    +END;
MPRINT(EM_DIAGRAM):   END;
129577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129578    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
129579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129580    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129581    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
129582    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
129583    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
129584    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
129585    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
129586    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
129587    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
129588    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
129589    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
129590    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
129591    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
129592    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
129593    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
129594    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
129595    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
129596    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
129597    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
129598    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
129599    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
129600    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
129601    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
129602    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
129603    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
129604    +END;
MPRINT(EM_DIAGRAM):   END;
129605    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129606    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
129607    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
129608    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
129609    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
129610    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
129611    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
129612    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
129613    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
129614    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
129615    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
129616    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
129617    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
129618    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
129619    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
129620    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
129621    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
129622    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
129623    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
129624    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
129625    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
129626    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
129627    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
129628    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
129629    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
129630    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
129631    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
129632    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
129633    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
129634    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
129635    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
129636    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
129637    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
129638    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
129639    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
129640    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
129641    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
129642    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
129643    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
129644    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
129645    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
129646    +END;
MPRINT(EM_DIAGRAM):   END;
129647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129648    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
129649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129651    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
129652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129654    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
129655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129656    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129657    +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
129658    +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
129659    +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
129660    +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
129661    +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
129662    +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
129663    +          +     -0.1740957673716 * S_MonthsAsCustomer
129664    +          +     0.66565026405117 * S_NumDealsPurchases
129665    +          +     0.43247206282836 * S_NumWebVisitsMonth
129666    +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
129667    +        S_RMntFrq  +    -0.28002323732518 * S_Recency
129668    +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
129669    +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
129670    +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
129671    +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
129672    +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
129673    +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
129674    +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
129675    +          +    -0.06176784990963 * S_MonthsAsCustomer
129676    +          +    -0.11740415005833 * S_NumDealsPurchases
129677    +          +    -0.17084845478672 * S_NumWebVisitsMonth
129678    +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
129679    +        S_RMntFrq  +     0.54983271222574 * S_Recency
129680    +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
129681    +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
129682    +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
129683    +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
129684    +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
129685    +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
129686    +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
129687    +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
129688    +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
129689    +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
129690    +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
129691    +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
129692    +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
129693    +        EducationGraduation  +     0.22632282500966 * EducationMaster
129694    +          +     -0.0800438380883 * Marital_StatusDivorced
129695    +          +     0.44505766937623 * Marital_StatusMarried
129696    +          +    -0.57546515626468 * Marital_StatusSingle
129697    +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
129698    +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
129699    +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
129700    +        EducationGraduation  +      0.0794165981215 * EducationMaster
129701    +          +    -0.20291653465543 * Marital_StatusDivorced
129702    +          +     0.39547414450617 * Marital_StatusMarried
129703    +          +    -0.37001331184001 * Marital_StatusSingle
129704    +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
129705    +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
129706    +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
129707    +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
129708    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
129709    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129710    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
129711    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
129712    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
129713    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
129714    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
129715    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
129716    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
129717    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
129718    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
129719    +END;
MPRINT(EM_DIAGRAM):   END;
129720    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129721    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
129722    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
129723    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
129724    +END;
MPRINT(EM_DIAGRAM):   END;
129725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129726    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
129727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129728    +
129729    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
129730    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
129731    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
129732    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
129733    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
129734    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129735    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
129736    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
129737    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
129738    +end;
MPRINT(EM_DIAGRAM):   end;
129739    +else do;
MPRINT(EM_DIAGRAM):   else do;
129740    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
129741    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
129742    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
129743    +   end;
MPRINT(EM_DIAGRAM):   end;
129744    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
129745    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
129746    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
129747    +   end;
MPRINT(EM_DIAGRAM):   end;
129748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129749    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
129750    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
129751    +   end;
MPRINT(EM_DIAGRAM):   end;
129752    +end;
MPRINT(EM_DIAGRAM):   end;
129753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129754    +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
129755    +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
129756    +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
129757    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
129758    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
129759    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129760    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
129761    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
129762    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
129763    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
129764    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
129765    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
129766    +END;
MPRINT(EM_DIAGRAM):   END;
129767    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129768    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
129769    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
129770    +END;
MPRINT(EM_DIAGRAM):   END;
129771    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
129772    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
129773    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
129774    +END;
MPRINT(EM_DIAGRAM):   END;
129775    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
129776    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
129777    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
129778    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
129779    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
129780    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
129781    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
129782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129783    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
129784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129785    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
129786    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
129787    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
129788    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
129789    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
129790    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
129791    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
129792    +END;
MPRINT(EM_DIAGRAM):   END;
129793    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129794    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
129795    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129796    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
129797    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
129798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129799    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
129800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129801    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
129802    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
129803    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
129804    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
129805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129806    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
129807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129808    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
129809    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
129810    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
129811    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129812    +* Ensmbl54: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 6 of 7;
129813    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129815    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
129816    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
129817    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
129818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129819    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129820    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
129821    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129822    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
129823    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
129824    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
129825    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
129826    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
129827    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
129828    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
129829    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
129830    +LENGTH _WARN_ $4
129831    +      F_DepVar  $ 12
129832    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
129833    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
129834    +
129835    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
129836    +
129837    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
129838    +
129839    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
129840    +
129841    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
129842    +
129843    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
129844    +
129845    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
129846    +
129847    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
129848    +
129849    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
129850    +
129851    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
129852    +
129853    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
129854    +
129855    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
129856    +
129857    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
129858    +
129859    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
129860    +
129861    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
129862    +
129863    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
129864    +
129865    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
129866    +
129867    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
129868    +
129869    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
129870    +
129871    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
129872    +
129873    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
129874    +
129875    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
129876    +
129877    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
129878    +
129879    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
129880    +
129881    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
129882    +
129883    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
129884    +
129885    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
129886    +
129887    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
129888    +
129889    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
129890    +
129891    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
129892    +
129893    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
129894    +
129895    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
129896    +
129897    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
129898    +
129899    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
129900    +
129901    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
129902    +
129903    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
129904    +
129905    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
129906    +
129907    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
129908    +
129909    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
129910    +
129911    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
129912    +
129913    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
129914    +
129915    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
129916    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
129917    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
129918    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
129919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129921    +end;
MPRINT(EM_DIAGRAM):   end;
129922    +else do;
MPRINT(EM_DIAGRAM):   else do;
129923    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129924    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
129925    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129926    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129927    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
129928    +   end;
MPRINT(EM_DIAGRAM):   end;
129929    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129930    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
129931    +   end;
MPRINT(EM_DIAGRAM):   end;
129932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129933    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
129934    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129935    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129936    +   end;
MPRINT(EM_DIAGRAM):   end;
129937    +end;
MPRINT(EM_DIAGRAM):   end;
129938    +
129939    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
129940    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
129941    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
129942    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
129943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129945    +end;
MPRINT(EM_DIAGRAM):   end;
129946    +else do;
MPRINT(EM_DIAGRAM):   else do;
129947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129948    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
129949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129950    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129951    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
129952    +   end;
MPRINT(EM_DIAGRAM):   end;
129953    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129954    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
129955    +   end;
MPRINT(EM_DIAGRAM):   end;
129956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129957    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
129958    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129959    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129960    +   end;
MPRINT(EM_DIAGRAM):   end;
129961    +end;
MPRINT(EM_DIAGRAM):   end;
129962    +
129963    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
129964    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
129965    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
129966    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
129967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129969    +end;
MPRINT(EM_DIAGRAM):   end;
129970    +else do;
MPRINT(EM_DIAGRAM):   else do;
129971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129972    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
129973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129974    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129975    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
129976    +   end;
MPRINT(EM_DIAGRAM):   end;
129977    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129978    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
129979    +   end;
MPRINT(EM_DIAGRAM):   end;
129980    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129981    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
129982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129984    +   end;
MPRINT(EM_DIAGRAM):   end;
129985    +end;
MPRINT(EM_DIAGRAM):   end;
129986    +
129987    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
129988    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
129989    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
129990    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
129991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129993    +end;
MPRINT(EM_DIAGRAM):   end;
129994    +else do;
MPRINT(EM_DIAGRAM):   else do;
129995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129996    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
129997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129998    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129999    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
130000    +   end;
MPRINT(EM_DIAGRAM):   end;
130001    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130002    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
130003    +   end;
MPRINT(EM_DIAGRAM):   end;
130004    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130005    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
130006    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130007    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130008    +   end;
MPRINT(EM_DIAGRAM):   end;
130009    +end;
MPRINT(EM_DIAGRAM):   end;
130010    +
130011    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
130012    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
130013    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
130014    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
130015    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130016    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130017    +end;
MPRINT(EM_DIAGRAM):   end;
130018    +else do;
MPRINT(EM_DIAGRAM):   else do;
130019    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130020    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
130021    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130022    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130023    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
130024    +   end;
MPRINT(EM_DIAGRAM):   end;
130025    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130026    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
130027    +   end;
MPRINT(EM_DIAGRAM):   end;
130028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130029    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
130030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130032    +   end;
MPRINT(EM_DIAGRAM):   end;
130033    +end;
MPRINT(EM_DIAGRAM):   end;
130034    +
130035    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
130036    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
130037    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
130038    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
130039    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130041    +end;
MPRINT(EM_DIAGRAM):   end;
130042    +else do;
MPRINT(EM_DIAGRAM):   else do;
130043    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130044    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
130045    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130046    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130047    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
130048    +   end;
MPRINT(EM_DIAGRAM):   end;
130049    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130050    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
130051    +   end;
MPRINT(EM_DIAGRAM):   end;
130052    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130053    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
130054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130056    +   end;
MPRINT(EM_DIAGRAM):   end;
130057    +end;
MPRINT(EM_DIAGRAM):   end;
130058    +
130059    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
130060    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
130061    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
130062    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
130063    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130065    +end;
MPRINT(EM_DIAGRAM):   end;
130066    +else do;
MPRINT(EM_DIAGRAM):   else do;
130067    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130068    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
130069    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130070    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
130071    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
130072    +   end;
MPRINT(EM_DIAGRAM):   end;
130073    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
130074    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
130075    +   end;
MPRINT(EM_DIAGRAM):   end;
130076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130077    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
130078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130080    +   end;
MPRINT(EM_DIAGRAM):   end;
130081    +end;
MPRINT(EM_DIAGRAM):   end;
130082    +
130083    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
130084    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
130085    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
130086    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
130087    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
130088    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
130089    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
130090    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
130091    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
130092    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
130093    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
130094    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
130095    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130096    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130097    +end;
MPRINT(EM_DIAGRAM):   end;
130098    +else do;
MPRINT(EM_DIAGRAM):   else do;
130099    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
130100    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
130101    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130102    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
130103    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
130104    +   end;
MPRINT(EM_DIAGRAM):   end;
130105    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
130106    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
130107    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
130108    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
130109    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
130110    +   end;
MPRINT(EM_DIAGRAM):   end;
130111    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
130112    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
130113    +   end;
MPRINT(EM_DIAGRAM):   end;
130114    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
130115    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
130116    +   end;
MPRINT(EM_DIAGRAM):   end;
130117    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
130118    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
130119    +   end;
MPRINT(EM_DIAGRAM):   end;
130120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130121    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
130122    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
130123    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
130124    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
130125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130127    +   end;
MPRINT(EM_DIAGRAM):   end;
130128    +end;
MPRINT(EM_DIAGRAM):   end;
130129    +
130130    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
130131    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
130132    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
130133    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
130134    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
130135    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
130136    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
130137    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
130138    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
130139    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
130140    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
130141    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
130142    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
130143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130145    +end;
MPRINT(EM_DIAGRAM):   end;
130146    +else do;
MPRINT(EM_DIAGRAM):   else do;
130147    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
130148    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
130149    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130150    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
130151    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
130152    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
130153    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
130154    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
130155    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130156    +         end;
MPRINT(EM_DIAGRAM):   end;
130157    +         else do;
MPRINT(EM_DIAGRAM):   else do;
130158    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
130159    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
130160    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130161    +            end;
MPRINT(EM_DIAGRAM):   end;
130162    +         end;
MPRINT(EM_DIAGRAM):   end;
130163    +      end;
MPRINT(EM_DIAGRAM):   end;
130164    +      else do;
MPRINT(EM_DIAGRAM):   else do;
130165    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
130166    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
130167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130168    +         end;
MPRINT(EM_DIAGRAM):   end;
130169    +      end;
MPRINT(EM_DIAGRAM):   end;
130170    +   end;
MPRINT(EM_DIAGRAM):   end;
130171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130172    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
130173    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
130174    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130175    +      end;
MPRINT(EM_DIAGRAM):   end;
130176    +      else do;
MPRINT(EM_DIAGRAM):   else do;
130177    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
130178    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
130179    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
130180    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
130181    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
130182    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130183    +         end;
MPRINT(EM_DIAGRAM):   end;
130184    +      end;
MPRINT(EM_DIAGRAM):   end;
130185    +   end;
MPRINT(EM_DIAGRAM):   end;
130186    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
130187    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
130188    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
130189    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
130190    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
130191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130193    +   end;
MPRINT(EM_DIAGRAM):   end;
130194    +end;
MPRINT(EM_DIAGRAM):   end;
130195    +
130196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130197    +*** Checking missing input Interval
130198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
130199    +
130200    +IF NMISS(
130201    +   AcceptedCmpTotal ,
130202    +   Age ,
130203    +   Frq ,
130204    +   Income ,
130205    +   Kidhome ,
130206    +   MntFishProducts ,
130207    +   MntFruits ,
130208    +   MntGoldProds ,
130209    +   MntSweetProducts ,
130210    +   MonthsAsCustomer ,
130211    +   NumDealsPurchases ,
130212    +   NumWebVisitsMonth ,
130213    +   RFMstat ,
130214    +   RMntFrq ,
130215    +   Recency ,
130216    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
130217    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
130218    +
130219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130220    +END;
MPRINT(EM_DIAGRAM):   END;
130221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130222    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
130223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130224    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130225    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
130226    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
130227    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
130228    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
130229    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
130230    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
130231    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
130232    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
130233    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
130234    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
130235    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
130236    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
130237    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
130238    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
130239    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
130240    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
130241    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
130242    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
130243    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
130244    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
130245    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
130246    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
130247    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
130248    +END;
MPRINT(EM_DIAGRAM):   END;
130249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
130250    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
130251    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
130252    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
130253    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
130254    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
130255    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
130256    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
130257    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
130258    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
130259    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
130260    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
130261    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
130262    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
130263    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
130264    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
130265    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
130266    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
130267    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
130268    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
130269    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
130270    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
130271    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
130272    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
130273    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
130274    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
130275    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
130276    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
130277    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
130278    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
130279    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
130280    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
130281    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
130282    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
130283    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
130284    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
130285    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
130286    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
130287    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
130288    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
130289    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
130290    +END;
MPRINT(EM_DIAGRAM):   END;
130291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130292    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
130293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130295    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
130296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130298    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
130299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130300    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130301    +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
130302    +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
130303    +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
130304    +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
130305    +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
130306    +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
130307    +          +     0.07696704519183 * S_MonthsAsCustomer
130308    +          +     0.06885982009617 * S_NumDealsPurchases
130309    +          +     0.18284147478918 * S_NumWebVisitsMonth
130310    +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
130311    +        S_RMntFrq  +    -0.65651411558717 * S_Recency
130312    +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
130313    +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
130314    +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
130315    +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
130316    +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
130317    +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
130318    +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
130319    +          +     0.19400730773464 * S_MonthsAsCustomer
130320    +          +    -1.36455521037197 * S_NumDealsPurchases
130321    +          +    -1.07068059346196 * S_NumWebVisitsMonth
130322    +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
130323    +        S_RMntFrq  +     1.36066079800227 * S_Recency
130324    +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
130325    +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
130326    +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
130327    +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
130328    +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
130329    +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
130330    +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
130331    +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
130332    +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
130333    +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
130334    +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
130335    +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
130336    +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
130337    +        EducationGraduation  +    -0.13796568916415 * EducationMaster
130338    +          +     0.23432241402098 * Marital_StatusDivorced
130339    +          +    -0.46302700269027 * Marital_StatusMarried
130340    +          +      0.4032168653504 * Marital_StatusSingle
130341    +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
130342    +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
130343    +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
130344    +        EducationGraduation  +     -0.3917553423088 * EducationMaster
130345    +          +    -0.31347503340603 * Marital_StatusDivorced
130346    +          +    -0.20319530959178 * Marital_StatusMarried
130347    +          +     0.48298350411196 * Marital_StatusSingle
130348    +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
130349    +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
130350    +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
130351    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
130352    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
130353    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
130354    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
130355    +END;
MPRINT(EM_DIAGRAM):   END;
130356    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
130357    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
130358    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
130359    +END;
MPRINT(EM_DIAGRAM):   END;
130360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130361    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
130362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130363    +
130364    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
130365    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
130366    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
130367    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
130368    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
130369    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130370    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
130371    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
130372    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
130373    +end;
MPRINT(EM_DIAGRAM):   end;
130374    +else do;
MPRINT(EM_DIAGRAM):   else do;
130375    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
130376    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
130377    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
130378    +   end;
MPRINT(EM_DIAGRAM):   end;
130379    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
130380    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
130381    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
130382    +   end;
MPRINT(EM_DIAGRAM):   end;
130383    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130384    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
130385    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
130386    +   end;
MPRINT(EM_DIAGRAM):   end;
130387    +end;
MPRINT(EM_DIAGRAM):   end;
130388    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130389    +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
130390    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
130391    +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
130392    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
130393    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
130394    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
130395    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
130396    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
130397    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
130398    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
130399    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
130400    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
130401    +END;
MPRINT(EM_DIAGRAM):   END;
130402    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
130403    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
130404    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
130405    +END;
MPRINT(EM_DIAGRAM):   END;
130406    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
130407    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
130408    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
130409    +END;
MPRINT(EM_DIAGRAM):   END;
130410    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
130411    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
130412    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
130413    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
130414    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
130415    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
130416    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
130417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130418    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
130419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130420    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
130421    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
130422    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
130423    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
130424    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
130425    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
130426    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
130427    +END;
MPRINT(EM_DIAGRAM):   END;
130428    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
130429    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
130430    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
130431    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
130432    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
130433    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130434    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
130435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130436    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
130437    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
130438    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
130439    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
130440    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130441    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
130442    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130443    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
130444    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
130445    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
130446    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130447    +* Ensmbl54: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 7 of 7;
130448    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130450    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
130451    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
130452    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
130453    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
130454    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
130455    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
130456    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
130457    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
130458    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
130459    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
130460    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
130461    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
130462    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
130463    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
130464    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
130465    +LENGTH _WARN_ $4
130466    +      F_DepVar  $ 12
130467    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
130468    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
130469    +
130470    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
130471    +
130472    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
130473    +
130474    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
130475    +
130476    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
130477    +
130478    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
130479    +
130480    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
130481    +
130482    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
130483    +
130484    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
130485    +
130486    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
130487    +
130488    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
130489    +
130490    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
130491    +
130492    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
130493    +
130494    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
130495    +
130496    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
130497    +
130498    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
130499    +
130500    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
130501    +
130502    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
130503    +
130504    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
130505    +
130506    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
130507    +
130508    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
130509    +
130510    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
130511    +
130512    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
130513    +
130514    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
130515    +
130516    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
130517    +
130518    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
130519    +
130520    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
130521    +
130522    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
130523    +
130524    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
130525    +
130526    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
130527    +
130528    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
130529    +
130530    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
130531    +
130532    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
130533    +
130534    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
130535    +
130536    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
130537    +
130538    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
130539    +
130540    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
130541    +
130542    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
130543    +
130544    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
130545    +
130546    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
130547    +
130548    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
130549    +
130550    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
130551    +
130552    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
130553    +
130554    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
130555    +
130556    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
130557    +
130558    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
130559    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
130560    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
130561    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
130562    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130563    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130564    +end;
MPRINT(EM_DIAGRAM):   end;
130565    +else do;
MPRINT(EM_DIAGRAM):   else do;
130566    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130567    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
130568    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130569    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130570    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
130571    +   end;
MPRINT(EM_DIAGRAM):   end;
130572    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130573    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
130574    +   end;
MPRINT(EM_DIAGRAM):   end;
130575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130576    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
130577    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130578    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130579    +   end;
MPRINT(EM_DIAGRAM):   end;
130580    +end;
MPRINT(EM_DIAGRAM):   end;
130581    +
130582    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
130583    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
130584    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
130585    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
130586    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130587    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130588    +end;
MPRINT(EM_DIAGRAM):   end;
130589    +else do;
MPRINT(EM_DIAGRAM):   else do;
130590    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130591    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
130592    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130593    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130594    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
130595    +   end;
MPRINT(EM_DIAGRAM):   end;
130596    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130597    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
130598    +   end;
MPRINT(EM_DIAGRAM):   end;
130599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130600    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
130601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130603    +   end;
MPRINT(EM_DIAGRAM):   end;
130604    +end;
MPRINT(EM_DIAGRAM):   end;
130605    +
130606    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
130607    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
130608    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
130609    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
130610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130612    +end;
MPRINT(EM_DIAGRAM):   end;
130613    +else do;
MPRINT(EM_DIAGRAM):   else do;
130614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130615    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
130616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130617    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130618    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
130619    +   end;
MPRINT(EM_DIAGRAM):   end;
130620    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130621    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
130622    +   end;
MPRINT(EM_DIAGRAM):   end;
130623    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130624    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
130625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130627    +   end;
MPRINT(EM_DIAGRAM):   end;
130628    +end;
MPRINT(EM_DIAGRAM):   end;
130629    +
130630    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
130631    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
130632    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
130633    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
130634    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130635    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130636    +end;
MPRINT(EM_DIAGRAM):   end;
130637    +else do;
MPRINT(EM_DIAGRAM):   else do;
130638    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130639    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
130640    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130641    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130642    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
130643    +   end;
MPRINT(EM_DIAGRAM):   end;
130644    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130645    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
130646    +   end;
MPRINT(EM_DIAGRAM):   end;
130647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130648    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
130649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130651    +   end;
MPRINT(EM_DIAGRAM):   end;
130652    +end;
MPRINT(EM_DIAGRAM):   end;
130653    +
130654    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
130655    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
130656    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
130657    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
130658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130660    +end;
MPRINT(EM_DIAGRAM):   end;
130661    +else do;
MPRINT(EM_DIAGRAM):   else do;
130662    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130663    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
130664    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130665    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130666    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
130667    +   end;
MPRINT(EM_DIAGRAM):   end;
130668    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130669    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
130670    +   end;
MPRINT(EM_DIAGRAM):   end;
130671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130672    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
130673    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130674    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130675    +   end;
MPRINT(EM_DIAGRAM):   end;
130676    +end;
MPRINT(EM_DIAGRAM):   end;
130677    +
130678    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
130679    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
130680    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
130681    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
130682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130684    +end;
MPRINT(EM_DIAGRAM):   end;
130685    +else do;
MPRINT(EM_DIAGRAM):   else do;
130686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130687    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
130688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130689    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
130690    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
130691    +   end;
MPRINT(EM_DIAGRAM):   end;
130692    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
130693    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
130694    +   end;
MPRINT(EM_DIAGRAM):   end;
130695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130696    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
130697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130699    +   end;
MPRINT(EM_DIAGRAM):   end;
130700    +end;
MPRINT(EM_DIAGRAM):   end;
130701    +
130702    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
130703    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
130704    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
130705    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
130706    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130707    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130708    +end;
MPRINT(EM_DIAGRAM):   end;
130709    +else do;
MPRINT(EM_DIAGRAM):   else do;
130710    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
130711    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
130712    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130713    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
130714    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
130715    +   end;
MPRINT(EM_DIAGRAM):   end;
130716    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
130717    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
130718    +   end;
MPRINT(EM_DIAGRAM):   end;
130719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130720    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
130721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130723    +   end;
MPRINT(EM_DIAGRAM):   end;
130724    +end;
MPRINT(EM_DIAGRAM):   end;
130725    +
130726    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
130727    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
130728    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
130729    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
130730    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
130731    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
130732    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
130733    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
130734    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
130735    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
130736    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
130737    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
130738    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130739    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130740    +end;
MPRINT(EM_DIAGRAM):   end;
130741    +else do;
MPRINT(EM_DIAGRAM):   else do;
130742    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
130743    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
130744    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130745    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
130746    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
130747    +   end;
MPRINT(EM_DIAGRAM):   end;
130748    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
130749    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
130750    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
130751    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
130752    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
130753    +   end;
MPRINT(EM_DIAGRAM):   end;
130754    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
130755    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
130756    +   end;
MPRINT(EM_DIAGRAM):   end;
130757    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
130758    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
130759    +   end;
MPRINT(EM_DIAGRAM):   end;
130760    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
130761    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
130762    +   end;
MPRINT(EM_DIAGRAM):   end;
130763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130764    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
130765    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
130766    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
130767    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
130768    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130769    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130770    +   end;
MPRINT(EM_DIAGRAM):   end;
130771    +end;
MPRINT(EM_DIAGRAM):   end;
130772    +
130773    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
130774    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
130775    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
130776    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
130777    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
130778    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
130779    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
130780    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
130781    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
130782    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
130783    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
130784    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
130785    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
130786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
130787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130788    +end;
MPRINT(EM_DIAGRAM):   end;
130789    +else do;
MPRINT(EM_DIAGRAM):   else do;
130790    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
130791    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
130792    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
130793    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
130794    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
130795    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
130796    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
130797    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
130798    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130799    +         end;
MPRINT(EM_DIAGRAM):   end;
130800    +         else do;
MPRINT(EM_DIAGRAM):   else do;
130801    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
130802    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
130803    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130804    +            end;
MPRINT(EM_DIAGRAM):   end;
130805    +         end;
MPRINT(EM_DIAGRAM):   end;
130806    +      end;
MPRINT(EM_DIAGRAM):   end;
130807    +      else do;
MPRINT(EM_DIAGRAM):   else do;
130808    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
130809    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
130810    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130811    +         end;
MPRINT(EM_DIAGRAM):   end;
130812    +      end;
MPRINT(EM_DIAGRAM):   end;
130813    +   end;
MPRINT(EM_DIAGRAM):   end;
130814    +   else do;
MPRINT(EM_DIAGRAM):   else do;
130815    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
130816    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
130817    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130818    +      end;
MPRINT(EM_DIAGRAM):   end;
130819    +      else do;
MPRINT(EM_DIAGRAM):   else do;
130820    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
130821    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
130822    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
130823    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
130824    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
130825    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
130826    +         end;
MPRINT(EM_DIAGRAM):   end;
130827    +      end;
MPRINT(EM_DIAGRAM):   end;
130828    +   end;
MPRINT(EM_DIAGRAM):   end;
130829    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
130830    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
130831    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
130832    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
130833    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
130834    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
130835    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130836    +   end;
MPRINT(EM_DIAGRAM):   end;
130837    +end;
MPRINT(EM_DIAGRAM):   end;
130838    +
130839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130840    +*** Checking missing input Interval
130841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
130842    +
130843    +IF NMISS(
130844    +   AcceptedCmpTotal ,
130845    +   Age ,
130846    +   Frq ,
130847    +   Income ,
130848    +   Kidhome ,
130849    +   MntFishProducts ,
130850    +   MntFruits ,
130851    +   MntGoldProds ,
130852    +   MntSweetProducts ,
130853    +   MonthsAsCustomer ,
130854    +   NumDealsPurchases ,
130855    +   NumWebVisitsMonth ,
130856    +   RFMstat ,
130857    +   RMntFrq ,
130858    +   Recency ,
130859    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
130860    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
130861    +
130862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
130863    +END;
MPRINT(EM_DIAGRAM):   END;
130864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130865    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
130866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130867    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130868    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
130869    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
130870    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
130871    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
130872    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
130873    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
130874    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
130875    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
130876    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
130877    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
130878    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
130879    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
130880    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
130881    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
130882    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
130883    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
130884    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
130885    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
130886    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
130887    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
130888    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
130889    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
130890    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
130891    +END;
MPRINT(EM_DIAGRAM):   END;
130892    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
130893    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
130894    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
130895    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
130896    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
130897    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
130898    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
130899    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
130900    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
130901    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
130902    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
130903    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
130904    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
130905    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
130906    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
130907    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
130908    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
130909    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
130910    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
130911    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
130912    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
130913    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
130914    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
130915    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
130916    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
130917    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
130918    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
130919    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
130920    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
130921    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
130922    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
130923    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
130924    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
130925    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
130926    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
130927    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
130928    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
130929    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
130930    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
130931    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
130932    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
130933    +END;
MPRINT(EM_DIAGRAM):   END;
130934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130935    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
130936    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130938    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
130939    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130941    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
130942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130943    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130944    +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
130945    +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
130946    +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
130947    +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
130948    +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
130949    +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
130950    +          +    -0.01191239814261 * S_MonthsAsCustomer
130951    +          +      -0.307259983666 * S_NumDealsPurchases
130952    +          +    -0.23972300101674 * S_NumWebVisitsMonth
130953    +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
130954    +        S_RMntFrq  +     0.32671320165482 * S_Recency
130955    +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
130956    +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
130957    +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
130958    +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
130959    +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
130960    +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
130961    +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
130962    +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
130963    +        EducationGraduation  +    -0.14651231631393 * EducationMaster
130964    +          +     -0.0692762335753 * Marital_StatusDivorced
130965    +          +     0.02472293911071 * Marital_StatusMarried
130966    +          +     0.04038393550437 * Marital_StatusSingle
130967    +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
130968    +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
130969    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
130970    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
130971    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
130972    +END;
MPRINT(EM_DIAGRAM):   END;
130973    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
130974    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
130975    +END;
MPRINT(EM_DIAGRAM):   END;
130976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130977    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
130978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
130979    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
130980    +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
130981    +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
130982    +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
130983    +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
130984    +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
130985    +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
130986    +          +     0.14524334187971 * S_MonthsAsCustomer
130987    +          +    -0.58464031025411 * S_NumDealsPurchases
130988    +          +    -0.10768856151333 * S_NumWebVisitsMonth
130989    +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
130990    +        S_RMntFrq  +    -0.04430281297191 * S_Recency
130991    +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
130992    +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
130993    +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
130994    +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
130995    +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
130996    +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
130997    +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
130998    +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
130999    +        EducationGraduation  +    -0.37768027773032 * EducationMaster
131000    +          +     0.07007941100006 * Marital_StatusDivorced
131001    +          +     -0.7850554528889 * Marital_StatusMarried
131002    +          +     1.17661634109847 * Marital_StatusSingle
131003    +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
131004    +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
131005    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
131006    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
131007    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
131008    +END;
MPRINT(EM_DIAGRAM):   END;
131009    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131010    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
131011    +END;
MPRINT(EM_DIAGRAM):   END;
131012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131013    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
131014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131015    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131016    +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
131017    +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
131018    +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
131019    +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
131020    +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
131021    +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
131022    +          +    -2.17154324602167 * S_MonthsAsCustomer
131023    +          +    -1.39930460918007 * S_NumDealsPurchases
131024    +          +    -0.16044576482901 * S_NumWebVisitsMonth
131025    +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
131026    +        S_RMntFrq  +    -0.73252715992964 * S_Recency
131027    +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
131028    +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
131029    +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
131030    +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
131031    +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
131032    +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
131033    +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
131034    +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
131035    +        EducationGraduation  +    -0.35403398893388 * EducationMaster
131036    +          +     0.83271778325587 * Marital_StatusDivorced
131037    +          +     0.79137899511518 * Marital_StatusMarried
131038    +          +    -0.51320080030576 * Marital_StatusSingle
131039    +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
131040    +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
The SAS System

MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
131041    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
131042    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
131043    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
131044    +END;
MPRINT(EM_DIAGRAM):   END;
131045    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131046    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
131047    +END;
MPRINT(EM_DIAGRAM):   END;
131048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131049    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
131050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131052    +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
131053    +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
131054    +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
131055    +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
131056    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
131057    +END;
MPRINT(EM_DIAGRAM):   END;
131058    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131059    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
131060    +END;
MPRINT(EM_DIAGRAM):   END;
131061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131062    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
131063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131064    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131065    +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
131066    +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
131067    +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
131068    +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
131069    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
131070    +END;
MPRINT(EM_DIAGRAM):   END;
131071    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131072    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
131073    +END;
MPRINT(EM_DIAGRAM):   END;
131074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131075    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
131076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131078    +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
131079    +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
131080    +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
131081    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
131082    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
131083    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
131084    +END;
MPRINT(EM_DIAGRAM):   END;
131085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131086    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
131087    +END;
MPRINT(EM_DIAGRAM):   END;
131088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131089    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
131090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131091    +
131092    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
131093    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
131094    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
131095    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
131096    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
131097    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131098    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
131099    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
131100    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
131101    +end;
MPRINT(EM_DIAGRAM):   end;
131102    +else do;
MPRINT(EM_DIAGRAM):   else do;
131103    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
131104    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
131105    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
131106    +   end;
MPRINT(EM_DIAGRAM):   end;
131107    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
131108    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
131109    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
131110    +   end;
MPRINT(EM_DIAGRAM):   end;
131111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131112    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
131113    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
131114    +   end;
MPRINT(EM_DIAGRAM):   end;
131115    +end;
MPRINT(EM_DIAGRAM):   end;
131116    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131117    +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
131118    +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
131119    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
131120    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
131121    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
131122    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
131123    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
131124    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
131125    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
131126    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
131127    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
131128    +END;
MPRINT(EM_DIAGRAM):   END;
131129    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131130    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
131131    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
131132    +END;
MPRINT(EM_DIAGRAM):   END;
131133    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
131134    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
131135    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
131136    +END;
MPRINT(EM_DIAGRAM):   END;
131137    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
131138    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
131139    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
131140    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
131141    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
131142    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
131143    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
131144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131145    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
131146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131147    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
131148    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
131149    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
131150    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
131151    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
131152    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
131153    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
131154    +END;
MPRINT(EM_DIAGRAM):   END;
131155    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
131156    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
131157    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
131158    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
131159    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
131160    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131161    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
131162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131163    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
131164    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
131165    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
131166    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
131167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131168    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
131169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131170    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
131171    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
131172    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
131173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131174    +* Ensmbl54: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Average Posteriors of 7 models;
131175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131176    +P_DepVar1 = (
131177    +AutoNeural36_P_DepVar1 +
131178    +AutoNeural35_P_DepVar1 +
131179    +AutoNeural34_P_DepVar1 +
131180    +AutoNeural40_P_DepVar1 +
131181    +AutoNeural39_P_DepVar1 +
131182    +AutoNeural38_P_DepVar1 +
131183    +AutoNeural37_P_DepVar1
131184    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural36_P_DepVar1 + AutoNeural35_P_DepVar1 + 
AutoNeural34_P_DepVar1 + AutoNeural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + AutoNeural37_P_DepVar1 )/7;
131185    +P_DepVar0 = (
131186    +AutoNeural36_P_DepVar0 +
131187    +AutoNeural35_P_DepVar0 +
131188    +AutoNeural34_P_DepVar0 +
131189    +AutoNeural40_P_DepVar0 +
131190    +AutoNeural39_P_DepVar0 +
131191    +AutoNeural38_P_DepVar0 +
131192    +AutoNeural37_P_DepVar0
131193    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural36_P_DepVar0 + AutoNeural35_P_DepVar0 + 
AutoNeural34_P_DepVar0 + AutoNeural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + AutoNeural37_P_DepVar0 )/7;
131194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131195    +* Ensmbl54: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Classification Vars;
131196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131197    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
131198    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
131199    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
131200    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
131201    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
131202    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
131203    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
131204    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
131205    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
131206    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
131207    +end;
MPRINT(EM_DIAGRAM):   end;
131208    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
131209    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
131210    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
131211    +end;
MPRINT(EM_DIAGRAM):   end;
131212    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
131213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131214    +* Ensmbl54: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Producing Unformatted variable;
131215    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131216    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
131217    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
131218    +else
131219    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
131220    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131221    +* Ensmbl54: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing _WARN_ Variable;
131222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131223    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
131224    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
131225    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
131226    +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131226   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131227    +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131227   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131228    +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131228   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131229    +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131229   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131230    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131230   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131231    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131231   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131232    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131232   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131233    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131233   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131234    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131234   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131235    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131235   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131236    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131236   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131237    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131237   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131238    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131238   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131239    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131239   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131240    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131240   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131241    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131241   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131242    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131242   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131243    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131243   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131244    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131244   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131245    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131245   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131246    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131246   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131247    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131247   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131248    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131248   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131249    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131249   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131250    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
131250   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
131251    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
131251   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
131252    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
131252   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
131253    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
131253   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
131254    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131255    +* Ensmbl54: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Residual Vars;
131256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
131257    +if
131258    +F_DepVar NE '1'
131259    +AND F_DepVar NE '0'
131260    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
131261    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
131262    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
131263    +end;
MPRINT(EM_DIAGRAM):   end;
131264    +else do;
MPRINT(EM_DIAGRAM):   else do;
131265    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
131266    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
131267    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
131268    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
131269    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
131270    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
131271    +END;
MPRINT(EM_DIAGRAM):   END;
131272    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
131273     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL54_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
131274     quit;
131275     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl54_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl54_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl54_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
131335     filename _pref
131335   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
131336     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
131337     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas.
131338    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
131339    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
131340    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
131341    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
131342    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
131343    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
131344    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
131345    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
131346    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
131347    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
131348    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
131349    +LENGTH _WARN_ $4
131350    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
131351    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
131352    +
131353    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
131354    +
131355    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
131356    +
131357    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
131358    +
131359    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
131360    +
131361    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
131362    +
131363    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
131364    +
131365    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
131366    +
131367    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
131368    +
131369    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
131370    +
131371    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
131372    +
131373    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
131374    +
131375    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
131376    +
131377    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
131378    +
131379    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
131380    +
131381    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
131382    +
131383    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
131384    +
131385    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
131386    +
131387    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
131388    +
131389    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
131390    +
131391    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
131392    +
131393    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
131394    +
131395    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
131396    +
131397    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
131398    +
131399    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
131400    +
131401    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
131402    +
131403    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
131404    +
131405    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
131406    +
131407    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
131408    +
131409    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
131410    +
131411    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
131412    +
131413    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
131414    +
131415    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
131416    +
131417    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
131418    +
131419    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
131420    +
131421    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
131422    +
131423    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
131424    +
131425    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
131426    +
131427    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
131428    +
131429    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
131430    +
131431    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
131432    +
131433    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
131434    +
131435    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
131436    +
131437    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
131438    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
131439    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
131440    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
131441    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131442    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131443    +end;
MPRINT(EM_DIAGRAM):   end;
131444    +else do;
MPRINT(EM_DIAGRAM):   else do;
131445    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131446    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
131447    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131448    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131449    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
131450    +   end;
MPRINT(EM_DIAGRAM):   end;
131451    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131452    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
131453    +   end;
MPRINT(EM_DIAGRAM):   end;
131454    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131455    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
131456    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131457    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131458    +   end;
MPRINT(EM_DIAGRAM):   end;
131459    +end;
MPRINT(EM_DIAGRAM):   end;
131460    +
131461    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
131462    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
131463    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
131464    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
131465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131467    +end;
MPRINT(EM_DIAGRAM):   end;
131468    +else do;
MPRINT(EM_DIAGRAM):   else do;
131469    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131470    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
131471    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131472    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131473    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
131474    +   end;
MPRINT(EM_DIAGRAM):   end;
131475    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131476    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
131477    +   end;
MPRINT(EM_DIAGRAM):   end;
131478    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131479    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
131480    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131481    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131482    +   end;
MPRINT(EM_DIAGRAM):   end;
131483    +end;
MPRINT(EM_DIAGRAM):   end;
131484    +
131485    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
131486    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
131487    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
131488    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
131489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131491    +end;
MPRINT(EM_DIAGRAM):   end;
131492    +else do;
MPRINT(EM_DIAGRAM):   else do;
131493    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131494    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
131495    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131496    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131497    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
131498    +   end;
MPRINT(EM_DIAGRAM):   end;
131499    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131500    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
131501    +   end;
MPRINT(EM_DIAGRAM):   end;
131502    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131503    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
131504    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131505    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131506    +   end;
MPRINT(EM_DIAGRAM):   end;
131507    +end;
MPRINT(EM_DIAGRAM):   end;
131508    +
131509    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
131510    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
131511    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
131512    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
131513    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131514    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131515    +end;
MPRINT(EM_DIAGRAM):   end;
131516    +else do;
MPRINT(EM_DIAGRAM):   else do;
131517    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131518    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
131519    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131520    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131521    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
131522    +   end;
MPRINT(EM_DIAGRAM):   end;
131523    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131524    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
131525    +   end;
MPRINT(EM_DIAGRAM):   end;
131526    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131527    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
131528    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131529    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131530    +   end;
MPRINT(EM_DIAGRAM):   end;
131531    +end;
MPRINT(EM_DIAGRAM):   end;
131532    +
131533    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
131534    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
131535    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
131536    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
131537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131539    +end;
MPRINT(EM_DIAGRAM):   end;
131540    +else do;
MPRINT(EM_DIAGRAM):   else do;
131541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131542    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
131543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131544    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131545    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
131546    +   end;
MPRINT(EM_DIAGRAM):   end;
131547    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131548    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
131549    +   end;
MPRINT(EM_DIAGRAM):   end;
131550    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131551    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
131552    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131553    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131554    +   end;
MPRINT(EM_DIAGRAM):   end;
131555    +end;
MPRINT(EM_DIAGRAM):   end;
131556    +
131557    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
131558    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
131559    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
131560    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
131561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131563    +end;
MPRINT(EM_DIAGRAM):   end;
131564    +else do;
MPRINT(EM_DIAGRAM):   else do;
131565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131566    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
131567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131568    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
131569    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
131570    +   end;
MPRINT(EM_DIAGRAM):   end;
131571    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
131572    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
131573    +   end;
MPRINT(EM_DIAGRAM):   end;
131574    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131575    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
131576    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131577    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131578    +   end;
MPRINT(EM_DIAGRAM):   end;
131579    +end;
MPRINT(EM_DIAGRAM):   end;
131580    +
131581    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
131582    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
131583    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
131584    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
131585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131587    +end;
MPRINT(EM_DIAGRAM):   end;
131588    +else do;
MPRINT(EM_DIAGRAM):   else do;
131589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
131590    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
131591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131592    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
131593    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
131594    +   end;
MPRINT(EM_DIAGRAM):   end;
131595    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
131596    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
131597    +   end;
MPRINT(EM_DIAGRAM):   end;
131598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131599    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
131600    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131601    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131602    +   end;
MPRINT(EM_DIAGRAM):   end;
131603    +end;
MPRINT(EM_DIAGRAM):   end;
131604    +
131605    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
131606    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
131607    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
131608    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
131609    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
131610    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
131611    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
131612    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
131613    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
131614    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
131615    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
131616    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
131617    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131618    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131619    +end;
MPRINT(EM_DIAGRAM):   end;
131620    +else do;
MPRINT(EM_DIAGRAM):   else do;
131621    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
131622    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
131623    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131624    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
131625    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
131626    +   end;
MPRINT(EM_DIAGRAM):   end;
131627    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
131628    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
131629    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
131630    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
131631    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
131632    +   end;
MPRINT(EM_DIAGRAM):   end;
131633    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
131634    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
131635    +   end;
MPRINT(EM_DIAGRAM):   end;
131636    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
131637    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
131638    +   end;
MPRINT(EM_DIAGRAM):   end;
131639    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
131640    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
131641    +   end;
MPRINT(EM_DIAGRAM):   end;
131642    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131643    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
131644    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
131645    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
131646    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
131647    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131648    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131649    +   end;
MPRINT(EM_DIAGRAM):   end;
131650    +end;
MPRINT(EM_DIAGRAM):   end;
131651    +
131652    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
131653    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
131654    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
131655    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
131656    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
131657    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
131658    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
131659    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
131660    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
131661    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
131662    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
131663    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
131664    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
131665    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
131666    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131667    +end;
MPRINT(EM_DIAGRAM):   end;
131668    +else do;
MPRINT(EM_DIAGRAM):   else do;
131669    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
131670    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
131671    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
131672    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
131673    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
131674    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
131675    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
131676    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
131677    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
131678    +         end;
MPRINT(EM_DIAGRAM):   end;
131679    +         else do;
MPRINT(EM_DIAGRAM):   else do;
131680    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
131681    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
131682    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
131683    +            end;
MPRINT(EM_DIAGRAM):   end;
131684    +         end;
MPRINT(EM_DIAGRAM):   end;
131685    +      end;
MPRINT(EM_DIAGRAM):   end;
131686    +      else do;
MPRINT(EM_DIAGRAM):   else do;
131687    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
131688    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
131689    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
131690    +         end;
MPRINT(EM_DIAGRAM):   end;
131691    +      end;
MPRINT(EM_DIAGRAM):   end;
131692    +   end;
MPRINT(EM_DIAGRAM):   end;
131693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
131694    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
131695    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
131696    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
131697    +      end;
MPRINT(EM_DIAGRAM):   end;
131698    +      else do;
MPRINT(EM_DIAGRAM):   else do;
131699    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
131700    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
131701    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
131702    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
131703    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
131704    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
131705    +         end;
MPRINT(EM_DIAGRAM):   end;
131706    +      end;
MPRINT(EM_DIAGRAM):   end;
131707    +   end;
MPRINT(EM_DIAGRAM):   end;
131708    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
131709    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
131710    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
131711    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
131712    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
131713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
131714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131715    +   end;
MPRINT(EM_DIAGRAM):   end;
131716    +end;
MPRINT(EM_DIAGRAM):   end;
131717    +
131718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131719    +*** Checking missing input Interval
131720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
131721    +
131722    +IF NMISS(
131723    +   AcceptedCmpTotal ,
131724    +   Age ,
131725    +   Frq ,
131726    +   Income ,
131727    +   Kidhome ,
131728    +   MntFishProducts ,
131729    +   MntFruits ,
131730    +   MntGoldProds ,
131731    +   MntSweetProducts ,
131732    +   MonthsAsCustomer ,
131733    +   NumDealsPurchases ,
131734    +   NumWebVisitsMonth ,
131735    +   RFMstat ,
131736    +   RMntFrq ,
131737    +   Recency ,
131738    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
131739    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
131740    +
131741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
131742    +END;
MPRINT(EM_DIAGRAM):   END;
131743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131744    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
131745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131746    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131747    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
131748    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
131749    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
131750    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
131751    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
131752    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
131753    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
131754    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
131755    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
131756    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
131757    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
131758    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
131759    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
131760    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
131761    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
131762    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
131763    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
131764    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
131765    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
131766    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
131767    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
131768    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
131769    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
131770    +END;
MPRINT(EM_DIAGRAM):   END;
131771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
131772    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
131773    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
131774    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
131775    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
131776    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
131777    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
131778    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
131779    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
131780    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
131781    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
131782    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
131783    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
131784    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
131785    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
131786    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
131787    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
131788    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
131789    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
131790    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
131791    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
131792    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
131793    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
131794    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
131795    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
131796    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
131797    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
131798    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
131799    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
131800    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
131801    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
131802    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
131803    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
131804    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
131805    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
131806    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
131807    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
131808    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
131809    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
131810    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
131811    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
131812    +END;
MPRINT(EM_DIAGRAM):   END;
131813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131814    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
131815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131817    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
131818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131820    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
131821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
131822    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
131823    +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
131824    +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
131825    +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
131826    +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
131827    +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
131828    +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
131829    +          +     1.47210732135355 * S_MonthsAsCustomer
131830    +          +     0.85741098948561 * S_NumDealsPurchases
131831    +          +     0.47124997442086 * S_NumWebVisitsMonth
131832    +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
131833    +        S_RMntFrq  +     0.42017826752434 * S_Recency
131834    +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
131835    +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
131836    +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
131837    +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
131838    +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
131839    +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
131840    +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
131841    +          +     0.74811152666015 * S_MonthsAsCustomer
131842    +          +    -0.13168708818154 * S_NumDealsPurchases
131843    +          +    -0.51935779196522 * S_NumWebVisitsMonth
131844    +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
131845    +        S_RMntFrq  +     1.96758846931972 * S_Recency
131846    +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
131847    +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
131848    +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
131849    +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
131850    +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
131851    +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
131852    +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
131853    +          +     0.11776941975292 * S_MonthsAsCustomer
131854    +          +    -0.69977862189457 * S_NumDealsPurchases
131855    +          +    -0.26676589341422 * S_NumWebVisitsMonth
131856    +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
131857    +        S_RMntFrq  +     1.53487074713045 * S_Recency
131858    +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
131859    +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
131860    +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
131861    +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
131862    +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
131863    +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
131864    +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
131865    +          +     0.46606320110885 * S_MonthsAsCustomer
131866    +          +     1.64885970718717 * S_NumDealsPurchases
131867    +          +     1.70233049691156 * S_NumWebVisitsMonth
131868    +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
131869    +        S_RMntFrq  +    -1.33025042025966 * S_Recency
131870    +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
131871    +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
131872    +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
131873    +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
131874    +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
131875    +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
131876    +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
131877    +          +     0.25703511103123 * S_MonthsAsCustomer
131878    +          +     0.81449309285524 * S_NumDealsPurchases
131879    +          +     0.65863550896078 * S_NumWebVisitsMonth
131880    +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
131881    +        S_RMntFrq  +     0.35298837231553 * S_Recency
131882    +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
131883    +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
131884    +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
131885    +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
131886    +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
131887    +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
131888    +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
131889    +          +     0.79681190434731 * S_MonthsAsCustomer
131890    +          +    -0.93973916927987 * S_NumDealsPurchases
131891    +          +     1.37415777280471 * S_NumWebVisitsMonth
131892    +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
131893    +        S_RMntFrq  +     0.25579910148098 * S_Recency
131894    +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
131895    +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
131896    +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
131897    +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
131898    +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
131899    +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
131900    +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
131901    +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
131902    +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
131903    +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
131904    +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
131905    +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
131906    +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
131907    +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
131908    +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
131909    +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
131910    +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
131911    +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
131912    +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
131913    +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
131914    +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
131915    +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
131916    +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
131917    +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
131918    +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
131919    +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
131920    +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
131921    +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
131922    +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
131923    +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
131924    +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
131925    +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
131926    +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
131927    +        EducationGraduation  +     0.53978142914157 * EducationMaster
131928    +          +    -0.28915302940579 * Marital_StatusDivorced
131929    +          +     0.36400858753372 * Marital_StatusMarried
131930    +          +     0.64088916620982 * Marital_StatusSingle
131931    +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
131932    +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
131933    +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
131934    +        EducationGraduation  +     0.31774696403611 * EducationMaster
131935    +          +    -0.48311224079569 * Marital_StatusDivorced
131936    +          +     0.78522892664414 * Marital_StatusMarried
131937    +          +    -0.52144588286939 * Marital_StatusSingle
131938    +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
131939    +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
131940    +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
131941    +        EducationGraduation  +     1.62119993408702 * EducationMaster
131942    +          +    -1.10138941531054 * Marital_StatusDivorced
131943    +          +     1.91098461544032 * Marital_StatusMarried
131944    +          +    -1.96662881570281 * Marital_StatusSingle
131945    +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
131946    +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
131947    +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
131948    +        EducationGraduation  +    -0.47265183904634 * EducationMaster
131949    +          +    -0.26938567401241 * Marital_StatusDivorced
131950    +          +      0.5252138734125 * Marital_StatusMarried
131951    +          +    -0.77744801183604 * Marital_StatusSingle
131952    +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
131953    +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
131954    +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
131955    +        EducationGraduation  +     1.34706628408556 * EducationMaster
131956    +          +    -0.49116995167497 * Marital_StatusDivorced
131957    +          +     1.22243596432371 * Marital_StatusMarried
131958    +          +    -1.22268267917833 * Marital_StatusSingle
131959    +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
131960    +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
131961    +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
131962    +        EducationGraduation  +     0.19530936178176 * EducationMaster
131963    +          +    -0.21134253419933 * Marital_StatusDivorced
131964    +          +     0.87168965818013 * Marital_StatusMarried
131965    +          +     0.07539748751767 * Marital_StatusSingle
131966    +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
131967    +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
131968    +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
131969    +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
131970    +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
131971    +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
131972    +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
131973    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
131974    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
131975    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
131976    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
131977    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
131978    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
131979    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
131980    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
131981    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
131982    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
131983    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
131984    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
131985    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
131986    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
131987    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
131988    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
131989    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
131990    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
131991    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
131992    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
131993    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
131994    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
131995    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
131996    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
131997    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
131998    +END;
MPRINT(EM_DIAGRAM):   END;
131999    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
132000    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
132001    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
132002    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
132003    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
132004    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
132005    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
132006    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
132007    +END;
MPRINT(EM_DIAGRAM):   END;
132008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132009    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
132010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132011    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
132012    +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
132013    +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
132014    +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
132015    +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
132016    +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
132017    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
132018    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
132019    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
132020    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
132021    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
132022    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
132023    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
132024    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
132025    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
132026    +END;
MPRINT(EM_DIAGRAM):   END;
132027    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
132028    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
132029    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
132030    +END;
MPRINT(EM_DIAGRAM):   END;
132031    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
132032    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
132033    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
132034    +END;
MPRINT(EM_DIAGRAM):   END;
132035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132036    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
132037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132038    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
132039    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
132040    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
132041    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
132042    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
132043    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
132044    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
132045    +END;
MPRINT(EM_DIAGRAM):   END;
132046    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
132047    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
132048    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
132049    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
132050     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
132051     quit;
132052     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
132053     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
132054     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
132055     retain ID 2 Node "AutoNeural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural36";
132056     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
132057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132058     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
132059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132060     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132061     proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME 
CREATOR);
132062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132064     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132065     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
132066     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
132067     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132068     proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
132069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132070     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
132071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132072     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132073     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132074     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
132075     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132076     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132077     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
132078     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
132078   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1333 rows and 5 columns.

132079     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132080     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
132081     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1333 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1333 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132082     filename _pref
132082   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
132083     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
132084     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
132085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
132086    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
132087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
132088    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
132089    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
132090    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
132091     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
132092     quit;
132093     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
132094     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
132095     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
132096     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
132097     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
132098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132099     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
132100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132102     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
132103     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132105     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132106     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
132107     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
132108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132109     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
132110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132111     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
132112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132114     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132115     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
132116     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132117     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132118     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
132119     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
132119   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

132120     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132121     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
132122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1337 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132123     filename _pref
132123   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
132124     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
132125     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
132126    +
132127    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
132128    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
132128   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
132129    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
132130    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
132131    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
132132    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
132133    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
132134     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
132135     quit;
132136     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
132137     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
132138     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
132139     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
132140     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
132141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132142     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
132143     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132145     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
132146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132148     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132149     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
132150     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
132151     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132152     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
132153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132154     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
132155     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132157     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132158     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
132159     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132160     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132161     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
132162     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
132162   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

132163     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132164     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
132165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1376 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132166     filename _pref
132166   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
132167     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
132168     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
132169    +
132170    +
132171    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
132172    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
132173    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
132174    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
132175    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
132176    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132177    +
132178    +
132179    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
132180    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
132181    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
132182    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
132183    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
132184    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132185    +
132186    +
132187    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
132188    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
132189    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
132190    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
132191    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
132192    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132193    +
132194    +
132195    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
132196    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
132197    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
132198    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
132199    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
132200    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132201    +
132202    +
132203    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
132204    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
132205    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
132206    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
132207    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
132208    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132209    +
132210    +
132211    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
132212    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
132213    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
132214    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
132215    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
132216    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132217    +
132218    +
132219    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
132220    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
132221    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
132222    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
132223    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
132224    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132225    +
132226    +
132227    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
132228    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
132229    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
132230    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
132231    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
132232    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
132233    +if
132234    +_FILTERNORM1 not in ( '.')
132235    + and
132236    +_FILTERNORM2 not in ( '.')
132237    + and
132238    +_FILTERNORM3 not in ( '.')
132239    + and
132240    +_FILTERNORM4 not in ( '.')
132241    + and
132242    +_FILTERNORM5 not in ( '.')
132243    + and
132244    +_FILTERNORM6 not in ( '.')
132245    + and
132246    +_FILTERNORM7 not in ( ' ')
132247    + and
132248    +_FILTERNORM8 not in ( ' ')
132249    +and
132250    +( Dt_Customer ne .)
132251    +and ( Income ne . and (Income<=107000))
132252    +and ( Kidhome ne .)
132253    +and ( MntFishProducts ne .)
132254    +and ( MntFruits ne .)
132255    +and ( MntGoldProds ne .)
132256    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
132257    +and ( MntSweetProducts ne .)
132258    +and ( MntWines ne .)
132259    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
132260    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
132261    +and ( NumStorePurchases ne .)
132262    +and ( NumWebPurchases ne .)
132263    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
132264    +and ( Recency ne .)
132265    +and ( Teenhome ne .)
132266    +and ( Year_Birth ne .)
132267    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
132268    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
132269    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
132270    +end;
MPRINT(EM_DIAGRAM):   end;
132271    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
132272    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
132273     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
132274     quit;
132275     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
132276     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
132277     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
132278     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
132279     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
132280     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132281     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
132282     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132283     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132284     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
132285     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132287     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132288     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
132289     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
132290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132291     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
132292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132293     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
132294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132295     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132296     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
132297     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
132298     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
132299     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132300     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
132301     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
132301   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

132302     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132303     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
132304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132305     %macro varDept(fcmpdata=,id=);
132306     %global nobs&id scoreFlag&id;
132307     %let scoreFlag&id = 0;
132308     %if &id=1 or ^&fcmpStart %then %do;
132309     proc sort data=&fcmpdata out=_temp&id nodupkey;
132310     by NAME;
132311     where id=&id and LHS in( %let j=1;
132312     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
132313     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
132314     "&var" %let j = %eval(&j+1);
132315     %end;
132316     );
132317     run;
132318     %let dsid = %sysfunc(open(_temp&id));
132319     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
132320     %let dsid = %sysfunc(close(&dsid));
132321     %if &&nobs&id %then %do;
132322     %let scoreFlag&id = 1;
132323     %let fcmpStart = 1;
132324     %end;
132325     %else %let fcmpStart = 0;
132326     %end;
132327     %else %do;
132328     proc sort data=&fcmpdata out=_tempid;
132329     where id=&id;
132330     by LHS;
132331     run;
132332     %let dsid = %sysfunc(open(_tempid));
132333     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
132334     %let dsid = %sysfunc(close(&dsid));
132335     %if ^&&nobs&id %then %do;
132336     proc datasets lib=work nolist;
132337     delete _tempid;
132338     run;
132339     quit;
132340     %end;
132341     %else %do;
132342     data _tempAll;
132343     set %let j=%eval(&id-1);
132344     %do x=1 %to &j;
132345     %if &&nobs&x %then %do;
132346     _temp&x %end;
132347     %end;
132348     ;
132349     run;
132350     proc sql;
132351     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
132351   ! work._tempid p2 where p.name=p2.lhs;
132352     quit;
132353     data _temp&id;
132354     set _temp&id;
132355     where LHS ne '' and NAME ne '' and Node ne '';
132356     run;
132357     proc datasets lib=work nolist;
132358     delete _tempAll;
132359     run;
132360     %let dsid = %sysfunc(open(_temp&id));
132361     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
132362     %let dsid = %sysfunc(close(&dsid));
132363     %if ^&&nobs&id %then %do;
132364     proc datasets lib=work nolist;
132365     delete _temp&id;
132366     run;
132367     quit;
132368     %end;
132369     %else %do;
132370     %let scoreFlag&id = 1;
132371     data _temp&id;
132372     set _temp&id;
132373     where LHS ne NAME and node ne '';
132374     run;
132375     %let dsid = %sysfunc(open(_temp&id));
132376     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
132377     %let dsid = %sysfunc(close(&dsid));
132378     %if ^&&nobs&id %then %do;
132379     proc datasets lib=work nolist;
132380     delete _temp&id;
132381     run;
132382     quit;
132383     %end;
132384     %else %do;
132385     proc sort data=_temp&id nodupkey;
132386     by LHS NAME;
132387     run;
132388     %end;
132389     %end;
132390     %end;
132391     %end;
132392     %mend varDept;
132393     %macro optCode(outdata=fcmpdata);
132394     %global fcmpStart;
132395     %let fcmpStart = 0;
132396     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
132397     %let NumNodes=9;
132398     %do k=1 %to &NumNodes;
132399     %vardept(fcmpdata=&outdata, id=&k);
132400     %end;
132401     %mend optCode;
132402     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 127 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 93 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 69 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

132403     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
132404     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
132405     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
132406     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132407     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
132408     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
132409     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
132410     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132411     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
132412     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
132412   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

132413     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

132414     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
132415     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
132416     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

132417     filename _pref
132417   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
132418     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
132419     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
132420    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
132421    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
132422    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
132423    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
132424    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
132425    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
132426    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
132427    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
132428    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
132429    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
132430    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
132431    +LENGTH _WARN_ $4
132432    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
132433    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
132434    +
132435    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
132436    +
132437    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
132438    +
132439    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
132440    +
132441    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
132442    +
132443    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
132444    +
132445    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
132446    +
132447    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
132448    +
132449    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
132450    +
132451    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
132452    +
132453    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
132454    +
132455    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
132456    +
132457    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
132458    +
132459    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
132460    +
132461    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
132462    +
132463    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
132464    +
132465    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
132466    +
132467    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
132468    +
132469    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
132470    +
132471    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
132472    +
132473    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
132474    +
132475    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
132476    +
132477    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
132478    +
132479    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
132480    +
132481    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
132482    +
132483    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
132484    +
132485    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
132486    +
132487    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
132488    +
132489    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
132490    +
132491    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
132492    +
132493    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
132494    +
132495    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
132496    +
132497    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
132498    +
132499    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
132500    +
132501    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
132502    +
132503    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
132504    +
132505    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
132506    +
132507    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
132508    +
132509    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
132510    +
132511    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
132512    +
132513    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
132514    +
132515    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
132516    +
132517    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
132518    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
132519    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
132520    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
132521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132523    +end;
MPRINT(EM_DIAGRAM):   end;
132524    +else do;
MPRINT(EM_DIAGRAM):   else do;
132525    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132526    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
132527    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132528    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132529    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
132530    +   end;
MPRINT(EM_DIAGRAM):   end;
132531    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132532    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
132533    +   end;
MPRINT(EM_DIAGRAM):   end;
132534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132535    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
132536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132538    +   end;
MPRINT(EM_DIAGRAM):   end;
132539    +end;
MPRINT(EM_DIAGRAM):   end;
132540    +
132541    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
132542    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
132543    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
132544    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
132545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132547    +end;
MPRINT(EM_DIAGRAM):   end;
132548    +else do;
MPRINT(EM_DIAGRAM):   else do;
132549    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132550    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
132551    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132552    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132553    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
132554    +   end;
MPRINT(EM_DIAGRAM):   end;
132555    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132556    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
132557    +   end;
MPRINT(EM_DIAGRAM):   end;
132558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132559    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
132560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132562    +   end;
MPRINT(EM_DIAGRAM):   end;
132563    +end;
MPRINT(EM_DIAGRAM):   end;
132564    +
132565    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
132566    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
132567    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
132568    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
132569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132571    +end;
MPRINT(EM_DIAGRAM):   end;
132572    +else do;
MPRINT(EM_DIAGRAM):   else do;
132573    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132574    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
132575    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132576    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132577    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
132578    +   end;
MPRINT(EM_DIAGRAM):   end;
132579    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132580    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
132581    +   end;
MPRINT(EM_DIAGRAM):   end;
132582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132583    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
132584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132586    +   end;
MPRINT(EM_DIAGRAM):   end;
132587    +end;
MPRINT(EM_DIAGRAM):   end;
132588    +
132589    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
132590    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
132591    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
132592    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
132593    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132595    +end;
MPRINT(EM_DIAGRAM):   end;
132596    +else do;
MPRINT(EM_DIAGRAM):   else do;
132597    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132598    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
132599    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132600    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132601    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
132602    +   end;
MPRINT(EM_DIAGRAM):   end;
132603    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132604    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
132605    +   end;
MPRINT(EM_DIAGRAM):   end;
132606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132607    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
132608    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132609    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132610    +   end;
MPRINT(EM_DIAGRAM):   end;
132611    +end;
MPRINT(EM_DIAGRAM):   end;
132612    +
132613    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
132614    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
132615    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
132616    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
132617    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132618    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132619    +end;
MPRINT(EM_DIAGRAM):   end;
132620    +else do;
MPRINT(EM_DIAGRAM):   else do;
132621    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132622    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
132623    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132624    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132625    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
132626    +   end;
MPRINT(EM_DIAGRAM):   end;
132627    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132628    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
132629    +   end;
MPRINT(EM_DIAGRAM):   end;
132630    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132631    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
132632    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132633    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132634    +   end;
MPRINT(EM_DIAGRAM):   end;
132635    +end;
MPRINT(EM_DIAGRAM):   end;
132636    +
132637    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
132638    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
132639    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
132640    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
132641    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132642    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132643    +end;
MPRINT(EM_DIAGRAM):   end;
132644    +else do;
MPRINT(EM_DIAGRAM):   else do;
132645    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132646    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
132647    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132648    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
132649    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
132650    +   end;
MPRINT(EM_DIAGRAM):   end;
132651    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
132652    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
132653    +   end;
MPRINT(EM_DIAGRAM):   end;
132654    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132655    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
132656    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132657    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132658    +   end;
MPRINT(EM_DIAGRAM):   end;
132659    +end;
MPRINT(EM_DIAGRAM):   end;
132660    +
132661    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
132662    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
132663    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
132664    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
132665    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132666    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132667    +end;
MPRINT(EM_DIAGRAM):   end;
132668    +else do;
MPRINT(EM_DIAGRAM):   else do;
132669    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
132670    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
132671    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132672    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
132673    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
132674    +   end;
MPRINT(EM_DIAGRAM):   end;
132675    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
132676    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
132677    +   end;
MPRINT(EM_DIAGRAM):   end;
132678    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132679    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
132680    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132681    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132682    +   end;
MPRINT(EM_DIAGRAM):   end;
132683    +end;
MPRINT(EM_DIAGRAM):   end;
132684    +
132685    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
132686    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
132687    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
132688    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
132689    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
132690    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
132691    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
132692    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
132693    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
132694    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
132695    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
132696    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
132697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132699    +end;
MPRINT(EM_DIAGRAM):   end;
132700    +else do;
MPRINT(EM_DIAGRAM):   else do;
132701    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
132702    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
132703    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132704    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
132705    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
132706    +   end;
MPRINT(EM_DIAGRAM):   end;
132707    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
132708    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
132709    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
132710    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
132711    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
132712    +   end;
MPRINT(EM_DIAGRAM):   end;
132713    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
132714    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
132715    +   end;
MPRINT(EM_DIAGRAM):   end;
132716    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
132717    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
132718    +   end;
MPRINT(EM_DIAGRAM):   end;
132719    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
132720    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
132721    +   end;
MPRINT(EM_DIAGRAM):   end;
132722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132723    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
132724    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
132725    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
132726    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
132727    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132728    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132729    +   end;
MPRINT(EM_DIAGRAM):   end;
132730    +end;
MPRINT(EM_DIAGRAM):   end;
132731    +
132732    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
132733    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
132734    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
132735    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
132736    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
132737    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
132738    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
132739    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
132740    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
132741    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
132742    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
132743    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
132744    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
132745    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
132746    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132747    +end;
MPRINT(EM_DIAGRAM):   end;
132748    +else do;
MPRINT(EM_DIAGRAM):   else do;
132749    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
132750    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
132751    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
132752    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
132753    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
132754    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
132755    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
132756    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
132757    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
132758    +         end;
MPRINT(EM_DIAGRAM):   end;
132759    +         else do;
MPRINT(EM_DIAGRAM):   else do;
132760    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
132761    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
132762    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
132763    +            end;
MPRINT(EM_DIAGRAM):   end;
132764    +         end;
MPRINT(EM_DIAGRAM):   end;
132765    +      end;
MPRINT(EM_DIAGRAM):   end;
132766    +      else do;
MPRINT(EM_DIAGRAM):   else do;
132767    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
132768    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
132769    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
132770    +         end;
MPRINT(EM_DIAGRAM):   end;
132771    +      end;
MPRINT(EM_DIAGRAM):   end;
132772    +   end;
MPRINT(EM_DIAGRAM):   end;
132773    +   else do;
MPRINT(EM_DIAGRAM):   else do;
132774    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
132775    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
132776    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
132777    +      end;
MPRINT(EM_DIAGRAM):   end;
132778    +      else do;
MPRINT(EM_DIAGRAM):   else do;
132779    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
132780    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
132781    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
132782    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
132783    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
132784    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
132785    +         end;
MPRINT(EM_DIAGRAM):   end;
132786    +      end;
MPRINT(EM_DIAGRAM):   end;
132787    +   end;
MPRINT(EM_DIAGRAM):   end;
132788    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
132789    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
132790    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
132791    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
132792    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
132793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
132794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132795    +   end;
MPRINT(EM_DIAGRAM):   end;
132796    +end;
MPRINT(EM_DIAGRAM):   end;
132797    +
132798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132799    +*** Checking missing input Interval
132800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
132801    +
132802    +IF NMISS(
132803    +   AcceptedCmpTotal ,
132804    +   Age ,
132805    +   Frq ,
132806    +   Income ,
132807    +   Kidhome ,
132808    +   MntFishProducts ,
132809    +   MntFruits ,
132810    +   MntGoldProds ,
132811    +   MntSweetProducts ,
132812    +   MonthsAsCustomer ,
132813    +   NumDealsPurchases ,
132814    +   NumWebVisitsMonth ,
132815    +   RFMstat ,
132816    +   RMntFrq ,
132817    +   Recency ,
132818    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
132819    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
132820    +
132821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
132822    +END;
MPRINT(EM_DIAGRAM):   END;
132823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132824    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
132825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132826    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
132827    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
132828    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
132829    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
132830    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
132831    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
132832    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
132833    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
132834    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
132835    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
132836    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
132837    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
132838    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
132839    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
132840    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
132841    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
132842    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
132843    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
132844    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
132845    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
132846    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
132847    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
132848    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
132849    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
132850    +END;
MPRINT(EM_DIAGRAM):   END;
132851    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
132852    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
132853    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
132854    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
132855    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
132856    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
132857    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
132858    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
132859    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
132860    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
132861    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
132862    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
132863    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
132864    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
132865    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
132866    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
132867    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
132868    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
132869    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
132870    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
132871    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
132872    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
132873    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
132874    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
132875    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
132876    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
132877    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
132878    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
132879    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
132880    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
132881    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
132882    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
132883    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
132884    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
132885    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
132886    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
132887    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
132888    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
132889    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
132890    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
132891    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
132892    +END;
MPRINT(EM_DIAGRAM):   END;
132893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132894    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
132895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132897    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
132898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132900    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
132901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
132902    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
132903    +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
132904    +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
132905    +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
132906    +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
132907    +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
132908    +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
132909    +          +    -0.63886071804247 * S_MonthsAsCustomer
132910    +          +      2.3488612891037 * S_NumDealsPurchases
132911    +          +     2.32996461229282 * S_NumWebVisitsMonth
132912    +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
132913    +        S_RMntFrq  +    -3.18599476886695 * S_Recency
132914    +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
132915    +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
132916    +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
132917    +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
132918    +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
132919    +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
132920    +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
132921    +          +     0.67699646331113 * S_MonthsAsCustomer
132922    +          +     0.70523055739254 * S_NumDealsPurchases
132923    +          +    -2.06406682205141 * S_NumWebVisitsMonth
132924    +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
132925    +        S_RMntFrq  +      5.0273672656487 * S_Recency
132926    +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
132927    +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
132928    +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
132929    +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
132930    +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
132931    +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
132932    +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
132933    +          +    -0.53694216899543 * S_MonthsAsCustomer
132934    +          +     0.25908508836257 * S_NumDealsPurchases
132935    +          +    -1.18459231573601 * S_NumWebVisitsMonth
132936    +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
132937    +        S_RMntFrq  +    -1.22457627833901 * S_Recency
132938    +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
132939    +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
132940    +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
132941    +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
132942    +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
132943    +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
132944    +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
132945    +          +    -0.08931078748332 * S_MonthsAsCustomer
132946    +          +    -0.46561962814047 * S_NumDealsPurchases
132947    +          +    -0.12241295445297 * S_NumWebVisitsMonth
132948    +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
132949    +        S_RMntFrq  +     0.96804234233608 * S_Recency
132950    +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
132951    +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
132952    +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
132953    +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
132954    +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
132955    +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
132956    +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
132957    +          +     -0.9186653552138 * S_MonthsAsCustomer
132958    +          +     2.17624393037629 * S_NumDealsPurchases
132959    +          +    -0.41699900714758 * S_NumWebVisitsMonth
132960    +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
132961    +        S_RMntFrq  +    -0.28987089218356 * S_Recency
132962    +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
132963    +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
132964    +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
132965    +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
132966    +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
132967    +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
132968    +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
132969    +          +     1.32865070741283 * S_MonthsAsCustomer
132970    +          +      0.8173864987673 * S_NumDealsPurchases
132971    +          +     1.04804775338375 * S_NumWebVisitsMonth
132972    +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
132973    +        S_RMntFrq  +     0.08690587270493 * S_Recency
132974    +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
132975    +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
132976    +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
132977    +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
132978    +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
132979    +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
132980    +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
132981    +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
132982    +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
132983    +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
132984    +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
132985    +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
132986    +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
132987    +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
132988    +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
132989    +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
132990    +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
132991    +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
132992    +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
132993    +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
132994    +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
132995    +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
132996    +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
132997    +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
132998    +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
132999    +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
133000    +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
133001    +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
133002    +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
133003    +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
133004    +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
133005    +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
133006    +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
133007    +        EducationGraduation  +    -0.31624019107181 * EducationMaster
133008    +          +    -0.82783034099773 * Marital_StatusDivorced
133009    +          +     0.39651075241405 * Marital_StatusMarried
133010    +          +     0.17323156170107 * Marital_StatusSingle
133011    +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
133012    +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
133013    +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
133014    +        EducationGraduation  +    -0.05323450200928 * EducationMaster
133015    +          +    -2.42314580112302 * Marital_StatusDivorced
133016    +          +     1.72709251267075 * Marital_StatusMarried
133017    +          +    -0.94350561587168 * Marital_StatusSingle
133018    +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
133019    +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
133020    +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
133021    +        EducationGraduation  +    -1.41317064722862 * EducationMaster
133022    +          +    -1.25323701705333 * Marital_StatusDivorced
133023    +          +    -0.72618091015379 * Marital_StatusMarried
133024    +          +     0.20594885266863 * Marital_StatusSingle
133025    +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
133026    +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
133027    +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
133028    +        EducationGraduation  +     0.75559299844055 * EducationMaster
133029    +          +     -0.9159957275063 * Marital_StatusDivorced
133030    +          +     2.06164757358796 * Marital_StatusMarried
133031    +          +    -1.61544310412168 * Marital_StatusSingle
133032    +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
133033    +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
133034    +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
133035    +        EducationGraduation  +     0.27594869585414 * EducationMaster
133036    +          +    -0.72418104768251 * Marital_StatusDivorced
133037    +          +     0.51077116161056 * Marital_StatusMarried
133038    +          +     -2.0857896888723 * Marital_StatusSingle
133039    +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
133040    +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
133041    +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
133042    +        EducationGraduation  +     -0.7287361872795 * EducationMaster
133043    +          +     0.64139965212864 * Marital_StatusDivorced
133044    +          +    -1.52338846336783 * Marital_StatusMarried
133045    +          +     1.94794784762286 * Marital_StatusSingle
133046    +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
133047    +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
133048    +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
133049    +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
133050    +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
133051    +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
133052    +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
133053    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
133054    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
133055    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
133056    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
133057    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
133058    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
133059    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
133060    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
133061    +END;
MPRINT(EM_DIAGRAM):   END;
133062    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
133063    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
133064    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
133065    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
133066    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
133067    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
133068    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
133069    +END;
MPRINT(EM_DIAGRAM):   END;
133070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133071    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
133072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133073    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
133074    +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
133075    +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
133076    +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
133077    +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
133078    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
133079    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
133080    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
133081    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
133082    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
133083    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
133084    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
133085    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
133086    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
133087    +END;
MPRINT(EM_DIAGRAM):   END;
133088    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
133089    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
133090    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
133091    +END;
MPRINT(EM_DIAGRAM):   END;
133092    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
133093    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
133094    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
133095    +END;
MPRINT(EM_DIAGRAM):   END;
133096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133097    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
133098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133099    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
133100    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
133101    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
133102    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
133103    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
133104    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
133105    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
133106    +END;
MPRINT(EM_DIAGRAM):   END;
133107    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
133108    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
133109    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
133110    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
133111     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
133112     quit;
133113     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
133114     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
133115     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
133116     retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
133117     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
133118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133119     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
133120     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133122     proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME 
CREATOR);
133123     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133125     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133126     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
133127     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
133128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133129     proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
133130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133131     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
133132     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133134     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133135     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
133136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133137     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133138     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
133139     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
133139   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1184 rows and 5 columns.

133140     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133141     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
133142     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1184 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133143     filename _pref
133143   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
133144     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
133145     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
133146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
133147    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
133148    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
133149    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
133150    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
133151    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
133152     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
133153     quit;
133154     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
133155     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
133156     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
133157     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
133158     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
133159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133160     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
133161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133162     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133163     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
133164     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133166     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133167     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
133168     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
133169     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133170     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
133171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133172     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
133173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133175     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133176     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
133177     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133178     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133179     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
133180     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
133180   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

133181     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133182     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
133183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133184     filename _pref
133184   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
133185     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
133186     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
133187    +
133188    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
133189    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
133189   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
133190    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
133191    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
133192    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
133193    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
133194    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
133195     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
133196     quit;
133197     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
133198     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
133199     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
133200     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
133201     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
133202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133203     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
133204     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133205     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133206     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
133207     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133208     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.01 seconds
      

133209     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133210     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
133211     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
133212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

133213     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
133214     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133215     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
133216     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133217     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133218     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133219     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
133220     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133221     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133222     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
133223     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
133223   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

133224     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133225     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
133226     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1227 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133227     filename _pref
133227   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
133228     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
133229     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
133230    +
133231    +
133232    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
133233    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
133234    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
133235    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
133236    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
133237    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133238    +
133239    +
133240    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
133241    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
133242    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
133243    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
133244    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
133245    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133246    +
133247    +
133248    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
133249    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
133250    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
133251    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
133252    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
133253    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133254    +
133255    +
133256    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
133257    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
133258    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
133259    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
133260    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
133261    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133262    +
133263    +
133264    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
133265    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
133266    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
133267    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
133268    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
133269    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133270    +
133271    +
133272    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
133273    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
133274    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
133275    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
133276    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
133277    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133278    +
133279    +
133280    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
133281    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
133282    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
133283    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
133284    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
133285    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133286    +
133287    +
133288    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
133289    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
133290    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
133291    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
133292    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
133293    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
133294    +if
133295    +_FILTERNORM1 not in ( '.')
133296    + and
133297    +_FILTERNORM2 not in ( '.')
133298    + and
133299    +_FILTERNORM3 not in ( '.')
133300    + and
133301    +_FILTERNORM4 not in ( '.')
133302    + and
133303    +_FILTERNORM5 not in ( '.')
133304    + and
133305    +_FILTERNORM6 not in ( '.')
133306    + and
133307    +_FILTERNORM7 not in ( ' ')
133308    + and
133309    +_FILTERNORM8 not in ( ' ')
133310    +and
133311    +( Dt_Customer ne .)
133312    +and ( Income ne . and (Income<=107000))
133313    +and ( Kidhome ne .)
133314    +and ( MntFishProducts ne .)
133315    +and ( MntFruits ne .)
133316    +and ( MntGoldProds ne .)
133317    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
133318    +and ( MntSweetProducts ne .)
133319    +and ( MntWines ne .)
133320    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
133321    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
133322    +and ( NumStorePurchases ne .)
133323    +and ( NumWebPurchases ne .)
133324    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
133325    +and ( Recency ne .)
133326    +and ( Teenhome ne .)
133327    +and ( Year_Birth ne .)
133328    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
133329    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
133330    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
133331    +end;
MPRINT(EM_DIAGRAM):   end;
133332    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
133333    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
133334     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
133335     quit;
133336     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
133337     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
133338     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
133339     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
133340     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
133341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133342     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
133343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133345     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
133346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133348     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133349     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
133350     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
133351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133352     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
133353     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

133354     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
133355     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133357     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
133358     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
133359     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
133360     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133361     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
133362     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
133362   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

133363     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133364     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
133365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1293 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133366     %macro varDept(fcmpdata=,id=);
133367     %global nobs&id scoreFlag&id;
133368     %let scoreFlag&id = 0;
133369     %if &id=1 or ^&fcmpStart %then %do;
133370     proc sort data=&fcmpdata out=_temp&id nodupkey;
133371     by NAME;
133372     where id=&id and LHS in( %let j=1;
133373     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
133374     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
133375     "&var" %let j = %eval(&j+1);
133376     %end;
133377     );
133378     run;
133379     %let dsid = %sysfunc(open(_temp&id));
133380     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
133381     %let dsid = %sysfunc(close(&dsid));
133382     %if &&nobs&id %then %do;
133383     %let scoreFlag&id = 1;
133384     %let fcmpStart = 1;
133385     %end;
133386     %else %let fcmpStart = 0;
133387     %end;
133388     %else %do;
133389     proc sort data=&fcmpdata out=_tempid;
133390     where id=&id;
133391     by LHS;
133392     run;
133393     %let dsid = %sysfunc(open(_tempid));
133394     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
133395     %let dsid = %sysfunc(close(&dsid));
133396     %if ^&&nobs&id %then %do;
133397     proc datasets lib=work nolist;
133398     delete _tempid;
133399     run;
133400     quit;
133401     %end;
133402     %else %do;
133403     data _tempAll;
133404     set %let j=%eval(&id-1);
133405     %do x=1 %to &j;
133406     %if &&nobs&x %then %do;
133407     _temp&x %end;
133408     %end;
133409     ;
133410     run;
133411     proc sql;
133412     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
133412   ! work._tempid p2 where p.name=p2.lhs;
133413     quit;
133414     data _temp&id;
133415     set _temp&id;
133416     where LHS ne '' and NAME ne '' and Node ne '';
133417     run;
133418     proc datasets lib=work nolist;
133419     delete _tempAll;
133420     run;
133421     %let dsid = %sysfunc(open(_temp&id));
133422     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
133423     %let dsid = %sysfunc(close(&dsid));
133424     %if ^&&nobs&id %then %do;
133425     proc datasets lib=work nolist;
133426     delete _temp&id;
133427     run;
133428     quit;
133429     %end;
133430     %else %do;
133431     %let scoreFlag&id = 1;
133432     data _temp&id;
133433     set _temp&id;
133434     where LHS ne NAME and node ne '';
133435     run;
133436     %let dsid = %sysfunc(open(_temp&id));
133437     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
133438     %let dsid = %sysfunc(close(&dsid));
133439     %if ^&&nobs&id %then %do;
133440     proc datasets lib=work nolist;
133441     delete _temp&id;
133442     run;
133443     quit;
133444     %end;
133445     %else %do;
133446     proc sort data=_temp&id nodupkey;
133447     by LHS NAME;
133448     run;
133449     %end;
133450     %end;
133451     %end;
133452     %end;
133453     %mend varDept;
133454     %macro optCode(outdata=fcmpdata);
133455     %global fcmpStart;
133456     %let fcmpStart = 0;
133457     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
133458     %let NumNodes=9;
133459     %do k=1 %to &NumNodes;
133460     %vardept(fcmpdata=&outdata, id=&k);
133461     %end;
133462     %mend optCode;
133463     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

133464     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
133465     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
133466     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
133467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133468     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
133469     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
133470     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
133471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133472     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
133473     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
133473   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

133474     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

133475     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
133476     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
133477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

133478     filename _pref
133478   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
133479     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
133480     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
133481    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
133482    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
133483    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
133484    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
133485    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
133486    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
133487    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
133488    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
133489    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
133490    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
133491    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
133492    +LENGTH _WARN_ $4
133493    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
133494    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
133495    +
133496    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
133497    +
133498    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
133499    +
133500    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
133501    +
133502    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
133503    +
133504    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
133505    +
133506    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
133507    +
133508    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
133509    +
133510    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
133511    +
133512    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
133513    +
133514    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
133515    +
133516    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
133517    +
133518    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
133519    +
133520    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
133521    +
133522    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
133523    +
133524    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
133525    +
133526    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
133527    +
133528    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
133529    +
133530    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
133531    +
133532    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
133533    +
133534    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
133535    +
133536    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
133537    +
133538    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
133539    +
133540    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
133541    +
133542    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
133543    +
133544    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
133545    +
133546    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
133547    +
133548    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
133549    +
133550    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
133551    +
133552    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
133553    +
133554    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
133555    +
133556    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
133557    +
133558    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
133559    +
133560    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
133561    +
133562    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
133563    +
133564    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
133565    +
133566    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
133567    +
133568    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
133569    +
133570    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
133571    +
133572    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
133573    +
133574    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
133575    +
133576    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
133577    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
133578    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
133579    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
133580    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133581    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133582    +end;
MPRINT(EM_DIAGRAM):   end;
133583    +else do;
MPRINT(EM_DIAGRAM):   else do;
133584    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133585    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
133586    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133587    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133588    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
133589    +   end;
MPRINT(EM_DIAGRAM):   end;
133590    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133591    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
133592    +   end;
MPRINT(EM_DIAGRAM):   end;
133593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133594    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
133595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133597    +   end;
MPRINT(EM_DIAGRAM):   end;
133598    +end;
MPRINT(EM_DIAGRAM):   end;
133599    +
133600    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
133601    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
133602    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
133603    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
133604    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133606    +end;
MPRINT(EM_DIAGRAM):   end;
133607    +else do;
MPRINT(EM_DIAGRAM):   else do;
133608    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133609    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
133610    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133611    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133612    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
133613    +   end;
MPRINT(EM_DIAGRAM):   end;
133614    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133615    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
133616    +   end;
MPRINT(EM_DIAGRAM):   end;
133617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133618    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
133619    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133620    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133621    +   end;
MPRINT(EM_DIAGRAM):   end;
133622    +end;
MPRINT(EM_DIAGRAM):   end;
133623    +
133624    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
133625    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
133626    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
133627    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
133628    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133629    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133630    +end;
MPRINT(EM_DIAGRAM):   end;
133631    +else do;
MPRINT(EM_DIAGRAM):   else do;
133632    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133633    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
133634    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133635    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133636    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
133637    +   end;
MPRINT(EM_DIAGRAM):   end;
133638    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133639    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
133640    +   end;
MPRINT(EM_DIAGRAM):   end;
133641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133642    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
133643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133645    +   end;
MPRINT(EM_DIAGRAM):   end;
133646    +end;
MPRINT(EM_DIAGRAM):   end;
133647    +
133648    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
133649    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
133650    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
133651    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
133652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133654    +end;
MPRINT(EM_DIAGRAM):   end;
133655    +else do;
MPRINT(EM_DIAGRAM):   else do;
133656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133657    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
133658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133659    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133660    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
133661    +   end;
MPRINT(EM_DIAGRAM):   end;
133662    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133663    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
133664    +   end;
MPRINT(EM_DIAGRAM):   end;
133665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133666    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
133667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133669    +   end;
MPRINT(EM_DIAGRAM):   end;
133670    +end;
MPRINT(EM_DIAGRAM):   end;
133671    +
133672    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
133673    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
133674    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
133675    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
133676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133678    +end;
MPRINT(EM_DIAGRAM):   end;
133679    +else do;
MPRINT(EM_DIAGRAM):   else do;
133680    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133681    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
133682    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133683    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133684    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
133685    +   end;
MPRINT(EM_DIAGRAM):   end;
133686    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133687    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
133688    +   end;
MPRINT(EM_DIAGRAM):   end;
133689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133690    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
133691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133693    +   end;
MPRINT(EM_DIAGRAM):   end;
133694    +end;
MPRINT(EM_DIAGRAM):   end;
133695    +
133696    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
133697    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
133698    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
133699    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
133700    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133701    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133702    +end;
MPRINT(EM_DIAGRAM):   end;
133703    +else do;
MPRINT(EM_DIAGRAM):   else do;
133704    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133705    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
133706    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133707    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
133708    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
133709    +   end;
MPRINT(EM_DIAGRAM):   end;
133710    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
133711    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
133712    +   end;
MPRINT(EM_DIAGRAM):   end;
133713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133714    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
133715    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133716    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133717    +   end;
MPRINT(EM_DIAGRAM):   end;
133718    +end;
MPRINT(EM_DIAGRAM):   end;
133719    +
133720    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
133721    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
133722    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
133723    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
133724    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133726    +end;
MPRINT(EM_DIAGRAM):   end;
133727    +else do;
MPRINT(EM_DIAGRAM):   else do;
133728    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
133729    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
133730    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133731    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
133732    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
133733    +   end;
MPRINT(EM_DIAGRAM):   end;
133734    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
133735    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
133736    +   end;
MPRINT(EM_DIAGRAM):   end;
133737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133738    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
133739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133741    +   end;
MPRINT(EM_DIAGRAM):   end;
133742    +end;
MPRINT(EM_DIAGRAM):   end;
133743    +
133744    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
133745    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
133746    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
133747    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
133748    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
133749    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
133750    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
133751    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
133752    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
133753    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
133754    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
133755    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
133756    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133757    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133758    +end;
MPRINT(EM_DIAGRAM):   end;
133759    +else do;
MPRINT(EM_DIAGRAM):   else do;
133760    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
133761    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
133762    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133763    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
133764    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
133765    +   end;
MPRINT(EM_DIAGRAM):   end;
133766    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
133767    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
133768    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
133769    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
133770    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
133771    +   end;
MPRINT(EM_DIAGRAM):   end;
133772    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
133773    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
133774    +   end;
MPRINT(EM_DIAGRAM):   end;
133775    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
133776    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
133777    +   end;
MPRINT(EM_DIAGRAM):   end;
133778    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
133779    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
133780    +   end;
MPRINT(EM_DIAGRAM):   end;
133781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133782    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
133783    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
133784    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
133785    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
133786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133788    +   end;
MPRINT(EM_DIAGRAM):   end;
133789    +end;
MPRINT(EM_DIAGRAM):   end;
133790    +
133791    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
133792    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
133793    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
133794    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
133795    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
133796    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
133797    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
133798    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
133799    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
133800    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
133801    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
133802    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
133803    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
133804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
133805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133806    +end;
MPRINT(EM_DIAGRAM):   end;
133807    +else do;
MPRINT(EM_DIAGRAM):   else do;
133808    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
133809    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
133810    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
133811    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
133812    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
133813    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
133814    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
133815    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
133816    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
133817    +         end;
MPRINT(EM_DIAGRAM):   end;
133818    +         else do;
MPRINT(EM_DIAGRAM):   else do;
133819    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
133820    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
133821    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
133822    +            end;
MPRINT(EM_DIAGRAM):   end;
133823    +         end;
MPRINT(EM_DIAGRAM):   end;
133824    +      end;
MPRINT(EM_DIAGRAM):   end;
133825    +      else do;
MPRINT(EM_DIAGRAM):   else do;
133826    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
133827    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
133828    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
133829    +         end;
MPRINT(EM_DIAGRAM):   end;
133830    +      end;
MPRINT(EM_DIAGRAM):   end;
133831    +   end;
MPRINT(EM_DIAGRAM):   end;
133832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
133833    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
133834    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
133835    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
133836    +      end;
MPRINT(EM_DIAGRAM):   end;
133837    +      else do;
MPRINT(EM_DIAGRAM):   else do;
133838    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
133839    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
133840    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
133841    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
133842    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
133843    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
133844    +         end;
MPRINT(EM_DIAGRAM):   end;
133845    +      end;
MPRINT(EM_DIAGRAM):   end;
133846    +   end;
MPRINT(EM_DIAGRAM):   end;
133847    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
133848    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
133849    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
133850    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
133851    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
133852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
133853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133854    +   end;
MPRINT(EM_DIAGRAM):   end;
133855    +end;
MPRINT(EM_DIAGRAM):   end;
133856    +
133857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133858    +*** Checking missing input Interval
133859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
133860    +
133861    +IF NMISS(
133862    +   AcceptedCmpTotal ,
133863    +   Age ,
133864    +   Frq ,
133865    +   Income ,
133866    +   Kidhome ,
133867    +   MntFishProducts ,
133868    +   MntFruits ,
133869    +   MntGoldProds ,
133870    +   MntSweetProducts ,
133871    +   MonthsAsCustomer ,
133872    +   NumDealsPurchases ,
133873    +   NumWebVisitsMonth ,
133874    +   RFMstat ,
133875    +   RMntFrq ,
133876    +   Recency ,
133877    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
133878    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
133879    +
133880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
133881    +END;
MPRINT(EM_DIAGRAM):   END;
133882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133883    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
133884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133885    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
133886    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
133887    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
133888    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
133889    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
133890    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
133891    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
133892    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
133893    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
133894    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
133895    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
133896    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
133897    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
133898    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
133899    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
133900    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
133901    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
133902    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
133903    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
133904    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
133905    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
133906    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
133907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
133908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
133909    +END;
MPRINT(EM_DIAGRAM):   END;
133910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
133911    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
133912    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
133913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
133914    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
133915    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
133916    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
133917    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
133918    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
133919    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
133920    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
133921    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
133922    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
133923    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
133924    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
133925    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
133926    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
133927    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
133928    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
133929    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
133930    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
133931    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
133932    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
133933    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
133934    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
133935    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
133936    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
133937    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
133938    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
133939    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
133940    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
133941    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
133942    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
133943    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
133944    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
133945    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
133946    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
133947    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
133948    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
133949    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
133950    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
133951    +END;
MPRINT(EM_DIAGRAM):   END;
133952    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133953    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
133954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133956    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
133957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133959    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
133960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
133961    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
133962    +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
133963    +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
133964    +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
133965    +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
133966    +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
133967    +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
133968    +          +     0.04740894983714 * S_MonthsAsCustomer
133969    +          +     1.39008006467326 * S_NumDealsPurchases
133970    +          +     0.21608999126738 * S_NumWebVisitsMonth
133971    +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
133972    +        S_RMntFrq  +    -0.30830265825486 * S_Recency
133973    +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
133974    +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
133975    +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
133976    +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
133977    +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
133978    +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
133979    +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
133980    +          +     0.11090137331567 * S_MonthsAsCustomer
133981    +          +     0.22617410760471 * S_NumDealsPurchases
133982    +          +    -1.50612324994247 * S_NumWebVisitsMonth
133983    +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
133984    +        S_RMntFrq  +     1.36064773168913 * S_Recency
133985    +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
133986    +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
133987    +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
133988    +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
133989    +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
133990    +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
133991    +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
133992    +          +     1.12489244540865 * S_MonthsAsCustomer
133993    +          +     0.65186273365438 * S_NumDealsPurchases
133994    +          +    -2.32770073685469 * S_NumWebVisitsMonth
133995    +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
133996    +        S_RMntFrq  +     2.60277611818411 * S_Recency
133997    +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
133998    +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
133999    +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
134000    +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
134001    +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
134002    +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
134003    +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
134004    +          +     0.30886829972356 * S_MonthsAsCustomer
134005    +          +     0.65492907685123 * S_NumDealsPurchases
134006    +          +     0.10822300736498 * S_NumWebVisitsMonth
134007    +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
134008    +        S_RMntFrq  +     -0.7378392134822 * S_Recency
134009    +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
134010    +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
134011    +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
134012    +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
134013    +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
134014    +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
134015    +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
134016    +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
134017    +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
134018    +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
134019    +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
134020    +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
134021    +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
134022    +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
134023    +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
134024    +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
134025    +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
134026    +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
134027    +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
134028    +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
134029    +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
134030    +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
134031    +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
134032    +        EducationGraduation  +     0.30922934477029 * EducationMaster
134033    +          +     0.01556098790048 * Marital_StatusDivorced
134034    +          +     0.00512523764645 * Marital_StatusMarried
134035    +          +    -0.33980799511448 * Marital_StatusSingle
134036    +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
134037    +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
134038    +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
134039    +        EducationGraduation  +     0.69751348344321 * EducationMaster
134040    +          +     0.01069434029942 * Marital_StatusDivorced
134041    +          +      0.3116587285334 * Marital_StatusMarried
134042    +          +    -0.98635795023549 * Marital_StatusSingle
134043    +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
134044    +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
134045    +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
134046    +        EducationGraduation  +     -0.8155628950024 * EducationMaster
134047    +          +    -0.60393077836174 * Marital_StatusDivorced
134048    +          +    -0.18138878944937 * Marital_StatusMarried
134049    +          +     0.53013032587101 * Marital_StatusSingle
134050    +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
134051    +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
134052    +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
134053    +        EducationGraduation  +    -0.40675219343984 * EducationMaster
134054    +          +     0.43223311502025 * Marital_StatusDivorced
134055    +          +    -1.15741416919552 * Marital_StatusMarried
134056    +          +     0.83939799284264 * Marital_StatusSingle
134057    +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
134058    +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
134059    +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
134060    +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
134061    +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
134062    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
134063    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
134064    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
134065    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
134066    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
134067    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
134068    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
134069    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
134070    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
134071    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
134072    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
134073    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
134074    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
134075    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
134076    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
134077    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
134078    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
134079    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
134080    +END;
MPRINT(EM_DIAGRAM):   END;
134081    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
134082    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
134083    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
134084    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
134085    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
134086    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
134087    +END;
MPRINT(EM_DIAGRAM):   END;
134088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134089    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
134090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134091    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
134092    +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
134093    +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
134094    +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
134095    +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
134096    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
134097    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
134098    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
134099    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
134100    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
134101    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
134102    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
134103    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
134104    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
134105    +END;
MPRINT(EM_DIAGRAM):   END;
134106    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
134107    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
134108    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
134109    +END;
MPRINT(EM_DIAGRAM):   END;
134110    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
134111    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
134112    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
134113    +END;
MPRINT(EM_DIAGRAM):   END;
134114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134115    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
134116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134117    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
134118    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
134119    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
134120    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
134121    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
134122    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
134123    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
134124    +END;
MPRINT(EM_DIAGRAM):   END;
134125    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
134126    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
134127    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
134128    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
134129     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
134130     quit;
134131     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
134132     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
134133     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
134134     retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
134135     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
134136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134137     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
134138     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134140     proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME 
CREATOR);
134141     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134142     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134143     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134144     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
134145     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
134146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134147     proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
134148     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

134149     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
134150     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134151     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134152     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134153     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
134154     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134155     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134156     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
134157     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
134157   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1157 rows and 5 columns.

134158     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134159     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
134160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1157 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1157 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134161     filename _pref
134161   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
134162     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
134163     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
134164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134165    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
134166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134167    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
134168    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
134169    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
134170     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
134171     quit;
134172     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
134173     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
134174     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
134175     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
134176     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
134177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134178     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
134179     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134181     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
134182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134184     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134185     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
134186     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
134187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134188     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
134189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134190     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
134191     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134192     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134193     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134194     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
134195     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134196     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134197     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
134198     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
134198   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

134199     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134200     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
134201     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1161 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134202     filename _pref
134202   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
134203     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
134204     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
134205    +
134206    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
134207    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
134207   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
134208    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
134209    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
134210    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
134211    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
134212    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
134213     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
134214     quit;
134215     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
134216     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
134217     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
134218     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
134219     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
134220     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134221     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
134222     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134224     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
134225     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134226     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134227     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134228     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
134229     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
134230     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134231     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
134232     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134233     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
134234     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134236     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134237     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
134238     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134239     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134240     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
134241     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
134241   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

134242     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134243     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
134244     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1200 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134245     filename _pref
134245   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
134246     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
134247     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
134248    +
134249    +
134250    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
134251    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
134252    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
134253    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
134254    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
134255    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134256    +
134257    +
134258    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
134259    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
134260    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
134261    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
134262    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
134263    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134264    +
134265    +
134266    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
134267    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
134268    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
134269    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
134270    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
134271    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134272    +
134273    +
134274    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
134275    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
134276    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
134277    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
134278    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
134279    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134280    +
134281    +
134282    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
134283    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
134284    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
134285    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
134286    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
134287    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134288    +
134289    +
134290    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
134291    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
134292    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
134293    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
134294    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
134295    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134296    +
134297    +
134298    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
134299    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
134300    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
134301    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
134302    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
134303    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134304    +
134305    +
134306    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
134307    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
134308    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
134309    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
134310    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
134311    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
134312    +if
134313    +_FILTERNORM1 not in ( '.')
134314    + and
134315    +_FILTERNORM2 not in ( '.')
134316    + and
134317    +_FILTERNORM3 not in ( '.')
134318    + and
134319    +_FILTERNORM4 not in ( '.')
134320    + and
134321    +_FILTERNORM5 not in ( '.')
134322    + and
134323    +_FILTERNORM6 not in ( '.')
134324    + and
134325    +_FILTERNORM7 not in ( ' ')
134326    + and
134327    +_FILTERNORM8 not in ( ' ')
134328    +and
134329    +( Dt_Customer ne .)
134330    +and ( Income ne . and (Income<=107000))
134331    +and ( Kidhome ne .)
134332    +and ( MntFishProducts ne .)
134333    +and ( MntFruits ne .)
134334    +and ( MntGoldProds ne .)
134335    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
134336    +and ( MntSweetProducts ne .)
134337    +and ( MntWines ne .)
134338    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
134339    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
134340    +and ( NumStorePurchases ne .)
134341    +and ( NumWebPurchases ne .)
134342    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
134343    +and ( Recency ne .)
134344    +and ( Teenhome ne .)
134345    +and ( Year_Birth ne .)
134346    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
134347    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
134348    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
134349    +end;
MPRINT(EM_DIAGRAM):   end;
134350    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
134351    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
134352     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
134353     quit;
134354     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
134355     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
134356     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
134357     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
134358     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
134359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134360     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
134361     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134362     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134363     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
134364     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134366     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134367     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
134368     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
134369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134370     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
134371     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

134372     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
134373     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134375     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
134376     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
134377     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
134378     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134379     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
134380     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
134380   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

134381     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134382     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
134383     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1266 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134384     %macro varDept(fcmpdata=,id=);
134385     %global nobs&id scoreFlag&id;
134386     %let scoreFlag&id = 0;
134387     %if &id=1 or ^&fcmpStart %then %do;
134388     proc sort data=&fcmpdata out=_temp&id nodupkey;
134389     by NAME;
134390     where id=&id and LHS in( %let j=1;
134391     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
134392     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
134393     "&var" %let j = %eval(&j+1);
134394     %end;
134395     );
134396     run;
134397     %let dsid = %sysfunc(open(_temp&id));
134398     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
134399     %let dsid = %sysfunc(close(&dsid));
134400     %if &&nobs&id %then %do;
134401     %let scoreFlag&id = 1;
134402     %let fcmpStart = 1;
134403     %end;
134404     %else %let fcmpStart = 0;
134405     %end;
134406     %else %do;
134407     proc sort data=&fcmpdata out=_tempid;
134408     where id=&id;
134409     by LHS;
134410     run;
134411     %let dsid = %sysfunc(open(_tempid));
134412     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
134413     %let dsid = %sysfunc(close(&dsid));
134414     %if ^&&nobs&id %then %do;
134415     proc datasets lib=work nolist;
134416     delete _tempid;
134417     run;
134418     quit;
134419     %end;
134420     %else %do;
134421     data _tempAll;
134422     set %let j=%eval(&id-1);
134423     %do x=1 %to &j;
134424     %if &&nobs&x %then %do;
134425     _temp&x %end;
134426     %end;
134427     ;
134428     run;
134429     proc sql;
134430     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
134430   ! work._tempid p2 where p.name=p2.lhs;
134431     quit;
134432     data _temp&id;
134433     set _temp&id;
134434     where LHS ne '' and NAME ne '' and Node ne '';
134435     run;
134436     proc datasets lib=work nolist;
134437     delete _tempAll;
134438     run;
134439     %let dsid = %sysfunc(open(_temp&id));
134440     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
134441     %let dsid = %sysfunc(close(&dsid));
134442     %if ^&&nobs&id %then %do;
134443     proc datasets lib=work nolist;
134444     delete _temp&id;
134445     run;
134446     quit;
134447     %end;
134448     %else %do;
134449     %let scoreFlag&id = 1;
134450     data _temp&id;
134451     set _temp&id;
134452     where LHS ne NAME and node ne '';
134453     run;
134454     %let dsid = %sysfunc(open(_temp&id));
134455     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
134456     %let dsid = %sysfunc(close(&dsid));
134457     %if ^&&nobs&id %then %do;
134458     proc datasets lib=work nolist;
134459     delete _temp&id;
134460     run;
134461     quit;
134462     %end;
134463     %else %do;
134464     proc sort data=_temp&id nodupkey;
134465     by LHS NAME;
134466     run;
134467     %end;
134468     %end;
134469     %end;
134470     %end;
134471     %mend varDept;
134472     %macro optCode(outdata=fcmpdata);
134473     %global fcmpStart;
134474     %let fcmpStart = 0;
134475     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
134476     %let NumNodes=9;
134477     %do k=1 %to &NumNodes;
134478     %vardept(fcmpdata=&outdata, id=&k);
134479     %end;
134480     %mend optCode;
134481     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 121 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 89 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

134482     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
134483     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
134484     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
134485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134486     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
134487     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
134488     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
134489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

134490     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
134491     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
134491   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

134492     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134493     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
134494     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
134495     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134496     filename _pref
134496   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
134497     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
134498     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
134499    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
134500    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
134501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
134502    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
134503    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
134504    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
134505    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
134506    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
134507    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
134508    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
134509    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
134510    +LENGTH _WARN_ $4
134511    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
134512    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
134513    +
134514    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
134515    +
134516    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
134517    +
134518    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
134519    +
134520    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
134521    +
134522    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
134523    +
134524    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
134525    +
134526    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
134527    +
134528    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
134529    +
134530    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
134531    +
134532    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
134533    +
134534    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
134535    +
134536    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
134537    +
134538    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
134539    +
134540    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
134541    +
134542    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
134543    +
134544    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
134545    +
134546    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
134547    +
134548    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
134549    +
134550    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
134551    +
134552    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
134553    +
134554    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
134555    +
134556    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
134557    +
134558    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
134559    +
134560    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
134561    +
134562    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
134563    +
134564    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
134565    +
134566    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
134567    +
134568    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
134569    +
134570    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
134571    +
134572    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
134573    +
134574    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
134575    +
134576    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
134577    +
134578    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
134579    +
134580    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
134581    +
134582    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
134583    +
134584    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
134585    +
134586    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
134587    +
134588    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
134589    +
134590    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
134591    +
134592    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
134593    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
134594    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
134595    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
134596    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134597    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134598    +end;
MPRINT(EM_DIAGRAM):   end;
134599    +else do;
MPRINT(EM_DIAGRAM):   else do;
134600    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134601    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
134602    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134603    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134604    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
134605    +   end;
MPRINT(EM_DIAGRAM):   end;
134606    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134607    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
134608    +   end;
MPRINT(EM_DIAGRAM):   end;
134609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134610    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
134611    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134612    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134613    +   end;
MPRINT(EM_DIAGRAM):   end;
134614    +end;
MPRINT(EM_DIAGRAM):   end;
134615    +
134616    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
134617    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
134618    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
134619    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
134620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134622    +end;
MPRINT(EM_DIAGRAM):   end;
134623    +else do;
MPRINT(EM_DIAGRAM):   else do;
134624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134625    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
134626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134627    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134628    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
134629    +   end;
MPRINT(EM_DIAGRAM):   end;
134630    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134631    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
134632    +   end;
MPRINT(EM_DIAGRAM):   end;
134633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134634    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
134635    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134636    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134637    +   end;
MPRINT(EM_DIAGRAM):   end;
134638    +end;
MPRINT(EM_DIAGRAM):   end;
134639    +
134640    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
134641    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
134642    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
134643    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
134644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134646    +end;
MPRINT(EM_DIAGRAM):   end;
134647    +else do;
MPRINT(EM_DIAGRAM):   else do;
134648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134649    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
134650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134651    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134652    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
134653    +   end;
MPRINT(EM_DIAGRAM):   end;
134654    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134655    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
134656    +   end;
MPRINT(EM_DIAGRAM):   end;
134657    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134658    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
134659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134661    +   end;
MPRINT(EM_DIAGRAM):   end;
134662    +end;
MPRINT(EM_DIAGRAM):   end;
134663    +
134664    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
134665    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
134666    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
134667    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
134668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134670    +end;
MPRINT(EM_DIAGRAM):   end;
134671    +else do;
MPRINT(EM_DIAGRAM):   else do;
134672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134673    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
134674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134675    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134676    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
134677    +   end;
MPRINT(EM_DIAGRAM):   end;
134678    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134679    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
134680    +   end;
MPRINT(EM_DIAGRAM):   end;
134681    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134682    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
134683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134685    +   end;
MPRINT(EM_DIAGRAM):   end;
134686    +end;
MPRINT(EM_DIAGRAM):   end;
134687    +
134688    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
134689    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
134690    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
134691    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
134692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134694    +end;
MPRINT(EM_DIAGRAM):   end;
134695    +else do;
MPRINT(EM_DIAGRAM):   else do;
134696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134697    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
134698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134699    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134700    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
134701    +   end;
MPRINT(EM_DIAGRAM):   end;
134702    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134703    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
134704    +   end;
MPRINT(EM_DIAGRAM):   end;
134705    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134706    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
134707    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134708    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134709    +   end;
MPRINT(EM_DIAGRAM):   end;
134710    +end;
MPRINT(EM_DIAGRAM):   end;
134711    +
134712    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
134713    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
134714    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
134715    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
134716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134718    +end;
MPRINT(EM_DIAGRAM):   end;
134719    +else do;
MPRINT(EM_DIAGRAM):   else do;
134720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134721    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
134722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134723    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
134724    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
134725    +   end;
MPRINT(EM_DIAGRAM):   end;
134726    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
134727    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
134728    +   end;
MPRINT(EM_DIAGRAM):   end;
134729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134730    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
134731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134733    +   end;
MPRINT(EM_DIAGRAM):   end;
134734    +end;
MPRINT(EM_DIAGRAM):   end;
134735    +
134736    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
134737    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
134738    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
134739    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
134740    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134742    +end;
MPRINT(EM_DIAGRAM):   end;
134743    +else do;
MPRINT(EM_DIAGRAM):   else do;
134744    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
134745    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
134746    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134747    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
134748    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
134749    +   end;
MPRINT(EM_DIAGRAM):   end;
134750    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
134751    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
134752    +   end;
MPRINT(EM_DIAGRAM):   end;
134753    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134754    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
134755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134757    +   end;
MPRINT(EM_DIAGRAM):   end;
134758    +end;
MPRINT(EM_DIAGRAM):   end;
134759    +
134760    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
134761    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
134762    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
134763    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
134764    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
134765    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
134766    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
134767    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
134768    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
134769    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
134770    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
134771    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
134772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134774    +end;
MPRINT(EM_DIAGRAM):   end;
134775    +else do;
MPRINT(EM_DIAGRAM):   else do;
134776    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
134777    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
134778    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134779    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
134780    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
134781    +   end;
MPRINT(EM_DIAGRAM):   end;
134782    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
134783    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
134784    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
134785    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
134786    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
134787    +   end;
MPRINT(EM_DIAGRAM):   end;
134788    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
134789    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
134790    +   end;
MPRINT(EM_DIAGRAM):   end;
134791    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
134792    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
134793    +   end;
MPRINT(EM_DIAGRAM):   end;
134794    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
134795    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
134796    +   end;
MPRINT(EM_DIAGRAM):   end;
134797    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134798    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
134799    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
134800    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
134801    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
134802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134804    +   end;
MPRINT(EM_DIAGRAM):   end;
134805    +end;
MPRINT(EM_DIAGRAM):   end;
134806    +
134807    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
134808    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
134809    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
134810    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
134811    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
134812    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
134813    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
134814    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
134815    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
134816    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
134817    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
134818    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
134819    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
134820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
134821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134822    +end;
MPRINT(EM_DIAGRAM):   end;
134823    +else do;
MPRINT(EM_DIAGRAM):   else do;
134824    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
134825    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
134826    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
134827    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
134828    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
134829    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
134830    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
134831    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
134832    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
134833    +         end;
MPRINT(EM_DIAGRAM):   end;
134834    +         else do;
MPRINT(EM_DIAGRAM):   else do;
134835    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
134836    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
134837    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
134838    +            end;
MPRINT(EM_DIAGRAM):   end;
134839    +         end;
MPRINT(EM_DIAGRAM):   end;
134840    +      end;
MPRINT(EM_DIAGRAM):   end;
134841    +      else do;
MPRINT(EM_DIAGRAM):   else do;
134842    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
134843    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
134844    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
134845    +         end;
MPRINT(EM_DIAGRAM):   end;
134846    +      end;
MPRINT(EM_DIAGRAM):   end;
134847    +   end;
MPRINT(EM_DIAGRAM):   end;
134848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
134849    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
134850    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
134851    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
134852    +      end;
MPRINT(EM_DIAGRAM):   end;
134853    +      else do;
MPRINT(EM_DIAGRAM):   else do;
134854    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
134855    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
134856    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
134857    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
134858    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
134859    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
134860    +         end;
MPRINT(EM_DIAGRAM):   end;
134861    +      end;
MPRINT(EM_DIAGRAM):   end;
134862    +   end;
MPRINT(EM_DIAGRAM):   end;
134863    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
134864    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
134865    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
134866    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
134867    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
134868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
134869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134870    +   end;
MPRINT(EM_DIAGRAM):   end;
134871    +end;
MPRINT(EM_DIAGRAM):   end;
134872    +
134873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134874    +*** Checking missing input Interval
134875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
134876    +
134877    +IF NMISS(
134878    +   AcceptedCmpTotal ,
134879    +   Age ,
134880    +   Frq ,
134881    +   Income ,
134882    +   Kidhome ,
134883    +   MntFishProducts ,
134884    +   MntFruits ,
134885    +   MntGoldProds ,
134886    +   MntSweetProducts ,
134887    +   MonthsAsCustomer ,
134888    +   NumDealsPurchases ,
134889    +   NumWebVisitsMonth ,
134890    +   RFMstat ,
134891    +   RMntFrq ,
134892    +   Recency ,
134893    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
134894    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
134895    +
134896    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
134897    +END;
MPRINT(EM_DIAGRAM):   END;
134898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134899    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
134900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134901    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
134902    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
134903    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
134904    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
134905    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
134906    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
134907    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
134908    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
134909    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
134910    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
134911    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
134912    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
134913    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
134914    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
134915    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
134916    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
134917    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
134918    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
134919    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
134920    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
134921    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
134922    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
134923    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
134924    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
134925    +END;
MPRINT(EM_DIAGRAM):   END;
134926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
134927    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
134928    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
134929    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
134930    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
134931    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
134932    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
134933    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
134934    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
134935    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
134936    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
134937    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
134938    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
134939    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
134940    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
134941    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
134942    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
134943    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
134944    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
134945    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
134946    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
134947    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
134948    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
134949    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
134950    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
134951    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
134952    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
134953    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
134954    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
134955    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
134956    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
134957    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
134958    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
134959    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
134960    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
134961    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
134962    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
134963    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
134964    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
134965    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
134966    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
134967    +END;
MPRINT(EM_DIAGRAM):   END;
134968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134969    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
134970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134972    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
134973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134975    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
134976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
134977    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
134978    +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
134979    +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
134980    +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
134981    +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
134982    +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
134983    +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
134984    +          +     -0.6473961304074 * S_MonthsAsCustomer
134985    +          +     0.68960902951007 * S_NumDealsPurchases
134986    +          +    -0.03600585273268 * S_NumWebVisitsMonth
134987    +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
134988    +        S_RMntFrq  +    -0.37413569649471 * S_Recency
134989    +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
134990    +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
134991    +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
134992    +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
134993    +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
134994    +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
134995    +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
134996    +          +    -0.70674764548268 * S_MonthsAsCustomer
134997    +          +     0.03761139203619 * S_NumDealsPurchases
134998    +          +    -0.69359662485747 * S_NumWebVisitsMonth
134999    +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
135000    +        S_RMntFrq  +    -1.62720417424557 * S_Recency
135001    +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
135002    +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
135003    +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
135004    +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
135005    +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
135006    +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
135007    +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
135008    +          +    -0.47559913836984 * S_MonthsAsCustomer
135009    +          +    -0.26961781245749 * S_NumDealsPurchases
135010    +          +    -0.67017962977412 * S_NumWebVisitsMonth
135011    +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
135012    +        S_RMntFrq  +     0.67120737584665 * S_Recency
135013    +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
135014    +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
135015    +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
135016    +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
135017    +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
135018    +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
135019    +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
135020    +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
135021    +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
135022    +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
135023    +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
135024    +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
135025    +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
135026    +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
135027    +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
135028    +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
135029    +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
135030    +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
135031    +        EducationGraduation  +     0.46172475127934 * EducationMaster
135032    +          +    -0.18858032329482 * Marital_StatusDivorced
135033    +          +     0.16067956508072 * Marital_StatusMarried
135034    +          +    -0.90926406046237 * Marital_StatusSingle
135035    +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
135036    +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
135037    +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
135038    +        EducationGraduation  +    -0.74629011053947 * EducationMaster
135039    +          +     0.71998738170149 * Marital_StatusDivorced
135040    +          +    -1.53543515752013 * Marital_StatusMarried
135041    +          +     0.44068743694663 * Marital_StatusSingle
135042    +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
135043    +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
135044    +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
135045    +        EducationGraduation  +     0.11252156068047 * EducationMaster
135046    +          +    -0.31683932084863 * Marital_StatusDivorced
135047    +          +     0.17674162427585 * Marital_StatusMarried
135048    +          +    -0.67064017247711 * Marital_StatusSingle
135049    +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
135050    +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
135051    +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
135052    +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
135053    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
135054    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
135055    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
135056    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
135057    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
135058    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
135059    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
135060    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
135061    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
135062    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
135063    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
135064    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
135065    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
135066    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
135067    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
135068    +END;
MPRINT(EM_DIAGRAM):   END;
135069    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
135070    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
135071    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
135072    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
135073    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
135074    +END;
MPRINT(EM_DIAGRAM):   END;
135075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135076    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
135077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135078    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
135079    +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
135080    +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
135081    +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
135082    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
135083    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
135084    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
135085    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
135086    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
135087    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
135088    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
135089    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
135090    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
135091    +END;
MPRINT(EM_DIAGRAM):   END;
135092    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
135093    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
135094    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
135095    +END;
MPRINT(EM_DIAGRAM):   END;
135096    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
135097    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
135098    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
135099    +END;
MPRINT(EM_DIAGRAM):   END;
135100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135101    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
135102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135103    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
135104    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
135105    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
135106    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
135107    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
135108    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
135109    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
135110    +END;
MPRINT(EM_DIAGRAM):   END;
135111    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
135112    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
135113    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
135114    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
135115     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
135116     quit;
135117     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
135118     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
135119     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
135120     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
135121     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
135122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135123     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
135124     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135126     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
135127     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135129     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135130     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
135131     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
135132     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135133     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
135134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

135135     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
135136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135138     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135139     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
135140     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135141     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
The SAS System

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135142     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
135143     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
135143   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1075 rows and 5 columns.

135144     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135145     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
135146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1075 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135147     filename _pref
135147   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
135148     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
135149     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
135150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
135151    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
135152    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
135153    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
135154    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
135155    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
135156     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
135157     quit;
135158     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
135159     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
135160     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
135161     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
135162     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
135163     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135164     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
135165     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135166     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135167     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
135168     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135169     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135170     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135171     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
135172     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
135173     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135174     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
135175     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

135176     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
135177     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135179     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135180     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
135181     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135182     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135183     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
135184     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
135184   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

135185     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135186     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
135187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135188     filename _pref
135188   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
135189     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
135190     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
135191    +
135192    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
135193    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
135193   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
135194    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
135195    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
135196    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
135197    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
135198    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
135199     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
135200     quit;
135201     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
135202     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
135203     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
135204     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
135205     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
135206     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135207     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
135208     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135210     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
135211     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

135213     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135214     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
135215     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
135216     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135217     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
135218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135219     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
135220     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135222     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135223     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
135224     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135225     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135226     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
135227     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
135227   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

135228     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135229     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
135230     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1118 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135231     filename _pref
135231   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
135232     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
135233     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
135234    +
135235    +
135236    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
135237    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
135238    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
135239    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
135240    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
135241    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135242    +
135243    +
135244    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
135245    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
135246    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
135247    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
135248    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
135249    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135250    +
135251    +
135252    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
135253    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
135254    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
135255    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
135256    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
135257    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135258    +
135259    +
135260    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
135261    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
135262    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
135263    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
135264    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
135265    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135266    +
135267    +
135268    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
135269    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
135270    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
135271    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
135272    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
135273    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135274    +
135275    +
135276    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
135277    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
135278    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
135279    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
135280    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
135281    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135282    +
135283    +
135284    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
135285    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
135286    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
135287    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
135288    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
135289    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135290    +
135291    +
135292    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
135293    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
135294    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
135295    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
135296    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
135297    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
135298    +if
135299    +_FILTERNORM1 not in ( '.')
135300    + and
135301    +_FILTERNORM2 not in ( '.')
135302    + and
135303    +_FILTERNORM3 not in ( '.')
135304    + and
135305    +_FILTERNORM4 not in ( '.')
135306    + and
135307    +_FILTERNORM5 not in ( '.')
135308    + and
135309    +_FILTERNORM6 not in ( '.')
135310    + and
135311    +_FILTERNORM7 not in ( ' ')
135312    + and
135313    +_FILTERNORM8 not in ( ' ')
135314    +and
135315    +( Dt_Customer ne .)
135316    +and ( Income ne . and (Income<=107000))
135317    +and ( Kidhome ne .)
135318    +and ( MntFishProducts ne .)
135319    +and ( MntFruits ne .)
135320    +and ( MntGoldProds ne .)
135321    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
135322    +and ( MntSweetProducts ne .)
135323    +and ( MntWines ne .)
135324    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
135325    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
135326    +and ( NumStorePurchases ne .)
135327    +and ( NumWebPurchases ne .)
135328    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
135329    +and ( Recency ne .)
135330    +and ( Teenhome ne .)
135331    +and ( Year_Birth ne .)
135332    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
135333    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
135334    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
135335    +end;
MPRINT(EM_DIAGRAM):   end;
135336    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
135337    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
135338     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
135339     quit;
135340     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
135341     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
135342     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
135343     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
135344     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
135345     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135346     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
135347     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135349     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
135350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135352     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135353     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
135354     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
135355     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135356     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
135357     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135358     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
135359     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

135361     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
135362     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
135363     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
135364     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135365     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
135366     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
135366   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

135367     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135368     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
135369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135370     %macro varDept(fcmpdata=,id=);
135371     %global nobs&id scoreFlag&id;
135372     %let scoreFlag&id = 0;
135373     %if &id=1 or ^&fcmpStart %then %do;
135374     proc sort data=&fcmpdata out=_temp&id nodupkey;
135375     by NAME;
135376     where id=&id and LHS in( %let j=1;
135377     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
135378     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
135379     "&var" %let j = %eval(&j+1);
135380     %end;
135381     );
135382     run;
135383     %let dsid = %sysfunc(open(_temp&id));
135384     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
135385     %let dsid = %sysfunc(close(&dsid));
135386     %if &&nobs&id %then %do;
135387     %let scoreFlag&id = 1;
135388     %let fcmpStart = 1;
135389     %end;
135390     %else %let fcmpStart = 0;
135391     %end;
135392     %else %do;
135393     proc sort data=&fcmpdata out=_tempid;
135394     where id=&id;
135395     by LHS;
135396     run;
135397     %let dsid = %sysfunc(open(_tempid));
135398     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
135399     %let dsid = %sysfunc(close(&dsid));
135400     %if ^&&nobs&id %then %do;
135401     proc datasets lib=work nolist;
135402     delete _tempid;
135403     run;
135404     quit;
135405     %end;
135406     %else %do;
135407     data _tempAll;
135408     set %let j=%eval(&id-1);
135409     %do x=1 %to &j;
135410     %if &&nobs&x %then %do;
135411     _temp&x %end;
135412     %end;
135413     ;
135414     run;
135415     proc sql;
135416     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
135416   ! work._tempid p2 where p.name=p2.lhs;
135417     quit;
135418     data _temp&id;
135419     set _temp&id;
135420     where LHS ne '' and NAME ne '' and Node ne '';
135421     run;
135422     proc datasets lib=work nolist;
135423     delete _tempAll;
135424     run;
135425     %let dsid = %sysfunc(open(_temp&id));
135426     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
135427     %let dsid = %sysfunc(close(&dsid));
135428     %if ^&&nobs&id %then %do;
135429     proc datasets lib=work nolist;
135430     delete _temp&id;
135431     run;
135432     quit;
135433     %end;
135434     %else %do;
135435     %let scoreFlag&id = 1;
135436     data _temp&id;
135437     set _temp&id;
135438     where LHS ne NAME and node ne '';
135439     run;
135440     %let dsid = %sysfunc(open(_temp&id));
135441     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
135442     %let dsid = %sysfunc(close(&dsid));
135443     %if ^&&nobs&id %then %do;
135444     proc datasets lib=work nolist;
135445     delete _temp&id;
135446     run;
135447     quit;
135448     %end;
135449     %else %do;
135450     proc sort data=_temp&id nodupkey;
135451     by LHS NAME;
135452     run;
135453     %end;
135454     %end;
135455     %end;
135456     %end;
135457     %mend varDept;
135458     %macro optCode(outdata=fcmpdata);
135459     %global fcmpStart;
135460     %let fcmpStart = 0;
135461     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
135462     %let NumNodes=9;
135463     %do k=1 %to &NumNodes;
135464     %vardept(fcmpdata=&outdata, id=&k);
135465     %end;
135466     %mend optCode;
135467     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 118 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

135468     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
135469     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
135470     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
135471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135472     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
135473     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
135474     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
135475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135476     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
135477     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
135477   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

135478     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135479     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
135480     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
135481     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

135482     filename _pref
135482   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
135483     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
135484     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
135485    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135486    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
135487    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135488    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
135489    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
135490    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
135491    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
135492    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
135493    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
135494    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
135495    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
135496    +LENGTH _WARN_ $4
135497    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
135498    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
135499    +
135500    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
135501    +
135502    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
135503    +
135504    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
135505    +
135506    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
135507    +
135508    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
135509    +
135510    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
135511    +
135512    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
135513    +
135514    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
135515    +
135516    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
135517    +
135518    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
135519    +
135520    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
135521    +
135522    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
135523    +
135524    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
135525    +
135526    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
135527    +
135528    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
135529    +
135530    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
135531    +
135532    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
135533    +
135534    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
135535    +
135536    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
135537    +
135538    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
135539    +
135540    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
135541    +
135542    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
135543    +
135544    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
135545    +
135546    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
135547    +
135548    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
135549    +
135550    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
135551    +
135552    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
135553    +
135554    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
135555    +
135556    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
135557    +
135558    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
135559    +
135560    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
135561    +
135562    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
135563    +
135564    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
135565    +
135566    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
135567    +
135568    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
135569    +
135570    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
135571    +
135572    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
135573    +
135574    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
135575    +
135576    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
135577    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
135578    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
135579    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
135580    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135581    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135582    +end;
MPRINT(EM_DIAGRAM):   end;
135583    +else do;
MPRINT(EM_DIAGRAM):   else do;
135584    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135585    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
135586    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135587    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135588    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
135589    +   end;
MPRINT(EM_DIAGRAM):   end;
135590    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135591    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
135592    +   end;
MPRINT(EM_DIAGRAM):   end;
135593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135594    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
135595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135597    +   end;
MPRINT(EM_DIAGRAM):   end;
135598    +end;
MPRINT(EM_DIAGRAM):   end;
135599    +
135600    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
135601    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
135602    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
135603    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
135604    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135606    +end;
MPRINT(EM_DIAGRAM):   end;
135607    +else do;
MPRINT(EM_DIAGRAM):   else do;
135608    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135609    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
135610    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135611    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135612    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
135613    +   end;
MPRINT(EM_DIAGRAM):   end;
135614    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135615    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
135616    +   end;
MPRINT(EM_DIAGRAM):   end;
135617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135618    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
135619    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135620    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135621    +   end;
MPRINT(EM_DIAGRAM):   end;
135622    +end;
MPRINT(EM_DIAGRAM):   end;
135623    +
135624    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
135625    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
135626    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
135627    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
135628    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135629    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135630    +end;
MPRINT(EM_DIAGRAM):   end;
135631    +else do;
MPRINT(EM_DIAGRAM):   else do;
135632    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135633    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
135634    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135635    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135636    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
135637    +   end;
MPRINT(EM_DIAGRAM):   end;
135638    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135639    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
135640    +   end;
MPRINT(EM_DIAGRAM):   end;
135641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135642    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
135643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135645    +   end;
MPRINT(EM_DIAGRAM):   end;
135646    +end;
MPRINT(EM_DIAGRAM):   end;
135647    +
135648    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
135649    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
135650    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
135651    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
135652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135654    +end;
MPRINT(EM_DIAGRAM):   end;
135655    +else do;
MPRINT(EM_DIAGRAM):   else do;
135656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135657    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
135658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135659    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135660    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
135661    +   end;
MPRINT(EM_DIAGRAM):   end;
135662    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135663    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
135664    +   end;
MPRINT(EM_DIAGRAM):   end;
135665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135666    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
135667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135669    +   end;
MPRINT(EM_DIAGRAM):   end;
135670    +end;
MPRINT(EM_DIAGRAM):   end;
135671    +
135672    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
135673    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
135674    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
135675    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
135676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135678    +end;
MPRINT(EM_DIAGRAM):   end;
135679    +else do;
MPRINT(EM_DIAGRAM):   else do;
135680    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135681    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
135682    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135683    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135684    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
135685    +   end;
MPRINT(EM_DIAGRAM):   end;
135686    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135687    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
135688    +   end;
MPRINT(EM_DIAGRAM):   end;
135689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135690    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
135691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135693    +   end;
MPRINT(EM_DIAGRAM):   end;
135694    +end;
MPRINT(EM_DIAGRAM):   end;
135695    +
135696    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
135697    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
135698    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
135699    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
135700    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135701    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135702    +end;
MPRINT(EM_DIAGRAM):   end;
135703    +else do;
MPRINT(EM_DIAGRAM):   else do;
135704    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135705    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
135706    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135707    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
135708    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
135709    +   end;
MPRINT(EM_DIAGRAM):   end;
135710    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135711    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
135712    +   end;
MPRINT(EM_DIAGRAM):   end;
135713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135714    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
135715    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135716    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135717    +   end;
MPRINT(EM_DIAGRAM):   end;
135718    +end;
MPRINT(EM_DIAGRAM):   end;
135719    +
135720    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
135721    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
135722    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
135723    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
135724    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135726    +end;
MPRINT(EM_DIAGRAM):   end;
135727    +else do;
MPRINT(EM_DIAGRAM):   else do;
135728    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135729    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
135730    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135731    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
135732    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
135733    +   end;
MPRINT(EM_DIAGRAM):   end;
135734    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
135735    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
135736    +   end;
MPRINT(EM_DIAGRAM):   end;
135737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135738    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
135739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135741    +   end;
MPRINT(EM_DIAGRAM):   end;
135742    +end;
MPRINT(EM_DIAGRAM):   end;
135743    +
135744    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
135745    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
135746    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
135747    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
135748    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
135749    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
135750    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
135751    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
135752    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
135753    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
135754    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
135755    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
135756    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135757    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135758    +end;
MPRINT(EM_DIAGRAM):   end;
135759    +else do;
MPRINT(EM_DIAGRAM):   else do;
135760    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
135761    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
135762    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135763    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
135764    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
135765    +   end;
MPRINT(EM_DIAGRAM):   end;
135766    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
135767    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
135768    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
135769    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
135770    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
135771    +   end;
MPRINT(EM_DIAGRAM):   end;
135772    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
135773    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
135774    +   end;
MPRINT(EM_DIAGRAM):   end;
135775    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
135776    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
135777    +   end;
MPRINT(EM_DIAGRAM):   end;
135778    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
135779    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
135780    +   end;
MPRINT(EM_DIAGRAM):   end;
135781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135782    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
135783    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
135784    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
135785    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
135786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135788    +   end;
MPRINT(EM_DIAGRAM):   end;
135789    +end;
MPRINT(EM_DIAGRAM):   end;
135790    +
135791    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
135792    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
135793    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
135794    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
135795    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
135796    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
135797    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
135798    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
135799    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
135800    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
135801    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
135802    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
135803    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
135804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135806    +end;
MPRINT(EM_DIAGRAM):   end;
135807    +else do;
MPRINT(EM_DIAGRAM):   else do;
135808    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
135809    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
135810    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135811    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
135812    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
135813    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
135814    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
135815    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
135816    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135817    +         end;
MPRINT(EM_DIAGRAM):   end;
135818    +         else do;
MPRINT(EM_DIAGRAM):   else do;
135819    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
135820    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
135821    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135822    +            end;
MPRINT(EM_DIAGRAM):   end;
135823    +         end;
MPRINT(EM_DIAGRAM):   end;
135824    +      end;
MPRINT(EM_DIAGRAM):   end;
135825    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135826    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
135827    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
135828    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135829    +         end;
MPRINT(EM_DIAGRAM):   end;
135830    +      end;
MPRINT(EM_DIAGRAM):   end;
135831    +   end;
MPRINT(EM_DIAGRAM):   end;
135832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135833    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
135834    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
135835    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135836    +      end;
MPRINT(EM_DIAGRAM):   end;
135837    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135838    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
135839    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
135840    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
135841    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
135842    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
135843    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135844    +         end;
MPRINT(EM_DIAGRAM):   end;
135845    +      end;
MPRINT(EM_DIAGRAM):   end;
135846    +   end;
MPRINT(EM_DIAGRAM):   end;
135847    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
135848    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
135849    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
135850    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
135851    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
135852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135854    +   end;
MPRINT(EM_DIAGRAM):   end;
135855    +end;
MPRINT(EM_DIAGRAM):   end;
135856    +
135857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135858    +*** Checking missing input Interval
135859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
135860    +
135861    +IF NMISS(
135862    +   AcceptedCmpTotal ,
135863    +   Age ,
135864    +   Frq ,
135865    +   Income ,
135866    +   Kidhome ,
135867    +   MntFishProducts ,
135868    +   MntFruits ,
135869    +   MntGoldProds ,
135870    +   MntSweetProducts ,
135871    +   MonthsAsCustomer ,
135872    +   NumDealsPurchases ,
135873    +   NumWebVisitsMonth ,
135874    +   RFMstat ,
135875    +   RMntFrq ,
135876    +   Recency ,
135877    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
135878    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
135879    +
135880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135881    +END;
MPRINT(EM_DIAGRAM):   END;
135882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135883    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
135884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135885    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
135886    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
135887    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
135888    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
135889    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
135890    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
135891    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
135892    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
135893    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
135894    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
135895    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
135896    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
135897    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
135898    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
135899    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
135900    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
135901    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
135902    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
135903    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
135904    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
135905    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
135906    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
135907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
135908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
135909    +END;
MPRINT(EM_DIAGRAM):   END;
135910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
135911    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
135912    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
135913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
135914    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
135915    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
135916    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
135917    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
135918    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
135919    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
135920    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
135921    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
135922    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
135923    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
135924    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
135925    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
135926    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
135927    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
135928    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
135929    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
135930    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
135931    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
135932    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
135933    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
135934    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
135935    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
135936    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
135937    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
135938    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
135939    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
135940    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
135941    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
135942    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
135943    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
135944    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
135945    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
135946    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
135947    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
135948    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
135949    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
135950    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
135951    +END;
MPRINT(EM_DIAGRAM):   END;
135952    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135953    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
135954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135956    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
135957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135959    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
135960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135961    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
135962    +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
135963    +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
135964    +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
135965    +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
135966    +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
135967    +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
135968    +          +     -0.1740957673716 * S_MonthsAsCustomer
135969    +          +     0.66565026405117 * S_NumDealsPurchases
135970    +          +     0.43247206282836 * S_NumWebVisitsMonth
135971    +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
135972    +        S_RMntFrq  +    -0.28002323732518 * S_Recency
135973    +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
135974    +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
135975    +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
135976    +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
135977    +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
135978    +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
135979    +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
135980    +          +    -0.06176784990963 * S_MonthsAsCustomer
135981    +          +    -0.11740415005833 * S_NumDealsPurchases
135982    +          +    -0.17084845478672 * S_NumWebVisitsMonth
135983    +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
135984    +        S_RMntFrq  +     0.54983271222574 * S_Recency
135985    +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
135986    +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
135987    +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
135988    +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
135989    +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
135990    +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
135991    +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
135992    +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
135993    +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
135994    +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
135995    +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
135996    +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
135997    +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
135998    +        EducationGraduation  +     0.22632282500966 * EducationMaster
135999    +          +     -0.0800438380883 * Marital_StatusDivorced
136000    +          +     0.44505766937623 * Marital_StatusMarried
136001    +          +    -0.57546515626468 * Marital_StatusSingle
136002    +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
136003    +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
136004    +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
136005    +        EducationGraduation  +      0.0794165981215 * EducationMaster
136006    +          +    -0.20291653465543 * Marital_StatusDivorced
136007    +          +     0.39547414450617 * Marital_StatusMarried
136008    +          +    -0.37001331184001 * Marital_StatusSingle
136009    +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
136010    +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
136011    +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
136012    +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
136013    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
136014    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
136015    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
136016    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
136017    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
136018    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
136019    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
136020    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
136021    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
136022    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
136023    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
136024    +END;
MPRINT(EM_DIAGRAM):   END;
136025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136026    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
136027    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
136028    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
136029    +END;
MPRINT(EM_DIAGRAM):   END;
136030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136031    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
136032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136033    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136034    +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
136035    +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
136036    +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
136037    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
136038    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
136039    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
136040    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
136041    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
136042    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
136043    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
136044    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
136045    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
136046    +END;
MPRINT(EM_DIAGRAM):   END;
136047    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136048    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
136049    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
136050    +END;
MPRINT(EM_DIAGRAM):   END;
136051    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
136052    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
136053    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
136054    +END;
MPRINT(EM_DIAGRAM):   END;
136055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136056    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
136057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136058    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
136059    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
136060    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
136061    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
136062    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
136063    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
136064    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
136065    +END;
MPRINT(EM_DIAGRAM):   END;
136066    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
136067    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
136068    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
136069    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
136070     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
136071     quit;
136072     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
136073     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
136074     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
136075     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
136076     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
136077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136078     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
136079     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136080     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136081     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
136082     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136084     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136085     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
136086     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
136087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136088     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
136089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

136090     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
136091     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136092     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136093     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136094     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
136095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136096     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136097     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
136098     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
136098   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.

136099     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136100     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
136101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136102     filename _pref
136102   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
136103     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
136104     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
136105    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
136106    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
136107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
136108    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
136109    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
136110    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
136111     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
136112     quit;
136113     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
136114     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
136115     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
136116     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
136117     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
136118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136119     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
136120     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136122     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
136123     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136125     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136126     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
136127     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
136128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136129     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
136130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

136131     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
136132     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136134     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136135     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
136136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136137     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136138     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
136139     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
136139   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

136140     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136141     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
136142     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136143     filename _pref
136143   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
136144     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
136145     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
136146    +
136147    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
136148    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
136148   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
136149    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
136150    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
136151    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
136152    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
136153    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
136154     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
136155     quit;
136156     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
136157     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
136158     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
136159     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
136160     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
136161     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136162     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
136163     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136165     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
136166     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136168     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136169     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
136170     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
136171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136172     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
136173     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136174     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
136175     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136176     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136177     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136178     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
136179     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136180     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136181     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
136182     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
136182   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

136183     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136184     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
136185     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

136186     filename _pref
136186   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
136187     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
136188     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
136189    +
136190    +
136191    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
136192    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
136193    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
136194    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
136195    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
136196    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136197    +
136198    +
136199    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
136200    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
136201    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
136202    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
136203    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
136204    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136205    +
136206    +
136207    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
136208    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
136209    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
136210    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
136211    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
136212    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136213    +
136214    +
136215    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
136216    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
136217    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
136218    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
136219    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
136220    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136221    +
136222    +
136223    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
136224    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
136225    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
136226    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
136227    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
136228    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136229    +
136230    +
136231    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
136232    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
136233    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
136234    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
136235    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
136236    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136237    +
136238    +
136239    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
136240    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
136241    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
136242    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
136243    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
136244    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136245    +
136246    +
136247    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
136248    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
136249    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
136250    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
136251    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
136252    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
136253    +if
136254    +_FILTERNORM1 not in ( '.')
136255    + and
136256    +_FILTERNORM2 not in ( '.')
136257    + and
136258    +_FILTERNORM3 not in ( '.')
136259    + and
136260    +_FILTERNORM4 not in ( '.')
136261    + and
136262    +_FILTERNORM5 not in ( '.')
136263    + and
136264    +_FILTERNORM6 not in ( '.')
136265    + and
136266    +_FILTERNORM7 not in ( ' ')
136267    + and
136268    +_FILTERNORM8 not in ( ' ')
136269    +and
136270    +( Dt_Customer ne .)
136271    +and ( Income ne . and (Income<=107000))
136272    +and ( Kidhome ne .)
136273    +and ( MntFishProducts ne .)
136274    +and ( MntFruits ne .)
136275    +and ( MntGoldProds ne .)
136276    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
136277    +and ( MntSweetProducts ne .)
136278    +and ( MntWines ne .)
136279    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
136280    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
136281    +and ( NumStorePurchases ne .)
136282    +and ( NumWebPurchases ne .)
136283    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
136284    +and ( Recency ne .)
136285    +and ( Teenhome ne .)
136286    +and ( Year_Birth ne .)
136287    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
136288    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
136289    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
136290    +end;
MPRINT(EM_DIAGRAM):   end;
136291    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
136292    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
136293     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
136294     quit;
136295     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
136296     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
136297     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
136298     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
136299     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
136300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136301     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
136302     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136304     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
136305     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136307     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136308     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
136309     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
136310     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136311     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
136312     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

136313     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
136314     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136315     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136316     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
136317     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
136318     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
136319     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136320     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
136321     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
136321   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

136322     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136323     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
136324     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136325     %macro varDept(fcmpdata=,id=);
136326     %global nobs&id scoreFlag&id;
136327     %let scoreFlag&id = 0;
136328     %if &id=1 or ^&fcmpStart %then %do;
136329     proc sort data=&fcmpdata out=_temp&id nodupkey;
136330     by NAME;
136331     where id=&id and LHS in( %let j=1;
136332     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
136333     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
136334     "&var" %let j = %eval(&j+1);
136335     %end;
136336     );
136337     run;
136338     %let dsid = %sysfunc(open(_temp&id));
136339     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
136340     %let dsid = %sysfunc(close(&dsid));
136341     %if &&nobs&id %then %do;
136342     %let scoreFlag&id = 1;
136343     %let fcmpStart = 1;
136344     %end;
136345     %else %let fcmpStart = 0;
136346     %end;
136347     %else %do;
136348     proc sort data=&fcmpdata out=_tempid;
136349     where id=&id;
136350     by LHS;
136351     run;
136352     %let dsid = %sysfunc(open(_tempid));
136353     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
136354     %let dsid = %sysfunc(close(&dsid));
136355     %if ^&&nobs&id %then %do;
136356     proc datasets lib=work nolist;
136357     delete _tempid;
136358     run;
136359     quit;
136360     %end;
136361     %else %do;
136362     data _tempAll;
136363     set %let j=%eval(&id-1);
136364     %do x=1 %to &j;
136365     %if &&nobs&x %then %do;
136366     _temp&x %end;
136367     %end;
136368     ;
136369     run;
136370     proc sql;
136371     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
136371   ! work._tempid p2 where p.name=p2.lhs;
136372     quit;
136373     data _temp&id;
136374     set _temp&id;
136375     where LHS ne '' and NAME ne '' and Node ne '';
136376     run;
136377     proc datasets lib=work nolist;
136378     delete _tempAll;
136379     run;
136380     %let dsid = %sysfunc(open(_temp&id));
136381     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
136382     %let dsid = %sysfunc(close(&dsid));
136383     %if ^&&nobs&id %then %do;
136384     proc datasets lib=work nolist;
136385     delete _temp&id;
136386     run;
136387     quit;
136388     %end;
136389     %else %do;
136390     %let scoreFlag&id = 1;
136391     data _temp&id;
136392     set _temp&id;
136393     where LHS ne NAME and node ne '';
136394     run;
136395     %let dsid = %sysfunc(open(_temp&id));
136396     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
136397     %let dsid = %sysfunc(close(&dsid));
136398     %if ^&&nobs&id %then %do;
136399     proc datasets lib=work nolist;
136400     delete _temp&id;
136401     run;
136402     quit;
136403     %end;
136404     %else %do;
136405     proc sort data=_temp&id nodupkey;
136406     by LHS NAME;
136407     run;
136408     %end;
136409     %end;
136410     %end;
136411     %end;
136412     %mend varDept;
136413     %macro optCode(outdata=fcmpdata);
136414     %global fcmpStart;
136415     %let fcmpStart = 0;
136416     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
136417     %let NumNodes=9;
136418     %do k=1 %to &NumNodes;
136419     %vardept(fcmpdata=&outdata, id=&k);
136420     %end;
136421     %mend optCode;
136422     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 115 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

136423     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
136424     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
136425     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
136426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136427     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
136428     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
136429     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
136430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136431     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
136432     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
136432   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

136433     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

136434     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
136435     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
136436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136437     filename _pref
136437   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
136438     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
136439     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
136440    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
136441    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
136442    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
136443    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
136444    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
136445    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
136446    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
136447    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
136448    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
136449    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
136450    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
136451    +LENGTH _WARN_ $4
136452    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
136453    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
136454    +
136455    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
136456    +
136457    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
136458    +
136459    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
136460    +
136461    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
136462    +
136463    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
136464    +
136465    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
136466    +
136467    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
136468    +
136469    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
136470    +
136471    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
136472    +
136473    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
136474    +
136475    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
136476    +
136477    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
136478    +
136479    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
136480    +
136481    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
136482    +
136483    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
136484    +
136485    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
136486    +
136487    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
136488    +
136489    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
136490    +
136491    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
136492    +
136493    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
136494    +
136495    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
136496    +
136497    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
136498    +
136499    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
136500    +
136501    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
136502    +
136503    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
136504    +
136505    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
136506    +
136507    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
136508    +
136509    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
136510    +
136511    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
136512    +
136513    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
136514    +
136515    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
136516    +
136517    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
136518    +
136519    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
136520    +
136521    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
136522    +
136523    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
136524    +
136525    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
136526    +
136527    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
136528    +
136529    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
136530    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
136531    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
136532    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
136533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136535    +end;
MPRINT(EM_DIAGRAM):   end;
136536    +else do;
MPRINT(EM_DIAGRAM):   else do;
136537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136538    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
136539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136540    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136541    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
136542    +   end;
MPRINT(EM_DIAGRAM):   end;
136543    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136544    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
136545    +   end;
MPRINT(EM_DIAGRAM):   end;
136546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136547    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
136548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136550    +   end;
MPRINT(EM_DIAGRAM):   end;
136551    +end;
MPRINT(EM_DIAGRAM):   end;
136552    +
136553    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
136554    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
136555    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
136556    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
136557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136559    +end;
MPRINT(EM_DIAGRAM):   end;
136560    +else do;
MPRINT(EM_DIAGRAM):   else do;
136561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136562    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
136563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136564    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136565    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
136566    +   end;
MPRINT(EM_DIAGRAM):   end;
136567    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136568    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
136569    +   end;
MPRINT(EM_DIAGRAM):   end;
136570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136571    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
136572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136574    +   end;
MPRINT(EM_DIAGRAM):   end;
136575    +end;
MPRINT(EM_DIAGRAM):   end;
136576    +
136577    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
136578    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
136579    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
136580    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
136581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136583    +end;
MPRINT(EM_DIAGRAM):   end;
136584    +else do;
MPRINT(EM_DIAGRAM):   else do;
136585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136586    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
136587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136588    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136589    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
136590    +   end;
MPRINT(EM_DIAGRAM):   end;
136591    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136592    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
136593    +   end;
MPRINT(EM_DIAGRAM):   end;
136594    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136595    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
136596    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136597    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136598    +   end;
MPRINT(EM_DIAGRAM):   end;
136599    +end;
MPRINT(EM_DIAGRAM):   end;
136600    +
136601    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
136602    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
136603    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
136604    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
136605    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136606    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136607    +end;
MPRINT(EM_DIAGRAM):   end;
136608    +else do;
MPRINT(EM_DIAGRAM):   else do;
136609    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136610    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
136611    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136612    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136613    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
136614    +   end;
MPRINT(EM_DIAGRAM):   end;
136615    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136616    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
136617    +   end;
MPRINT(EM_DIAGRAM):   end;
136618    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136619    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
136620    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136621    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136622    +   end;
MPRINT(EM_DIAGRAM):   end;
136623    +end;
MPRINT(EM_DIAGRAM):   end;
136624    +
136625    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
136626    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
136627    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
136628    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
136629    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136630    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136631    +end;
MPRINT(EM_DIAGRAM):   end;
136632    +else do;
MPRINT(EM_DIAGRAM):   else do;
136633    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136634    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
136635    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136636    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136637    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
136638    +   end;
MPRINT(EM_DIAGRAM):   end;
136639    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136640    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
136641    +   end;
MPRINT(EM_DIAGRAM):   end;
136642    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136643    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
136644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136646    +   end;
MPRINT(EM_DIAGRAM):   end;
136647    +end;
MPRINT(EM_DIAGRAM):   end;
136648    +
136649    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
136650    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
136651    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
136652    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
136653    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136654    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136655    +end;
MPRINT(EM_DIAGRAM):   end;
136656    +else do;
MPRINT(EM_DIAGRAM):   else do;
136657    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136658    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
136659    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136660    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136661    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
136662    +   end;
MPRINT(EM_DIAGRAM):   end;
136663    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136664    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
136665    +   end;
MPRINT(EM_DIAGRAM):   end;
136666    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136667    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
136668    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136669    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136670    +   end;
MPRINT(EM_DIAGRAM):   end;
136671    +end;
MPRINT(EM_DIAGRAM):   end;
136672    +
136673    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
136674    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
136675    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
136676    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
136677    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136678    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136679    +end;
MPRINT(EM_DIAGRAM):   end;
136680    +else do;
MPRINT(EM_DIAGRAM):   else do;
136681    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136682    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
136683    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136684    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
136685    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
136686    +   end;
MPRINT(EM_DIAGRAM):   end;
136687    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
136688    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
136689    +   end;
MPRINT(EM_DIAGRAM):   end;
136690    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136691    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
136692    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136693    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136694    +   end;
MPRINT(EM_DIAGRAM):   end;
136695    +end;
MPRINT(EM_DIAGRAM):   end;
136696    +
136697    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
136698    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
136699    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
136700    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
136701    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
136702    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
136703    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
136704    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
136705    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
136706    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
136707    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
136708    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
136709    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136710    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136711    +end;
MPRINT(EM_DIAGRAM):   end;
136712    +else do;
MPRINT(EM_DIAGRAM):   else do;
136713    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
136714    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
136715    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136716    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
136717    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
136718    +   end;
MPRINT(EM_DIAGRAM):   end;
136719    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
136720    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
136721    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
136722    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
136723    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
136724    +   end;
MPRINT(EM_DIAGRAM):   end;
136725    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
136726    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
136727    +   end;
MPRINT(EM_DIAGRAM):   end;
136728    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
136729    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
136730    +   end;
MPRINT(EM_DIAGRAM):   end;
136731    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
136732    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
136733    +   end;
MPRINT(EM_DIAGRAM):   end;
136734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136735    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
136736    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
136737    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
136738    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
136739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136741    +   end;
MPRINT(EM_DIAGRAM):   end;
136742    +end;
MPRINT(EM_DIAGRAM):   end;
136743    +
136744    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
136745    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
136746    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
136747    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
136748    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
136749    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
136750    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
136751    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
136752    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
136753    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
136754    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
136755    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
136756    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
136757    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136758    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136759    +end;
MPRINT(EM_DIAGRAM):   end;
136760    +else do;
MPRINT(EM_DIAGRAM):   else do;
136761    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
136762    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
136763    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136764    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
136765    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
136766    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
136767    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
136768    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
136769    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136770    +         end;
MPRINT(EM_DIAGRAM):   end;
136771    +         else do;
MPRINT(EM_DIAGRAM):   else do;
136772    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
136773    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
136774    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136775    +            end;
MPRINT(EM_DIAGRAM):   end;
136776    +         end;
MPRINT(EM_DIAGRAM):   end;
136777    +      end;
MPRINT(EM_DIAGRAM):   end;
136778    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136779    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
136780    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
136781    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136782    +         end;
MPRINT(EM_DIAGRAM):   end;
136783    +      end;
MPRINT(EM_DIAGRAM):   end;
136784    +   end;
MPRINT(EM_DIAGRAM):   end;
136785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136786    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
136787    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
136788    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136789    +      end;
MPRINT(EM_DIAGRAM):   end;
136790    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136791    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
136792    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
136793    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
136794    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
136795    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
136796    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136797    +         end;
MPRINT(EM_DIAGRAM):   end;
136798    +      end;
MPRINT(EM_DIAGRAM):   end;
136799    +   end;
MPRINT(EM_DIAGRAM):   end;
136800    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
136801    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
136802    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
136803    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
136804    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
136805    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136806    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136807    +   end;
MPRINT(EM_DIAGRAM):   end;
136808    +end;
MPRINT(EM_DIAGRAM):   end;
136809    +
136810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136811    +*** Checking missing input Interval
136812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
136813    +
136814    +IF NMISS(
136815    +   AcceptedCmpTotal ,
136816    +   Age ,
136817    +   Frq ,
136818    +   Income ,
136819    +   Kidhome ,
136820    +   MntFishProducts ,
136821    +   MntFruits ,
136822    +   MntGoldProds ,
136823    +   MntSweetProducts ,
136824    +   MonthsAsCustomer ,
136825    +   NumDealsPurchases ,
136826    +   NumWebVisitsMonth ,
136827    +   RFMstat ,
136828    +   RMntFrq ,
136829    +   Recency ,
136830    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
136831    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
136832    +
136833    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136834    +END;
MPRINT(EM_DIAGRAM):   END;
136835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136836    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
136837    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136838    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136839    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
136840    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
136841    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
136842    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
136843    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
136844    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
136845    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
136846    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
136847    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
136848    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
136849    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
136850    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
136851    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
136852    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
136853    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
136854    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
136855    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
136856    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
136857    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
136858    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
136859    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
136860    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
136861    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
136862    +END;
MPRINT(EM_DIAGRAM):   END;
136863    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136864    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
136865    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
136866    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
136867    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
136868    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
136869    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
136870    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
136871    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
136872    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
136873    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
136874    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
136875    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
136876    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
136877    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
136878    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
136879    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
136880    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
136881    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
136882    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
136883    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
136884    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
136885    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
136886    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
136887    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
136888    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
136889    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
136890    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
136891    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
136892    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
136893    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
136894    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
136895    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
136896    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
136897    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
136898    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
136899    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
136900    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
136901    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
136902    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
136903    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
136904    +END;
MPRINT(EM_DIAGRAM):   END;
136905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136906    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
136907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136909    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
136910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136912    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
136913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136914    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136915    +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
136916    +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
136917    +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
136918    +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
136919    +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
136920    +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
136921    +          +     0.07696704519183 * S_MonthsAsCustomer
136922    +          +     0.06885982009617 * S_NumDealsPurchases
136923    +          +     0.18284147478918 * S_NumWebVisitsMonth
136924    +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
136925    +        S_RMntFrq  +    -0.65651411558717 * S_Recency
136926    +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
136927    +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
136928    +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
136929    +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
136930    +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
136931    +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
136932    +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
136933    +          +     0.19400730773464 * S_MonthsAsCustomer
136934    +          +    -1.36455521037197 * S_NumDealsPurchases
136935    +          +    -1.07068059346196 * S_NumWebVisitsMonth
136936    +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
136937    +        S_RMntFrq  +     1.36066079800227 * S_Recency
136938    +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
136939    +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
136940    +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
136941    +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
136942    +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
136943    +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
136944    +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
136945    +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
136946    +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
136947    +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
136948    +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
136949    +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
136950    +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
136951    +        EducationGraduation  +    -0.13796568916415 * EducationMaster
136952    +          +     0.23432241402098 * Marital_StatusDivorced
136953    +          +    -0.46302700269027 * Marital_StatusMarried
136954    +          +      0.4032168653504 * Marital_StatusSingle
136955    +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
136956    +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
136957    +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
136958    +        EducationGraduation  +     -0.3917553423088 * EducationMaster
136959    +          +    -0.31347503340603 * Marital_StatusDivorced
136960    +          +    -0.20319530959178 * Marital_StatusMarried
136961    +          +     0.48298350411196 * Marital_StatusSingle
136962    +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
136963    +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
136964    +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
136965    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
136966    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
136967    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
136968    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
136969    +END;
MPRINT(EM_DIAGRAM):   END;
136970    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136971    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
136972    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
136973    +END;
MPRINT(EM_DIAGRAM):   END;
136974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136975    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
136976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136977    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136978    +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
136979    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
136980    +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
136981    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
136982    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
136983    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
136984    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
136985    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
136986    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
136987    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
136988    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
136989    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
136990    +END;
MPRINT(EM_DIAGRAM):   END;
136991    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136992    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
136993    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
136994    +END;
MPRINT(EM_DIAGRAM):   END;
136995    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
136996    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
136997    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
136998    +END;
MPRINT(EM_DIAGRAM):   END;
136999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137000    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
137001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137002    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
137003    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
137004    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
137005    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
137006    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
137007    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
137008    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
137009    +END;
MPRINT(EM_DIAGRAM):   END;
137010    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
137011    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
137012    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
137013    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
137014     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
137015     quit;
137016     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137017     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137018     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137019     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
137020     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137021     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137022     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137023     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137025     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
137026     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137028     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137029     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137030     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137031     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137032     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
137033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

137034     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137035     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137037     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137038     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137039     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137040     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

137041     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137042     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
137042   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.

137043     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137044     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
137045     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137046     filename _pref
137046   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
137047     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137048     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
137049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137050    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
137051    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137052    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
137053    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
137054    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
137055     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
137056     quit;
137057     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137058     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137059     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137060     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
137061     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137063     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137066     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
137067     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137069     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137070     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137071     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137072     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137073     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
137074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

137075     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137076     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137078     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137079     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137080     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137081     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137082     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137083     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
137083   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

137084     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137085     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
137086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137087     filename _pref
137087   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
137088     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137089     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
137090    +
137091    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
137092    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
137092   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
137093    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
137094    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
137095    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
137096    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
137097    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
137098     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
137099     quit;
137100     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137101     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137102     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137103     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
137104     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137106     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137107     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137109     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
137110     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137112     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137113     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137114     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137116     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
137117     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137118     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137119     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137121     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137122     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137123     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137124     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137125     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137126     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
137126   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

137127     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137128     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
137129     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137130     filename _pref
137130   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
137131     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137132     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
137133    +
137134    +
137135    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
137136    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
137137    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
137138    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
137139    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
137140    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137141    +
137142    +
137143    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
137144    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
137145    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
137146    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
137147    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
137148    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137149    +
137150    +
137151    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
137152    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
137153    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
137154    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
137155    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
137156    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137157    +
137158    +
137159    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
137160    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
137161    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
137162    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
137163    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
137164    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137165    +
137166    +
137167    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
137168    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
137169    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
137170    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
137171    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
137172    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137173    +
137174    +
137175    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
137176    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
137177    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
137178    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
137179    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
137180    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137181    +
137182    +
137183    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
137184    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
137185    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
137186    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
137187    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
137188    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137189    +
137190    +
137191    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
137192    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
137193    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
137194    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
137195    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
137196    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
137197    +if
137198    +_FILTERNORM1 not in ( '.')
137199    + and
137200    +_FILTERNORM2 not in ( '.')
137201    + and
137202    +_FILTERNORM3 not in ( '.')
137203    + and
137204    +_FILTERNORM4 not in ( '.')
137205    + and
137206    +_FILTERNORM5 not in ( '.')
137207    + and
137208    +_FILTERNORM6 not in ( '.')
137209    + and
137210    +_FILTERNORM7 not in ( ' ')
137211    + and
137212    +_FILTERNORM8 not in ( ' ')
137213    +and
137214    +( Dt_Customer ne .)
137215    +and ( Income ne . and (Income<=107000))
137216    +and ( Kidhome ne .)
137217    +and ( MntFishProducts ne .)
137218    +and ( MntFruits ne .)
137219    +and ( MntGoldProds ne .)
137220    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
137221    +and ( MntSweetProducts ne .)
137222    +and ( MntWines ne .)
137223    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
137224    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
137225    +and ( NumStorePurchases ne .)
137226    +and ( NumWebPurchases ne .)
137227    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
137228    +and ( Recency ne .)
137229    +and ( Teenhome ne .)
137230    +and ( Year_Birth ne .)
137231    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
137232    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
137233    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
137234    +end;
MPRINT(EM_DIAGRAM):   end;
137235    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
137236    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
137237     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
137238     quit;
137239     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137240     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137241     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137242     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
137243     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137244     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137245     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137246     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137247     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137248     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
137249     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137251     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137252     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137253     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137254     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137255     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
137256     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

137257     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137258     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137260     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137261     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137262     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137263     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137264     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137265     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
137265   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

137266     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137267     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
137268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137269     %macro varDept(fcmpdata=,id=);
137270     %global nobs&id scoreFlag&id;
137271     %let scoreFlag&id = 0;
137272     %if &id=1 or ^&fcmpStart %then %do;
137273     proc sort data=&fcmpdata out=_temp&id nodupkey;
137274     by NAME;
137275     where id=&id and LHS in( %let j=1;
137276     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
137277     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
137278     "&var" %let j = %eval(&j+1);
137279     %end;
137280     );
137281     run;
137282     %let dsid = %sysfunc(open(_temp&id));
137283     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
137284     %let dsid = %sysfunc(close(&dsid));
137285     %if &&nobs&id %then %do;
137286     %let scoreFlag&id = 1;
137287     %let fcmpStart = 1;
137288     %end;
137289     %else %let fcmpStart = 0;
137290     %end;
137291     %else %do;
137292     proc sort data=&fcmpdata out=_tempid;
137293     where id=&id;
137294     by LHS;
137295     run;
137296     %let dsid = %sysfunc(open(_tempid));
137297     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
137298     %let dsid = %sysfunc(close(&dsid));
137299     %if ^&&nobs&id %then %do;
137300     proc datasets lib=work nolist;
137301     delete _tempid;
137302     run;
137303     quit;
137304     %end;
137305     %else %do;
137306     data _tempAll;
137307     set %let j=%eval(&id-1);
137308     %do x=1 %to &j;
137309     %if &&nobs&x %then %do;
137310     _temp&x %end;
137311     %end;
137312     ;
137313     run;
137314     proc sql;
137315     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
137315   ! work._tempid p2 where p.name=p2.lhs;
137316     quit;
137317     data _temp&id;
137318     set _temp&id;
137319     where LHS ne '' and NAME ne '' and Node ne '';
137320     run;
137321     proc datasets lib=work nolist;
137322     delete _tempAll;
137323     run;
137324     %let dsid = %sysfunc(open(_temp&id));
137325     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
137326     %let dsid = %sysfunc(close(&dsid));
137327     %if ^&&nobs&id %then %do;
137328     proc datasets lib=work nolist;
137329     delete _temp&id;
137330     run;
137331     quit;
137332     %end;
137333     %else %do;
137334     %let scoreFlag&id = 1;
137335     data _temp&id;
137336     set _temp&id;
137337     where LHS ne NAME and node ne '';
137338     run;
137339     %let dsid = %sysfunc(open(_temp&id));
137340     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
137341     %let dsid = %sysfunc(close(&dsid));
137342     %if ^&&nobs&id %then %do;
137343     proc datasets lib=work nolist;
137344     delete _temp&id;
137345     run;
137346     quit;
137347     %end;
137348     %else %do;
137349     proc sort data=_temp&id nodupkey;
137350     by LHS NAME;
137351     run;
137352     %end;
137353     %end;
137354     %end;
137355     %end;
137356     %mend varDept;
137357     %macro optCode(outdata=fcmpdata);
137358     %global fcmpStart;
137359     %let fcmpStart = 0;
137360     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
137361     %let NumNodes=9;
137362     %do k=1 %to &NumNodes;
137363     %vardept(fcmpdata=&outdata, id=&k);
137364     %end;
137365     %mend optCode;
137366     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 112 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

137367     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
137368     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
137369     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
137370     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137371     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
137372     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
137373     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
137374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137375     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137376     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
137376   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

137377     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

137378     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
137379     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
137380     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

137381     filename _pref
137381   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
137382     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137383     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
137384    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
137385    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
137386    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
137387    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
137388    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
137389    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
137390    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
137391    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
137392    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
137393    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
137394    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
137395    +LENGTH _WARN_ $4
137396    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
137397    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
137398    +
137399    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
137400    +
137401    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
137402    +
137403    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
137404    +
137405    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
137406    +
137407    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
137408    +
137409    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
137410    +
137411    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
137412    +
137413    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
137414    +
137415    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
137416    +
137417    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
137418    +
137419    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
137420    +
137421    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
137422    +
137423    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
137424    +
137425    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
137426    +
137427    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
137428    +
137429    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
137430    +
137431    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
137432    +
137433    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
137434    +
137435    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
137436    +
137437    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
137438    +
137439    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
137440    +
137441    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
137442    +
137443    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
137444    +
137445    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
137446    +
137447    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
137448    +
137449    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
137450    +
137451    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
137452    +
137453    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
137454    +
137455    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
137456    +
137457    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
137458    +
137459    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
137460    +
137461    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
137462    +
137463    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
137464    +
137465    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
137466    +
137467    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
137468    +
137469    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
137470    +
137471    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
137472    +
137473    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
137474    +
137475    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
137476    +
137477    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
137478    +
137479    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
137480    +
137481    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
137482    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
137483    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
137484    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
137485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137487    +end;
MPRINT(EM_DIAGRAM):   end;
137488    +else do;
MPRINT(EM_DIAGRAM):   else do;
137489    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137490    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
137491    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137492    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137493    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
137494    +   end;
MPRINT(EM_DIAGRAM):   end;
137495    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137496    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
137497    +   end;
MPRINT(EM_DIAGRAM):   end;
137498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137499    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
137500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137502    +   end;
MPRINT(EM_DIAGRAM):   end;
137503    +end;
MPRINT(EM_DIAGRAM):   end;
137504    +
137505    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
137506    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
137507    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
137508    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
137509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137511    +end;
MPRINT(EM_DIAGRAM):   end;
137512    +else do;
MPRINT(EM_DIAGRAM):   else do;
137513    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137514    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
137515    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137516    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137517    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
137518    +   end;
MPRINT(EM_DIAGRAM):   end;
137519    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137520    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
137521    +   end;
MPRINT(EM_DIAGRAM):   end;
137522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137523    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
137524    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137525    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137526    +   end;
MPRINT(EM_DIAGRAM):   end;
137527    +end;
MPRINT(EM_DIAGRAM):   end;
137528    +
137529    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
137530    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
137531    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
137532    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137535    +end;
MPRINT(EM_DIAGRAM):   end;
137536    +else do;
MPRINT(EM_DIAGRAM):   else do;
137537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137538    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
137539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137540    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137541    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
137542    +   end;
MPRINT(EM_DIAGRAM):   end;
137543    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137544    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
137545    +   end;
MPRINT(EM_DIAGRAM):   end;
137546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137547    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137550    +   end;
MPRINT(EM_DIAGRAM):   end;
137551    +end;
MPRINT(EM_DIAGRAM):   end;
137552    +
137553    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
137554    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
137555    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
137556    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137559    +end;
MPRINT(EM_DIAGRAM):   end;
137560    +else do;
MPRINT(EM_DIAGRAM):   else do;
137561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137562    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
137563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137564    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137565    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
137566    +   end;
MPRINT(EM_DIAGRAM):   end;
137567    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137568    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
137569    +   end;
MPRINT(EM_DIAGRAM):   end;
137570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137571    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137574    +   end;
MPRINT(EM_DIAGRAM):   end;
137575    +end;
MPRINT(EM_DIAGRAM):   end;
137576    +
137577    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
137578    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
137579    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
137580    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137583    +end;
MPRINT(EM_DIAGRAM):   end;
137584    +else do;
MPRINT(EM_DIAGRAM):   else do;
137585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137586    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
137587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137588    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137589    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
137590    +   end;
MPRINT(EM_DIAGRAM):   end;
137591    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137592    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
137593    +   end;
MPRINT(EM_DIAGRAM):   end;
137594    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137595    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137596    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137597    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137598    +   end;
MPRINT(EM_DIAGRAM):   end;
137599    +end;
MPRINT(EM_DIAGRAM):   end;
137600    +
137601    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
137602    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
137603    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
137604    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137605    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137606    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137607    +end;
MPRINT(EM_DIAGRAM):   end;
137608    +else do;
MPRINT(EM_DIAGRAM):   else do;
137609    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137610    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
137611    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137612    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137613    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
137614    +   end;
MPRINT(EM_DIAGRAM):   end;
137615    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137616    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
137617    +   end;
MPRINT(EM_DIAGRAM):   end;
137618    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137619    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137620    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137621    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137622    +   end;
MPRINT(EM_DIAGRAM):   end;
137623    +end;
MPRINT(EM_DIAGRAM):   end;
137624    +
137625    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
137626    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
137627    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
137628    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137629    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137630    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137631    +end;
MPRINT(EM_DIAGRAM):   end;
137632    +else do;
MPRINT(EM_DIAGRAM):   else do;
137633    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137634    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
137635    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137636    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
137637    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
137638    +   end;
MPRINT(EM_DIAGRAM):   end;
137639    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
137640    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
137641    +   end;
MPRINT(EM_DIAGRAM):   end;
137642    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137643    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137646    +   end;
MPRINT(EM_DIAGRAM):   end;
137647    +end;
MPRINT(EM_DIAGRAM):   end;
137648    +
137649    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
137650    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
137651    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137652    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
137653    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
137654    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
137655    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
137656    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
137657    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137658    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137659    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137660    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137663    +end;
MPRINT(EM_DIAGRAM):   end;
137664    +else do;
MPRINT(EM_DIAGRAM):   else do;
137665    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
137666    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
137667    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137668    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
137669    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
137670    +   end;
MPRINT(EM_DIAGRAM):   end;
137671    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
137672    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
137673    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
137674    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
137675    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
137676    +   end;
MPRINT(EM_DIAGRAM):   end;
137677    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
137678    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
137679    +   end;
MPRINT(EM_DIAGRAM):   end;
137680    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
137681    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
137682    +   end;
MPRINT(EM_DIAGRAM):   end;
137683    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
137684    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
137685    +   end;
MPRINT(EM_DIAGRAM):   end;
137686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137687    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137688    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137689    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137690    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137693    +   end;
MPRINT(EM_DIAGRAM):   end;
137694    +end;
MPRINT(EM_DIAGRAM):   end;
137695    +
137696    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
137697    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
137698    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
137699    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137700    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
137701    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
137702    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
137703    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
137704    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
137705    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137706    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137707    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137708    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137709    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137710    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137711    +end;
MPRINT(EM_DIAGRAM):   end;
137712    +else do;
MPRINT(EM_DIAGRAM):   else do;
137713    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
137714    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
137715    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137716    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
137717    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
137718    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
137719    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
137720    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
137721    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137722    +         end;
MPRINT(EM_DIAGRAM):   end;
137723    +         else do;
MPRINT(EM_DIAGRAM):   else do;
137724    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
137725    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
137726    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137727    +            end;
MPRINT(EM_DIAGRAM):   end;
137728    +         end;
MPRINT(EM_DIAGRAM):   end;
137729    +      end;
MPRINT(EM_DIAGRAM):   end;
137730    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137731    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
137732    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
137733    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137734    +         end;
MPRINT(EM_DIAGRAM):   end;
137735    +      end;
MPRINT(EM_DIAGRAM):   end;
137736    +   end;
MPRINT(EM_DIAGRAM):   end;
137737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137738    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
137739    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
137740    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137741    +      end;
MPRINT(EM_DIAGRAM):   end;
137742    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137743    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
137744    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
137745    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
137746    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
137747    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
137748    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137749    +         end;
MPRINT(EM_DIAGRAM):   end;
137750    +      end;
MPRINT(EM_DIAGRAM):   end;
137751    +   end;
MPRINT(EM_DIAGRAM):   end;
137752    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
137753    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137754    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137755    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137756    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137757    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137758    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137759    +   end;
MPRINT(EM_DIAGRAM):   end;
137760    +end;
MPRINT(EM_DIAGRAM):   end;
137761    +
137762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137763    +*** Checking missing input Interval
137764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
137765    +
137766    +IF NMISS(
137767    +   AcceptedCmpTotal ,
137768    +   Age ,
137769    +   Frq ,
137770    +   Income ,
137771    +   Kidhome ,
137772    +   MntFishProducts ,
137773    +   MntFruits ,
137774    +   MntGoldProds ,
137775    +   MntSweetProducts ,
137776    +   MonthsAsCustomer ,
137777    +   NumDealsPurchases ,
137778    +   NumWebVisitsMonth ,
137779    +   RFMstat ,
137780    +   RMntFrq ,
137781    +   Recency ,
137782    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
137783    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
137784    +
137785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137786    +END;
MPRINT(EM_DIAGRAM):   END;
137787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137788    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
137789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137791    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137792    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137793    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137794    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137795    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137796    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137797    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137798    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137799    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137800    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137801    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
137802    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
137803    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
137804    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
137805    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
137806    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
137807    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
137808    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
137809    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
137810    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
137811    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
137812    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
137813    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
137814    +END;
MPRINT(EM_DIAGRAM):   END;
137815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137816    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
137817    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137818    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137819    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
137820    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137821    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
137822    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137823    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
137824    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137825    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
137826    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137827    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
137828    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137829    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137830    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
137831    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
137832    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137833    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
137834    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137835    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
137836    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
137837    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
137838    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
137839    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
137840    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
137841    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
137842    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
137843    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
137844    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
137845    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
137846    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
137847    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
137848    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
137849    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
137850    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
137851    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
137852    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
137853    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
137854    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
137855    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
137856    +END;
MPRINT(EM_DIAGRAM):   END;
137857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137858    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
137859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137861    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
137862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137864    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
137865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137866    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137867    +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
137868    +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
137869    +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
137870    +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
137871    +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
137872    +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
137873    +          +    -0.01191239814261 * S_MonthsAsCustomer
137874    +          +      -0.307259983666 * S_NumDealsPurchases
137875    +          +    -0.23972300101674 * S_NumWebVisitsMonth
137876    +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
137877    +        S_RMntFrq  +     0.32671320165482 * S_Recency
137878    +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
137879    +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
137880    +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
137881    +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
137882    +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
137883    +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
137884    +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
137885    +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
137886    +        EducationGraduation  +    -0.14651231631393 * EducationMaster
137887    +          +     -0.0692762335753 * Marital_StatusDivorced
137888    +          +     0.02472293911071 * Marital_StatusMarried
137889    +          +     0.04038393550437 * Marital_StatusSingle
137890    +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
137891    +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
137892    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
137893    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
137894    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
137895    +END;
MPRINT(EM_DIAGRAM):   END;
137896    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137897    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
137898    +END;
MPRINT(EM_DIAGRAM):   END;
137899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137900    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
137901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137902    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137903    +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
137904    +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
137905    +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
137906    +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
137907    +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
137908    +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
137909    +          +     0.14524334187971 * S_MonthsAsCustomer
137910    +          +    -0.58464031025411 * S_NumDealsPurchases
137911    +          +    -0.10768856151333 * S_NumWebVisitsMonth
137912    +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
137913    +        S_RMntFrq  +    -0.04430281297191 * S_Recency
137914    +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
137915    +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
137916    +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
137917    +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
137918    +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
137919    +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
137920    +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
137921    +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
137922    +        EducationGraduation  +    -0.37768027773032 * EducationMaster
137923    +          +     0.07007941100006 * Marital_StatusDivorced
137924    +          +     -0.7850554528889 * Marital_StatusMarried
137925    +          +     1.17661634109847 * Marital_StatusSingle
137926    +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
137927    +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
137928    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
137929    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
137930    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
137931    +END;
MPRINT(EM_DIAGRAM):   END;
137932    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137933    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
137934    +END;
MPRINT(EM_DIAGRAM):   END;
137935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137936    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
137937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137938    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137939    +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
137940    +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
137941    +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
137942    +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
137943    +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
137944    +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
137945    +          +    -2.17154324602167 * S_MonthsAsCustomer
137946    +          +    -1.39930460918007 * S_NumDealsPurchases
137947    +          +    -0.16044576482901 * S_NumWebVisitsMonth
137948    +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
137949    +        S_RMntFrq  +    -0.73252715992964 * S_Recency
137950    +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
137951    +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
137952    +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
137953    +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
137954    +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
137955    +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
137956    +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
137957    +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
137958    +        EducationGraduation  +    -0.35403398893388 * EducationMaster
137959    +          +     0.83271778325587 * Marital_StatusDivorced
137960    +          +     0.79137899511518 * Marital_StatusMarried
137961    +          +    -0.51320080030576 * Marital_StatusSingle
137962    +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
137963    +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
137964    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
137965    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
137966    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
137967    +END;
MPRINT(EM_DIAGRAM):   END;
137968    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137969    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
137970    +END;
MPRINT(EM_DIAGRAM):   END;
137971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137972    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
137973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137974    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137975    +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
137976    +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
137977    +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
137978    +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
137979    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
137980    +END;
MPRINT(EM_DIAGRAM):   END;
137981    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137982    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
137983    +END;
MPRINT(EM_DIAGRAM):   END;
137984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137985    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
137986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137987    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137988    +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
137989    +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
137990    +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
137991    +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
137992    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
137993    +END;
MPRINT(EM_DIAGRAM):   END;
137994    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137995    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
137996    +END;
MPRINT(EM_DIAGRAM):   END;
137997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137998    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
137999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138000    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
138001    +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
138002    +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
138003    +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
138004    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
138005    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
138006    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
138007    +END;
MPRINT(EM_DIAGRAM):   END;
138008    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
138009    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
138010    +END;
MPRINT(EM_DIAGRAM):   END;
138011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138012    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
138013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138014    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
138015    +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
138016    +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
138017    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
138018    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
138019    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
138020    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
138021    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
138022    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
138023    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
138024    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
138025    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
138026    +END;
MPRINT(EM_DIAGRAM):   END;
138027    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
138028    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
138029    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
138030    +END;
MPRINT(EM_DIAGRAM):   END;
138031    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
138032    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
138033    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
138034    +END;
MPRINT(EM_DIAGRAM):   END;
138035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138036    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
138037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138038    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
138039    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
138040    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
138041    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
138042    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
138043    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
138044    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
138045    +END;
MPRINT(EM_DIAGRAM):   END;
138046    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
138047    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
138048    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
138049    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
138050     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
138051     quit;
138052     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
138053     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
138054     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
138055     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
138056     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
138057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138058     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
138059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138060     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138061     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
138062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138064     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138065     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
138066     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
138067     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138068     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
138069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

138070     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
138071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138072     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138073     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138074     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
138075     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138076     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138077     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138078     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
138078   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1206 rows and 5 columns.

138079     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138080     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
138081     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138082     filename _pref
138082   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
138083     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
138084     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
138085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
138086    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
138087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
138088    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
138089    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
138090    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
138091     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
138092     quit;
138093     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
138094     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
138095     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
138096     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
138097     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
138098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138099     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
138100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138102     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
138103     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138105     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138106     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
138107     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
138108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138109     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
138110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

138111     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
138112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138114     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138115     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
138116     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138117     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138118     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138119     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
138119   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

138120     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138121     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
138122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138123     filename _pref
138123   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
138124     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
138125     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
138126    +
138127    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
138128    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
138128   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
138129    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
138130    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
138131    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
138132    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
138133    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
138134     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
138135     quit;
138136     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
138137     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
138138     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
138139     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
138140     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
138141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138142     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
138143     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138145     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
138146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138148     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138149     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
138150     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
138151     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138152     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
138153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138154     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
138155     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138157     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138158     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
138159     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138160     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138161     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138162     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
138162   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

138163     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138164     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
138165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138166     filename _pref
138166   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
138167     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
138168     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
138169    +
138170    +
138171    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
138172    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
138173    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
138174    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
138175    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
138176    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138177    +
138178    +
138179    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
138180    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
138181    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
138182    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
138183    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
138184    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138185    +
138186    +
138187    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
138188    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
138189    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
138190    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
138191    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
138192    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138193    +
138194    +
138195    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
138196    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
138197    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
138198    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
138199    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
138200    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138201    +
138202    +
138203    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
138204    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
138205    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
138206    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
138207    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
138208    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138209    +
138210    +
138211    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
138212    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
138213    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
138214    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
138215    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
138216    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138217    +
138218    +
138219    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
138220    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
138221    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
138222    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
138223    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
138224    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138225    +
138226    +
138227    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
138228    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
138229    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
138230    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
138231    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
138232    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
138233    +if
138234    +_FILTERNORM1 not in ( '.')
138235    + and
138236    +_FILTERNORM2 not in ( '.')
138237    + and
138238    +_FILTERNORM3 not in ( '.')
138239    + and
138240    +_FILTERNORM4 not in ( '.')
138241    + and
138242    +_FILTERNORM5 not in ( '.')
138243    + and
138244    +_FILTERNORM6 not in ( '.')
138245    + and
138246    +_FILTERNORM7 not in ( ' ')
138247    + and
138248    +_FILTERNORM8 not in ( ' ')
138249    +and
138250    +( Dt_Customer ne .)
138251    +and ( Income ne . and (Income<=107000))
138252    +and ( Kidhome ne .)
138253    +and ( MntFishProducts ne .)
138254    +and ( MntFruits ne .)
138255    +and ( MntGoldProds ne .)
138256    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
138257    +and ( MntSweetProducts ne .)
138258    +and ( MntWines ne .)
138259    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
138260    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
138261    +and ( NumStorePurchases ne .)
138262    +and ( NumWebPurchases ne .)
138263    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
138264    +and ( Recency ne .)
138265    +and ( Teenhome ne .)
138266    +and ( Year_Birth ne .)
138267    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
138268    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
138269    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
138270    +end;
MPRINT(EM_DIAGRAM):   end;
138271    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
138272    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
138273     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
138274     quit;
138275     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
138276     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
138277     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
138278     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
138279     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
138280     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138281     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
138282     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138283     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138284     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
138285     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138287     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138288     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
138289     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
138290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138291     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
138292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

138293     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
138294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138295     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138296     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138297     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
138298     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138299     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138300     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138301     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
138301   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

138302     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138303     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
138304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138305     %macro varDept(fcmpdata=,id=);
138306     %global nobs&id scoreFlag&id;
138307     %let scoreFlag&id = 0;
138308     %if &id=1 or ^&fcmpStart %then %do;
138309     proc sort data=&fcmpdata out=_temp&id nodupkey;
138310     by NAME;
138311     where id=&id and LHS in( %let j=1;
138312     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
138313     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
138314     "&var" %let j = %eval(&j+1);
138315     %end;
138316     );
138317     run;
138318     %let dsid = %sysfunc(open(_temp&id));
138319     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138320     %let dsid = %sysfunc(close(&dsid));
138321     %if &&nobs&id %then %do;
138322     %let scoreFlag&id = 1;
138323     %let fcmpStart = 1;
138324     %end;
138325     %else %let fcmpStart = 0;
138326     %end;
138327     %else %do;
138328     proc sort data=&fcmpdata out=_tempid;
138329     where id=&id;
138330     by LHS;
138331     run;
138332     %let dsid = %sysfunc(open(_tempid));
138333     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138334     %let dsid = %sysfunc(close(&dsid));
138335     %if ^&&nobs&id %then %do;
138336     proc datasets lib=work nolist;
138337     delete _tempid;
138338     run;
138339     quit;
138340     %end;
138341     %else %do;
138342     data _tempAll;
138343     set %let j=%eval(&id-1);
138344     %do x=1 %to &j;
138345     %if &&nobs&x %then %do;
138346     _temp&x %end;
138347     %end;
138348     ;
138349     run;
138350     proc sql;
138351     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
138351   ! work._tempid p2 where p.name=p2.lhs;
138352     quit;
138353     data _temp&id;
138354     set _temp&id;
138355     where LHS ne '' and NAME ne '' and Node ne '';
138356     run;
138357     proc datasets lib=work nolist;
138358     delete _tempAll;
138359     run;
138360     %let dsid = %sysfunc(open(_temp&id));
138361     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138362     %let dsid = %sysfunc(close(&dsid));
138363     %if ^&&nobs&id %then %do;
138364     proc datasets lib=work nolist;
138365     delete _temp&id;
138366     run;
138367     quit;
138368     %end;
138369     %else %do;
138370     %let scoreFlag&id = 1;
138371     data _temp&id;
138372     set _temp&id;
138373     where LHS ne NAME and node ne '';
138374     run;
138375     %let dsid = %sysfunc(open(_temp&id));
138376     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138377     %let dsid = %sysfunc(close(&dsid));
138378     %if ^&&nobs&id %then %do;
138379     proc datasets lib=work nolist;
138380     delete _temp&id;
138381     run;
138382     quit;
138383     %end;
138384     %else %do;
138385     proc sort data=_temp&id nodupkey;
138386     by LHS NAME;
138387     run;
138388     %end;
138389     %end;
138390     %end;
138391     %end;
138392     %mend varDept;
138393     %macro optCode(outdata=fcmpdata);
138394     %global fcmpStart;
138395     %let fcmpStart = 0;
138396     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
138397     %let NumNodes=9;
138398     %do k=1 %to &NumNodes;
138399     %vardept(fcmpdata=&outdata, id=&k);
138400     %end;
138401     %mend optCode;
138402     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

138403     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
138404     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
138405     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
138406     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138407     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
138408     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
138409     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
138410     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138411     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138412     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
138412   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

138413     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

138414     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
138415     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
138416     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138417     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
138418     * Ensmbl54: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing metadata for TRAIN data;
138419     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL54_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl54_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl54_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl54_TRAIN out=WORK.M0NWTYKV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NWTYKV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NWTYKV(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NWTYKV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NWTYKV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M08I4VCT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UBGIHP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   set WORK.M08I4VCT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl54";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl54";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
138739     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
138740     set EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMINFO;
138741     where DATA='Ensmbl54' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl54' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
138742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_EMINFO.
      WHERE (DATA='Ensmbl54') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138743     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMINFO;
138744     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
138745     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
138746     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
138750     run;
138751     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMINFO;
138752     set EMWS8.Ensmbl54_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMINFO WORK.MODELTEMP_INFO;
138753     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138754     proc sort data = EMWS8.Ensmbl54_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl54_EMINFO NOTHREADS;
138755     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138757     proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
138758     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138759     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL36_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138760     proc sort data = EMWS8.Ensmbl54_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl54_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
138761     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138762     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138763     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMINFO;
138764     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
138765     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138767     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
138768     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
138769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
138770     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL54_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL54_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
