*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                21.11 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1A2YYDV
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1A2YYDV new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[105699] MAX=1 EXCEEDMAXVALUE='' )[105703] )[105697]
VALIDCHOICES=(CHOICE1='Y' )[105701] )[105985] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[105707]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[105711] )[105709] )[105705] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[105715]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[105721] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[105719] )[105717] )[105713] )[105695]
281770     proc freq data=EMWS8.Ensmbl54_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl54_VariableSet noprint;
281771     table ROLE*LEVEL/out=WORK.Ensmbl54META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl54META;
281772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set EMWS8.ENSMBL54_VARIABLESET.
NOTE: The data set WORK.ENSMBL54META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
281773     proc print data=WORK.Ensmbl54META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl54META label noobs;
281774     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
281775     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
281775   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
281775   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
281776     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
281777     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
281778     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL54META.
NOTE: The PROCEDURE PRINT printed page 94.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281779     title10;
MPRINT(EM_DIAGRAM):   title10;
281780     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN EMWS8 AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN EMWS8 AutoNeural37_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural37_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural37_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
281809     data WORK.Ensmbl54_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl54_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
281810     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
281811     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
281811   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
281811   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
281812        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
281812   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
281812   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
281813     set EMWS8.AUTONEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
281814     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
281815     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
281816     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
281817     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
281818     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
281819     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
281820     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
281821     end;
MPRINT(EM_DIAGRAM):   end;
281822     output;
MPRINT(EM_DIAGRAM):   output;
281823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL37_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL54_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
281824     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
281825     proc print data=WORK.Ensmbl54_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl54_EVENT noobs label;
281826     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
281827     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
281828     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
281829     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL54_EVENT.
NOTE: The PROCEDURE PRINT printed page 95.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281830     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
281831     proc print data = EMWS8.AutoNeural37_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural37_DepVar_DM noobs label;
281832     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
281833     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
281834     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
281834   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
281834   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
281835     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
281836     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
281837     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL37_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 96.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281838     title10;
MPRINT(EM_DIAGRAM):   title10;
281839     %let groupid =;
281840     %let endGroupid =;
281841     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281842     set EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_EMINFO;
281843     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281843   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281844     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281845     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281846     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281847     %let groupid =;
281848     %let endGroupid =;
281849     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281850     set EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural38_EMINFO;
281851     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281851   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281852     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281853     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281855     %let groupid =;
281856     %let endGroupid =;
281857     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281858     set EMWS8.AutoNeural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural39_EMINFO;
281859     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281859   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281860     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281861     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL39_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281863     %let groupid =;
281864     %let endGroupid =;
281865     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281866     set EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO;
281867     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281867   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281868     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281869     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281871     %let groupid =;
281872     %let endGroupid =;
281873     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281874     set EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO;
281875     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281875   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281876     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281877     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281878     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281879     %let groupid =;
281880     %let endGroupid =;
281881     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
281882     set EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO;
281883     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
281883   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
281884     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
281885     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
281886     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281887     data WORK.Ensmbl54;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl54;
281888     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
281889     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
281889   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
281890     nodeid="AUTONEURAL37";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL37";
281891     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281892     output;
MPRINT(EM_DIAGRAM):   output;
281893     nodeid="AUTONEURAL38";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL38";
281894     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281895     output;
MPRINT(EM_DIAGRAM):   output;
281896     nodeid="AUTONEURAL39";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL39";
281897     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281898     output;
MPRINT(EM_DIAGRAM):   output;
281899     nodeid="AUTONEURAL40";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL40";
281900     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281901     output;
MPRINT(EM_DIAGRAM):   output;
281902     nodeid="AUTONEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL34";
281903     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281904     output;
MPRINT(EM_DIAGRAM):   output;
281905     nodeid="AUTONEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL35";
281906     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
281907     output;
MPRINT(EM_DIAGRAM):   output;
281908     ;
MPRINT(EM_DIAGRAM):   ;
281909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL54 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
281910     title;
MPRINT(EM_DIAGRAM):   title;
281911     proc print data=WORK.Ensmbl54 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl54 label noobs;
281912     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
281913     title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
281914     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL54.
NOTE: The PROCEDURE PRINT printed page 97.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281915     title9;
MPRINT(EM_DIAGRAM):   title9;
281916     title10;
MPRINT(EM_DIAGRAM):   title10;
281917     data WORK.M3V8RZHU;
MPRINT(EM_DIAGRAM):    data WORK.M3V8RZHU;
281918     set WORK.M3V8RZHU;
MPRINT(EM_DIAGRAM):   set WORK.M3V8RZHU;
281919     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
281920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3V8RZHU.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3V8RZHU has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
281921     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
281922     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
281923     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
281924     %macro DMDBClass;
281925         DepVar(DESC)
281926     %mend DMDBClass;
281927     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
281928     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
281929     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
281930     %macro DMDBVar;
281931
281932     %mend DMDBVar;
281933     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281934     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
281935     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281936     proc dmdb batch data=EMWS8.AutoNeural37_TRAIN
281937     dmdbcat=WORK.EM_DMDB
281938     maxlevel = 513
281939     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural37_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
281940     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
281941     target
281942     DepVar
281943     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
281944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL37_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
281945     quit;
281946     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3UI80I8
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3UI80I8 new;
MPRINT(EM_DIAGRAM):   run;
282048     filename emflow
282048   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring AUTONEURAL37_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282049     *------------------------------------------------------------*;
282050     * Ensmbl54: Scoring AUTONEURAL37_TRAIN data;
282051     *------------------------------------------------------------*;
282052     data EMWS8.Ensmbl54_TRAIN
282053     / view=EMWS8.Ensmbl54_TRAIN
282054     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_TRAIN / view=EMWS8.Ensmbl54_TRAIN ;
282055     set EMWS8.AutoNeural37_TRAIN
282056     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_TRAIN ;
282057     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas.
282058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282059    +* Ensmbl54: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Combine model for DepVar;
282060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282061    +* Ensmbl54: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 1 of 6;
282062    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282064    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
282065    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
282066    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
282067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282069    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
282070    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
282071    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
282072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282073    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282074    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
282075    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
282076    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
282077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282079    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
282080    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
282081    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
282082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282083    +
282084    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
282085    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
282085   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
282086    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
282087    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
282088    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
282089    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
282090    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
282091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282092    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
282093    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
282094    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
282095    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282097    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
282098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282099    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
282100    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
282101    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
282102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282103    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
282104    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
282105    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
282106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282108    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
282109    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
282110    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
282111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282113    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
282114    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
282115    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
282116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282117    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282118    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
282119    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282120    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
282121    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
282122    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
282123    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
282124    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
282125    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
282126    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
282127    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
282128    +LENGTH _WARN_ $4
282129    +      F_DepVar  $ 12
282130    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
282131    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
282132    +
282133    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
282134    +
282135    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
282136    +
282137    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
282138    +
282139    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
282140    +
282141    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
282142    +
282143    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
282144    +
282145    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
282146    +
282147    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
282148    +
282149    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
282150    +
282151    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
282152    +
282153    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
282154    +
282155    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
282156    +
282157    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
282158    +
282159    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282160    +
282161    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
282162    +
282163    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
282164    +
282165    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
282166    +
282167    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
282168    +
282169    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
282170    +
282171    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
282172    +
282173    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
282174    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
282175    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
282176    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
282177    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
282178    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
282179    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
282180    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
282181    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
282182    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282183    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282184    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282185    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282186    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282187    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282188    +end;
MPRINT(EM_DIAGRAM):   end;
282189    +else do;
MPRINT(EM_DIAGRAM):   else do;
282190    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
282191    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
282192    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282193    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
282194    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
282195    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
282196    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
282197    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
282198    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282199    +         end;
MPRINT(EM_DIAGRAM):   end;
282200    +         else do;
MPRINT(EM_DIAGRAM):   else do;
282201    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
282202    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
282203    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282204    +            end;
MPRINT(EM_DIAGRAM):   end;
282205    +         end;
MPRINT(EM_DIAGRAM):   end;
282206    +      end;
MPRINT(EM_DIAGRAM):   end;
282207    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282208    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
282209    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
282210    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282211    +         end;
MPRINT(EM_DIAGRAM):   end;
282212    +      end;
MPRINT(EM_DIAGRAM):   end;
282213    +   end;
MPRINT(EM_DIAGRAM):   end;
282214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282215    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
282216    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
282217    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282218    +      end;
MPRINT(EM_DIAGRAM):   end;
282219    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282220    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
282221    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
282222    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
282223    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
282224    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
282225    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282226    +         end;
MPRINT(EM_DIAGRAM):   end;
282227    +      end;
MPRINT(EM_DIAGRAM):   end;
282228    +   end;
MPRINT(EM_DIAGRAM):   end;
282229    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
282230    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282231    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282232    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282233    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282236    +   end;
MPRINT(EM_DIAGRAM):   end;
282237    +end;
MPRINT(EM_DIAGRAM):   end;
282238    +
282239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282240    +*** Checking missing input Interval
282241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
282242    +
282243    +IF NMISS(
282244    +   AcceptedCmpTotal ,
282245    +   Frq ,
282246    +   Mnt ,
282247    +   MntMeatProducts ,
282248    +   NumCatalogPurchases ,
282249    +   NumDealsPurchases ,
282250    +   NumWebVisitsMonth ,
282251    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
282252    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
282253    +
282254    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282255    +END;
MPRINT(EM_DIAGRAM):   END;
282256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282257    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
282258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282259    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282260    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282261    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
282262    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282263    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282264    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282265    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
282266    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
282267    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
282268    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282269    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
282270    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282271    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
282272    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282273    +END;
MPRINT(EM_DIAGRAM):   END;
282274    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282275    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
282276    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282277    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
282278    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
282279    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282280    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
282281    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282282    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
282283    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282284    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
282285    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
282286    +   ELSE S_NumCatalogPurchases
282287    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
282288    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
282289    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
282290    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282291    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
282292    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
282293    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282294    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
282295    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
282296    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282297    +END;
MPRINT(EM_DIAGRAM):   END;
282298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282299    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
282300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282302    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
282303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282304    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282305    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
282306    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
282307    +          +     6.08901143667375 * S_MntMeatProducts
282308    +          +     2.21464286693249 * S_NumCatalogPurchases
282309    +          +     0.88693497635794 * S_NumDealsPurchases
282310    +          +    -0.16352347343851 * S_NumWebVisitsMonth
282311    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
282312    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
282313    +          +     0.97693281807676 * Marital_StatusMarried
282314    +          +    -0.47353913752833 * Marital_StatusSingle
282315    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
282316    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
282317    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282318    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282319    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
282320    +END;
MPRINT(EM_DIAGRAM):   END;
282321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282322    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
282323    +END;
MPRINT(EM_DIAGRAM):   END;
282324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282325    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
282326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282327    +
282328    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
282329    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
282330    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282331    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
282332    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
282333    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282334    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
282335    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282336    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282337    +end;
MPRINT(EM_DIAGRAM):   end;
282338    +else do;
MPRINT(EM_DIAGRAM):   else do;
282339    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
282340    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
282341    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
282342    +   end;
MPRINT(EM_DIAGRAM):   end;
282343    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
282344    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
282345    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
282346    +   end;
MPRINT(EM_DIAGRAM):   end;
282347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282348    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282349    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282350    +   end;
MPRINT(EM_DIAGRAM):   end;
282351    +end;
MPRINT(EM_DIAGRAM):   end;
282352    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282353    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
282354    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
282355    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
282356    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
282357    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282358    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
282359    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
282360    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
282361    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
282362    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
282363    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
282364    +END;
MPRINT(EM_DIAGRAM):   END;
282365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282366    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
282367    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
282368    +END;
MPRINT(EM_DIAGRAM):   END;
282369    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
282370    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
282371    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
282372    +END;
MPRINT(EM_DIAGRAM):   END;
282373    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
282374    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
282375    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
282376    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
282377    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
282378    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
282379    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
282380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282381    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
282382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282383    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
282384    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
282385    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
282386    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
282387    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
282388    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
282389    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
282390    +END;
MPRINT(EM_DIAGRAM):   END;
282391    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282392    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
282393    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282394    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
282395    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
282396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282397    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
282398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282399    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
282400    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
282401    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
282402    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
282403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282404    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
282405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282406    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
282407    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
282408    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
282409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282410    +* Ensmbl54: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 2 of 6;
282411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282413    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
282414    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
282415    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
282416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282417    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282418    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
282419    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282420    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
282421    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
282422    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
282423    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
282424    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
282425    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
282426    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
282427    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
282428    +LENGTH _WARN_ $4
282429    +      F_DepVar  $ 12
282430    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
282431    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
282432    +
282433    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
282434    +
282435    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
282436    +
282437    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
282438    +
282439    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
282440    +
282441    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
282442    +
282443    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
282444    +
282445    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
282446    +
282447    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
282448    +
282449    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
282450    +
282451    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
282452    +
282453    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
282454    +
282455    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
282456    +
282457    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
282458    +
282459    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
282460    +
282461    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
282462    +
282463    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
282464    +
282465    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
282466    +
282467    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
282468    +
282469    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
282470    +
282471    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
282472    +
282473    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
282474    +
282475    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
282476    +
282477    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
282478    +
282479    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
282480    +
282481    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
282482    +
282483    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
282484    +
282485    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
282486    +
282487    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
282488    +
282489    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
282490    +
282491    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
282492    +
282493    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
282494    +
282495    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
282496    +
282497    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282498    +
282499    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
282500    +
282501    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
282502    +
282503    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
282504    +
282505    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
282506    +
282507    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
282508    +
282509    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
282510    +
282511    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
282512    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
282513    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
282514    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
282515    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
282516    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
282517    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
282518    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
282519    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
282520    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282521    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282522    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282523    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282526    +end;
MPRINT(EM_DIAGRAM):   end;
282527    +else do;
MPRINT(EM_DIAGRAM):   else do;
282528    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
282529    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
282530    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282531    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
282532    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
282533    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
282534    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
282535    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
282536    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282537    +         end;
MPRINT(EM_DIAGRAM):   end;
282538    +         else do;
MPRINT(EM_DIAGRAM):   else do;
282539    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
282540    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
282541    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282542    +            end;
MPRINT(EM_DIAGRAM):   end;
282543    +         end;
MPRINT(EM_DIAGRAM):   end;
282544    +      end;
MPRINT(EM_DIAGRAM):   end;
282545    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282546    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
282547    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
282548    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282549    +         end;
MPRINT(EM_DIAGRAM):   end;
282550    +      end;
MPRINT(EM_DIAGRAM):   end;
282551    +   end;
MPRINT(EM_DIAGRAM):   end;
282552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282553    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
282554    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
282555    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282556    +      end;
MPRINT(EM_DIAGRAM):   end;
282557    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282558    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
282559    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
282560    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
282561    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
282562    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
282563    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282564    +         end;
MPRINT(EM_DIAGRAM):   end;
282565    +      end;
MPRINT(EM_DIAGRAM):   end;
282566    +   end;
MPRINT(EM_DIAGRAM):   end;
282567    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
282568    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282569    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282570    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282571    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282574    +   end;
MPRINT(EM_DIAGRAM):   end;
282575    +end;
MPRINT(EM_DIAGRAM):   end;
282576    +
282577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282578    +*** Checking missing input Interval
282579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
282580    +
282581    +IF NMISS(
282582    +   AcceptedCmpTotal ,
282583    +   Frq ,
282584    +   Mnt ,
282585    +   MntMeatProducts ,
282586    +   NumCatalogPurchases ,
282587    +   NumDealsPurchases ,
282588    +   NumWebVisitsMonth ,
282589    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
282590    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
282591    +
282592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282593    +END;
MPRINT(EM_DIAGRAM):   END;
282594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282595    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
282596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282597    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282598    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282599    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
282600    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282601    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282602    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282603    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
282604    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
282605    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
282606    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282607    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
282608    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282609    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
282610    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282611    +END;
MPRINT(EM_DIAGRAM):   END;
282612    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282613    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
282614    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282615    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
282616    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
282617    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282618    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
282619    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282620    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
282621    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282622    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
282623    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
282624    +   ELSE S_NumCatalogPurchases
282625    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
282626    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
282627    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
282628    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282629    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
282630    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
282631    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282632    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
282633    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
282634    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282635    +END;
MPRINT(EM_DIAGRAM):   END;
282636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282637    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
282638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282640    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
282641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282642    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282643    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
282644    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
282645    +          +     3.02405267314398 * S_MntMeatProducts
282646    +          +     0.25422172488707 * S_NumCatalogPurchases
282647    +          +     0.25977266371328 * S_NumDealsPurchases
282648    +          +    -0.26865365728773 * S_NumWebVisitsMonth
282649    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
282650    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
282651    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
282652    +          +    -0.64419071408502 * S_MntMeatProducts
282653    +          +    -0.49060224303044 * S_NumCatalogPurchases
282654    +          +    -0.04840762943457 * S_NumDealsPurchases
282655    +          +     -0.7656247386051 * S_NumWebVisitsMonth
282656    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
282657    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
282658    +          +    -0.05888536499281 * Marital_StatusMarried
282659    +          +    -0.22627441829205 * Marital_StatusSingle
282660    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
282661    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
282662    +          +     0.82536605771339 * Marital_StatusMarried
282663    +          +    -0.97196770004098 * Marital_StatusSingle
282664    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
282665    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
282666    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
282667    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282668    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282669    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
282670    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
282671    +END;
MPRINT(EM_DIAGRAM):   END;
282672    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282673    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
282674    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
282675    +END;
MPRINT(EM_DIAGRAM):   END;
282676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282677    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
282678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282679    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282680    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
282681    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
282682    +          +    -1.52187144029368 * S_MntMeatProducts
282683    +          +    -0.17233011764417 * S_NumCatalogPurchases
282684    +          +     0.08681674245114 * S_NumDealsPurchases
282685    +          +     0.13308256651831 * S_NumWebVisitsMonth
282686    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
282687    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
282688    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
282689    +          +     0.66187267823731 * S_MntMeatProducts
282690    +          +     1.52530454111654 * S_NumCatalogPurchases
282691    +          +     0.73982889008686 * S_NumDealsPurchases
282692    +          +     1.03760708665776 * S_NumWebVisitsMonth
282693    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
282694    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
282695    +          +    -0.57121500191985 * Marital_StatusMarried
282696    +          +     0.00575301863466 * Marital_StatusSingle
282697    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
282698    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
282699    +          +     0.68382990555761 * Marital_StatusMarried
282700    +          +    -0.40241665873988 * Marital_StatusSingle
282701    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
282702    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
282703    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
282704    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282705    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282706    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
282707    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
282708    +END;
MPRINT(EM_DIAGRAM):   END;
282709    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282710    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
282711    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
282712    +END;
MPRINT(EM_DIAGRAM):   END;
282713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282714    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
282715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282716    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282717    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
282718    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
282719    +          +    -2.40830591527574 * S_MntMeatProducts
282720    +          +    -0.89296864866675 * S_NumCatalogPurchases
282721    +          +     1.79889409325514 * S_NumDealsPurchases
282722    +          +    -0.33765715793031 * S_NumWebVisitsMonth
282723    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
282724    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
282725    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
282726    +          +     0.04224245417831 * S_MntMeatProducts
282727    +          +     0.25836861794607 * S_NumCatalogPurchases
282728    +          +     2.47909264202917 * S_NumDealsPurchases
282729    +          +     0.14790226792406 * S_NumWebVisitsMonth
282730    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
282731    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
282732    +          +     0.39103795234666 * Marital_StatusMarried
282733    +          +    -0.52822284221545 * Marital_StatusSingle
282734    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
282735    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
282736    +          +       1.975579060233 * Marital_StatusMarried
282737    +          +     0.15028521746762 * Marital_StatusSingle
282738    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
282739    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
282740    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
282741    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282742    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282743    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
282744    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
282745    +END;
MPRINT(EM_DIAGRAM):   END;
282746    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282747    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
282748    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
282749    +END;
MPRINT(EM_DIAGRAM):   END;
282750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282751    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
282752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282754    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
282755    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
282756    +          +     0.16060225059391 * S_MntMeatProducts
282757    +          +     1.53093292630033 * S_NumCatalogPurchases
282758    +          +     0.39573641806699 * S_NumDealsPurchases
282759    +          +    -0.95387142126649 * S_NumWebVisitsMonth
282760    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
282761    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
282762    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
282763    +          +     0.71628478327205 * S_MntMeatProducts
282764    +          +     0.15890352363556 * S_NumCatalogPurchases
282765    +          +    -1.12928875468011 * S_NumDealsPurchases
282766    +          +    -0.30108145274307 * S_NumWebVisitsMonth
282767    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
282768    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
282769    +          +     0.91966160839643 * Marital_StatusMarried
282770    +          +    -0.63411090570397 * Marital_StatusSingle
282771    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
282772    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
282773    +          +     0.77230489026504 * Marital_StatusMarried
282774    +          +     0.20456495503812 * Marital_StatusSingle
282775    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
282776    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
282777    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
282778    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282779    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282780    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
282781    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
282782    +END;
MPRINT(EM_DIAGRAM):   END;
282783    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282784    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
282785    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
282786    +END;
MPRINT(EM_DIAGRAM):   END;
282787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282788    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
282789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282791    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
282792    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
282793    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
282794    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
282795    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
282796    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
282797    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
282798    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
282799    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
282800    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
282801    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
282802    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
282803    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
282804    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
282805    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
282806    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
282807    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
282808    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
282809    +END;
MPRINT(EM_DIAGRAM):   END;
282810    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282811    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
282812    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
282813    +END;
MPRINT(EM_DIAGRAM):   END;
282814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282815    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
282816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282818    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
282819    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
282820    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
282821    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
282822    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
282823    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
282824    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
282825    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
282826    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
282827    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
282828    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
282829    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
282830    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
282831    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
282832    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
282833    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
282834    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
282835    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
282836    +END;
MPRINT(EM_DIAGRAM):   END;
282837    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282838    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
282839    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
282840    +END;
MPRINT(EM_DIAGRAM):   END;
282841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282842    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
282843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282844    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282845    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
282846    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
282847    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
282848    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
282849    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
282850    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
282851    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
282852    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
282853    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
282854    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
282855    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
282856    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
282857    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
282858    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
282859    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
282860    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
282861    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
282862    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
282863    +END;
MPRINT(EM_DIAGRAM):   END;
282864    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282865    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
282866    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
282867    +END;
MPRINT(EM_DIAGRAM):   END;
282868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282869    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
282870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282871    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282872    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
282873    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
282874    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
282875    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
282876    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
282877    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
282878    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
282879    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
282880    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282881    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
282882    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
282883    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
282884    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
282885    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
282886    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
282887    +END;
MPRINT(EM_DIAGRAM):   END;
282888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282889    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
282890    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
282891    +END;
MPRINT(EM_DIAGRAM):   END;
282892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282893    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
282894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282895    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282896    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
282897    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
282898    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
282899    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
282900    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
282901    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
282902    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
282903    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
282904    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282905    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
282906    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
282907    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
282908    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
282909    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
282910    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
282911    +END;
MPRINT(EM_DIAGRAM):   END;
282912    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282913    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
282914    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
282915    +END;
MPRINT(EM_DIAGRAM):   END;
282916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282917    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
282918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282920    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
282921    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
282922    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
282923    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
282924    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
282925    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
282926    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282927    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
282928    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
282929    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
282930    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
282931    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
282932    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
282933    +END;
MPRINT(EM_DIAGRAM):   END;
282934    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282935    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
282936    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
282937    +END;
MPRINT(EM_DIAGRAM):   END;
282938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282939    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
282940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282941    +
282942    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
282943    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
282944    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282945    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
282946    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
282947    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282948    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
282949    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282950    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282951    +end;
MPRINT(EM_DIAGRAM):   end;
282952    +else do;
MPRINT(EM_DIAGRAM):   else do;
282953    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
282954    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
282955    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
282956    +   end;
MPRINT(EM_DIAGRAM):   end;
282957    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
282958    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
282959    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
282960    +   end;
MPRINT(EM_DIAGRAM):   end;
282961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282962    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282963    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282964    +   end;
MPRINT(EM_DIAGRAM):   end;
282965    +end;
MPRINT(EM_DIAGRAM):   end;
282966    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282967    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
282968    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
282969    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
282970    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
282971    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
282972    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282973    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
282974    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
282975    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
282976    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
282977    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
282978    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
282979    +END;
MPRINT(EM_DIAGRAM):   END;
282980    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282981    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
282982    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
282983    +END;
MPRINT(EM_DIAGRAM):   END;
282984    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
282985    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
282986    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
282987    +END;
MPRINT(EM_DIAGRAM):   END;
282988    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
282989    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
282990    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
282991    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
282992    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
282993    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
282994    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
282995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282996    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
282997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282998    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
282999    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283000    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283001    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283002    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283003    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283004    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283005    +END;
MPRINT(EM_DIAGRAM):   END;
283006    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283007    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283008    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283009    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283010    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
283011    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283012    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
283013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283014    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
283015    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
283016    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
283017    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
283018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283019    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
283020    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283021    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
283022    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
283023    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
283024    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283025    +* Ensmbl54: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 3 of 6;
283026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283028    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
283029    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283030    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
283031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283032    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283033    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283034    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283035    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283036    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283037    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283038    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283039    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283040    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283041    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283042    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283043    +LENGTH _WARN_ $4
283044    +      F_DepVar  $ 12
283045    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283046    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283047    +
283048    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283049    +
283050    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283051    +
283052    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283053    +
283054    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
283055    +
283056    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
283057    +
283058    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
283059    +
283060    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283061    +
283062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
283063    +
283064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
283065    +
283066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
283067    +
283068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
283069    +
283070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
283071    +
283072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
283073    +
283074    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
283075    +
283076    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283077    +
283078    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283079    +
283080    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283081    +
283082    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283083    +
283084    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283085    +
283086    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283087    +
283088    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283089    +
283090    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283091    +
283092    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
283093    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
283094    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
283095    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
283096    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
283097    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
283098    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
283099    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
283100    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
283101    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283102    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283103    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283104    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283107    +end;
MPRINT(EM_DIAGRAM):   end;
283108    +else do;
MPRINT(EM_DIAGRAM):   else do;
283109    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
283110    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
283111    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283112    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
283113    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
283114    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
283115    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
283116    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
283117    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283118    +         end;
MPRINT(EM_DIAGRAM):   end;
283119    +         else do;
MPRINT(EM_DIAGRAM):   else do;
283120    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
283121    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
283122    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283123    +            end;
MPRINT(EM_DIAGRAM):   end;
283124    +         end;
MPRINT(EM_DIAGRAM):   end;
283125    +      end;
MPRINT(EM_DIAGRAM):   end;
283126    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283127    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
283128    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
283129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283130    +         end;
MPRINT(EM_DIAGRAM):   end;
283131    +      end;
MPRINT(EM_DIAGRAM):   end;
283132    +   end;
MPRINT(EM_DIAGRAM):   end;
283133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283134    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
283135    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
283136    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283137    +      end;
MPRINT(EM_DIAGRAM):   end;
283138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283139    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
283140    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
283141    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
283142    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
283143    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
283144    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283145    +         end;
MPRINT(EM_DIAGRAM):   end;
283146    +      end;
MPRINT(EM_DIAGRAM):   end;
283147    +   end;
MPRINT(EM_DIAGRAM):   end;
283148    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
283149    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283150    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283151    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283152    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283155    +   end;
MPRINT(EM_DIAGRAM):   end;
283156    +end;
MPRINT(EM_DIAGRAM):   end;
283157    +
283158    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283159    +*** Checking missing input Interval
283160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283161    +
283162    +IF NMISS(
283163    +   AcceptedCmpTotal ,
283164    +   Frq ,
283165    +   Mnt ,
283166    +   MntMeatProducts ,
283167    +   NumCatalogPurchases ,
283168    +   NumDealsPurchases ,
283169    +   NumWebVisitsMonth ,
283170    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
283171    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283172    +
283173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283174    +END;
MPRINT(EM_DIAGRAM):   END;
283175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283176    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
283177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283178    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283179    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283180    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283181    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283182    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283183    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283184    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283185    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
283186    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283187    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283188    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283189    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283190    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283191    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283192    +END;
MPRINT(EM_DIAGRAM):   END;
283193    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283194    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
283195    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283196    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283197    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
283198    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283199    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
283200    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283201    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
283202    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283203    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283204    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
283205    +   ELSE S_NumCatalogPurchases
283206    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
283207    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283208    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
283209    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283210    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283211    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
283212    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283213    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283214    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
283215    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283216    +END;
MPRINT(EM_DIAGRAM):   END;
283217    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283218    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
283219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283221    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
283222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283223    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283224    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
283225    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
283226    +          +     0.02561809182055 * S_MntMeatProducts
283227    +          +     -0.1793288912734 * S_NumCatalogPurchases
283228    +          +    -0.37563080213093 * S_NumDealsPurchases
283229    +          +    -0.48858578777845 * S_NumWebVisitsMonth
283230    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
283231    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
283232    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
283233    +          +     1.94302986779634 * S_MntMeatProducts
283234    +          +      0.2669037763846 * S_NumCatalogPurchases
283235    +          +     0.29313104233947 * S_NumDealsPurchases
283236    +          +    -0.30591479309812 * S_NumWebVisitsMonth
283237    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
283238    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
283239    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
283240    +          +    -0.76055629383789 * S_MntMeatProducts
283241    +          +    -0.40114802991127 * S_NumCatalogPurchases
283242    +          +    -1.12215966034372 * S_NumDealsPurchases
283243    +          +    -0.30978133586417 * S_NumWebVisitsMonth
283244    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
283245    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
283246    +          +     0.20445663414925 * Marital_StatusMarried
283247    +          +     0.16369117386202 * Marital_StatusSingle
283248    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
283249    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
283250    +          +     0.09645374599508 * Marital_StatusMarried
283251    +          +     -0.0816282741981 * Marital_StatusSingle
283252    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
283253    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
283254    +          +     -3.9031880089591 * Marital_StatusMarried
283255    +          +      1.6995748309328 * Marital_StatusSingle
283256    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
283257    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
283258    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
283259    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
283260    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
283261    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
283262    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
283263    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
283264    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
283265    +END;
MPRINT(EM_DIAGRAM):   END;
283266    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283267    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
283268    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
283269    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
283270    +END;
MPRINT(EM_DIAGRAM):   END;
283271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283272    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283274    +
283275    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283276    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283277    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283278    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283279    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283280    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283281    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283282    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283283    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283284    +end;
MPRINT(EM_DIAGRAM):   end;
283285    +else do;
MPRINT(EM_DIAGRAM):   else do;
283286    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283287    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283288    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283289    +   end;
MPRINT(EM_DIAGRAM):   end;
283290    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283291    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283292    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283293    +   end;
MPRINT(EM_DIAGRAM):   end;
283294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283295    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283296    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283297    +   end;
MPRINT(EM_DIAGRAM):   end;
283298    +end;
MPRINT(EM_DIAGRAM):   end;
283299    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283300    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
283301    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
283302    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
283303    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283304    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283305    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283306    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283307    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283308    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283309    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283310    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283311    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283312    +END;
MPRINT(EM_DIAGRAM):   END;
283313    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283314    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283315    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283316    +END;
MPRINT(EM_DIAGRAM):   END;
283317    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283318    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283319    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283320    +END;
MPRINT(EM_DIAGRAM):   END;
283321    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283322    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283323    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283324    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283325    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283326    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283327    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283329    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283331    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283332    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283333    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283334    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283335    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283336    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283337    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283338    +END;
MPRINT(EM_DIAGRAM):   END;
283339    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283340    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283341    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283342    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283343    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
283344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283345    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
283346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283347    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
283348    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
283349    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
283350    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
283351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283352    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
283353    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283354    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
283355    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
283356    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
283357    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283358    +* Ensmbl54: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 4 of 6;
283359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283361    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
283362    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283363    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
283364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283365    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283366    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283367    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283368    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283369    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283370    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283371    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283372    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283373    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283374    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283375    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283376    +LENGTH _WARN_ $4
283377    +      F_DepVar  $ 12
283378    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283379    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283380    +
283381    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283382    +
283383    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283384    +
283385    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283386    +
283387    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
283388    +
283389    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
283390    +
283391    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
283392    +
283393    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283394    +
283395    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
283396    +
283397    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
283398    +
283399    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
283400    +
283401    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
283402    +
283403    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
283404    +
283405    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
283406    +
283407    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
283408    +
283409    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
283410    +
283411    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283412    +
283413    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283414    +
283415    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283416    +
283417    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283418    +
283419    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283420    +
283421    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283422    +
283423    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283424    +
283425    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283426    +
283427    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
283428    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
283429    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
283430    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
283431    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
283432    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
283433    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
283434    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
283435    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
283436    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283437    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283438    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283439    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283440    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283441    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283442    +end;
MPRINT(EM_DIAGRAM):   end;
283443    +else do;
MPRINT(EM_DIAGRAM):   else do;
283444    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
283445    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
283446    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283447    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
283448    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
283449    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
283450    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
283451    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
283452    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283453    +         end;
MPRINT(EM_DIAGRAM):   end;
283454    +         else do;
MPRINT(EM_DIAGRAM):   else do;
283455    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
283456    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
283457    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283458    +            end;
MPRINT(EM_DIAGRAM):   end;
283459    +         end;
MPRINT(EM_DIAGRAM):   end;
283460    +      end;
MPRINT(EM_DIAGRAM):   end;
283461    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283462    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
283463    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
283464    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283465    +         end;
MPRINT(EM_DIAGRAM):   end;
283466    +      end;
MPRINT(EM_DIAGRAM):   end;
283467    +   end;
MPRINT(EM_DIAGRAM):   end;
283468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283469    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
283470    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
283471    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283472    +      end;
MPRINT(EM_DIAGRAM):   end;
283473    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283474    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
283475    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
283476    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
283477    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
283478    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
283479    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283480    +         end;
MPRINT(EM_DIAGRAM):   end;
283481    +      end;
MPRINT(EM_DIAGRAM):   end;
283482    +   end;
MPRINT(EM_DIAGRAM):   end;
283483    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
283484    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283485    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283486    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283487    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283490    +   end;
MPRINT(EM_DIAGRAM):   end;
283491    +end;
MPRINT(EM_DIAGRAM):   end;
283492    +
283493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283494    +*** Checking missing input Interval
283495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283496    +
283497    +IF NMISS(
283498    +   AcceptedCmpTotal ,
283499    +   Frq ,
283500    +   Mnt ,
283501    +   MntMeatProducts ,
283502    +   NumCatalogPurchases ,
283503    +   NumDealsPurchases ,
283504    +   NumWebVisitsMonth ,
283505    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
283506    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283507    +
283508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283509    +END;
MPRINT(EM_DIAGRAM):   END;
283510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283511    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
283512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283514    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283515    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283516    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283517    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283518    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283519    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283520    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
283521    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283522    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283523    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283524    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283525    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283526    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283527    +END;
MPRINT(EM_DIAGRAM):   END;
283528    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283529    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
283530    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283531    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283532    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
283533    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283534    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
283535    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283536    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
283537    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283538    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283539    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
283540    +   ELSE S_NumCatalogPurchases
283541    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
283542    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283543    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
283544    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283545    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283546    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
283547    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283548    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283549    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
283550    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283551    +END;
MPRINT(EM_DIAGRAM):   END;
283552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283553    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
283554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283556    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
283557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283558    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283559    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
283560    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
283561    +          +      0.2338265945616 * S_MntMeatProducts
283562    +          +     0.01564313414142 * S_NumCatalogPurchases
283563    +          +    -0.07464304384577 * S_NumDealsPurchases
283564    +          +    -0.08299095200051 * S_NumWebVisitsMonth
283565    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
283566    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
283567    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
283568    +          +     -0.3893643428589 * S_MntMeatProducts
283569    +          +    -0.11487225011852 * S_NumCatalogPurchases
283570    +          +       0.001237145136 * S_NumDealsPurchases
283571    +          +    -0.04234500703321 * S_NumWebVisitsMonth
283572    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
283573    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
283574    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
283575    +          +    -0.27963474874984 * S_MntMeatProducts
283576    +          +     0.01939450840376 * S_NumCatalogPurchases
283577    +          +    -0.03907394757592 * S_NumDealsPurchases
283578    +          +     0.06752842740103 * S_NumWebVisitsMonth
283579    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
283580    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
283581    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
283582    +          +     0.09842717305515 * S_MntMeatProducts
283583    +          +     0.48040050668836 * S_NumCatalogPurchases
283584    +          +     0.55911507039756 * S_NumDealsPurchases
283585    +          +     0.35441361757916 * S_NumWebVisitsMonth
283586    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
283587    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
283588    +          +     0.13423943689575 * Marital_StatusMarried
283589    +          +    -0.01496857872487 * Marital_StatusSingle
283590    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
283591    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
283592    +          +     0.03005244373637 * Marital_StatusMarried
283593    +          +    -0.06891231360799 * Marital_StatusSingle
283594    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
283595    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
283596    +          +     0.01694145364157 * Marital_StatusMarried
283597    +          +    -0.05183794192194 * Marital_StatusSingle
283598    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
283599    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
283600    +          +     0.44185773223966 * Marital_StatusMarried
283601    +          +     -0.6351733171702 * Marital_StatusSingle
283602    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
283603    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
283604    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
283605    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
283606    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
283607    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
283608    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
283609    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
283610    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
283611    +END;
MPRINT(EM_DIAGRAM):   END;
283612    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283613    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
283614    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
283615    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
283616    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
283617    +END;
MPRINT(EM_DIAGRAM):   END;
283618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283619    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283621    +
283622    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283623    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283624    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283625    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283626    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283627    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283628    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283629    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283630    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283631    +end;
MPRINT(EM_DIAGRAM):   end;
283632    +else do;
MPRINT(EM_DIAGRAM):   else do;
283633    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283634    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283635    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283636    +   end;
MPRINT(EM_DIAGRAM):   end;
283637    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283638    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283639    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283640    +   end;
MPRINT(EM_DIAGRAM):   end;
283641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283642    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283643    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283644    +   end;
MPRINT(EM_DIAGRAM):   end;
283645    +end;
MPRINT(EM_DIAGRAM):   end;
283646    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283647    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
283648    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
283649    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
283650    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283651    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283652    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283653    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283654    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283655    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283656    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283657    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283658    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283659    +END;
MPRINT(EM_DIAGRAM):   END;
283660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283661    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283662    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283663    +END;
MPRINT(EM_DIAGRAM):   END;
283664    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283665    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283666    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283667    +END;
MPRINT(EM_DIAGRAM):   END;
283668    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283669    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283670    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283671    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283672    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283673    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283674    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283676    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283678    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283679    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283680    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283681    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283682    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283683    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283684    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283685    +END;
MPRINT(EM_DIAGRAM):   END;
283686    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283687    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283688    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283689    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283690    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
283691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283692    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
283693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283694    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
283695    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
283696    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
283697    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
283698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283699    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
283700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283701    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
283702    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
283703    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
283704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283705    +* Ensmbl54: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 5 of 6;
283706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283708    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
283709    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283710    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
283711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283712    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283713    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283714    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283715    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283716    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283717    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283718    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283719    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283720    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283721    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283722    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283723    +LENGTH _WARN_ $4
283724    +      F_DepVar  $ 12
283725    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283726    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283727    +
283728    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283729    +
283730    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283731    +
283732    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283733    +
283734    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
283735    +
283736    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
283737    +
283738    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
283739    +
283740    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283741    +
283742    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
283743    +
283744    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
283745    +
283746    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
283747    +
283748    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
283749    +
283750    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
283751    +
283752    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
283753    +
283754    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
283755    +
283756    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
283757    +
283758    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
283759    +
283760    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
283761    +
283762    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
283763    +
283764    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
283765    +
283766    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
283767    +
283768    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
283769    +
283770    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
283771    +
283772    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
283773    +
283774    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
283775    +
283776    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
283777    +
283778    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
283779    +
283780    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283781    +
283782    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283783    +
283784    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283785    +
283786    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283787    +
283788    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283789    +
283790    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283791    +
283792    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283793    +
283794    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283795    +
283796    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
283797    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
283798    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
283799    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
283800    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
283801    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
283802    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
283803    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
283804    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
283805    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283806    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283807    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283808    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283809    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283810    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283811    +end;
MPRINT(EM_DIAGRAM):   end;
283812    +else do;
MPRINT(EM_DIAGRAM):   else do;
283813    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
283814    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
283815    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283816    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
283817    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
283818    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
283819    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
283820    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
283821    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283822    +         end;
MPRINT(EM_DIAGRAM):   end;
283823    +         else do;
MPRINT(EM_DIAGRAM):   else do;
283824    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
283825    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
283826    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283827    +            end;
MPRINT(EM_DIAGRAM):   end;
283828    +         end;
MPRINT(EM_DIAGRAM):   end;
283829    +      end;
MPRINT(EM_DIAGRAM):   end;
283830    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283831    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
283832    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
283833    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283834    +         end;
MPRINT(EM_DIAGRAM):   end;
283835    +      end;
MPRINT(EM_DIAGRAM):   end;
283836    +   end;
MPRINT(EM_DIAGRAM):   end;
283837    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283838    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
283839    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
283840    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283841    +      end;
MPRINT(EM_DIAGRAM):   end;
283842    +      else do;
MPRINT(EM_DIAGRAM):   else do;
283843    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
283844    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
283845    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
283846    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
283847    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
283848    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
283849    +         end;
MPRINT(EM_DIAGRAM):   end;
283850    +      end;
MPRINT(EM_DIAGRAM):   end;
283851    +   end;
MPRINT(EM_DIAGRAM):   end;
283852    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
283853    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
283854    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
283855    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
283856    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
283857    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283858    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283859    +   end;
MPRINT(EM_DIAGRAM):   end;
283860    +end;
MPRINT(EM_DIAGRAM):   end;
283861    +
283862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283863    +*** Checking missing input Interval
283864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283865    +
283866    +IF NMISS(
283867    +   AcceptedCmpTotal ,
283868    +   Frq ,
283869    +   Mnt ,
283870    +   MntMeatProducts ,
283871    +   NumCatalogPurchases ,
283872    +   NumDealsPurchases ,
283873    +   NumWebVisitsMonth ,
283874    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
283875    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283876    +
283877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283878    +END;
MPRINT(EM_DIAGRAM):   END;
283879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283880    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
283881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283883    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283884    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283885    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283886    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283887    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283888    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283889    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
283890    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283891    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283892    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283893    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283894    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283895    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283896    +END;
MPRINT(EM_DIAGRAM):   END;
283897    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283898    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
283899    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283900    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
283901    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
283902    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283903    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
283904    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283905    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
283906    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283907    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
283908    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
283909    +   ELSE S_NumCatalogPurchases
283910    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
283911    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
283912    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
283913    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
283914    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
283915    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
283916    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
283917    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
283918    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
283919    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283920    +END;
MPRINT(EM_DIAGRAM):   END;
283921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283922    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
283923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283925    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
283926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283927    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283928    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
283929    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
283930    +          +    -1.92258561684999 * S_MntMeatProducts
283931    +          +     -1.7098915194593 * S_NumCatalogPurchases
283932    +          +    -0.73092398706652 * S_NumDealsPurchases
283933    +          +    -1.52371325097768 * S_NumWebVisitsMonth
283934    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
283935    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
283936    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
283937    +          +     3.63686708458831 * S_MntMeatProducts
283938    +          +     0.32632650897658 * S_NumCatalogPurchases
283939    +          +     1.27820262549135 * S_NumDealsPurchases
283940    +          +    -0.18941034658667 * S_NumWebVisitsMonth
283941    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
283942    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
283943    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
283944    +          +    -0.10252809999866 * S_MntMeatProducts
283945    +          +    -2.01730745054613 * S_NumCatalogPurchases
283946    +          +     0.36276273056202 * S_NumDealsPurchases
283947    +          +    -2.03441379397145 * S_NumWebVisitsMonth
283948    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
283949    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
283950    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
283951    +          +     8.03567059273376 * S_MntMeatProducts
283952    +          +     2.16664649845379 * S_NumCatalogPurchases
283953    +          +     0.84009978401032 * S_NumDealsPurchases
283954    +          +     0.11354933533503 * S_NumWebVisitsMonth
283955    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
283956    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
283957    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
283958    +          +     1.87107978843927 * S_MntMeatProducts
283959    +          +    -0.31123291719979 * S_NumCatalogPurchases
283960    +          +    -2.80886037303887 * S_NumDealsPurchases
283961    +          +     0.08829426076164 * S_NumWebVisitsMonth
283962    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
283963    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
283964    +          +     0.50838467240268 * Marital_StatusMarried
283965    +          +    -0.57765911295879 * Marital_StatusSingle
283966    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
283967    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
283968    +          +     0.03531168852657 * Marital_StatusMarried
283969    +          +    -0.34417109081648 * Marital_StatusSingle
283970    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
283971    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
283972    +          +      1.9516301625913 * Marital_StatusMarried
283973    +          +    -0.24904237582097 * Marital_StatusSingle
283974    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
283975    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
283976    +          +     0.06718550412505 * Marital_StatusMarried
283977    +          +    -0.16735434131197 * Marital_StatusSingle
283978    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
283979    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
283980    +          +    -1.79498797741807 * Marital_StatusMarried
283981    +          +     2.86341746904333 * Marital_StatusSingle
283982    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
283983    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
283984    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
283985    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
283986    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
283987    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
283988    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
283989    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
283990    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
283991    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
283992    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
283993    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
283994    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
283995    +END;
MPRINT(EM_DIAGRAM):   END;
283996    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283997    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
283998    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
283999    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
284000    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
284001    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
284002    +END;
MPRINT(EM_DIAGRAM):   END;
284003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284004    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
284005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284006    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284007    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
284008    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
284009    +          +    -0.19914740985847 * S_MntMeatProducts
284010    +          +    -0.96920717464092 * S_NumCatalogPurchases
284011    +          +    -1.68508588177508 * S_NumDealsPurchases
284012    +          +     -0.9404284924488 * S_NumWebVisitsMonth
284013    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
284014    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
284015    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
284016    +          +    -1.60286606361912 * S_MntMeatProducts
284017    +          +    -0.05010796315816 * S_NumCatalogPurchases
284018    +          +      1.1380574488234 * S_NumDealsPurchases
284019    +          +     0.25426721345204 * S_NumWebVisitsMonth
284020    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
284021    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
284022    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
284023    +          +     2.58979830897092 * S_MntMeatProducts
284024    +          +      1.2569773545009 * S_NumCatalogPurchases
284025    +          +     0.21119951191653 * S_NumDealsPurchases
284026    +          +    -0.40993456334326 * S_NumWebVisitsMonth
284027    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
284028    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
284029    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
284030    +          +     1.58324428521578 * S_MntMeatProducts
284031    +          +    -0.64140579988939 * S_NumCatalogPurchases
284032    +          +    -0.07557073365385 * S_NumDealsPurchases
284033    +          +     0.27159109297915 * S_NumWebVisitsMonth
284034    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
284035    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
284036    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
284037    +          +     0.02133290318048 * S_MntMeatProducts
284038    +          +    -0.37682732019302 * S_NumCatalogPurchases
284039    +          +     2.57483962426003 * S_NumDealsPurchases
284040    +          +    -0.76651867011773 * S_NumWebVisitsMonth
284041    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
284042    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
284043    +          +     1.00798219323102 * Marital_StatusMarried
284044    +          +     -1.3878630687005 * Marital_StatusSingle
284045    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
284046    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
284047    +          +    -0.99149540204741 * Marital_StatusMarried
284048    +          +    -0.22772928542301 * Marital_StatusSingle
284049    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
284050    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
284051    +          +     1.54170826840021 * Marital_StatusMarried
284052    +          +    -0.09937587953829 * Marital_StatusSingle
284053    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
284054    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
284055    +          +    -0.48775794259019 * Marital_StatusMarried
284056    +          +     0.87075561905397 * Marital_StatusSingle
284057    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
284058    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
284059    +          +     0.01260332236695 * Marital_StatusMarried
284060    +          +     1.18815076116703 * Marital_StatusSingle
284061    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
284062    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
284063    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
284064    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
284065    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
284066    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
284067    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284068    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284069    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
284070    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
284071    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
284072    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
284073    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
284074    +END;
MPRINT(EM_DIAGRAM):   END;
284075    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284076    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
284077    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
284078    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
284079    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
284080    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
284081    +END;
MPRINT(EM_DIAGRAM):   END;
284082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284083    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
284084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284085    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284086    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
284087    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
284088    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
284089    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
284090    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
284091    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
284092    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
284093    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
284094    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
284095    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
284096    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
284097    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
284098    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
284099    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
284100    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
284101    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
284102    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
284103    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
284104    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
284105    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
284106    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
284107    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
284108    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
284109    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
284110    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
284111    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
284112    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
284113    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
284114    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
284115    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
284116    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
284117    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
284118    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
284119    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
284120    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
284121    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284122    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284123    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
284124    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
284125    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
284126    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
284127    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
284128    +END;
MPRINT(EM_DIAGRAM):   END;
284129    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284130    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
284131    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
284132    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
284133    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
284134    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
284135    +END;
MPRINT(EM_DIAGRAM):   END;
284136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284137    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
284138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284139    +
284140    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
284141    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
284142    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
284143    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
284144    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
284145    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284146    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
284147    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
284148    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
284149    +end;
MPRINT(EM_DIAGRAM):   end;
284150    +else do;
MPRINT(EM_DIAGRAM):   else do;
284151    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
284152    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
284153    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
284154    +   end;
MPRINT(EM_DIAGRAM):   end;
284155    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
284156    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
284157    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
284158    +   end;
MPRINT(EM_DIAGRAM):   end;
284159    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284160    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
284161    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
284162    +   end;
MPRINT(EM_DIAGRAM):   end;
284163    +end;
MPRINT(EM_DIAGRAM):   end;
284164    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284165    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
284166    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
284167    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
284168    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
284169    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
284170    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
284171    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284172    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
284173    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
284174    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
284175    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
284176    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
284177    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
284178    +END;
MPRINT(EM_DIAGRAM):   END;
284179    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284180    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
284181    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
284182    +END;
MPRINT(EM_DIAGRAM):   END;
284183    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
284184    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
284185    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
284186    +END;
MPRINT(EM_DIAGRAM):   END;
284187    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
284188    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
284189    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
284190    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
284191    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
284192    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
284193    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
284194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284195    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
284196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284197    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
284198    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
284199    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
284200    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
284201    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
284202    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
284203    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
284204    +END;
MPRINT(EM_DIAGRAM):   END;
284205    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284206    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
284207    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284208    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
284209    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
284210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284211    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
284212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284213    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
284214    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
284215    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
284216    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
284217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284218    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
284219    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284220    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
284221    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
284222    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
284223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284224    +* Ensmbl54: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 6 of 6;
284225    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284226    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284227    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
284228    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
284229    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
284230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284231    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
284232    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
284233    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
284234    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
284235    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
284236    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
284237    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
284238    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
284239    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
284240    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
284241    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
284242    +LENGTH _WARN_ $4
284243    +      F_DepVar  $ 12
284244    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
284245    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
284246    +
284247    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
284248    +
284249    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
284250    +
284251    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
284252    +
284253    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
284254    +
284255    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
284256    +
284257    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
284258    +
284259    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
284260    +
284261    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
284262    +
284263    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
284264    +
284265    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
284266    +
284267    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
284268    +
284269    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
284270    +
284271    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
284272    +
284273    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
284274    +
284275    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
284276    +
284277    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
284278    +
284279    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
284280    +
284281    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
284282    +
284283    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
284284    +
284285    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
284286    +
284287    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
284288    +
284289    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
284290    +
284291    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
284292    +
284293    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
284294    +
284295    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
284296    +
284297    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
284298    +
284299    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
284300    +
284301    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
284302    +
284303    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
284304    +
284305    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
284306    +
284307    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
284308    +
284309    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
284310    +
284311    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
284312    +
284313    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
284314    +
284315    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
284316    +
284317    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
284318    +
284319    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
284320    +
284321    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
284322    +
284323    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
284324    +
284325    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
284326    +
284327    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
284328    +
284329    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
284330    +
284331    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
284332    +
284333    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
284334    +
284335    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
284336    +
284337    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
284338    +
284339    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
284340    +
284341    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
284342    +
284343    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
284344    +
284345    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
284346    +
284347    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
284348    +
284349    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
284350    +
284351    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
284352    +
284353    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
284354    +
284355    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
284356    +
284357    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
284358    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
284359    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
284360    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
284361    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
284362    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
284363    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
284364    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
284365    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
284366    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
284367    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
284368    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
284369    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
284370    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
284371    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284372    +end;
MPRINT(EM_DIAGRAM):   end;
284373    +else do;
MPRINT(EM_DIAGRAM):   else do;
284374    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
284375    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
284376    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284377    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
284378    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
284379    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
284380    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
284381    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
284382    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
284383    +         end;
MPRINT(EM_DIAGRAM):   end;
284384    +         else do;
MPRINT(EM_DIAGRAM):   else do;
284385    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
284386    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
284387    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
284388    +            end;
MPRINT(EM_DIAGRAM):   end;
284389    +         end;
MPRINT(EM_DIAGRAM):   end;
284390    +      end;
MPRINT(EM_DIAGRAM):   end;
284391    +      else do;
MPRINT(EM_DIAGRAM):   else do;
284392    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
284393    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
284394    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
284395    +         end;
MPRINT(EM_DIAGRAM):   end;
284396    +      end;
MPRINT(EM_DIAGRAM):   end;
284397    +   end;
MPRINT(EM_DIAGRAM):   end;
284398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284399    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
284400    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
284401    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
284402    +      end;
MPRINT(EM_DIAGRAM):   end;
284403    +      else do;
MPRINT(EM_DIAGRAM):   else do;
284404    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
284405    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
284406    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
284407    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
284408    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
284409    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
284410    +         end;
MPRINT(EM_DIAGRAM):   end;
284411    +      end;
MPRINT(EM_DIAGRAM):   end;
284412    +   end;
MPRINT(EM_DIAGRAM):   end;
284413    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
284414    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
284415    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
284416    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
284417    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
284418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
284419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284420    +   end;
MPRINT(EM_DIAGRAM):   end;
284421    +end;
MPRINT(EM_DIAGRAM):   end;
284422    +
284423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284424    +*** Checking missing input Interval
284425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
284426    +
284427    +IF NMISS(
284428    +   AcceptedCmpTotal ,
284429    +   Frq ,
284430    +   Mnt ,
284431    +   MntMeatProducts ,
284432    +   NumCatalogPurchases ,
284433    +   NumDealsPurchases ,
284434    +   NumWebVisitsMonth ,
284435    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
284436    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
284437    +
284438    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284439    +END;
MPRINT(EM_DIAGRAM):   END;
284440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284441    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
284442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284443    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284444    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
284445    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
284446    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
284447    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284448    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284449    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
284450    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
284451    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
284452    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
284453    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
284454    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
284455    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
284456    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284457    +END;
MPRINT(EM_DIAGRAM):   END;
284458    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284459    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
284460    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
284461    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
284462    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
284463    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
284464    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
284465    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284466    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
284467    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284468    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
284469    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
284470    +   ELSE S_NumCatalogPurchases
284471    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
284472    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
284473    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
284474    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
284475    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
284476    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
284477    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
284478    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
284479    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
284480    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284481    +END;
MPRINT(EM_DIAGRAM):   END;
284482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284483    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
284484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284486    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
284487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284488    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284489    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
284490    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
284491    +          +     2.79168320854924 * S_MntMeatProducts
284492    +          +    -1.09894266401589 * S_NumCatalogPurchases
284493    +          +    -0.32966417347551 * S_NumDealsPurchases
284494    +          +    -0.72195034767343 * S_NumWebVisitsMonth
284495    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
284496    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
284497    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
284498    +          +     9.02469430152189 * S_MntMeatProducts
284499    +          +     1.42644521887241 * S_NumCatalogPurchases
284500    +          +      0.6475058577302 * S_NumDealsPurchases
284501    +          +     0.08123225110233 * S_NumWebVisitsMonth
284502    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
284503    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
284504    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
284505    +          +     5.40567027331821 * S_MntMeatProducts
284506    +          +     0.21404551755506 * S_NumCatalogPurchases
284507    +          +    -3.79184634796332 * S_NumDealsPurchases
284508    +          +     0.64355102802571 * S_NumWebVisitsMonth
284509    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
284510    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
284511    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
284512    +          +     2.35287601364019 * S_MntMeatProducts
284513    +          +    -3.27198648531912 * S_NumCatalogPurchases
284514    +          +    -0.16046880718311 * S_NumDealsPurchases
284515    +          +     -3.7025327830273 * S_NumWebVisitsMonth
284516    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
284517    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
284518    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
284519    +          +     8.39312647460766 * S_MntMeatProducts
284520    +          +     3.07026872536137 * S_NumCatalogPurchases
284521    +          +     2.03045608124213 * S_NumDealsPurchases
284522    +          +     3.86452915398414 * S_NumWebVisitsMonth
284523    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
284524    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
284525    +          +     0.14979485299347 * Marital_StatusMarried
284526    +          +    -0.09166445391312 * Marital_StatusSingle
284527    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
284528    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
284529    +          +      0.1646484112393 * Marital_StatusMarried
284530    +          +     0.01074681811884 * Marital_StatusSingle
284531    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
284532    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
284533    +          +    -0.28313626645981 * Marital_StatusMarried
284534    +          +      2.8257446964988 * Marital_StatusSingle
284535    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
284536    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
284537    +          +     3.05775024202559 * Marital_StatusMarried
284538    +          +    -0.23539571945671 * Marital_StatusSingle
284539    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
284540    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
284541    +          +    -0.48359916542157 * Marital_StatusMarried
284542    +          +    -1.64182316823237 * Marital_StatusSingle
284543    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
284544    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
284545    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
284546    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
284547    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
284548    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
284549    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
284550    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
284551    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284552    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
284553    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
284554    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
284555    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
284556    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
284557    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
284558    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
284559    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
284560    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
284561    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
284562    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
284563    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
284564    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
284565    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
284566    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
284567    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
284568    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
284569    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
284570    +END;
MPRINT(EM_DIAGRAM):   END;
284571    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284572    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
284573    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
284574    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
284575    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
284576    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
284577    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
284578    +END;
MPRINT(EM_DIAGRAM):   END;
284579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284580    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
284581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284583    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
284584    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
284585    +          +     0.55999885697493 * S_MntMeatProducts
284586    +          +      0.2225207563207 * S_NumCatalogPurchases
284587    +          +     -1.0233439835205 * S_NumDealsPurchases
284588    +          +    -0.35430585878397 * S_NumWebVisitsMonth
284589    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
284590    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
284591    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
284592    +          +    -1.04508919964747 * S_MntMeatProducts
284593    +          +     -0.6758665249546 * S_NumCatalogPurchases
284594    +          +    -0.24215201937497 * S_NumDealsPurchases
284595    +          +    -1.02736823453312 * S_NumWebVisitsMonth
284596    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
284597    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
284598    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
284599    +          +    -3.97854305593999 * S_MntMeatProducts
284600    +          +    -2.05331728407593 * S_NumCatalogPurchases
284601    +          +    -0.48841403720827 * S_NumDealsPurchases
284602    +          +     0.25411498590567 * S_NumWebVisitsMonth
284603    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
284604    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
284605    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
284606    +          +     -0.7071400781557 * S_MntMeatProducts
284607    +          +     1.20780208787296 * S_NumCatalogPurchases
284608    +          +    -0.58152407834402 * S_NumDealsPurchases
284609    +          +     2.15567925539399 * S_NumWebVisitsMonth
284610    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
284611    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
284612    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
284613    +          +    -1.07023271439686 * S_MntMeatProducts
284614    +          +     0.31952847185507 * S_NumCatalogPurchases
284615    +          +     0.97232557455358 * S_NumDealsPurchases
284616    +          +     1.40227284681788 * S_NumWebVisitsMonth
284617    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
284618    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
284619    +          +    -1.54860787754125 * Marital_StatusMarried
284620    +          +     3.07164083530731 * Marital_StatusSingle
284621    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
284622    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
284623    +          +     1.93404037878036 * Marital_StatusMarried
284624    +          +    -1.33159061927866 * Marital_StatusSingle
284625    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
284626    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
284627    +          +    -1.20603561095549 * Marital_StatusMarried
284628    +          +     1.40927693179184 * Marital_StatusSingle
284629    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
284630    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
284631    +          +     -0.1442863204197 * Marital_StatusMarried
284632    +          +     0.60523055771734 * Marital_StatusSingle
284633    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
284634    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
284635    +          +     0.09024082077945 * Marital_StatusMarried
284636    +          +     0.46315219527454 * Marital_StatusSingle
284637    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
284638    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
284639    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
284640    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
284641    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
284642    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
284643    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
284644    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
284645    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284646    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
284647    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
284648    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
284649    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
284650    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
284651    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
284652    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
284653    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
284654    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
284655    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
284656    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
284657    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
284658    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
284659    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
284660    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
284661    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
284662    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
284663    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
284664    +END;
MPRINT(EM_DIAGRAM):   END;
284665    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284666    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
284667    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
284668    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
284669    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
284670    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
284671    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
284672    +END;
MPRINT(EM_DIAGRAM):   END;
284673    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284674    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
284675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284676    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284677    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
284678    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
284679    +          +    -1.02461177883701 * S_MntMeatProducts
284680    +          +     0.58245198640098 * S_NumCatalogPurchases
284681    +          +    -0.23780276328844 * S_NumDealsPurchases
284682    +          +     1.28202459687231 * S_NumWebVisitsMonth
284683    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
284684    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
284685    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
284686    +          +     0.13875330330852 * S_MntMeatProducts
284687    +          +    -0.22996544763814 * S_NumCatalogPurchases
284688    +          +    -0.36599639965399 * S_NumDealsPurchases
284689    +          +     1.99081506581768 * S_NumWebVisitsMonth
284690    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
284691    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
284692    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
284693    +          +     0.94472031892058 * S_MntMeatProducts
284694    +          +     0.27511909854912 * S_NumCatalogPurchases
284695    +          +    -0.55526545857693 * S_NumDealsPurchases
284696    +          +    -0.61544688091302 * S_NumWebVisitsMonth
284697    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
284698    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
284699    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
284700    +          +     1.61403840093612 * S_MntMeatProducts
284701    +          +    -0.34382576245292 * S_NumCatalogPurchases
284702    +          +     0.70213159483637 * S_NumDealsPurchases
284703    +          +    -0.39731145628175 * S_NumWebVisitsMonth
284704    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
284705    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
284706    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
284707    +          +    -0.33974847531229 * S_MntMeatProducts
284708    +          +     1.74350962571519 * S_NumCatalogPurchases
284709    +          +     0.41098583446208 * S_NumDealsPurchases
284710    +          +    -0.66305298743409 * S_NumWebVisitsMonth
284711    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
284712    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
284713    +          +    -0.29510060772746 * Marital_StatusMarried
284714    +          +     1.74124353401891 * Marital_StatusSingle
284715    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
284716    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
284717    +          +    -0.61203463567014 * Marital_StatusMarried
284718    +          +     1.95705767804118 * Marital_StatusSingle
284719    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
284720    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
284721    +          +      1.7151906515185 * Marital_StatusMarried
284722    +          +     0.70376524929742 * Marital_StatusSingle
284723    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
284724    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
284725    +          +    -1.27088213578872 * Marital_StatusMarried
284726    +          +    -0.91253966593459 * Marital_StatusSingle
284727    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
284728    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
284729    +          +     -0.5308059771847 * Marital_StatusMarried
284730    +          +    -0.11208078645904 * Marital_StatusSingle
284731    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
284732    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
284733    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
284734    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
284735    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
284736    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
284737    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
284738    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
284739    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284740    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
284741    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
284742    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
284743    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
284744    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
284745    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
284746    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
284747    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
284748    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
284749    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
284750    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
284751    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
284752    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
284753    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
284754    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
284755    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
284756    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
284757    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
284758    +END;
MPRINT(EM_DIAGRAM):   END;
284759    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284760    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
284761    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
284762    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
284763    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
284764    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
284765    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
284766    +END;
MPRINT(EM_DIAGRAM):   END;
284767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284768    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
284769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284770    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284771    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
284772    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
284773    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
284774    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
284775    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
284776    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
284777    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
284778    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
284779    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
284780    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
284781    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
284782    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
284783    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
284784    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
284785    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
284786    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
284787    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
284788    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
284789    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
284790    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
284791    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
284792    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
284793    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
284794    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
284795    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
284796    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
The SAS System
 
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
284797    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
284798    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
284799    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
284800    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
284801    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
284802    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
284803    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
284804    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
284805    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
284806    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
284807    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
284808    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
284809    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
284810    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
284811    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
284812    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
284813    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
284814    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
284815    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
284816    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
284817    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
284818    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
284819    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
284820    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
284821    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
284822    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
284823    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
284824    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
284825    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
284826    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
284827    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
284828    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
284829    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
284830    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
284831    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
284832    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
284833    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
284834    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
284835    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
284836    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
284837    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
284838    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
284839    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
284840    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
284841    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
284842    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
284843    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284844    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284845    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
284846    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
284847    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
284848    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
284849    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
284850    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
284851    +END;
MPRINT(EM_DIAGRAM):   END;
284852    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284853    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
284854    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
284855    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
284856    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
284857    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
284858    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
284859    +END;
MPRINT(EM_DIAGRAM):   END;
284860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284861    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
284862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284863    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284864    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
284865    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
284866    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
284867    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
284868    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
284869    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
284870    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
284871    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
284872    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
284873    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
284874    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
284875    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
284876    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
284877    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
284878    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
284879    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
284880    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
284881    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
284882    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
284883    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
284884    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
284885    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
284886    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
284887    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
284888    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
284889    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
284890    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
284891    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
284892    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
284893    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
284894    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
284895    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
284896    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
284897    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
284898    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
284899    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
284900    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
284901    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
284902    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
284903    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
284904    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
284905    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
284906    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
284907    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
284908    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
284909    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
284910    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
284911    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
284912    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
284913    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
284914    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
284915    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
284916    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
284917    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
284918    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
284919    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
284920    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
284921    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
284922    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
284923    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
284924    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
284925    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
284926    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
284927    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
284928    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
284929    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
284930    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
284931    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
284932    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
284933    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
284934    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
284935    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
284936    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284937    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284938    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
284939    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
284940    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
284941    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
284942    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
284943    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
284944    +END;
MPRINT(EM_DIAGRAM):   END;
284945    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284946    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
284947    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
284948    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
284949    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
284950    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
284951    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
284952    +END;
MPRINT(EM_DIAGRAM):   END;
284953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284954    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
284955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284956    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284957    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
284958    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
284959    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
284960    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
284961    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
284962    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
284963    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
284964    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
284965    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
284966    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
284967    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
284968    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
284969    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
284970    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
284971    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
284972    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
284973    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
284974    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
284975    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
284976    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
284977    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
284978    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
284979    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
284980    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
284981    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
284982    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
284983    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
284984    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
284985    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
284986    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
284987    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
284988    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
284989    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
284990    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
284991    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
284992    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
284993    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
284994    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
284995    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
284996    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
284997    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
284998    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
284999    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
285000    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
285001    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
285002    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
285003    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
285004    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
285005    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
285006    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
285007    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
285008    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
285009    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
285010    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
285011    +END;
MPRINT(EM_DIAGRAM):   END;
285012    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285013    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
285014    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
285015    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
285016    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
285017    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
285018    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
285019    +END;
MPRINT(EM_DIAGRAM):   END;
285020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285021    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
285022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285023    +
285024    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
285025    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
285026    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
285027    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
285028    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
285029    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285030    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
285031    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
285032    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
285033    +end;
MPRINT(EM_DIAGRAM):   end;
285034    +else do;
MPRINT(EM_DIAGRAM):   else do;
285035    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
285036    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
285037    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
285038    +   end;
MPRINT(EM_DIAGRAM):   end;
285039    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
285040    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
285041    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
285042    +   end;
MPRINT(EM_DIAGRAM):   end;
285043    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285044    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
285045    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
285046    +   end;
MPRINT(EM_DIAGRAM):   end;
285047    +end;
MPRINT(EM_DIAGRAM):   end;
285048    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285049    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
285050    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
285051    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
285052    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
285053    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
285054    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
285055    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
285056    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
285057    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
285058    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
285059    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
285060    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
285061    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
285062    +END;
MPRINT(EM_DIAGRAM):   END;
285063    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285064    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
285065    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
285066    +END;
MPRINT(EM_DIAGRAM):   END;
285067    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
285068    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
285069    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
285070    +END;
MPRINT(EM_DIAGRAM):   END;
285071    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
285072    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
285073    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
285074    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
285075    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
285076    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
285077    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
285078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285079    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
285080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285081    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
285082    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
285083    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
285084    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
285085    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
285086    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
285087    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
285088    +END;
MPRINT(EM_DIAGRAM):   END;
285089    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285090    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
285091    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285092    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
285093    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
285094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285095    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
285096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285097    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
285098    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
285099    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
285100    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
285101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285102    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
285103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285104    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
285105    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
285106    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
285107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285108    +* Ensmbl54: Average Posteriors of 6 models;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Average Posteriors of 6 models;
285109    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285110    +P_DepVar1 = (
285111    +AutoNeural37_P_DepVar1 +
285112    +AutoNeural38_P_DepVar1 +
285113    +AutoNeural39_P_DepVar1 +
285114    +AutoNeural40_P_DepVar1 +
285115    +AutoNeural34_P_DepVar1 +
285116    +AutoNeural35_P_DepVar1
285117    +)/6;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural37_P_DepVar1 + AutoNeural38_P_DepVar1 +
AutoNeural39_P_DepVar1 + AutoNeural40_P_DepVar1 + AutoNeural34_P_DepVar1 +
AutoNeural35_P_DepVar1 )/6;
285118    +P_DepVar0 = (
285119    +AutoNeural37_P_DepVar0 +
285120    +AutoNeural38_P_DepVar0 +
285121    +AutoNeural39_P_DepVar0 +
285122    +AutoNeural40_P_DepVar0 +
285123    +AutoNeural34_P_DepVar0 +
285124    +AutoNeural35_P_DepVar0
285125    +)/6;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural37_P_DepVar0 + AutoNeural38_P_DepVar0 +
AutoNeural39_P_DepVar0 + AutoNeural40_P_DepVar0 + AutoNeural34_P_DepVar0 +
AutoNeural35_P_DepVar0 )/6;
285126    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285127    +* Ensmbl54: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Classification Vars;
285128    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285129    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
285130    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
285131    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
285132    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
285133    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
285134    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
285135    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
285136    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
285137    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
285138    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
285139    +end;
MPRINT(EM_DIAGRAM):   end;
285140    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
285141    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
285142    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
285143    +end;
MPRINT(EM_DIAGRAM):   end;
285144    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285146    +* Ensmbl54: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Producing Unformatted variable;
285147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285148    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
285149    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
285150    +else
285151    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
285152    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285153    +* Ensmbl54: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing _WARN_ Variable;
285154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285155    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
285156    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
285157    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
285158    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285158   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285159    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285159   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285160    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285160   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285161    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285161   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285162    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285162   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285163    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285163   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285164    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285164   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285165    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285165   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285166    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285166   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285167    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285167   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285168    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285168   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285169    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285169   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285170    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285170   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285171    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285171   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285172    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285172   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285173    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285173   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285174    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285174   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285175    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285175   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285176    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285176   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285177    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285177   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285178    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
285178   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
285179    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
285179   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
285180    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
285180   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
285181    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
285181   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
285182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285183    +* Ensmbl54: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Residual Vars;
285184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285185    +if
285186    +F_DepVar NE '1'
285187    +AND F_DepVar NE '0'
285188    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
285189    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
285190    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
285191    +end;
MPRINT(EM_DIAGRAM):   end;
285192    +else do;
MPRINT(EM_DIAGRAM):   else do;
285193    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
285194    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
285195    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
285196    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
285197    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
285198    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
285199    +END;
MPRINT(EM_DIAGRAM):   END;
285200    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285201     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL54_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
285202     quit;
285203     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
285204     filename emflow
285204   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring AUTONEURAL37_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285205     *------------------------------------------------------------*;
285206     * Ensmbl54: Scoring AUTONEURAL37_VALIDATE data;
285207     *------------------------------------------------------------*;
285208     data EMWS8.Ensmbl54_VALIDATE
285209     / view=EMWS8.Ensmbl54_VALIDATE
285210     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_VALIDATE / view=EMWS8.Ensmbl54_VALIDATE ;
285211     set EMWS8.AutoNeural37_VALIDATE
285212     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_VALIDATE ;
285213     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMFLOWSCORE.sas.
285214    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285215    +* Ensmbl54: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Combine model for DepVar;
285216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285217    +* Ensmbl54: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 1 of 6;
285218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285219    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285220    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
285221    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
285222    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
285223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285225    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
285226    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
285227    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
285228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285229    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285230    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
285231    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
285232    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
285233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285234    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285235    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
285236    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
285237    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
285238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285239    +
285240    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
285241    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
285241   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
285242    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
285243    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
285244    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
285245    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
285246    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
285247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285248    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
285249    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
285250    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
285251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285253    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
285254    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285255    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
285256    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
285257    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
285258    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285259    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
285260    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
285261    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
285262    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285264    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
285265    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
285266    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
285267    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285268    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285269    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
285270    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
285271    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
285272    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285273    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285274    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
285275    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285276    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
285277    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
285278    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
285279    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
285280    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
285281    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
285282    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
285283    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
285284    +LENGTH _WARN_ $4
285285    +      F_DepVar  $ 12
285286    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
285287    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
285288    +
285289    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
285290    +
285291    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
285292    +
285293    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
285294    +
285295    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
285296    +
285297    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
285298    +
285299    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
285300    +
285301    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
285302    +
285303    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
285304    +
285305    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
285306    +
285307    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
285308    +
285309    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
285310    +
285311    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
285312    +
285313    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
285314    +
285315    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
285316    +
285317    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
285318    +
285319    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
285320    +
285321    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
285322    +
285323    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
285324    +
285325    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
285326    +
285327    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285328    +
285329    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
285330    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
285331    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
285332    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
285333    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
285334    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
285335    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
285336    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
285337    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
285338    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
285339    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
285340    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
285341    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
285342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285344    +end;
MPRINT(EM_DIAGRAM):   end;
285345    +else do;
MPRINT(EM_DIAGRAM):   else do;
285346    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
285347    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
285348    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285349    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
285350    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
285351    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
285352    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
285353    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
285354    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285355    +         end;
MPRINT(EM_DIAGRAM):   end;
285356    +         else do;
MPRINT(EM_DIAGRAM):   else do;
285357    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
285358    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
285359    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285360    +            end;
MPRINT(EM_DIAGRAM):   end;
285361    +         end;
MPRINT(EM_DIAGRAM):   end;
285362    +      end;
MPRINT(EM_DIAGRAM):   end;
285363    +      else do;
MPRINT(EM_DIAGRAM):   else do;
285364    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
285365    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
285366    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285367    +         end;
MPRINT(EM_DIAGRAM):   end;
285368    +      end;
MPRINT(EM_DIAGRAM):   end;
285369    +   end;
MPRINT(EM_DIAGRAM):   end;
285370    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285371    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
285372    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
285373    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285374    +      end;
MPRINT(EM_DIAGRAM):   end;
285375    +      else do;
MPRINT(EM_DIAGRAM):   else do;
285376    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
285377    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
285378    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
285379    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
285380    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
285381    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285382    +         end;
MPRINT(EM_DIAGRAM):   end;
285383    +      end;
MPRINT(EM_DIAGRAM):   end;
285384    +   end;
MPRINT(EM_DIAGRAM):   end;
285385    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
285386    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
285387    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
285388    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
285389    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
285390    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285391    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285392    +   end;
MPRINT(EM_DIAGRAM):   end;
285393    +end;
MPRINT(EM_DIAGRAM):   end;
285394    +
285395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285396    +*** Checking missing input Interval
285397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
285398    +
285399    +IF NMISS(
285400    +   AcceptedCmpTotal ,
285401    +   Frq ,
285402    +   Mnt ,
285403    +   MntMeatProducts ,
285404    +   NumCatalogPurchases ,
285405    +   NumDealsPurchases ,
285406    +   NumWebVisitsMonth ,
285407    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
285408    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
285409    +
285410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285411    +END;
MPRINT(EM_DIAGRAM):   END;
285412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285413    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
285414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285415    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285416    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285417    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
285418    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285419    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285420    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285421    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
285422    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
285423    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
285424    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
285425    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
285426    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
285427    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
285428    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285429    +END;
MPRINT(EM_DIAGRAM):   END;
285430    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285431    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
285432    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285433    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
285434    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
285435    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285436    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
285437    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285438    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
285439    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285440    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
285441    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
285442    +   ELSE S_NumCatalogPurchases
285443    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
285444    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
285445    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
285446    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
285447    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
285448    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
285449    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
285450    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
285451    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
285452    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285453    +END;
MPRINT(EM_DIAGRAM):   END;
285454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285455    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
285456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285458    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
285459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285460    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285461    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
285462    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
285463    +          +     6.08901143667375 * S_MntMeatProducts
285464    +          +     2.21464286693249 * S_NumCatalogPurchases
285465    +          +     0.88693497635794 * S_NumDealsPurchases
285466    +          +    -0.16352347343851 * S_NumWebVisitsMonth
285467    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
285468    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
285469    +          +     0.97693281807676 * Marital_StatusMarried
285470    +          +    -0.47353913752833 * Marital_StatusSingle
285471    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
285472    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
285473    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285474    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285475    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
285476    +END;
MPRINT(EM_DIAGRAM):   END;
285477    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285478    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
285479    +END;
MPRINT(EM_DIAGRAM):   END;
285480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285481    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
285482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285483    +
285484    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
285485    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
285486    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
285487    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
285488    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
285489    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285490    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
285491    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
285492    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
285493    +end;
MPRINT(EM_DIAGRAM):   end;
285494    +else do;
MPRINT(EM_DIAGRAM):   else do;
285495    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
285496    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
285497    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
285498    +   end;
MPRINT(EM_DIAGRAM):   end;
285499    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
285500    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
285501    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
285502    +   end;
MPRINT(EM_DIAGRAM):   end;
285503    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285504    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
285505    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
285506    +   end;
MPRINT(EM_DIAGRAM):   end;
285507    +end;
MPRINT(EM_DIAGRAM):   end;
285508    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285509    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
285510    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
285511    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
285512    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
285513    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
285514    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
285515    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
285516    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
285517    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
285518    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
285519    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
285520    +END;
MPRINT(EM_DIAGRAM):   END;
285521    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285522    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
285523    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
285524    +END;
MPRINT(EM_DIAGRAM):   END;
285525    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
285526    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
285527    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
285528    +END;
MPRINT(EM_DIAGRAM):   END;
285529    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
285530    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
285531    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
285532    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
285533    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
285534    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
285535    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
285536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285537    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
285538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285539    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
285540    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
285541    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
285542    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
285543    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
285544    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
285545    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
285546    +END;
MPRINT(EM_DIAGRAM):   END;
285547    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285548    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
285549    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285550    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
285551    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
285552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285553    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
285554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285555    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
285556    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
285557    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
285558    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
285559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285560    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
285561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285562    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
285563    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
285564    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
285565    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285566    +* Ensmbl54: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 2 of 6;
285567    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285569    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
285570    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
285571    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
285572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285573    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285574    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
285575    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285576    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
285577    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
285578    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
285579    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
285580    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
285581    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
285582    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
285583    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
285584    +LENGTH _WARN_ $4
285585    +      F_DepVar  $ 12
285586    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
285587    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
285588    +
285589    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
285590    +
285591    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
285592    +
285593    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
285594    +
285595    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
285596    +
285597    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
285598    +
285599    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
285600    +
285601    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
285602    +
285603    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
285604    +
285605    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
285606    +
285607    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
285608    +
285609    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
285610    +
285611    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
285612    +
285613    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
285614    +
285615    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
285616    +
285617    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
285618    +
285619    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
285620    +
285621    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
285622    +
285623    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
285624    +
285625    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
285626    +
285627    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
285628    +
285629    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
285630    +
285631    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
285632    +
285633    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
285634    +
285635    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
285636    +
285637    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
285638    +
285639    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
285640    +
285641    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
285642    +
285643    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
285644    +
285645    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
285646    +
285647    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
285648    +
285649    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
285650    +
285651    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
285652    +
285653    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
285654    +
285655    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
285656    +
285657    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
285658    +
285659    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
285660    +
285661    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
285662    +
285663    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
285664    +
285665    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285666    +
285667    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
285668    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
285669    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
285670    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
285671    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
285672    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
285673    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
285674    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
285675    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
285676    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
285677    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
285678    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
285679    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
285680    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285682    +end;
MPRINT(EM_DIAGRAM):   end;
285683    +else do;
MPRINT(EM_DIAGRAM):   else do;
285684    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
285685    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
285686    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285687    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
285688    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
285689    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
285690    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
285691    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
285692    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285693    +         end;
MPRINT(EM_DIAGRAM):   end;
285694    +         else do;
MPRINT(EM_DIAGRAM):   else do;
285695    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
285696    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
285697    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285698    +            end;
MPRINT(EM_DIAGRAM):   end;
285699    +         end;
MPRINT(EM_DIAGRAM):   end;
285700    +      end;
MPRINT(EM_DIAGRAM):   end;
285701    +      else do;
MPRINT(EM_DIAGRAM):   else do;
285702    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
285703    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
285704    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285705    +         end;
MPRINT(EM_DIAGRAM):   end;
285706    +      end;
MPRINT(EM_DIAGRAM):   end;
285707    +   end;
MPRINT(EM_DIAGRAM):   end;
285708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285709    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
285710    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
285711    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285712    +      end;
MPRINT(EM_DIAGRAM):   end;
285713    +      else do;
MPRINT(EM_DIAGRAM):   else do;
285714    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
285715    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
285716    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
285717    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
285718    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
285719    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
285720    +         end;
MPRINT(EM_DIAGRAM):   end;
285721    +      end;
MPRINT(EM_DIAGRAM):   end;
285722    +   end;
MPRINT(EM_DIAGRAM):   end;
285723    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
285724    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
285725    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
285726    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
285727    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
285728    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285729    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285730    +   end;
MPRINT(EM_DIAGRAM):   end;
285731    +end;
MPRINT(EM_DIAGRAM):   end;
285732    +
285733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285734    +*** Checking missing input Interval
285735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
285736    +
285737    +IF NMISS(
285738    +   AcceptedCmpTotal ,
285739    +   Frq ,
285740    +   Mnt ,
285741    +   MntMeatProducts ,
285742    +   NumCatalogPurchases ,
285743    +   NumDealsPurchases ,
285744    +   NumWebVisitsMonth ,
285745    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
285746    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
285747    +
285748    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285749    +END;
MPRINT(EM_DIAGRAM):   END;
285750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285751    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
285752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285754    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285755    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
285756    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285757    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285758    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285759    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
285760    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
285761    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
285762    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
285763    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
285764    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
285765    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
285766    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285767    +END;
MPRINT(EM_DIAGRAM):   END;
285768    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285769    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
285770    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285771    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
285772    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
285773    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285774    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
285775    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285776    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
285777    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285778    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
285779    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
285780    +   ELSE S_NumCatalogPurchases
285781    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
285782    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
285783    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
285784    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
285785    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
285786    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
285787    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
285788    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
285789    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
285790    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285791    +END;
MPRINT(EM_DIAGRAM):   END;
285792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285793    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
285794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285796    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
285797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285798    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285799    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
285800    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
285801    +          +     3.02405267314398 * S_MntMeatProducts
285802    +          +     0.25422172488707 * S_NumCatalogPurchases
285803    +          +     0.25977266371328 * S_NumDealsPurchases
285804    +          +    -0.26865365728773 * S_NumWebVisitsMonth
285805    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
285806    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
285807    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
285808    +          +    -0.64419071408502 * S_MntMeatProducts
285809    +          +    -0.49060224303044 * S_NumCatalogPurchases
285810    +          +    -0.04840762943457 * S_NumDealsPurchases
285811    +          +     -0.7656247386051 * S_NumWebVisitsMonth
285812    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
285813    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
285814    +          +    -0.05888536499281 * Marital_StatusMarried
285815    +          +    -0.22627441829205 * Marital_StatusSingle
285816    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
285817    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
285818    +          +     0.82536605771339 * Marital_StatusMarried
285819    +          +    -0.97196770004098 * Marital_StatusSingle
285820    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
285821    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
285822    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
285823    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285824    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285825    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
285826    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
285827    +END;
MPRINT(EM_DIAGRAM):   END;
285828    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285829    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
285830    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
285831    +END;
MPRINT(EM_DIAGRAM):   END;
285832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285833    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
285834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285835    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285836    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
285837    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
285838    +          +    -1.52187144029368 * S_MntMeatProducts
285839    +          +    -0.17233011764417 * S_NumCatalogPurchases
285840    +          +     0.08681674245114 * S_NumDealsPurchases
285841    +          +     0.13308256651831 * S_NumWebVisitsMonth
285842    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
285843    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
285844    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
285845    +          +     0.66187267823731 * S_MntMeatProducts
285846    +          +     1.52530454111654 * S_NumCatalogPurchases
285847    +          +     0.73982889008686 * S_NumDealsPurchases
285848    +          +     1.03760708665776 * S_NumWebVisitsMonth
285849    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
285850    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
285851    +          +    -0.57121500191985 * Marital_StatusMarried
285852    +          +     0.00575301863466 * Marital_StatusSingle
285853    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
285854    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
285855    +          +     0.68382990555761 * Marital_StatusMarried
285856    +          +    -0.40241665873988 * Marital_StatusSingle
285857    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
285858    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
285859    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
285860    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285861    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285862    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
285863    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
285864    +END;
MPRINT(EM_DIAGRAM):   END;
285865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285866    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
285867    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
285868    +END;
MPRINT(EM_DIAGRAM):   END;
285869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285870    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
285871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285872    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285873    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
285874    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
285875    +          +    -2.40830591527574 * S_MntMeatProducts
285876    +          +    -0.89296864866675 * S_NumCatalogPurchases
285877    +          +     1.79889409325514 * S_NumDealsPurchases
285878    +          +    -0.33765715793031 * S_NumWebVisitsMonth
285879    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
285880    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
285881    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
285882    +          +     0.04224245417831 * S_MntMeatProducts
285883    +          +     0.25836861794607 * S_NumCatalogPurchases
285884    +          +     2.47909264202917 * S_NumDealsPurchases
285885    +          +     0.14790226792406 * S_NumWebVisitsMonth
285886    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
285887    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
285888    +          +     0.39103795234666 * Marital_StatusMarried
285889    +          +    -0.52822284221545 * Marital_StatusSingle
285890    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
285891    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
285892    +          +       1.975579060233 * Marital_StatusMarried
285893    +          +     0.15028521746762 * Marital_StatusSingle
285894    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
285895    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
285896    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
285897    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285898    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285899    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
285900    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
285901    +END;
MPRINT(EM_DIAGRAM):   END;
285902    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285903    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
285904    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
285905    +END;
MPRINT(EM_DIAGRAM):   END;
285906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285907    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
285908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285909    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285910    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
285911    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
285912    +          +     0.16060225059391 * S_MntMeatProducts
285913    +          +     1.53093292630033 * S_NumCatalogPurchases
285914    +          +     0.39573641806699 * S_NumDealsPurchases
285915    +          +    -0.95387142126649 * S_NumWebVisitsMonth
285916    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
285917    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
285918    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
285919    +          +     0.71628478327205 * S_MntMeatProducts
285920    +          +     0.15890352363556 * S_NumCatalogPurchases
285921    +          +    -1.12928875468011 * S_NumDealsPurchases
285922    +          +    -0.30108145274307 * S_NumWebVisitsMonth
285923    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
285924    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
285925    +          +     0.91966160839643 * Marital_StatusMarried
285926    +          +    -0.63411090570397 * Marital_StatusSingle
285927    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
285928    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
285929    +          +     0.77230489026504 * Marital_StatusMarried
285930    +          +     0.20456495503812 * Marital_StatusSingle
285931    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
285932    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
285933    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
285934    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285935    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285936    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
285937    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
285938    +END;
MPRINT(EM_DIAGRAM):   END;
285939    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285940    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
285941    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
285942    +END;
MPRINT(EM_DIAGRAM):   END;
285943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285944    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
285945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285946    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285947    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
285948    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
285949    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
285950    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
285951    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
285952    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
285953    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
285954    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
285955    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
285956    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
285957    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
285958    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
285959    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
285960    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
285961    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
285962    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
285963    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
285964    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
285965    +END;
MPRINT(EM_DIAGRAM):   END;
285966    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285967    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
285968    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
285969    +END;
MPRINT(EM_DIAGRAM):   END;
285970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285971    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
285972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285973    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285974    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
285975    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
285976    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
285977    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
285978    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
285979    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
285980    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
285981    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
285982    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
285983    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
285984    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
285985    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
285986    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
285987    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
285988    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
285989    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
285990    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
285991    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
285992    +END;
MPRINT(EM_DIAGRAM):   END;
285993    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285994    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
285995    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
285996    +END;
MPRINT(EM_DIAGRAM):   END;
285997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285998    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
285999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286000    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286001    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
286002    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
286003    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
286004    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
286005    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
286006    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
286007    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
286008    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
286009    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
286010    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
286011    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
286012    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
286013    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
286014    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
286015    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
286016    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
286017    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
286018    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
286019    +END;
MPRINT(EM_DIAGRAM):   END;
286020    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286021    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
286022    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
286023    +END;
MPRINT(EM_DIAGRAM):   END;
286024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286025    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
286026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286027    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286028    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
286029    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
286030    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
286031    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
286032    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
286033    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
286034    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
286035    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
286036    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286037    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
286038    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
286039    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
286040    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
286041    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
286042    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
286043    +END;
MPRINT(EM_DIAGRAM):   END;
286044    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286045    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
286046    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
286047    +END;
MPRINT(EM_DIAGRAM):   END;
286048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286049    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
286050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286052    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
286053    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
286054    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
286055    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
286056    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
286057    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
286058    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
286059    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
286060    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286061    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
286062    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
286063    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
286064    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
286065    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
286066    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
286067    +END;
MPRINT(EM_DIAGRAM):   END;
286068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286069    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
286070    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
286071    +END;
MPRINT(EM_DIAGRAM):   END;
286072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286073    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
286074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286075    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286076    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
286077    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
286078    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
286079    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
286080    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
286081    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
286082    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286083    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
286084    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
286085    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
286086    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
286087    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
286088    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
286089    +END;
MPRINT(EM_DIAGRAM):   END;
286090    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286091    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
286092    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
286093    +END;
MPRINT(EM_DIAGRAM):   END;
286094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286095    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
286096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286097    +
286098    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
286099    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
286100    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286101    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
286102    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
286103    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286104    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
286105    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286106    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286107    +end;
MPRINT(EM_DIAGRAM):   end;
286108    +else do;
MPRINT(EM_DIAGRAM):   else do;
286109    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
286110    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
286111    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
286112    +   end;
MPRINT(EM_DIAGRAM):   end;
286113    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
286114    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
286115    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
286116    +   end;
MPRINT(EM_DIAGRAM):   end;
286117    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286118    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286119    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286120    +   end;
MPRINT(EM_DIAGRAM):   end;
286121    +end;
MPRINT(EM_DIAGRAM):   end;
286122    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286123    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
286124    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
286125    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
286126    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
286127    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
286128    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286129    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
286130    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
286131    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
286132    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
286133    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
286134    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
286135    +END;
MPRINT(EM_DIAGRAM):   END;
286136    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286137    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
286138    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
286139    +END;
MPRINT(EM_DIAGRAM):   END;
286140    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
286141    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
286142    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
286143    +END;
MPRINT(EM_DIAGRAM):   END;
286144    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
286145    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
286146    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
286147    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
286148    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
286149    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
286150    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
286151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286152    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
286153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286154    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
286155    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
286156    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
286157    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
286158    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
286159    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
286160    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
286161    +END;
MPRINT(EM_DIAGRAM):   END;
286162    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286163    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
286164    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286165    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
286166    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
286167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286168    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
286169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286170    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
286171    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
286172    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
286173    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
286174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286175    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
286176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286177    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
286178    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
286179    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
286180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286181    +* Ensmbl54: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 3 of 6;
286182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286184    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
286185    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
286186    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
286187    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286188    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286189    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
286190    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286191    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
286192    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
286193    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
286194    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
286195    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
286196    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
286197    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
286198    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
286199    +LENGTH _WARN_ $4
286200    +      F_DepVar  $ 12
286201    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
286202    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
286203    +
286204    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
286205    +
286206    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
286207    +
286208    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
286209    +
286210    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
286211    +
286212    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
286213    +
286214    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
286215    +
286216    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
286217    +
286218    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
286219    +
286220    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
286221    +
286222    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
286223    +
286224    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
286225    +
286226    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
286227    +
286228    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
286229    +
286230    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
286231    +
286232    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
286233    +
286234    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286235    +
286236    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
286237    +
286238    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
286239    +
286240    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
286241    +
286242    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
286243    +
286244    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
286245    +
286246    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
286247    +
286248    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
286249    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
286250    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
286251    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
286252    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
286253    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
286254    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
286255    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
286256    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
286257    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
286258    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
286259    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
286260    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
286261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
286262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286263    +end;
MPRINT(EM_DIAGRAM):   end;
286264    +else do;
MPRINT(EM_DIAGRAM):   else do;
286265    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
286266    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
286267    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286268    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
286269    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
286270    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
286271    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
286272    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
286273    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286274    +         end;
MPRINT(EM_DIAGRAM):   end;
286275    +         else do;
MPRINT(EM_DIAGRAM):   else do;
286276    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
286277    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
286278    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286279    +            end;
MPRINT(EM_DIAGRAM):   end;
286280    +         end;
MPRINT(EM_DIAGRAM):   end;
286281    +      end;
MPRINT(EM_DIAGRAM):   end;
286282    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286283    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
286284    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
286285    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286286    +         end;
MPRINT(EM_DIAGRAM):   end;
286287    +      end;
MPRINT(EM_DIAGRAM):   end;
286288    +   end;
MPRINT(EM_DIAGRAM):   end;
286289    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286290    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
286291    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
286292    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286293    +      end;
MPRINT(EM_DIAGRAM):   end;
286294    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286295    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
286296    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
286297    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
286298    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
286299    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
286300    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286301    +         end;
MPRINT(EM_DIAGRAM):   end;
286302    +      end;
MPRINT(EM_DIAGRAM):   end;
286303    +   end;
MPRINT(EM_DIAGRAM):   end;
286304    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
286305    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
286306    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
286307    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
286308    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
286309    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
286310    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286311    +   end;
MPRINT(EM_DIAGRAM):   end;
286312    +end;
MPRINT(EM_DIAGRAM):   end;
286313    +
286314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286315    +*** Checking missing input Interval
286316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
286317    +
286318    +IF NMISS(
286319    +   AcceptedCmpTotal ,
286320    +   Frq ,
286321    +   Mnt ,
286322    +   MntMeatProducts ,
286323    +   NumCatalogPurchases ,
286324    +   NumDealsPurchases ,
286325    +   NumWebVisitsMonth ,
286326    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
286327    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
286328    +
286329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286330    +END;
MPRINT(EM_DIAGRAM):   END;
286331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286332    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
286333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286335    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286336    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
286337    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286338    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286339    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286340    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
286341    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
286342    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
286343    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
286344    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
286345    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
286346    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
286347    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286348    +END;
MPRINT(EM_DIAGRAM):   END;
286349    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286350    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
286351    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286352    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
286353    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
286354    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286355    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
286356    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286357    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
286358    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286359    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
286360    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
286361    +   ELSE S_NumCatalogPurchases
286362    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
286363    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
286364    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
286365    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
286366    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
286367    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
286368    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
286369    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
286370    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
286371    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286372    +END;
MPRINT(EM_DIAGRAM):   END;
286373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286374    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
286375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286377    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
286378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286379    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286380    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
286381    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
286382    +          +     0.02561809182055 * S_MntMeatProducts
286383    +          +     -0.1793288912734 * S_NumCatalogPurchases
286384    +          +    -0.37563080213093 * S_NumDealsPurchases
286385    +          +    -0.48858578777845 * S_NumWebVisitsMonth
286386    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
286387    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
286388    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
286389    +          +     1.94302986779634 * S_MntMeatProducts
286390    +          +      0.2669037763846 * S_NumCatalogPurchases
286391    +          +     0.29313104233947 * S_NumDealsPurchases
286392    +          +    -0.30591479309812 * S_NumWebVisitsMonth
286393    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
286394    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
286395    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
286396    +          +    -0.76055629383789 * S_MntMeatProducts
286397    +          +    -0.40114802991127 * S_NumCatalogPurchases
286398    +          +    -1.12215966034372 * S_NumDealsPurchases
286399    +          +    -0.30978133586417 * S_NumWebVisitsMonth
286400    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
286401    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
286402    +          +     0.20445663414925 * Marital_StatusMarried
286403    +          +     0.16369117386202 * Marital_StatusSingle
286404    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
286405    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
286406    +          +     0.09645374599508 * Marital_StatusMarried
286407    +          +     -0.0816282741981 * Marital_StatusSingle
286408    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
286409    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
286410    +          +     -3.9031880089591 * Marital_StatusMarried
286411    +          +      1.6995748309328 * Marital_StatusSingle
286412    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
286413    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
286414    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
286415    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
286416    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
286417    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
286418    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
286419    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
286420    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
286421    +END;
MPRINT(EM_DIAGRAM):   END;
286422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286423    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
286424    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
286425    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
286426    +END;
MPRINT(EM_DIAGRAM):   END;
286427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286428    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
286429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286430    +
286431    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
286432    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
286433    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286434    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
286435    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
286436    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286437    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
286438    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286439    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286440    +end;
MPRINT(EM_DIAGRAM):   end;
286441    +else do;
MPRINT(EM_DIAGRAM):   else do;
286442    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
286443    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
286444    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
286445    +   end;
MPRINT(EM_DIAGRAM):   end;
286446    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
286447    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
286448    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
286449    +   end;
MPRINT(EM_DIAGRAM):   end;
286450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286451    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286452    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286453    +   end;
MPRINT(EM_DIAGRAM):   end;
286454    +end;
MPRINT(EM_DIAGRAM):   end;
286455    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286456    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
286457    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
286458    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
286459    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
286460    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
286461    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286462    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
286463    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
286464    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
286465    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
286466    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
286467    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
286468    +END;
MPRINT(EM_DIAGRAM):   END;
286469    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286470    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
286471    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
286472    +END;
MPRINT(EM_DIAGRAM):   END;
286473    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
286474    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
286475    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
286476    +END;
MPRINT(EM_DIAGRAM):   END;
286477    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
286478    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
286479    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
286480    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
286481    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
286482    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
286483    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
286484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286485    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
286486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286487    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
286488    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
286489    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
286490    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
286491    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
286492    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
286493    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
286494    +END;
MPRINT(EM_DIAGRAM):   END;
286495    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286496    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
286497    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286498    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
286499    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
286500    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286501    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
286502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286503    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
286504    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
286505    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
286506    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
286507    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286508    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
286509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286510    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
286511    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
286512    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
286513    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286514    +* Ensmbl54: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 4 of 6;
286515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286516    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286517    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
286518    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
286519    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
286520    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286521    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286522    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
286523    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286524    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
286525    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
286526    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
286527    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
286528    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
286529    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
286530    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
286531    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
286532    +LENGTH _WARN_ $4
286533    +      F_DepVar  $ 12
286534    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
286535    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
286536    +
286537    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
286538    +
286539    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
286540    +
286541    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
286542    +
286543    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
286544    +
286545    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
286546    +
286547    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
286548    +
286549    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
286550    +
286551    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
286552    +
286553    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
286554    +
286555    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
286556    +
286557    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
286558    +
286559    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
286560    +
286561    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
286562    +
286563    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
286564    +
286565    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
286566    +
286567    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
286568    +
286569    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286570    +
286571    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
286572    +
286573    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
286574    +
286575    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
286576    +
286577    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
286578    +
286579    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
286580    +
286581    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
286582    +
286583    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
286584    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
286585    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
286586    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
286587    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
286588    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
286589    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
286590    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
286591    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
286592    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
286593    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
286594    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
286595    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
286596    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
286597    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286598    +end;
MPRINT(EM_DIAGRAM):   end;
286599    +else do;
MPRINT(EM_DIAGRAM):   else do;
286600    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
286601    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
286602    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286603    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
286604    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
286605    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
286606    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
286607    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
286608    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286609    +         end;
MPRINT(EM_DIAGRAM):   end;
286610    +         else do;
MPRINT(EM_DIAGRAM):   else do;
286611    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
286612    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
286613    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286614    +            end;
MPRINT(EM_DIAGRAM):   end;
286615    +         end;
MPRINT(EM_DIAGRAM):   end;
286616    +      end;
MPRINT(EM_DIAGRAM):   end;
286617    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286618    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
286619    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
286620    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286621    +         end;
MPRINT(EM_DIAGRAM):   end;
286622    +      end;
MPRINT(EM_DIAGRAM):   end;
286623    +   end;
MPRINT(EM_DIAGRAM):   end;
286624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286625    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
286626    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
286627    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286628    +      end;
MPRINT(EM_DIAGRAM):   end;
286629    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286630    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
286631    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
286632    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
286633    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
286634    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
286635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286636    +         end;
MPRINT(EM_DIAGRAM):   end;
286637    +      end;
MPRINT(EM_DIAGRAM):   end;
286638    +   end;
MPRINT(EM_DIAGRAM):   end;
286639    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
286640    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
286641    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
286642    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
286643    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
286644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
286645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286646    +   end;
MPRINT(EM_DIAGRAM):   end;
286647    +end;
MPRINT(EM_DIAGRAM):   end;
286648    +
286649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286650    +*** Checking missing input Interval
286651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
286652    +
286653    +IF NMISS(
286654    +   AcceptedCmpTotal ,
286655    +   Frq ,
286656    +   Mnt ,
286657    +   MntMeatProducts ,
286658    +   NumCatalogPurchases ,
286659    +   NumDealsPurchases ,
286660    +   NumWebVisitsMonth ,
286661    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
286662    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
286663    +
286664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286665    +END;
MPRINT(EM_DIAGRAM):   END;
286666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286667    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
286668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286669    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286670    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286671    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
286672    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286673    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286674    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286675    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
286676    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
286677    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
286678    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
286679    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
286680    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
286681    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
286682    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286683    +END;
MPRINT(EM_DIAGRAM):   END;
286684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286685    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
286686    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286687    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
286688    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
286689    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286690    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
286691    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286692    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
286693    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286694    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
286695    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
286696    +   ELSE S_NumCatalogPurchases
286697    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
286698    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
286699    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
286700    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
286701    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
286702    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
286703    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
286704    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
286705    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
286706    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286707    +END;
MPRINT(EM_DIAGRAM):   END;
286708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286709    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
286710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286712    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
286713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286714    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286715    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
286716    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
286717    +          +      0.2338265945616 * S_MntMeatProducts
286718    +          +     0.01564313414142 * S_NumCatalogPurchases
286719    +          +    -0.07464304384577 * S_NumDealsPurchases
286720    +          +    -0.08299095200051 * S_NumWebVisitsMonth
286721    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
286722    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
286723    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
286724    +          +     -0.3893643428589 * S_MntMeatProducts
286725    +          +    -0.11487225011852 * S_NumCatalogPurchases
286726    +          +       0.001237145136 * S_NumDealsPurchases
286727    +          +    -0.04234500703321 * S_NumWebVisitsMonth
286728    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
286729    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
286730    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
286731    +          +    -0.27963474874984 * S_MntMeatProducts
286732    +          +     0.01939450840376 * S_NumCatalogPurchases
286733    +          +    -0.03907394757592 * S_NumDealsPurchases
286734    +          +     0.06752842740103 * S_NumWebVisitsMonth
286735    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
286736    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
286737    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
286738    +          +     0.09842717305515 * S_MntMeatProducts
286739    +          +     0.48040050668836 * S_NumCatalogPurchases
286740    +          +     0.55911507039756 * S_NumDealsPurchases
286741    +          +     0.35441361757916 * S_NumWebVisitsMonth
286742    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
286743    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
286744    +          +     0.13423943689575 * Marital_StatusMarried
286745    +          +    -0.01496857872487 * Marital_StatusSingle
286746    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
286747    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
286748    +          +     0.03005244373637 * Marital_StatusMarried
286749    +          +    -0.06891231360799 * Marital_StatusSingle
286750    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
286751    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
286752    +          +     0.01694145364157 * Marital_StatusMarried
286753    +          +    -0.05183794192194 * Marital_StatusSingle
286754    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
286755    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
286756    +          +     0.44185773223966 * Marital_StatusMarried
286757    +          +     -0.6351733171702 * Marital_StatusSingle
286758    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
286759    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
286760    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
286761    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
286762    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
286763    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
286764    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
286765    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
286766    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
286767    +END;
MPRINT(EM_DIAGRAM):   END;
286768    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286769    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
286770    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
286771    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
286772    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
286773    +END;
MPRINT(EM_DIAGRAM):   END;
286774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286775    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
286776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286777    +
286778    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
286779    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
286780    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286781    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
286782    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
286783    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286784    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
286785    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286786    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286787    +end;
MPRINT(EM_DIAGRAM):   end;
286788    +else do;
MPRINT(EM_DIAGRAM):   else do;
286789    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
286790    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
286791    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
286792    +   end;
MPRINT(EM_DIAGRAM):   end;
286793    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
286794    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
286795    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
286796    +   end;
MPRINT(EM_DIAGRAM):   end;
286797    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286798    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
286799    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
286800    +   end;
MPRINT(EM_DIAGRAM):   end;
286801    +end;
MPRINT(EM_DIAGRAM):   end;
286802    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286803    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
286804    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
286805    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
286806    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
286807    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
286808    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286809    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
286810    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
286811    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
286812    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
286813    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
286814    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
286815    +END;
MPRINT(EM_DIAGRAM):   END;
286816    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286817    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
286818    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
286819    +END;
MPRINT(EM_DIAGRAM):   END;
286820    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
286821    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
286822    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
286823    +END;
MPRINT(EM_DIAGRAM):   END;
286824    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
286825    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
286826    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
286827    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
286828    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
286829    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
286830    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
286831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286832    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
286833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286834    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
286835    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
286836    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
286837    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
286838    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
286839    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
286840    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
286841    +END;
MPRINT(EM_DIAGRAM):   END;
286842    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286843    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
286844    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286845    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
286846    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
286847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286848    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
286849    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286850    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
286851    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
286852    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
286853    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
286854    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286855    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
286856    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286857    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
286858    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
286859    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
286860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286861    +* Ensmbl54: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 5 of 6;
286862    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286863    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286864    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
286865    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
286866    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
286867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286868    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286869    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
286870    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286871    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
286872    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
286873    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
286874    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
286875    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
286876    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
286877    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
286878    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
286879    +LENGTH _WARN_ $4
286880    +      F_DepVar  $ 12
286881    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
286882    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
286883    +
286884    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
286885    +
286886    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
286887    +
286888    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
286889    +
286890    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
286891    +
286892    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
286893    +
286894    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
286895    +
286896    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
286897    +
286898    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
286899    +
286900    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
286901    +
286902    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
286903    +
286904    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
286905    +
286906    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
286907    +
286908    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
286909    +
286910    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
286911    +
286912    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
286913    +
286914    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
286915    +
286916    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
286917    +
286918    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
286919    +
286920    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
286921    +
286922    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
286923    +
286924    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
286925    +
286926    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
286927    +
286928    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
286929    +
286930    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
286931    +
286932    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
286933    +
286934    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
286935    +
286936    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
286937    +
286938    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
286939    +
286940    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
286941    +
286942    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
286943    +
286944    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
286945    +
286946    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
286947    +
286948    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
286949    +
286950    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
286951    +
286952    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
286953    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
286954    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
286955    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
286956    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
286957    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
286958    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
286959    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
286960    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
286961    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
286962    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
286963    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
286964    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
286965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
286966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286967    +end;
MPRINT(EM_DIAGRAM):   end;
286968    +else do;
MPRINT(EM_DIAGRAM):   else do;
286969    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
286970    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
286971    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286972    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
286973    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
286974    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
286975    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
286976    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
286977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286978    +         end;
MPRINT(EM_DIAGRAM):   end;
286979    +         else do;
MPRINT(EM_DIAGRAM):   else do;
286980    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
286981    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
286982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286983    +            end;
MPRINT(EM_DIAGRAM):   end;
286984    +         end;
MPRINT(EM_DIAGRAM):   end;
286985    +      end;
MPRINT(EM_DIAGRAM):   end;
286986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286987    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
286988    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
286989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286990    +         end;
MPRINT(EM_DIAGRAM):   end;
286991    +      end;
MPRINT(EM_DIAGRAM):   end;
286992    +   end;
MPRINT(EM_DIAGRAM):   end;
286993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286994    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
286995    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
286996    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
286997    +      end;
MPRINT(EM_DIAGRAM):   end;
286998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
286999    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
287000    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
287001    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
287002    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
287003    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
287004    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287005    +         end;
MPRINT(EM_DIAGRAM):   end;
287006    +      end;
MPRINT(EM_DIAGRAM):   end;
287007    +   end;
MPRINT(EM_DIAGRAM):   end;
287008    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
287009    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
287010    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
287011    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
287012    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
287013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287015    +   end;
MPRINT(EM_DIAGRAM):   end;
287016    +end;
MPRINT(EM_DIAGRAM):   end;
287017    +
287018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287019    +*** Checking missing input Interval
287020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
287021    +
287022    +IF NMISS(
287023    +   AcceptedCmpTotal ,
287024    +   Frq ,
287025    +   Mnt ,
287026    +   MntMeatProducts ,
287027    +   NumCatalogPurchases ,
287028    +   NumDealsPurchases ,
287029    +   NumWebVisitsMonth ,
287030    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
287031    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
287032    +
287033    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287034    +END;
MPRINT(EM_DIAGRAM):   END;
287035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287036    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
287037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287038    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287039    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
287040    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
287041    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
287042    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
287043    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
287044    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
287045    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
287046    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
287047    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
287048    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
287049    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
287050    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
287051    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
287052    +END;
MPRINT(EM_DIAGRAM):   END;
287053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287054    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
287055    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
287056    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
287057    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
287058    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
287059    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
287060    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
287061    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
287062    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
287063    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
287064    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
287065    +   ELSE S_NumCatalogPurchases
287066    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
287067    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
287068    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
287069    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
287070    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
287071    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
287072    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
287073    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
287074    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
287075    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
287076    +END;
MPRINT(EM_DIAGRAM):   END;
287077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287078    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
287079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287081    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
287082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287084    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
287085    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
287086    +          +    -1.92258561684999 * S_MntMeatProducts
287087    +          +     -1.7098915194593 * S_NumCatalogPurchases
287088    +          +    -0.73092398706652 * S_NumDealsPurchases
287089    +          +    -1.52371325097768 * S_NumWebVisitsMonth
287090    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
287091    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
287092    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
287093    +          +     3.63686708458831 * S_MntMeatProducts
287094    +          +     0.32632650897658 * S_NumCatalogPurchases
287095    +          +     1.27820262549135 * S_NumDealsPurchases
287096    +          +    -0.18941034658667 * S_NumWebVisitsMonth
287097    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
287098    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
287099    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
287100    +          +    -0.10252809999866 * S_MntMeatProducts
287101    +          +    -2.01730745054613 * S_NumCatalogPurchases
287102    +          +     0.36276273056202 * S_NumDealsPurchases
287103    +          +    -2.03441379397145 * S_NumWebVisitsMonth
287104    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
287105    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
287106    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
287107    +          +     8.03567059273376 * S_MntMeatProducts
287108    +          +     2.16664649845379 * S_NumCatalogPurchases
287109    +          +     0.84009978401032 * S_NumDealsPurchases
287110    +          +     0.11354933533503 * S_NumWebVisitsMonth
287111    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
287112    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
287113    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
287114    +          +     1.87107978843927 * S_MntMeatProducts
287115    +          +    -0.31123291719979 * S_NumCatalogPurchases
287116    +          +    -2.80886037303887 * S_NumDealsPurchases
287117    +          +     0.08829426076164 * S_NumWebVisitsMonth
287118    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
287119    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
287120    +          +     0.50838467240268 * Marital_StatusMarried
287121    +          +    -0.57765911295879 * Marital_StatusSingle
287122    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
287123    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
287124    +          +     0.03531168852657 * Marital_StatusMarried
287125    +          +    -0.34417109081648 * Marital_StatusSingle
287126    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
287127    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
287128    +          +      1.9516301625913 * Marital_StatusMarried
287129    +          +    -0.24904237582097 * Marital_StatusSingle
287130    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
287131    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
287132    +          +     0.06718550412505 * Marital_StatusMarried
287133    +          +    -0.16735434131197 * Marital_StatusSingle
287134    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
287135    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
287136    +          +    -1.79498797741807 * Marital_StatusMarried
287137    +          +     2.86341746904333 * Marital_StatusSingle
287138    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
287139    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
287140    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
287141    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
287142    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
287143    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
287144    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287145    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287146    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
287147    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
287148    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
287149    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
287150    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
287151    +END;
MPRINT(EM_DIAGRAM):   END;
287152    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287153    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
287154    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
287155    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
287156    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
287157    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
287158    +END;
MPRINT(EM_DIAGRAM):   END;
287159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287160    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
287161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287162    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287163    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
287164    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
287165    +          +    -0.19914740985847 * S_MntMeatProducts
287166    +          +    -0.96920717464092 * S_NumCatalogPurchases
287167    +          +    -1.68508588177508 * S_NumDealsPurchases
287168    +          +     -0.9404284924488 * S_NumWebVisitsMonth
287169    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
287170    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
287171    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
287172    +          +    -1.60286606361912 * S_MntMeatProducts
287173    +          +    -0.05010796315816 * S_NumCatalogPurchases
287174    +          +      1.1380574488234 * S_NumDealsPurchases
287175    +          +     0.25426721345204 * S_NumWebVisitsMonth
287176    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
287177    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
287178    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
287179    +          +     2.58979830897092 * S_MntMeatProducts
287180    +          +      1.2569773545009 * S_NumCatalogPurchases
287181    +          +     0.21119951191653 * S_NumDealsPurchases
287182    +          +    -0.40993456334326 * S_NumWebVisitsMonth
287183    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
287184    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
287185    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
287186    +          +     1.58324428521578 * S_MntMeatProducts
287187    +          +    -0.64140579988939 * S_NumCatalogPurchases
287188    +          +    -0.07557073365385 * S_NumDealsPurchases
287189    +          +     0.27159109297915 * S_NumWebVisitsMonth
287190    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
287191    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
287192    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
287193    +          +     0.02133290318048 * S_MntMeatProducts
287194    +          +    -0.37682732019302 * S_NumCatalogPurchases
287195    +          +     2.57483962426003 * S_NumDealsPurchases
287196    +          +    -0.76651867011773 * S_NumWebVisitsMonth
287197    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
287198    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
287199    +          +     1.00798219323102 * Marital_StatusMarried
287200    +          +     -1.3878630687005 * Marital_StatusSingle
287201    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
287202    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
287203    +          +    -0.99149540204741 * Marital_StatusMarried
287204    +          +    -0.22772928542301 * Marital_StatusSingle
287205    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
287206    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
287207    +          +     1.54170826840021 * Marital_StatusMarried
287208    +          +    -0.09937587953829 * Marital_StatusSingle
287209    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
287210    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
287211    +          +    -0.48775794259019 * Marital_StatusMarried
287212    +          +     0.87075561905397 * Marital_StatusSingle
287213    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
287214    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
287215    +          +     0.01260332236695 * Marital_StatusMarried
287216    +          +     1.18815076116703 * Marital_StatusSingle
287217    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
287218    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
287219    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
287220    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
287221    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
287222    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
287223    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287224    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287225    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
287226    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
287227    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
287228    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
287229    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
287230    +END;
MPRINT(EM_DIAGRAM):   END;
287231    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287232    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
287233    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
287234    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
287235    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
287236    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
287237    +END;
MPRINT(EM_DIAGRAM):   END;
287238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287239    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
287240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287241    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287242    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
287243    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
287244    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
287245    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
287246    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
287247    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
287248    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
287249    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
287250    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
287251    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
287252    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
287253    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
287254    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
287255    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
287256    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
287257    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
287258    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
287259    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
287260    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
287261    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
287262    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
287263    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
287264    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
287265    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
287266    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
287267    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
287268    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
287269    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
287270    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
287271    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
287272    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
287273    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
287274    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
287275    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
287276    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
287277    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287278    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287279    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
287280    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
287281    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
287282    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
287283    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
287284    +END;
MPRINT(EM_DIAGRAM):   END;
287285    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287286    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
287287    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
287288    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
287289    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
287290    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
287291    +END;
MPRINT(EM_DIAGRAM):   END;
287292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287293    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
287294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287295    +
287296    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
287297    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
287298    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
287299    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
287300    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
287301    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287302    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
287303    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
287304    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
287305    +end;
MPRINT(EM_DIAGRAM):   end;
287306    +else do;
MPRINT(EM_DIAGRAM):   else do;
287307    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
287308    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
287309    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
287310    +   end;
MPRINT(EM_DIAGRAM):   end;
287311    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
287312    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
287313    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
287314    +   end;
MPRINT(EM_DIAGRAM):   end;
287315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287316    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
287317    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
287318    +   end;
MPRINT(EM_DIAGRAM):   end;
287319    +end;
MPRINT(EM_DIAGRAM):   end;
287320    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287321    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
287322    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
287323    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
287324    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
287325    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
287326    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
287327    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287328    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
287329    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
287330    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
287331    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
287332    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
287333    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
287334    +END;
MPRINT(EM_DIAGRAM):   END;
287335    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287336    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
287337    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
287338    +END;
MPRINT(EM_DIAGRAM):   END;
287339    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
287340    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
287341    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
287342    +END;
MPRINT(EM_DIAGRAM):   END;
287343    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
287344    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
287345    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
287346    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
287347    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
287348    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
287349    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
287350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287351    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
287352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287353    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
287354    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
287355    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
287356    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
287357    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
287358    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
287359    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
287360    +END;
MPRINT(EM_DIAGRAM):   END;
287361    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
287362    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
287363    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
287364    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
287365    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
287366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287367    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
287368    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287369    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
287370    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
287371    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
287372    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
287373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287374    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
287375    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287376    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
287377    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
287378    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
287379    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287380    +* Ensmbl54: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Scoring Code of model 6 of 6;
287381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287382    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287383    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
287384    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
287385    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
287386    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287387    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
287388    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
287389    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
287390    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
287391    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
287392    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
287393    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
287394    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
287395    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
287396    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
287397    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
287398    +LENGTH _WARN_ $4
287399    +      F_DepVar  $ 12
287400    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
287401    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
287402    +
287403    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
287404    +
287405    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
287406    +
287407    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
287408    +
287409    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
287410    +
287411    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
287412    +
287413    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
287414    +
287415    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
287416    +
287417    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
287418    +
287419    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
287420    +
287421    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
287422    +
287423    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
287424    +
287425    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
287426    +
287427    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
287428    +
287429    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
287430    +
287431    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
287432    +
287433    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
287434    +
287435    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
287436    +
287437    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
287438    +
287439    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
287440    +
287441    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
287442    +
287443    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
287444    +
287445    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
287446    +
287447    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
287448    +
287449    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
287450    +
287451    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
287452    +
287453    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
287454    +
287455    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
287456    +
287457    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
287458    +
287459    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
287460    +
287461    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
287462    +
287463    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
287464    +
287465    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
287466    +
287467    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
287468    +
287469    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
287470    +
287471    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
287472    +
287473    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
287474    +
287475    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
287476    +
287477    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
287478    +
287479    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
287480    +
287481    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
287482    +
287483    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
287484    +
287485    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
287486    +
287487    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
287488    +
287489    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
287490    +
287491    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
287492    +
287493    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
287494    +
287495    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
287496    +
287497    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
287498    +
287499    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
287500    +
287501    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
287502    +
287503    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
287504    +
287505    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
287506    +
287507    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
287508    +
287509    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
287510    +
287511    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
287512    +
287513    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
287514    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
287515    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
287516    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
287517    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
287518    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
287519    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
287520    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
287521    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
287522    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
287523    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
287524    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
287525    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
287526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287528    +end;
MPRINT(EM_DIAGRAM):   end;
287529    +else do;
MPRINT(EM_DIAGRAM):   else do;
287530    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
287531    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
287532    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287533    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
287534    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
287535    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
287536    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
287537    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
287538    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287539    +         end;
MPRINT(EM_DIAGRAM):   end;
287540    +         else do;
MPRINT(EM_DIAGRAM):   else do;
287541    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
287542    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
287543    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287544    +            end;
MPRINT(EM_DIAGRAM):   end;
287545    +         end;
MPRINT(EM_DIAGRAM):   end;
287546    +      end;
MPRINT(EM_DIAGRAM):   end;
287547    +      else do;
MPRINT(EM_DIAGRAM):   else do;
287548    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
287549    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
287550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287551    +         end;
MPRINT(EM_DIAGRAM):   end;
287552    +      end;
MPRINT(EM_DIAGRAM):   end;
287553    +   end;
MPRINT(EM_DIAGRAM):   end;
287554    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287555    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
287556    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
287557    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287558    +      end;
MPRINT(EM_DIAGRAM):   end;
287559    +      else do;
MPRINT(EM_DIAGRAM):   else do;
287560    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
287561    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
287562    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
287563    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
287564    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
287565    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
287566    +         end;
MPRINT(EM_DIAGRAM):   end;
287567    +      end;
MPRINT(EM_DIAGRAM):   end;
287568    +   end;
MPRINT(EM_DIAGRAM):   end;
287569    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
287570    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
287571    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
287572    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
287573    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
287574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287576    +   end;
MPRINT(EM_DIAGRAM):   end;
287577    +end;
MPRINT(EM_DIAGRAM):   end;
287578    +
287579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287580    +*** Checking missing input Interval
287581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
287582    +
287583    +IF NMISS(
287584    +   AcceptedCmpTotal ,
287585    +   Frq ,
287586    +   Mnt ,
287587    +   MntMeatProducts ,
287588    +   NumCatalogPurchases ,
287589    +   NumDealsPurchases ,
287590    +   NumWebVisitsMonth ,
287591    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
287592    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
287593    +
287594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287595    +END;
MPRINT(EM_DIAGRAM):   END;
287596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287597    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
287598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287599    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287600    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
287601    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
287602    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
287603    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
287604    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
287605    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
287606    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
287607    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
287608    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
287609    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
287610    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
287611    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
287612    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
287613    +END;
MPRINT(EM_DIAGRAM):   END;
287614    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287615    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
287616    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
287617    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
287618    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
287619    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
287620    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
287621    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
287622    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
287623    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
287624    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
287625    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
287626    +   ELSE S_NumCatalogPurchases
287627    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
287628    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
287629    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
287630    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
287631    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
287632    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
287633    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
287634    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
287635    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
287636    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
287637    +END;
MPRINT(EM_DIAGRAM):   END;
287638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287639    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
287640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287642    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
287643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287644    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287645    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
287646    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
287647    +          +     2.79168320854924 * S_MntMeatProducts
287648    +          +    -1.09894266401589 * S_NumCatalogPurchases
287649    +          +    -0.32966417347551 * S_NumDealsPurchases
287650    +          +    -0.72195034767343 * S_NumWebVisitsMonth
287651    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
287652    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
287653    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
287654    +          +     9.02469430152189 * S_MntMeatProducts
287655    +          +     1.42644521887241 * S_NumCatalogPurchases
287656    +          +      0.6475058577302 * S_NumDealsPurchases
287657    +          +     0.08123225110233 * S_NumWebVisitsMonth
287658    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
287659    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
287660    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
287661    +          +     5.40567027331821 * S_MntMeatProducts
287662    +          +     0.21404551755506 * S_NumCatalogPurchases
287663    +          +    -3.79184634796332 * S_NumDealsPurchases
287664    +          +     0.64355102802571 * S_NumWebVisitsMonth
287665    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
287666    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
287667    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
287668    +          +     2.35287601364019 * S_MntMeatProducts
287669    +          +    -3.27198648531912 * S_NumCatalogPurchases
287670    +          +    -0.16046880718311 * S_NumDealsPurchases
287671    +          +     -3.7025327830273 * S_NumWebVisitsMonth
287672    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
287673    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
287674    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
287675    +          +     8.39312647460766 * S_MntMeatProducts
287676    +          +     3.07026872536137 * S_NumCatalogPurchases
287677    +          +     2.03045608124213 * S_NumDealsPurchases
287678    +          +     3.86452915398414 * S_NumWebVisitsMonth
287679    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
287680    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
287681    +          +     0.14979485299347 * Marital_StatusMarried
287682    +          +    -0.09166445391312 * Marital_StatusSingle
287683    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
287684    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
287685    +          +      0.1646484112393 * Marital_StatusMarried
287686    +          +     0.01074681811884 * Marital_StatusSingle
287687    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
287688    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
287689    +          +    -0.28313626645981 * Marital_StatusMarried
287690    +          +      2.8257446964988 * Marital_StatusSingle
287691    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
287692    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
287693    +          +     3.05775024202559 * Marital_StatusMarried
287694    +          +    -0.23539571945671 * Marital_StatusSingle
287695    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
287696    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
287697    +          +    -0.48359916542157 * Marital_StatusMarried
287698    +          +    -1.64182316823237 * Marital_StatusSingle
287699    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
287700    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
287701    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
287702    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
287703    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
287704    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
287705    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
287706    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
287707    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287708    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
287709    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
287710    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
287711    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
287712    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
287713    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
287714    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
287715    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
287716    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
287717    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
287718    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
287719    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
287720    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
287721    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
287722    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
287723    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
287724    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
287725    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
287726    +END;
MPRINT(EM_DIAGRAM):   END;
287727    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287728    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
287729    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
287730    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
287731    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
287732    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
287733    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
287734    +END;
MPRINT(EM_DIAGRAM):   END;
287735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287736    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
287737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287738    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287739    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
287740    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
287741    +          +     0.55999885697493 * S_MntMeatProducts
287742    +          +      0.2225207563207 * S_NumCatalogPurchases
287743    +          +     -1.0233439835205 * S_NumDealsPurchases
287744    +          +    -0.35430585878397 * S_NumWebVisitsMonth
287745    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
287746    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
287747    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
287748    +          +    -1.04508919964747 * S_MntMeatProducts
287749    +          +     -0.6758665249546 * S_NumCatalogPurchases
287750    +          +    -0.24215201937497 * S_NumDealsPurchases
287751    +          +    -1.02736823453312 * S_NumWebVisitsMonth
287752    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
287753    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
287754    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
287755    +          +    -3.97854305593999 * S_MntMeatProducts
287756    +          +    -2.05331728407593 * S_NumCatalogPurchases
287757    +          +    -0.48841403720827 * S_NumDealsPurchases
287758    +          +     0.25411498590567 * S_NumWebVisitsMonth
287759    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
287760    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
287761    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
287762    +          +     -0.7071400781557 * S_MntMeatProducts
287763    +          +     1.20780208787296 * S_NumCatalogPurchases
287764    +          +    -0.58152407834402 * S_NumDealsPurchases
287765    +          +     2.15567925539399 * S_NumWebVisitsMonth
287766    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
287767    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
287768    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
287769    +          +    -1.07023271439686 * S_MntMeatProducts
287770    +          +     0.31952847185507 * S_NumCatalogPurchases
287771    +          +     0.97232557455358 * S_NumDealsPurchases
287772    +          +     1.40227284681788 * S_NumWebVisitsMonth
287773    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
287774    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
287775    +          +    -1.54860787754125 * Marital_StatusMarried
287776    +          +     3.07164083530731 * Marital_StatusSingle
287777    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
287778    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
287779    +          +     1.93404037878036 * Marital_StatusMarried
287780    +          +    -1.33159061927866 * Marital_StatusSingle
287781    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
287782    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
287783    +          +    -1.20603561095549 * Marital_StatusMarried
287784    +          +     1.40927693179184 * Marital_StatusSingle
287785    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
287786    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
287787    +          +     -0.1442863204197 * Marital_StatusMarried
287788    +          +     0.60523055771734 * Marital_StatusSingle
287789    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
287790    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
287791    +          +     0.09024082077945 * Marital_StatusMarried
287792    +          +     0.46315219527454 * Marital_StatusSingle
287793    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
287794    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
287795    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
287796    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
287797    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
287798    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
287799    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
287800    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
287801    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287802    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
287803    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
287804    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
287805    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
287806    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
287807    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
287808    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
287809    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
287810    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
287811    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
287812    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
287813    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
287814    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
287815    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
287816    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
287817    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
287818    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
287819    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
287820    +END;
MPRINT(EM_DIAGRAM):   END;
287821    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287822    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
287823    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
287824    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
287825    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
287826    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
287827    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
287828    +END;
MPRINT(EM_DIAGRAM):   END;
287829    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287830    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
287831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287832    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287833    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
287834    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
287835    +          +    -1.02461177883701 * S_MntMeatProducts
287836    +          +     0.58245198640098 * S_NumCatalogPurchases
287837    +          +    -0.23780276328844 * S_NumDealsPurchases
287838    +          +     1.28202459687231 * S_NumWebVisitsMonth
287839    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
287840    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
287841    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
287842    +          +     0.13875330330852 * S_MntMeatProducts
287843    +          +    -0.22996544763814 * S_NumCatalogPurchases
287844    +          +    -0.36599639965399 * S_NumDealsPurchases
287845    +          +     1.99081506581768 * S_NumWebVisitsMonth
287846    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
287847    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
287848    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
287849    +          +     0.94472031892058 * S_MntMeatProducts
287850    +          +     0.27511909854912 * S_NumCatalogPurchases
287851    +          +    -0.55526545857693 * S_NumDealsPurchases
287852    +          +    -0.61544688091302 * S_NumWebVisitsMonth
287853    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
287854    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
287855    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
287856    +          +     1.61403840093612 * S_MntMeatProducts
287857    +          +    -0.34382576245292 * S_NumCatalogPurchases
287858    +          +     0.70213159483637 * S_NumDealsPurchases
287859    +          +    -0.39731145628175 * S_NumWebVisitsMonth
287860    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
287861    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
287862    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
287863    +          +    -0.33974847531229 * S_MntMeatProducts
287864    +          +     1.74350962571519 * S_NumCatalogPurchases
287865    +          +     0.41098583446208 * S_NumDealsPurchases
287866    +          +    -0.66305298743409 * S_NumWebVisitsMonth
287867    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
287868    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
287869    +          +    -0.29510060772746 * Marital_StatusMarried
287870    +          +     1.74124353401891 * Marital_StatusSingle
287871    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
287872    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
287873    +          +    -0.61203463567014 * Marital_StatusMarried
287874    +          +     1.95705767804118 * Marital_StatusSingle
287875    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
287876    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
287877    +          +      1.7151906515185 * Marital_StatusMarried
287878    +          +     0.70376524929742 * Marital_StatusSingle
287879    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
287880    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
287881    +          +    -1.27088213578872 * Marital_StatusMarried
287882    +          +    -0.91253966593459 * Marital_StatusSingle
287883    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
287884    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
287885    +          +     -0.5308059771847 * Marital_StatusMarried
287886    +          +    -0.11208078645904 * Marital_StatusSingle
287887    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
287888    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
287889    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
287890    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
287891    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
287892    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
287893    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
287894    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
287895    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287896    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
287897    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
287898    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
287899    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
287900    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
287901    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
287902    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
287903    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
287904    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
287905    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
287906    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
287907    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
287908    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
287909    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
287910    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
287911    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
287912    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
287913    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
287914    +END;
MPRINT(EM_DIAGRAM):   END;
287915    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287916    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
287917    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
287918    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
287919    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
287920    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
287921    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
287922    +END;
MPRINT(EM_DIAGRAM):   END;
287923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287924    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
287925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287926    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287927    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
287928    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
287929    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
287930    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
287931    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
287932    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
287933    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
287934    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
287935    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
287936    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
287937    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
287938    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
287939    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
287940    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
287941    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
287942    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
287943    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
287944    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
287945    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
287946    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
287947    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
287948    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
287949    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
287950    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
287951    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
287952    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
287953    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
287954    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
287955    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
287956    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
287957    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
287958    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
287959    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
287960    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
287961    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
287962    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
287963    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
287964    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
287965    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
287966    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
287967    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
287968    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
287969    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
287970    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
287971    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
287972    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
287973    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
287974    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
287975    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
287976    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
287977    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
287978    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
287979    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
287980    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
287981    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
287982    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
287983    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
287984    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
287985    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
287986    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
287987    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
287988    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
287989    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
287990    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
287991    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
287992    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
287993    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
287994    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
287995    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
287996    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
287997    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
287998    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
287999    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
288000    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
288001    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
288002    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
288003    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
288004    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
288005    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
288006    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
288007    +END;
MPRINT(EM_DIAGRAM):   END;
288008    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288009    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
288010    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
288011    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
288012    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
288013    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
288014    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
288015    +END;
MPRINT(EM_DIAGRAM):   END;
288016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288017    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
288018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288019    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288020    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
288021    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
288022    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
288023    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
288024    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
288025    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
288026    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
288027    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
288028    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
288029    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
288030    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
288031    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
288032    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
288033    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
288034    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
288035    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
288036    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
288037    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
288038    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
288039    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
288040    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
288041    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
288042    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
288043    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
288044    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
288045    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
288046    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
288047    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
288048    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
288049    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
288050    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
288051    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
288052    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
288053    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
288054    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
288055    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
288056    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
288057    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
288058    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
288059    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
288060    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
288061    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
288062    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
288063    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
288064    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
288065    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
288066    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
288067    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
288068    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
288069    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
288070    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
288071    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
288072    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
288073    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
288074    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
288075    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
288076    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
288077    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
288078    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
288079    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
288080    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
288081    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
288082    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
288083    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
288084    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
288085    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
288086    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
288087    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
288088    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
288089    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
288090    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
288091    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
288092    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
288093    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
288094    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
288095    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
288096    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
288097    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
288098    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
288099    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
288100    +END;
MPRINT(EM_DIAGRAM):   END;
288101    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288102    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
288103    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
288104    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
288105    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
288106    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
288107    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
288108    +END;
MPRINT(EM_DIAGRAM):   END;
288109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288110    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
288111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288112    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288113    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
288114    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
288115    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
288116    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
288117    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
288118    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
288119    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
288120    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
288121    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
288122    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
288123    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
288124    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
288125    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
288126    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
288127    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
288128    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
288129    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
288130    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
288131    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
288132    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
288133    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
288134    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
288135    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
288136    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
288137    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
288138    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
288139    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
288140    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
288141    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
288142    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
288143    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
288144    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
288145    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
288146    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
288147    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
288148    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
288149    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
288150    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
288151    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
288152    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
288153    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
288154    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
288155    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
288156    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
288157    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
288158    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
288159    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
288160    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
288161    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
288162    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
288163    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
288164    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
288165    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
288166    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
288167    +END;
MPRINT(EM_DIAGRAM):   END;
288168    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288169    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
288170    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
288171    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
288172    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
288173    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
288174    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
288175    +END;
MPRINT(EM_DIAGRAM):   END;
288176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288177    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
288178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288179    +
288180    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
288181    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
288182    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
288183    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
288184    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
288185    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
288186    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
288187    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
288188    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
288189    +end;
MPRINT(EM_DIAGRAM):   end;
288190    +else do;
MPRINT(EM_DIAGRAM):   else do;
288191    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
288192    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
288193    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
288194    +   end;
MPRINT(EM_DIAGRAM):   end;
288195    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
288196    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
288197    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
288198    +   end;
MPRINT(EM_DIAGRAM):   end;
288199    +   else do;
MPRINT(EM_DIAGRAM):   else do;
288200    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
288201    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
288202    +   end;
MPRINT(EM_DIAGRAM):   end;
288203    +end;
MPRINT(EM_DIAGRAM):   end;
288204    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288205    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
288206    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
288207    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
288208    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
288209    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
288210    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
288211    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
288212    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
288213    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
288214    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
288215    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
288216    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
288217    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
288218    +END;
MPRINT(EM_DIAGRAM):   END;
288219    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288220    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
288221    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
288222    +END;
MPRINT(EM_DIAGRAM):   END;
288223    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
288224    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
288225    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
288226    +END;
MPRINT(EM_DIAGRAM):   END;
288227    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
288228    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
288229    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
288230    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
288231    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
288232    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
288233    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
288234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288235    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
288236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288237    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
288238    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
288239    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
288240    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
288241    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
288242    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
288243    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
288244    +END;
MPRINT(EM_DIAGRAM):   END;
288245    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288246    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
288247    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288248    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
288249    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
288250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288251    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
288252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288253    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
288254    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
288255    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
288256    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
288257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288258    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
288259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288260    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
288261    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
288262    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
288263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288264    +* Ensmbl54: Average Posteriors of 6 models;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Average Posteriors of 6 models;
288265    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288266    +P_DepVar1 = (
288267    +AutoNeural37_P_DepVar1 +
288268    +AutoNeural38_P_DepVar1 +
288269    +AutoNeural39_P_DepVar1 +
288270    +AutoNeural40_P_DepVar1 +
288271    +AutoNeural34_P_DepVar1 +
288272    +AutoNeural35_P_DepVar1
288273    +)/6;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural37_P_DepVar1 + AutoNeural38_P_DepVar1 +
AutoNeural39_P_DepVar1 + AutoNeural40_P_DepVar1 + AutoNeural34_P_DepVar1 +
AutoNeural35_P_DepVar1 )/6;
288274    +P_DepVar0 = (
288275    +AutoNeural37_P_DepVar0 +
288276    +AutoNeural38_P_DepVar0 +
288277    +AutoNeural39_P_DepVar0 +
288278    +AutoNeural40_P_DepVar0 +
288279    +AutoNeural34_P_DepVar0 +
288280    +AutoNeural35_P_DepVar0
288281    +)/6;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural37_P_DepVar0 + AutoNeural38_P_DepVar0 +
AutoNeural39_P_DepVar0 + AutoNeural40_P_DepVar0 + AutoNeural34_P_DepVar0 +
AutoNeural35_P_DepVar0 )/6;
288282    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288283    +* Ensmbl54: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Classification Vars;
288284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288285    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
288286    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
288287    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
288288    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
288289    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
288290    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
288291    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
288292    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
288293    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
288294    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
288295    +end;
MPRINT(EM_DIAGRAM):   end;
288296    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
288297    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
288298    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
288299    +end;
MPRINT(EM_DIAGRAM):   end;
288300    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288302    +* Ensmbl54: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Producing Unformatted variable;
288303    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288304    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
288305    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
288306    +else
288307    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
288308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288309    +* Ensmbl54: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing _WARN_ Variable;
288310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288311    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
288312    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
288313    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
288314    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288314   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288315    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288315   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288316    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288316   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288317    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288317   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288318    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288318   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288319    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288319   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288320    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288320   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288321    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288321   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288322    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288322   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288323    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288323   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288324    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288324   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288325    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288325   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288326    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288326   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288327    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288327   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288328    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288328   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288329    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288329   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288330    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288330   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288331    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288331   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288332    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288332   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288333    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288333   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288334    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
288334   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
288335    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
288335   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
288336    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
288336   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
288337    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
288337   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
288338    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288339    +* Ensmbl54: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing Residual Vars;
288340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288341    +if
288342    +F_DepVar NE '1'
288343    +AND F_DepVar NE '0'
288344    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
288345    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
288346    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
288347    +end;
MPRINT(EM_DIAGRAM):   end;
288348    +else do;
MPRINT(EM_DIAGRAM):   else do;
288349    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
288350    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
288351    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
288352    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
288353    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
288354    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
288355    +END;
MPRINT(EM_DIAGRAM):   END;
288356    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288357     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL54_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_VALIDATE.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
288358     quit;
288359     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl54_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl54_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl54_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
288419     filename _pref
288419   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
288420     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288421     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
288422    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288423    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
288424    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288425    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
288426    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
288427    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
288428    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
288429    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
288430    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
288431    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
288432    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
288433    +LENGTH _WARN_ $4
288434    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
288435    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
288436    +
288437    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
288438    +
288439    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
288440    +
288441    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
288442    +
288443    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
288444    +
288445    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
288446    +
288447    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
288448    +
288449    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
288450    +
288451    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
288452    +
288453    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
288454    +
288455    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
288456    +
288457    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
288458    +
288459    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
288460    +
288461    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
288462    +
288463    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
288464    +
288465    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
288466    +
288467    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
288468    +
288469    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
288470    +
288471    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
288472    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
288473    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
288474    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
288475    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
288476    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
288477    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
288478    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
288479    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
288480    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
288481    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
288482    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
288483    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
288484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
288485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288486    +end;
MPRINT(EM_DIAGRAM):   end;
288487    +else do;
MPRINT(EM_DIAGRAM):   else do;
288488    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
288489    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
288490    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
288491    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
288492    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
288493    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
288494    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
288495    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
288496    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
288497    +         end;
MPRINT(EM_DIAGRAM):   end;
288498    +         else do;
MPRINT(EM_DIAGRAM):   else do;
288499    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
288500    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
288501    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
288502    +            end;
MPRINT(EM_DIAGRAM):   end;
288503    +         end;
MPRINT(EM_DIAGRAM):   end;
288504    +      end;
MPRINT(EM_DIAGRAM):   end;
288505    +      else do;
MPRINT(EM_DIAGRAM):   else do;
288506    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
288507    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
288508    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
288509    +         end;
MPRINT(EM_DIAGRAM):   end;
288510    +      end;
MPRINT(EM_DIAGRAM):   end;
288511    +   end;
MPRINT(EM_DIAGRAM):   end;
288512    +   else do;
MPRINT(EM_DIAGRAM):   else do;
288513    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
288514    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
288515    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
288516    +      end;
MPRINT(EM_DIAGRAM):   end;
288517    +      else do;
MPRINT(EM_DIAGRAM):   else do;
288518    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
288519    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
288520    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
288521    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
288522    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
288523    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
288524    +         end;
MPRINT(EM_DIAGRAM):   end;
288525    +      end;
MPRINT(EM_DIAGRAM):   end;
288526    +   end;
MPRINT(EM_DIAGRAM):   end;
288527    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
288528    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
288529    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
288530    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
288531    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
288532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
288533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288534    +   end;
MPRINT(EM_DIAGRAM):   end;
288535    +end;
MPRINT(EM_DIAGRAM):   end;
288536    +
288537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288538    +*** Checking missing input Interval
288539    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
288540    +
288541    +IF NMISS(
288542    +   AcceptedCmpTotal ,
288543    +   Frq ,
288544    +   Mnt ,
288545    +   MntMeatProducts ,
288546    +   NumCatalogPurchases ,
288547    +   NumDealsPurchases ,
288548    +   NumWebVisitsMonth ,
288549    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
288550    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
288551    +
288552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288553    +END;
MPRINT(EM_DIAGRAM):   END;
288554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288555    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
288556    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288557    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288558    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
288559    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
288560    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
288561    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
288562    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
288563    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
288564    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
288565    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
288566    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
288567    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
288568    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
288569    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
288570    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
288571    +END;
MPRINT(EM_DIAGRAM):   END;
288572    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288573    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
288574    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
288575    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
288576    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
288577    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
288578    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
288579    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
288580    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
288581    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
288582    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
288583    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
288584    +   ELSE S_NumCatalogPurchases
288585    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
288586    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
288587    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
288588    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
288589    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
288590    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
288591    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
288592    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
288593    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
288594    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
288595    +END;
MPRINT(EM_DIAGRAM):   END;
288596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288597    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
288598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288600    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
288601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288602    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288603    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
288604    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
288605    +          +     6.08901143667375 * S_MntMeatProducts
288606    +          +     2.21464286693249 * S_NumCatalogPurchases
288607    +          +     0.88693497635794 * S_NumDealsPurchases
288608    +          +    -0.16352347343851 * S_NumWebVisitsMonth
288609    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
288610    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
288611    +          +     0.97693281807676 * Marital_StatusMarried
288612    +          +    -0.47353913752833 * Marital_StatusSingle
288613    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
288614    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
288615    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
288616    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
288617    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
288618    +END;
MPRINT(EM_DIAGRAM):   END;
288619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288620    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
288621    +END;
MPRINT(EM_DIAGRAM):   END;
288622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288623    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
288624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288625    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288626    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
288627    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
288628    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
288629    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
288630    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
288631    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
288632    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
288633    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
288634    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
288635    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
288636    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
288637    +END;
MPRINT(EM_DIAGRAM):   END;
288638    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288639    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
288640    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
288641    +END;
MPRINT(EM_DIAGRAM):   END;
288642    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
288643    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
288644    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
288645    +END;
MPRINT(EM_DIAGRAM):   END;
288646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288647    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
288648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288649    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
288650    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
288651    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
288652    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
288653    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
288654    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
288655    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
288656    +END;
MPRINT(EM_DIAGRAM):   END;
288657    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288658    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
288659    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288660    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288661     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
288662     quit;
288663     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288664     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288665     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288666     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
288667     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288669     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288670     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288672     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME
CREATOR);
288673     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288675     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288676     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288677     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288678     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288679     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
288680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
288681     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288682     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288683     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
288684     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288685     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288686     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288687     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288688     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288689     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288689   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 245 rows and 5 columns.
 
288690     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288691     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
288692     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 245 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
288693     filename _pref
288693   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
288694     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288695     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
288696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288697    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
288698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288699    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
288700    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
288701    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288702     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
288703     quit;
288704     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288705     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288706     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288707     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
288708     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288710     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288711     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288712     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288713     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
288714     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288716     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288717     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288718     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288719     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288720     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
288721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288722     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288723     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288724     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288725     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288726     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288727     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288728     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288729     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288730     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288730   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
288731     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288732     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
288733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288734     filename _pref
288734   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
288735     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288736     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
288737    +
288738    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
288739    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
288739   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
288740    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
288741    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
288742    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
288743    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
288744    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288745     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
288746     quit;
288747     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288748     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288749     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288750     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
288751     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288752     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288753     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288754     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288755     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288756     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
288757     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288759     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288760     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288761     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288763     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
288764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288765     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288768     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288769     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288770     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288771     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288772     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288773     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288773   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
288774     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288775     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
288776     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288777     filename _pref
288777   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
288778     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288779     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
288780    +
288781    +
288782    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
288783    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
288784    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
288785    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
288786    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
288787    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288788    +
288789    +
288790    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
288791    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
288792    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
288793    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
288794    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
288795    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288796    +
288797    +
288798    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
288799    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
288800    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
288801    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
288802    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
288803    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288804    +
288805    +
288806    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
288807    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
288808    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
288809    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
288810    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
288811    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288812    +
288813    +
288814    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
288815    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
288816    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
288817    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
288818    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
288819    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288820    +
288821    +
288822    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
288823    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
288824    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
288825    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
288826    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
288827    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288828    +
288829    +
288830    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
288831    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
288832    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
288833    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
288834    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
288835    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288836    +
288837    +
288838    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
288839    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
288840    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
288841    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
288842    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
288843    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288844    +if
288845    +_FILTERNORM1 not in ( '.')
288846    + and
288847    +_FILTERNORM2 not in ( '.')
288848    + and
288849    +_FILTERNORM3 not in ( '.')
288850    + and
288851    +_FILTERNORM4 not in ( '.')
288852    + and
288853    +_FILTERNORM5 not in ( '.')
288854    + and
288855    +_FILTERNORM6 not in ( '.')
288856    + and
288857    +_FILTERNORM7 not in ( ' ')
288858    + and
288859    +_FILTERNORM8 not in ( ' ')
288860    +and
288861    +( Dt_Customer ne .)
288862    +and ( Income ne . and (Income<=107000))
288863    +and ( Kidhome ne .)
288864    +and ( MntFishProducts ne .)
288865    +and ( MntFruits ne .)
288866    +and ( MntGoldProds ne .)
288867    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
288868    +and ( MntSweetProducts ne .)
288869    +and ( MntWines ne .)
288870    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
288871    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
288872    +and ( NumStorePurchases ne .)
288873    +and ( NumWebPurchases ne .)
288874    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
288875    +and ( Recency ne .)
288876    +and ( Teenhome ne .)
288877    +and ( Year_Birth ne .)
288878    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
288879    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
288880    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
288881    +end;
MPRINT(EM_DIAGRAM):   end;
288882    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
288883    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288884     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
288885     quit;
288886     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288887     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288888     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288889     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
288890     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288892     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288893     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288894     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288895     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
288896     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288898     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288899     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288900     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288902     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
288903     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
288904     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288905     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288907     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288908     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288909     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288910     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288911     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288912     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288912   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
288913     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
288914     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
288915     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 354 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
288916     %macro varDept(fcmpdata=,id=);
288917     %global nobs&id scoreFlag&id;
288918     %let scoreFlag&id = 0;
288919     %if &id=1 or ^&fcmpStart %then %do;
288920     proc sort data=&fcmpdata out=_temp&id nodupkey;
288921     by NAME;
288922     where id=&id and LHS in( %let j=1;
288923     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
288924     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
288925     "&var" %let j = %eval(&j+1);
288926     %end;
288927     );
288928     run;
288929     %let dsid = %sysfunc(open(_temp&id));
288930     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288931     %let dsid = %sysfunc(close(&dsid));
288932     %if &&nobs&id %then %do;
288933     %let scoreFlag&id = 1;
288934     %let fcmpStart = 1;
288935     %end;
288936     %else %let fcmpStart = 0;
288937     %end;
288938     %else %do;
288939     proc sort data=&fcmpdata out=_tempid;
288940     where id=&id;
288941     by LHS;
288942     run;
288943     %let dsid = %sysfunc(open(_tempid));
288944     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288945     %let dsid = %sysfunc(close(&dsid));
288946     %if ^&&nobs&id %then %do;
288947     proc datasets lib=work nolist;
288948     delete _tempid;
288949     run;
288950     quit;
288951     %end;
288952     %else %do;
288953     data _tempAll;
288954     set %let j=%eval(&id-1);
288955     %do x=1 %to &j;
288956     %if &&nobs&x %then %do;
288957     _temp&x %end;
288958     %end;
288959     ;
288960     run;
288961     proc sql;
288962     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
288962   ! work._tempid p2 where p.name=p2.lhs;
288963     quit;
288964     data _temp&id;
288965     set _temp&id;
288966     where LHS ne '' and NAME ne '' and Node ne '';
288967     run;
288968     proc datasets lib=work nolist;
288969     delete _tempAll;
288970     run;
288971     %let dsid = %sysfunc(open(_temp&id));
288972     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288973     %let dsid = %sysfunc(close(&dsid));
288974     %if ^&&nobs&id %then %do;
288975     proc datasets lib=work nolist;
288976     delete _temp&id;
288977     run;
288978     quit;
288979     %end;
288980     %else %do;
288981     %let scoreFlag&id = 1;
288982     data _temp&id;
288983     set _temp&id;
288984     where LHS ne NAME and node ne '';
288985     run;
288986     %let dsid = %sysfunc(open(_temp&id));
288987     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288988     %let dsid = %sysfunc(close(&dsid));
288989     %if ^&&nobs&id %then %do;
288990     proc datasets lib=work nolist;
288991     delete _temp&id;
288992     run;
288993     quit;
288994     %end;
288995     %else %do;
288996     proc sort data=_temp&id nodupkey;
288997     by LHS NAME;
288998     run;
288999     %end;
289000     %end;
289001     %end;
289002     %end;
289003     %mend varDept;
289004     %macro optCode(outdata=fcmpdata);
289005     %global fcmpStart;
289006     %let fcmpStart = 0;
289007     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
289008     %let NumNodes=9;
289009     %do k=1 %to &NumNodes;
289010     %vardept(fcmpdata=&outdata, id=&k);
289011     %end;
289012     %mend optCode;
289013     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 45 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
289014     filename _pref
289014   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
289015     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289016     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
289017    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289018    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
289019    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289020    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
289021    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
289022    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
289023    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
289024    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
289025    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
289026    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
289027    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
289028    +LENGTH _WARN_ $4
289029    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
289030    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
289031    +
289032    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
289033    +
289034    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
289035    +
289036    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
289037    +
289038    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
289039    +
289040    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
289041    +
289042    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
289043    +
289044    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
289045    +
289046    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
289047    +
289048    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
289049    +
289050    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
289051    +
289052    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
289053    +
289054    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
289055    +
289056    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
289057    +
289058    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
289059    +
289060    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
289061    +
289062    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
289063    +
289064    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
289065    +
289066    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
289067    +
289068    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
289069    +
289070    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
289071    +
289072    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
289073    +
289074    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
289075    +
289076    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
289077    +
289078    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
289079    +
289080    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
289081    +
289082    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
289083    +
289084    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
289085    +
289086    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
289087    +
289088    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
289089    +
289090    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
289091    +
289092    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
289093    +
289094    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
289095    +
289096    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
289097    +
289098    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
289099    +
289100    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
289101    +
289102    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
289103    +
289104    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
289105    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
289106    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
289107    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
289108    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
289109    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
289110    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
289111    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
289112    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
289113    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
289114    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
289115    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
289116    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
289117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289119    +end;
MPRINT(EM_DIAGRAM):   end;
289120    +else do;
MPRINT(EM_DIAGRAM):   else do;
289121    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
289122    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
289123    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289124    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
289125    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
289126    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
289127    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
289128    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
289129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
289130    +         end;
MPRINT(EM_DIAGRAM):   end;
289131    +         else do;
MPRINT(EM_DIAGRAM):   else do;
289132    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
289133    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
289134    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
289135    +            end;
MPRINT(EM_DIAGRAM):   end;
289136    +         end;
MPRINT(EM_DIAGRAM):   end;
289137    +      end;
MPRINT(EM_DIAGRAM):   end;
289138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
289139    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
289140    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
289141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
289142    +         end;
MPRINT(EM_DIAGRAM):   end;
289143    +      end;
MPRINT(EM_DIAGRAM):   end;
289144    +   end;
MPRINT(EM_DIAGRAM):   end;
289145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289146    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
289147    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
289148    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
289149    +      end;
MPRINT(EM_DIAGRAM):   end;
289150    +      else do;
MPRINT(EM_DIAGRAM):   else do;
289151    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
289152    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
289153    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
289154    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
289155    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
289156    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
289157    +         end;
MPRINT(EM_DIAGRAM):   end;
289158    +      end;
MPRINT(EM_DIAGRAM):   end;
289159    +   end;
MPRINT(EM_DIAGRAM):   end;
289160    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
289161    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
289162    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
289163    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
289164    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
289165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289167    +   end;
MPRINT(EM_DIAGRAM):   end;
289168    +end;
MPRINT(EM_DIAGRAM):   end;
289169    +
289170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289171    +*** Checking missing input Interval
289172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
289173    +
289174    +IF NMISS(
289175    +   AcceptedCmpTotal ,
289176    +   Frq ,
289177    +   Mnt ,
289178    +   MntMeatProducts ,
289179    +   NumCatalogPurchases ,
289180    +   NumDealsPurchases ,
289181    +   NumWebVisitsMonth ,
289182    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
289183    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
289184    +
289185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289186    +END;
MPRINT(EM_DIAGRAM):   END;
289187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289188    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
289189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289190    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289191    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289192    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
289193    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289194    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289195    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289196    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
289197    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
289198    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
289199    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
289200    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
289201    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
289202    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
289203    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289204    +END;
MPRINT(EM_DIAGRAM):   END;
289205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289206    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
289207    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289208    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
289209    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
289210    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289211    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
289212    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289213    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
289214    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289215    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
289216    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
289217    +   ELSE S_NumCatalogPurchases
289218    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
289219    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
289220    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
289221    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
289222    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
289223    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
289224    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
289225    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
289226    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
289227    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289228    +END;
MPRINT(EM_DIAGRAM):   END;
289229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289230    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
289231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289233    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
289234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289235    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289236    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
289237    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
289238    +          +     3.02405267314398 * S_MntMeatProducts
289239    +          +     0.25422172488707 * S_NumCatalogPurchases
289240    +          +     0.25977266371328 * S_NumDealsPurchases
289241    +          +    -0.26865365728773 * S_NumWebVisitsMonth
289242    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
289243    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
289244    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
289245    +          +    -0.64419071408502 * S_MntMeatProducts
289246    +          +    -0.49060224303044 * S_NumCatalogPurchases
289247    +          +    -0.04840762943457 * S_NumDealsPurchases
289248    +          +     -0.7656247386051 * S_NumWebVisitsMonth
289249    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
289250    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
289251    +          +    -0.05888536499281 * Marital_StatusMarried
289252    +          +    -0.22627441829205 * Marital_StatusSingle
289253    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
289254    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
289255    +          +     0.82536605771339 * Marital_StatusMarried
289256    +          +    -0.97196770004098 * Marital_StatusSingle
289257    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
289258    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
289259    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
289260    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
289261    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
289262    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
289263    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
289264    +END;
MPRINT(EM_DIAGRAM):   END;
289265    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289266    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
289267    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
289268    +END;
MPRINT(EM_DIAGRAM):   END;
289269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289270    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
289271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289272    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289273    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
289274    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
289275    +          +    -1.52187144029368 * S_MntMeatProducts
289276    +          +    -0.17233011764417 * S_NumCatalogPurchases
289277    +          +     0.08681674245114 * S_NumDealsPurchases
289278    +          +     0.13308256651831 * S_NumWebVisitsMonth
289279    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
289280    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
289281    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
289282    +          +     0.66187267823731 * S_MntMeatProducts
289283    +          +     1.52530454111654 * S_NumCatalogPurchases
289284    +          +     0.73982889008686 * S_NumDealsPurchases
289285    +          +     1.03760708665776 * S_NumWebVisitsMonth
289286    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
289287    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
289288    +          +    -0.57121500191985 * Marital_StatusMarried
289289    +          +     0.00575301863466 * Marital_StatusSingle
289290    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
289291    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
289292    +          +     0.68382990555761 * Marital_StatusMarried
289293    +          +    -0.40241665873988 * Marital_StatusSingle
289294    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
289295    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
289296    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
289297    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
289298    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
289299    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
289300    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
289301    +END;
MPRINT(EM_DIAGRAM):   END;
289302    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289303    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
289304    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
289305    +END;
MPRINT(EM_DIAGRAM):   END;
289306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289307    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
289308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289309    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289310    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
289311    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
289312    +          +    -2.40830591527574 * S_MntMeatProducts
289313    +          +    -0.89296864866675 * S_NumCatalogPurchases
289314    +          +     1.79889409325514 * S_NumDealsPurchases
289315    +          +    -0.33765715793031 * S_NumWebVisitsMonth
289316    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
289317    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
289318    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
289319    +          +     0.04224245417831 * S_MntMeatProducts
289320    +          +     0.25836861794607 * S_NumCatalogPurchases
289321    +          +     2.47909264202917 * S_NumDealsPurchases
289322    +          +     0.14790226792406 * S_NumWebVisitsMonth
289323    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
289324    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
289325    +          +     0.39103795234666 * Marital_StatusMarried
289326    +          +    -0.52822284221545 * Marital_StatusSingle
289327    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
289328    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
289329    +          +       1.975579060233 * Marital_StatusMarried
289330    +          +     0.15028521746762 * Marital_StatusSingle
289331    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
289332    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
289333    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
289334    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
289335    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
289336    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
289337    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
289338    +END;
MPRINT(EM_DIAGRAM):   END;
289339    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289340    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
289341    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
289342    +END;
MPRINT(EM_DIAGRAM):   END;
289343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289344    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
289345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289346    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289347    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
289348    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
289349    +          +     0.16060225059391 * S_MntMeatProducts
289350    +          +     1.53093292630033 * S_NumCatalogPurchases
289351    +          +     0.39573641806699 * S_NumDealsPurchases
289352    +          +    -0.95387142126649 * S_NumWebVisitsMonth
289353    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
289354    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
289355    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
289356    +          +     0.71628478327205 * S_MntMeatProducts
289357    +          +     0.15890352363556 * S_NumCatalogPurchases
289358    +          +    -1.12928875468011 * S_NumDealsPurchases
289359    +          +    -0.30108145274307 * S_NumWebVisitsMonth
289360    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
289361    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
289362    +          +     0.91966160839643 * Marital_StatusMarried
289363    +          +    -0.63411090570397 * Marital_StatusSingle
289364    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
289365    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
289366    +          +     0.77230489026504 * Marital_StatusMarried
289367    +          +     0.20456495503812 * Marital_StatusSingle
289368    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
289369    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
289370    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
289371    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
289372    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
289373    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
289374    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
289375    +END;
MPRINT(EM_DIAGRAM):   END;
289376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289377    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
289378    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
289379    +END;
MPRINT(EM_DIAGRAM):   END;
289380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289381    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
289382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289383    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289384    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
289385    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
289386    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
289387    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
289388    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
289389    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
289390    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
289391    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
289392    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
289393    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
289394    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
289395    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
289396    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
289397    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
289398    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
289399    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
289400    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
289401    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
289402    +END;
MPRINT(EM_DIAGRAM):   END;
289403    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289404    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
289405    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
289406    +END;
MPRINT(EM_DIAGRAM):   END;
289407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289408    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
289409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289410    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289411    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
289412    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
289413    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
289414    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
289415    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
289416    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
289417    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
289418    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
289419    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
289420    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
289421    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
289422    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
289423    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
289424    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
289425    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
289426    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
289427    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
289428    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
289429    +END;
MPRINT(EM_DIAGRAM):   END;
289430    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289431    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
289432    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
289433    +END;
MPRINT(EM_DIAGRAM):   END;
289434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289435    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
289436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289437    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289438    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
289439    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
289440    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
289441    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
289442    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
289443    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
289444    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
289445    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
289446    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
289447    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
289448    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
289449    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
289450    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
289451    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
289452    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
289453    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
289454    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
289455    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
289456    +END;
MPRINT(EM_DIAGRAM):   END;
289457    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289458    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
289459    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
289460    +END;
MPRINT(EM_DIAGRAM):   END;
289461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289462    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
289463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289464    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289465    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
289466    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
289467    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
289468    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
289469    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
289470    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
289471    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
289472    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
289473    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289474    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
289475    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
289476    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
289477    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
289478    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
289479    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
289480    +END;
MPRINT(EM_DIAGRAM):   END;
289481    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289482    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
289483    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
289484    +END;
MPRINT(EM_DIAGRAM):   END;
289485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289486    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
289487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289488    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289489    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
289490    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
289491    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
289492    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
289493    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
289494    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
289495    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
289496    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
289497    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289498    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
289499    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
289500    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
289501    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
289502    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
289503    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
289504    +END;
MPRINT(EM_DIAGRAM):   END;
289505    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289506    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
289507    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
289508    +END;
MPRINT(EM_DIAGRAM):   END;
289509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289510    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
289511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289512    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289513    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
289514    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
289515    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
289516    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
289517    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
289518    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
289519    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289520    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
289521    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
289522    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
289523    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
289524    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
289525    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
289526    +END;
MPRINT(EM_DIAGRAM):   END;
289527    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289528    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
289529    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
289530    +END;
MPRINT(EM_DIAGRAM):   END;
289531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289532    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
289533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289534    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289535    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
289536    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
289537    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
289538    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
289539    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
289540    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289541    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
289542    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
289543    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
289544    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
289545    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
289546    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
289547    +END;
MPRINT(EM_DIAGRAM):   END;
289548    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289549    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
289550    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
289551    +END;
MPRINT(EM_DIAGRAM):   END;
289552    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
289553    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
289554    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
289555    +END;
MPRINT(EM_DIAGRAM):   END;
289556    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289557    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
289558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289559    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
289560    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
289561    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
289562    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
289563    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
289564    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
289565    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
289566    +END;
MPRINT(EM_DIAGRAM):   END;
289567    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289568    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
289569    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289570    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289571     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
289572     quit;
289573     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289574     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289575     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289576     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
289577     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289579     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289580     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289581     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289582     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME
CREATOR);
289583     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289584     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289585     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289586     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289587     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289588     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289589     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
289590     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
289591     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289592     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289593     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289594     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289595     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289596     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289597     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289598     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289599     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289599   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1163 rows and 5 columns.
 
289600     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289601     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
289602     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1163 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1163 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289603     filename _pref
289603   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
289604     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289605     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
289606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289607    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
289608    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289609    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
289610    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
289611    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289612     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
289613     quit;
289614     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289615     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289616     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289617     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
289618     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289620     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289623     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
289624     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289626     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289627     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289628     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289629     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289630     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
289631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
289632     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289633     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289635     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289636     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289637     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289638     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289639     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289640     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289640   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
289641     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289642     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
289643     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1167 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289644     filename _pref
289644   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
289645     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289646     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
289647    +
289648    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
289649    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
289649   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
289650    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
289651    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
289652    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
289653    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
289654    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
The SAS System
 
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289655     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
289656     quit;
289657     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289658     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289659     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289660     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
289661     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289663     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289666     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
289667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289669     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289670     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289671     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289673     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
289674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289675     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289676     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289678     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289679     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289680     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289681     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289682     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289683     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289683   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
289684     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289685     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
289686     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289687     filename _pref
289687   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
289688     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289689     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
289690    +
289691    +
289692    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
289693    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
289694    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
289695    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
289696    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
289697    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289698    +
289699    +
289700    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
289701    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
289702    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
289703    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
289704    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
289705    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289706    +
289707    +
289708    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
289709    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
289710    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
289711    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
289712    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
289713    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289714    +
289715    +
289716    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
289717    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
289718    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
289719    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
289720    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
289721    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289722    +
289723    +
289724    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
289725    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
289726    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
289727    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
289728    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
289729    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289730    +
289731    +
289732    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
289733    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
289734    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
289735    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
289736    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
289737    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289738    +
289739    +
289740    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
289741    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
289742    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
289743    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
289744    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
289745    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289746    +
289747    +
289748    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
289749    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
289750    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
289751    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
289752    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
289753    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289754    +if
289755    +_FILTERNORM1 not in ( '.')
289756    + and
289757    +_FILTERNORM2 not in ( '.')
289758    + and
289759    +_FILTERNORM3 not in ( '.')
289760    + and
289761    +_FILTERNORM4 not in ( '.')
289762    + and
289763    +_FILTERNORM5 not in ( '.')
289764    + and
289765    +_FILTERNORM6 not in ( '.')
289766    + and
289767    +_FILTERNORM7 not in ( ' ')
289768    + and
289769    +_FILTERNORM8 not in ( ' ')
289770    +and
289771    +( Dt_Customer ne .)
289772    +and ( Income ne . and (Income<=107000))
289773    +and ( Kidhome ne .)
289774    +and ( MntFishProducts ne .)
289775    +and ( MntFruits ne .)
289776    +and ( MntGoldProds ne .)
289777    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
289778    +and ( MntSweetProducts ne .)
289779    +and ( MntWines ne .)
289780    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
289781    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
289782    +and ( NumStorePurchases ne .)
289783    +and ( NumWebPurchases ne .)
289784    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
289785    +and ( Recency ne .)
289786    +and ( Teenhome ne .)
289787    +and ( Year_Birth ne .)
289788    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
289789    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
289790    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
289791    +end;
MPRINT(EM_DIAGRAM):   end;
289792    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
289793    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289794     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
289795     quit;
289796     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289797     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289798     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289799     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
289800     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289802     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289803     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289805     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
289806     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289807     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289808     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289809     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289810     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289812     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
289813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
289814     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289815     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289817     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289818     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289819     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289820     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289821     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289822     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289822   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
289823     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289824     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
289825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 1272 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289826     %macro varDept(fcmpdata=,id=);
289827     %global nobs&id scoreFlag&id;
289828     %let scoreFlag&id = 0;
289829     %if &id=1 or ^&fcmpStart %then %do;
289830     proc sort data=&fcmpdata out=_temp&id nodupkey;
289831     by NAME;
289832     where id=&id and LHS in( %let j=1;
289833     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
289834     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
289835     "&var" %let j = %eval(&j+1);
289836     %end;
289837     );
289838     run;
289839     %let dsid = %sysfunc(open(_temp&id));
289840     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289841     %let dsid = %sysfunc(close(&dsid));
289842     %if &&nobs&id %then %do;
289843     %let scoreFlag&id = 1;
289844     %let fcmpStart = 1;
289845     %end;
289846     %else %let fcmpStart = 0;
289847     %end;
289848     %else %do;
289849     proc sort data=&fcmpdata out=_tempid;
289850     where id=&id;
289851     by LHS;
289852     run;
289853     %let dsid = %sysfunc(open(_tempid));
289854     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289855     %let dsid = %sysfunc(close(&dsid));
289856     %if ^&&nobs&id %then %do;
289857     proc datasets lib=work nolist;
289858     delete _tempid;
289859     run;
289860     quit;
289861     %end;
289862     %else %do;
289863     data _tempAll;
289864     set %let j=%eval(&id-1);
289865     %do x=1 %to &j;
289866     %if &&nobs&x %then %do;
289867     _temp&x %end;
289868     %end;
289869     ;
289870     run;
289871     proc sql;
289872     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
289872   ! work._tempid p2 where p.name=p2.lhs;
289873     quit;
289874     data _temp&id;
289875     set _temp&id;
289876     where LHS ne '' and NAME ne '' and Node ne '';
289877     run;
289878     proc datasets lib=work nolist;
289879     delete _tempAll;
289880     run;
289881     %let dsid = %sysfunc(open(_temp&id));
289882     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289883     %let dsid = %sysfunc(close(&dsid));
289884     %if ^&&nobs&id %then %do;
289885     proc datasets lib=work nolist;
289886     delete _temp&id;
289887     run;
289888     quit;
289889     %end;
289890     %else %do;
289891     %let scoreFlag&id = 1;
289892     data _temp&id;
289893     set _temp&id;
289894     where LHS ne NAME and node ne '';
289895     run;
289896     %let dsid = %sysfunc(open(_temp&id));
289897     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289898     %let dsid = %sysfunc(close(&dsid));
289899     %if ^&&nobs&id %then %do;
289900     proc datasets lib=work nolist;
289901     delete _temp&id;
289902     run;
289903     quit;
289904     %end;
289905     %else %do;
289906     proc sort data=_temp&id nodupkey;
289907     by LHS NAME;
289908     run;
289909     %end;
289910     %end;
289911     %end;
289912     %end;
289913     %mend varDept;
289914     %macro optCode(outdata=fcmpdata);
289915     %global fcmpStart;
289916     %let fcmpStart = 0;
289917     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
289918     %let NumNodes=9;
289919     %do k=1 %to &NumNodes;
289920     %vardept(fcmpdata=&outdata, id=&k);
289921     %end;
289922     %mend optCode;
289923     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 102 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 71 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
289924     filename _pref
289924   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
289925     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289926     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
289927    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289928    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
289929    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289930    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
289931    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
289932    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
289933    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
289934    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
289935    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
289936    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
289937    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
289938    +LENGTH _WARN_ $4
289939    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
289940    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
289941    +
289942    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
289943    +
289944    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
289945    +
289946    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
289947    +
289948    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
289949    +
289950    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
289951    +
289952    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
289953    +
289954    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
289955    +
289956    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
289957    +
289958    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
289959    +
289960    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
289961    +
289962    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
289963    +
289964    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
289965    +
289966    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
289967    +
289968    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
289969    +
289970    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
289971    +
289972    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
289973    +
289974    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
289975    +
289976    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
289977    +
289978    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
289979    +
289980    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
289981    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
289982    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
289983    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
289984    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
289985    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
289986    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
289987    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
289988    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
289989    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
289990    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
289991    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
289992    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
289993    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289994    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289995    +end;
MPRINT(EM_DIAGRAM):   end;
289996    +else do;
MPRINT(EM_DIAGRAM):   else do;
289997    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
289998    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
289999    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290000    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
290001    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
290002    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
290003    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
290004    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
290005    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290006    +         end;
MPRINT(EM_DIAGRAM):   end;
290007    +         else do;
MPRINT(EM_DIAGRAM):   else do;
290008    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
290009    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
290010    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290011    +            end;
MPRINT(EM_DIAGRAM):   end;
290012    +         end;
MPRINT(EM_DIAGRAM):   end;
290013    +      end;
MPRINT(EM_DIAGRAM):   end;
290014    +      else do;
MPRINT(EM_DIAGRAM):   else do;
290015    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
290016    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
290017    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290018    +         end;
MPRINT(EM_DIAGRAM):   end;
290019    +      end;
MPRINT(EM_DIAGRAM):   end;
290020    +   end;
MPRINT(EM_DIAGRAM):   end;
290021    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290022    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
290023    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
290024    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290025    +      end;
MPRINT(EM_DIAGRAM):   end;
290026    +      else do;
MPRINT(EM_DIAGRAM):   else do;
290027    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
290028    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
290029    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
290030    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
290031    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
290032    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290033    +         end;
MPRINT(EM_DIAGRAM):   end;
290034    +      end;
MPRINT(EM_DIAGRAM):   end;
290035    +   end;
MPRINT(EM_DIAGRAM):   end;
290036    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
290037    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
290038    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
290039    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
290040    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
290041    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290042    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290043    +   end;
MPRINT(EM_DIAGRAM):   end;
290044    +end;
MPRINT(EM_DIAGRAM):   end;
290045    +
290046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290047    +*** Checking missing input Interval
290048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
290049    +
290050    +IF NMISS(
290051    +   AcceptedCmpTotal ,
290052    +   Frq ,
290053    +   Mnt ,
290054    +   MntMeatProducts ,
290055    +   NumCatalogPurchases ,
290056    +   NumDealsPurchases ,
290057    +   NumWebVisitsMonth ,
290058    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
290059    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
290060    +
290061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290062    +END;
MPRINT(EM_DIAGRAM):   END;
290063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290064    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
290065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290066    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290067    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
290068    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
290069    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
290070    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
290071    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
290072    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
290073    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
290074    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
290075    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
290076    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
290077    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
290078    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
290079    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
290080    +END;
MPRINT(EM_DIAGRAM):   END;
290081    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290082    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
290083    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
290084    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
290085    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
290086    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
290087    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
290088    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
290089    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
290090    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
290091    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
290092    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
290093    +   ELSE S_NumCatalogPurchases
290094    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
290095    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
290096    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
290097    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
290098    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
290099    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
290100    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
290101    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
290102    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
290103    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
290104    +END;
MPRINT(EM_DIAGRAM):   END;
290105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290106    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
290107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290109    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
290110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290111    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290112    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
290113    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
290114    +          +     0.02561809182055 * S_MntMeatProducts
290115    +          +     -0.1793288912734 * S_NumCatalogPurchases
290116    +          +    -0.37563080213093 * S_NumDealsPurchases
290117    +          +    -0.48858578777845 * S_NumWebVisitsMonth
290118    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
290119    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
290120    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
290121    +          +     1.94302986779634 * S_MntMeatProducts
290122    +          +      0.2669037763846 * S_NumCatalogPurchases
290123    +          +     0.29313104233947 * S_NumDealsPurchases
290124    +          +    -0.30591479309812 * S_NumWebVisitsMonth
290125    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
290126    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
290127    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
290128    +          +    -0.76055629383789 * S_MntMeatProducts
290129    +          +    -0.40114802991127 * S_NumCatalogPurchases
290130    +          +    -1.12215966034372 * S_NumDealsPurchases
290131    +          +    -0.30978133586417 * S_NumWebVisitsMonth
290132    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
290133    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
290134    +          +     0.20445663414925 * Marital_StatusMarried
290135    +          +     0.16369117386202 * Marital_StatusSingle
290136    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
290137    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
290138    +          +     0.09645374599508 * Marital_StatusMarried
290139    +          +     -0.0816282741981 * Marital_StatusSingle
290140    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
290141    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
290142    +          +     -3.9031880089591 * Marital_StatusMarried
290143    +          +      1.6995748309328 * Marital_StatusSingle
290144    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
290145    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
290146    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
290147    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
290148    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
290149    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
290150    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
290151    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
290152    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
290153    +END;
MPRINT(EM_DIAGRAM):   END;
290154    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290155    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
290156    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
290157    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
290158    +END;
MPRINT(EM_DIAGRAM):   END;
290159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290160    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
290161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290162    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290163    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
290164    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
290165    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
290166    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
290167    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
290168    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
290169    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
290170    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
290171    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
290172    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
290173    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
290174    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
290175    +END;
MPRINT(EM_DIAGRAM):   END;
290176    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290177    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
290178    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
290179    +END;
MPRINT(EM_DIAGRAM):   END;
290180    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
290181    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
290182    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
290183    +END;
MPRINT(EM_DIAGRAM):   END;
290184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290185    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
290186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290187    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
290188    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
290189    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
290190    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
290191    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
290192    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
290193    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
290194    +END;
MPRINT(EM_DIAGRAM):   END;
290195    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
290196    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
290197    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
290198    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290199     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290200     quit;
290201     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290202     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290203     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290204     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
290205     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290206     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290207     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290208     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290209     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290210     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME
CREATOR);
290211     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290212     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290213     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290214     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290215     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290216     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290217     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
290218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
290219     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290220     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290222     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290223     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290224     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290225     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290226     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290227     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290227   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 305 rows and 5 columns.
 
290228     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290229     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290230     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 305 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 305 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290231     filename _pref
290231   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
290232     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290233     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
290234    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290235    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
290236    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290237    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
290238    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
290239    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290240     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290241     quit;
290242     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290243     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290244     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290245     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
290246     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290248     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290249     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290250     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290251     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
290252     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290253     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290254     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290255     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290256     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290257     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290258     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
290259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290260     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290261     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290262     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
290263     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290264     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290265     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290266     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290267     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290268     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290268   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
290269     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290270     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290272     filename _pref
290272   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
290273     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290274     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
290275    +
290276    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
290277    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
290277   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
290278    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
290279    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
290280    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
290281    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
290282    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290283     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290284     quit;
290285     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290286     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290287     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290288     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
290289     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290291     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290294     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
290295     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290296     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290297     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290298     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290299     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290301     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
290302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290303     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290304     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290306     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290307     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290308     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290309     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290310     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290311     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290311   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
290312     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290313     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290314     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 348 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290315     filename _pref
290315   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
290316     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290317     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
290318    +
290319    +
290320    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
290321    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
290322    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
290323    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
290324    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
290325    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290326    +
290327    +
290328    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
290329    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
290330    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
290331    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
290332    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
290333    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290334    +
290335    +
290336    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
290337    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
290338    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
290339    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
290340    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
290341    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290342    +
290343    +
290344    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
290345    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
290346    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
290347    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
290348    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
290349    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290350    +
290351    +
290352    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
290353    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
290354    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
290355    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
290356    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
290357    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290358    +
290359    +
290360    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
290361    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
290362    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
290363    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
290364    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
290365    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290366    +
290367    +
290368    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
290369    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
290370    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
290371    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
290372    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
290373    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290374    +
290375    +
290376    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
290377    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
290378    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
290379    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
290380    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
290381    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290382    +if
290383    +_FILTERNORM1 not in ( '.')
290384    + and
290385    +_FILTERNORM2 not in ( '.')
290386    + and
290387    +_FILTERNORM3 not in ( '.')
290388    + and
290389    +_FILTERNORM4 not in ( '.')
290390    + and
290391    +_FILTERNORM5 not in ( '.')
290392    + and
290393    +_FILTERNORM6 not in ( '.')
290394    + and
290395    +_FILTERNORM7 not in ( ' ')
290396    + and
290397    +_FILTERNORM8 not in ( ' ')
290398    +and
290399    +( Dt_Customer ne .)
290400    +and ( Income ne . and (Income<=107000))
290401    +and ( Kidhome ne .)
290402    +and ( MntFishProducts ne .)
290403    +and ( MntFruits ne .)
290404    +and ( MntGoldProds ne .)
290405    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
290406    +and ( MntSweetProducts ne .)
290407    +and ( MntWines ne .)
290408    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
290409    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
290410    +and ( NumStorePurchases ne .)
290411    +and ( NumWebPurchases ne .)
290412    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
290413    +and ( Recency ne .)
290414    +and ( Teenhome ne .)
290415    +and ( Year_Birth ne .)
290416    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
290417    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
290418    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
290419    +end;
MPRINT(EM_DIAGRAM):   end;
290420    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
290421    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290422     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290423     quit;
290424     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290425     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290426     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290427     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
290428     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290429     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290430     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290431     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290433     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
290434     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290436     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290437     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290438     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290439     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290440     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
290441     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
290442     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290443     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290444     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290445     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290446     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290447     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290448     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290449     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290450     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290450   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
290451     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
290452     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290453     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 414 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290454     %macro varDept(fcmpdata=,id=);
290455     %global nobs&id scoreFlag&id;
290456     %let scoreFlag&id = 0;
290457     %if &id=1 or ^&fcmpStart %then %do;
290458     proc sort data=&fcmpdata out=_temp&id nodupkey;
290459     by NAME;
290460     where id=&id and LHS in( %let j=1;
290461     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
290462     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
290463     "&var" %let j = %eval(&j+1);
290464     %end;
290465     );
290466     run;
290467     %let dsid = %sysfunc(open(_temp&id));
290468     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290469     %let dsid = %sysfunc(close(&dsid));
290470     %if &&nobs&id %then %do;
290471     %let scoreFlag&id = 1;
290472     %let fcmpStart = 1;
290473     %end;
290474     %else %let fcmpStart = 0;
290475     %end;
290476     %else %do;
290477     proc sort data=&fcmpdata out=_tempid;
290478     where id=&id;
290479     by LHS;
290480     run;
290481     %let dsid = %sysfunc(open(_tempid));
290482     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290483     %let dsid = %sysfunc(close(&dsid));
290484     %if ^&&nobs&id %then %do;
290485     proc datasets lib=work nolist;
290486     delete _tempid;
290487     run;
290488     quit;
290489     %end;
290490     %else %do;
290491     data _tempAll;
290492     set %let j=%eval(&id-1);
290493     %do x=1 %to &j;
290494     %if &&nobs&x %then %do;
290495     _temp&x %end;
290496     %end;
290497     ;
290498     run;
290499     proc sql;
290500     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
290500   ! work._tempid p2 where p.name=p2.lhs;
290501     quit;
290502     data _temp&id;
290503     set _temp&id;
290504     where LHS ne '' and NAME ne '' and Node ne '';
290505     run;
290506     proc datasets lib=work nolist;
290507     delete _tempAll;
290508     run;
290509     %let dsid = %sysfunc(open(_temp&id));
290510     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290511     %let dsid = %sysfunc(close(&dsid));
290512     %if ^&&nobs&id %then %do;
290513     proc datasets lib=work nolist;
290514     delete _temp&id;
290515     run;
290516     quit;
290517     %end;
290518     %else %do;
290519     %let scoreFlag&id = 1;
290520     data _temp&id;
290521     set _temp&id;
290522     where LHS ne NAME and node ne '';
290523     run;
290524     %let dsid = %sysfunc(open(_temp&id));
290525     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290526     %let dsid = %sysfunc(close(&dsid));
290527     %if ^&&nobs&id %then %do;
290528     proc datasets lib=work nolist;
290529     delete _temp&id;
290530     run;
290531     quit;
290532     %end;
290533     %else %do;
290534     proc sort data=_temp&id nodupkey;
290535     by LHS NAME;
290536     run;
290537     %end;
290538     %end;
290539     %end;
290540     %end;
290541     %mend varDept;
290542     %macro optCode(outdata=fcmpdata);
290543     %global fcmpStart;
290544     %let fcmpStart = 0;
290545     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
290546     %let NumNodes=9;
290547     %do k=1 %to &NumNodes;
290548     %vardept(fcmpdata=&outdata, id=&k);
290549     %end;
290550     %mend optCode;
290551     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 37 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
290552     filename _pref
290552   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
290553     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290554     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
290555    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
290556    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
290557    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
290558    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
290559    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
290560    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
290561    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
290562    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
290563    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
290564    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
290565    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
290566    +LENGTH _WARN_ $4
290567    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
290568    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
290569    +
290570    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
290571    +
290572    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
290573    +
290574    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
290575    +
290576    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
290577    +
290578    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
290579    +
290580    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
290581    +
290582    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
290583    +
290584    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
290585    +
290586    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
290587    +
290588    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
290589    +
290590    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
290591    +
290592    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
290593    +
290594    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
290595    +
290596    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
290597    +
290598    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
290599    +
290600    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
290601    +
290602    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
290603    +
290604    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
290605    +
290606    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
290607    +
290608    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
290609    +
290610    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
290611    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
290612    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
290613    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
290614    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
290615    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
290616    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
290617    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
290618    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
290619    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
290620    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
290621    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
290622    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
290623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290625    +end;
MPRINT(EM_DIAGRAM):   end;
290626    +else do;
MPRINT(EM_DIAGRAM):   else do;
290627    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
290628    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
290629    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290630    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
290631    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
290632    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
290633    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
290634    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
290635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290636    +         end;
MPRINT(EM_DIAGRAM):   end;
290637    +         else do;
MPRINT(EM_DIAGRAM):   else do;
290638    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
290639    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
290640    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290641    +            end;
MPRINT(EM_DIAGRAM):   end;
290642    +         end;
MPRINT(EM_DIAGRAM):   end;
290643    +      end;
MPRINT(EM_DIAGRAM):   end;
290644    +      else do;
MPRINT(EM_DIAGRAM):   else do;
290645    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
290646    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
290647    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290648    +         end;
MPRINT(EM_DIAGRAM):   end;
290649    +      end;
MPRINT(EM_DIAGRAM):   end;
290650    +   end;
MPRINT(EM_DIAGRAM):   end;
290651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290652    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
290653    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
290654    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290655    +      end;
MPRINT(EM_DIAGRAM):   end;
290656    +      else do;
MPRINT(EM_DIAGRAM):   else do;
290657    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
290658    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
290659    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
290660    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
290661    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
290662    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
290663    +         end;
MPRINT(EM_DIAGRAM):   end;
290664    +      end;
MPRINT(EM_DIAGRAM):   end;
290665    +   end;
MPRINT(EM_DIAGRAM):   end;
290666    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
290667    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
290668    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
290669    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
290670    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
290671    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290672    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290673    +   end;
MPRINT(EM_DIAGRAM):   end;
290674    +end;
MPRINT(EM_DIAGRAM):   end;
290675    +
290676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290677    +*** Checking missing input Interval
290678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
290679    +
290680    +IF NMISS(
290681    +   AcceptedCmpTotal ,
290682    +   Frq ,
290683    +   Mnt ,
290684    +   MntMeatProducts ,
290685    +   NumCatalogPurchases ,
290686    +   NumDealsPurchases ,
290687    +   NumWebVisitsMonth ,
290688    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
290689    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
290690    +
290691    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290692    +END;
MPRINT(EM_DIAGRAM):   END;
290693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290694    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
290695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290697    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
290698    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
290699    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
290700    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
290701    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
290702    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
290703    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
290704    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
290705    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
290706    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
290707    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
290708    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
290709    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
290710    +END;
MPRINT(EM_DIAGRAM):   END;
290711    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290712    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
290713    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
290714    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
290715    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
290716    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
290717    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
290718    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
290719    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
290720    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
290721    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
290722    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
290723    +   ELSE S_NumCatalogPurchases
290724    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
290725    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
290726    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
290727    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
290728    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
290729    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
290730    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
290731    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
290732    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
290733    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
290734    +END;
MPRINT(EM_DIAGRAM):   END;
290735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290736    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
290737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290739    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
290740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290741    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290742    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
290743    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
290744    +          +      0.2338265945616 * S_MntMeatProducts
290745    +          +     0.01564313414142 * S_NumCatalogPurchases
290746    +          +    -0.07464304384577 * S_NumDealsPurchases
290747    +          +    -0.08299095200051 * S_NumWebVisitsMonth
290748    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
290749    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
290750    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
290751    +          +     -0.3893643428589 * S_MntMeatProducts
290752    +          +    -0.11487225011852 * S_NumCatalogPurchases
290753    +          +       0.001237145136 * S_NumDealsPurchases
290754    +          +    -0.04234500703321 * S_NumWebVisitsMonth
290755    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
290756    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
290757    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
290758    +          +    -0.27963474874984 * S_MntMeatProducts
290759    +          +     0.01939450840376 * S_NumCatalogPurchases
290760    +          +    -0.03907394757592 * S_NumDealsPurchases
290761    +          +     0.06752842740103 * S_NumWebVisitsMonth
290762    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
290763    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
290764    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
290765    +          +     0.09842717305515 * S_MntMeatProducts
290766    +          +     0.48040050668836 * S_NumCatalogPurchases
290767    +          +     0.55911507039756 * S_NumDealsPurchases
290768    +          +     0.35441361757916 * S_NumWebVisitsMonth
290769    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
290770    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
290771    +          +     0.13423943689575 * Marital_StatusMarried
290772    +          +    -0.01496857872487 * Marital_StatusSingle
290773    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
290774    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
290775    +          +     0.03005244373637 * Marital_StatusMarried
290776    +          +    -0.06891231360799 * Marital_StatusSingle
290777    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
290778    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
290779    +          +     0.01694145364157 * Marital_StatusMarried
290780    +          +    -0.05183794192194 * Marital_StatusSingle
290781    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
290782    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
290783    +          +     0.44185773223966 * Marital_StatusMarried
290784    +          +     -0.6351733171702 * Marital_StatusSingle
290785    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
290786    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
290787    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
290788    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
290789    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
290790    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
290791    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
290792    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
290793    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
290794    +END;
MPRINT(EM_DIAGRAM):   END;
290795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290796    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
290797    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
290798    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
290799    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
290800    +END;
MPRINT(EM_DIAGRAM):   END;
290801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290802    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
290803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290804    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
290805    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
290806    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
290807    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
290808    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
290809    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
290810    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
290811    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
290812    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
290813    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
290814    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
290815    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
290816    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
290817    +END;
MPRINT(EM_DIAGRAM):   END;
290818    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
290819    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
290820    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
290821    +END;
MPRINT(EM_DIAGRAM):   END;
290822    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
290823    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
290824    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
290825    +END;
MPRINT(EM_DIAGRAM):   END;
290826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290827    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
290828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
290829    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
290830    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
290831    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
290832    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
290833    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
290834    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
290835    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
290836    +END;
MPRINT(EM_DIAGRAM):   END;
290837    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
290838    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
290839    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
290840    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290841     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290842     quit;
290843     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290844     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290845     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290846     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
290847     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290849     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290851     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290852     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME
CREATOR);
290853     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290855     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290856     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290857     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290859     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
290860     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
290861     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290862     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290863     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290864     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290865     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290866     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290867     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
290868     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290869     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290869   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 326 rows and 5 columns.
 
290870     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290871     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290872     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 326 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290873     filename _pref
290873   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
290874     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290875     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
290876    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290877    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
290878    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290879    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
290880    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
290881    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290882     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290883     quit;
290884     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290885     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290886     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290887     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
290888     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290890     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290893     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
290894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290896     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290897     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290898     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290900     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
290901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
290902     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290903     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290905     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290906     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290907     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290908     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290909     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290910     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290910   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
290911     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290912     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290913     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290914     filename _pref
290914   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
290915     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290916     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
290917    +
290918    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
290919    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
290919   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
290920    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
290921    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
290922    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
290923    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
290924    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290925     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
290926     quit;
290927     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290928     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290929     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290930     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
290931     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290933     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290936     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
290937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290939     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290940     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290941     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290942     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290943     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
290944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290945     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290946     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
290948     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290949     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290950     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290951     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290952     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290953     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290953   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
290954     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290955     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
290956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
290957     filename _pref
290957   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
290958     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290959     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
290960    +
290961    +
290962    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
290963    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
290964    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
290965    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
290966    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
290967    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290968    +
290969    +
290970    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
290971    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
290972    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
290973    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
290974    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
290975    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290976    +
290977    +
290978    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
290979    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
290980    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
290981    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
290982    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
290983    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290984    +
290985    +
290986    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
290987    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
290988    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
290989    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
290990    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
290991    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290992    +
290993    +
290994    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
290995    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
290996    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
290997    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
290998    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
290999    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291000    +
291001    +
291002    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
291003    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
291004    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
291005    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
291006    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
291007    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291008    +
291009    +
291010    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
291011    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
291012    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
291013    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
291014    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
291015    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291016    +
291017    +
291018    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
291019    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
291020    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
291021    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
291022    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
291023    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291024    +if
291025    +_FILTERNORM1 not in ( '.')
291026    + and
291027    +_FILTERNORM2 not in ( '.')
291028    + and
291029    +_FILTERNORM3 not in ( '.')
291030    + and
291031    +_FILTERNORM4 not in ( '.')
291032    + and
291033    +_FILTERNORM5 not in ( '.')
291034    + and
291035    +_FILTERNORM6 not in ( '.')
291036    + and
291037    +_FILTERNORM7 not in ( ' ')
291038    + and
291039    +_FILTERNORM8 not in ( ' ')
291040    +and
291041    +( Dt_Customer ne .)
291042    +and ( Income ne . and (Income<=107000))
291043    +and ( Kidhome ne .)
291044    +and ( MntFishProducts ne .)
291045    +and ( MntFruits ne .)
291046    +and ( MntGoldProds ne .)
291047    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
291048    +and ( MntSweetProducts ne .)
291049    +and ( MntWines ne .)
291050    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
291051    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
291052    +and ( NumStorePurchases ne .)
291053    +and ( NumWebPurchases ne .)
291054    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
291055    +and ( Recency ne .)
291056    +and ( Teenhome ne .)
291057    +and ( Year_Birth ne .)
291058    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
291059    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
291060    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
291061    +end;
MPRINT(EM_DIAGRAM):   end;
291062    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
291063    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291064     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291065     quit;
291066     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291067     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291068     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291069     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
291070     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291071     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291072     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291074     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291075     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
291076     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291077     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291078     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291079     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291080     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291081     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291082     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
291083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291084     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291085     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291086     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291087     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291088     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291089     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291090     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291091     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291092     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291092   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
291093     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291094     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
291095     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291096     %macro varDept(fcmpdata=,id=);
291097     %global nobs&id scoreFlag&id;
291098     %let scoreFlag&id = 0;
291099     %if &id=1 or ^&fcmpStart %then %do;
291100     proc sort data=&fcmpdata out=_temp&id nodupkey;
291101     by NAME;
291102     where id=&id and LHS in( %let j=1;
291103     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
291104     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
291105     "&var" %let j = %eval(&j+1);
291106     %end;
291107     );
291108     run;
291109     %let dsid = %sysfunc(open(_temp&id));
291110     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291111     %let dsid = %sysfunc(close(&dsid));
291112     %if &&nobs&id %then %do;
291113     %let scoreFlag&id = 1;
291114     %let fcmpStart = 1;
291115     %end;
291116     %else %let fcmpStart = 0;
291117     %end;
291118     %else %do;
291119     proc sort data=&fcmpdata out=_tempid;
291120     where id=&id;
291121     by LHS;
291122     run;
291123     %let dsid = %sysfunc(open(_tempid));
291124     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291125     %let dsid = %sysfunc(close(&dsid));
291126     %if ^&&nobs&id %then %do;
291127     proc datasets lib=work nolist;
291128     delete _tempid;
291129     run;
291130     quit;
291131     %end;
291132     %else %do;
291133     data _tempAll;
291134     set %let j=%eval(&id-1);
291135     %do x=1 %to &j;
291136     %if &&nobs&x %then %do;
291137     _temp&x %end;
291138     %end;
291139     ;
291140     run;
291141     proc sql;
291142     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
291142   ! work._tempid p2 where p.name=p2.lhs;
291143     quit;
291144     data _temp&id;
291145     set _temp&id;
291146     where LHS ne '' and NAME ne '' and Node ne '';
291147     run;
291148     proc datasets lib=work nolist;
291149     delete _tempAll;
291150     run;
291151     %let dsid = %sysfunc(open(_temp&id));
291152     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291153     %let dsid = %sysfunc(close(&dsid));
291154     %if ^&&nobs&id %then %do;
291155     proc datasets lib=work nolist;
291156     delete _temp&id;
291157     run;
291158     quit;
291159     %end;
291160     %else %do;
291161     %let scoreFlag&id = 1;
291162     data _temp&id;
291163     set _temp&id;
291164     where LHS ne NAME and node ne '';
291165     run;
291166     %let dsid = %sysfunc(open(_temp&id));
291167     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291168     %let dsid = %sysfunc(close(&dsid));
291169     %if ^&&nobs&id %then %do;
291170     proc datasets lib=work nolist;
291171     delete _temp&id;
291172     run;
291173     quit;
291174     %end;
291175     %else %do;
291176     proc sort data=_temp&id nodupkey;
291177     by LHS NAME;
291178     run;
291179     %end;
291180     %end;
291181     %end;
291182     %end;
291183     %mend varDept;
291184     %macro optCode(outdata=fcmpdata);
291185     %global fcmpStart;
291186     %let fcmpStart = 0;
291187     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
291188     %let NumNodes=9;
291189     %do k=1 %to &NumNodes;
291190     %vardept(fcmpdata=&outdata, id=&k);
291191     %end;
291192     %mend optCode;
291193     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
291194     filename _pref
291194   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
291195     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291196     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
291197    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
291198    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
291199    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
291200    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
291201    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
291202    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
291203    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
291204    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
291205    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
291206    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
291207    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
291208    +LENGTH _WARN_ $4
291209    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
291210    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
291211    +
291212    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
291213    +
291214    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
291215    +
291216    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
291217    +
291218    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
291219    +
291220    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
291221    +
291222    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
291223    +
291224    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
291225    +
291226    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
291227    +
291228    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
291229    +
291230    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
291231    +
291232    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
291233    +
291234    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
291235    +
291236    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
291237    +
291238    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
291239    +
291240    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
291241    +
291242    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
291243    +
291244    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
291245    +
291246    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
291247    +
291248    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
291249    +
291250    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
291251    +
291252    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
291253    +
291254    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
291255    +
291256    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
291257    +
291258    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
291259    +
291260    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
291261    +
291262    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
291263    +
291264    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
291265    +
291266    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
291267    +
291268    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
291269    +
291270    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
291271    +
291272    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
291273    +
291274    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
291275    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
291276    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
291277    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
291278    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
291279    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
291280    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
291281    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
291282    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
291283    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
291284    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
291285    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
291286    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
291287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
291288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291289    +end;
MPRINT(EM_DIAGRAM):   end;
291290    +else do;
MPRINT(EM_DIAGRAM):   else do;
291291    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
291292    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
291293    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
291294    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
291295    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
291296    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
291297    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
291298    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
291299    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
291300    +         end;
MPRINT(EM_DIAGRAM):   end;
291301    +         else do;
MPRINT(EM_DIAGRAM):   else do;
291302    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
291303    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
291304    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
291305    +            end;
MPRINT(EM_DIAGRAM):   end;
291306    +         end;
MPRINT(EM_DIAGRAM):   end;
291307    +      end;
MPRINT(EM_DIAGRAM):   end;
291308    +      else do;
MPRINT(EM_DIAGRAM):   else do;
291309    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
291310    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
291311    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
291312    +         end;
MPRINT(EM_DIAGRAM):   end;
291313    +      end;
MPRINT(EM_DIAGRAM):   end;
291314    +   end;
MPRINT(EM_DIAGRAM):   end;
291315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
291316    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
291317    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
291318    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
291319    +      end;
MPRINT(EM_DIAGRAM):   end;
291320    +      else do;
MPRINT(EM_DIAGRAM):   else do;
291321    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
291322    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
291323    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
291324    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
291325    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
291326    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
291327    +         end;
MPRINT(EM_DIAGRAM):   end;
291328    +      end;
MPRINT(EM_DIAGRAM):   end;
291329    +   end;
MPRINT(EM_DIAGRAM):   end;
291330    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
291331    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
291332    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
291333    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
291334    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
291335    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
291336    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291337    +   end;
MPRINT(EM_DIAGRAM):   end;
291338    +end;
MPRINT(EM_DIAGRAM):   end;
291339    +
291340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291341    +*** Checking missing input Interval
291342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
291343    +
291344    +IF NMISS(
291345    +   AcceptedCmpTotal ,
291346    +   Frq ,
291347    +   Mnt ,
291348    +   MntMeatProducts ,
291349    +   NumCatalogPurchases ,
291350    +   NumDealsPurchases ,
291351    +   NumWebVisitsMonth ,
291352    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
291353    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
291354    +
291355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291356    +END;
MPRINT(EM_DIAGRAM):   END;
291357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291358    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
291359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291361    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
291362    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
291363    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
291364    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
291365    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
291366    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
291367    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
291368    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
291369    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
291370    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
291371    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
291372    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
291373    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
291374    +END;
MPRINT(EM_DIAGRAM):   END;
291375    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291376    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
291377    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
291378    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
291379    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
291380    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
291381    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
291382    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
291383    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
291384    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
291385    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
291386    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
291387    +   ELSE S_NumCatalogPurchases
291388    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
291389    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
291390    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
291391    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
291392    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
291393    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
291394    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
291395    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
291396    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
291397    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
291398    +END;
MPRINT(EM_DIAGRAM):   END;
291399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291400    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
291401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291403    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
291404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291405    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291406    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
291407    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
291408    +          +    -1.92258561684999 * S_MntMeatProducts
291409    +          +     -1.7098915194593 * S_NumCatalogPurchases
291410    +          +    -0.73092398706652 * S_NumDealsPurchases
291411    +          +    -1.52371325097768 * S_NumWebVisitsMonth
291412    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
291413    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
291414    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
291415    +          +     3.63686708458831 * S_MntMeatProducts
291416    +          +     0.32632650897658 * S_NumCatalogPurchases
291417    +          +     1.27820262549135 * S_NumDealsPurchases
291418    +          +    -0.18941034658667 * S_NumWebVisitsMonth
291419    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
291420    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
291421    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
291422    +          +    -0.10252809999866 * S_MntMeatProducts
291423    +          +    -2.01730745054613 * S_NumCatalogPurchases
291424    +          +     0.36276273056202 * S_NumDealsPurchases
291425    +          +    -2.03441379397145 * S_NumWebVisitsMonth
291426    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
291427    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
291428    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
291429    +          +     8.03567059273376 * S_MntMeatProducts
291430    +          +     2.16664649845379 * S_NumCatalogPurchases
291431    +          +     0.84009978401032 * S_NumDealsPurchases
291432    +          +     0.11354933533503 * S_NumWebVisitsMonth
291433    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
291434    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
291435    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
291436    +          +     1.87107978843927 * S_MntMeatProducts
291437    +          +    -0.31123291719979 * S_NumCatalogPurchases
291438    +          +    -2.80886037303887 * S_NumDealsPurchases
291439    +          +     0.08829426076164 * S_NumWebVisitsMonth
291440    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
291441    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
291442    +          +     0.50838467240268 * Marital_StatusMarried
291443    +          +    -0.57765911295879 * Marital_StatusSingle
291444    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
291445    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
291446    +          +     0.03531168852657 * Marital_StatusMarried
291447    +          +    -0.34417109081648 * Marital_StatusSingle
291448    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
291449    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
291450    +          +      1.9516301625913 * Marital_StatusMarried
291451    +          +    -0.24904237582097 * Marital_StatusSingle
291452    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
291453    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
291454    +          +     0.06718550412505 * Marital_StatusMarried
291455    +          +    -0.16735434131197 * Marital_StatusSingle
291456    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
291457    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
291458    +          +    -1.79498797741807 * Marital_StatusMarried
291459    +          +     2.86341746904333 * Marital_StatusSingle
291460    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
291461    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
291462    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
291463    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
291464    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
291465    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
291466    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
291467    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
291468    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
291469    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
291470    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
291471    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
291472    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
291473    +END;
MPRINT(EM_DIAGRAM):   END;
291474    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291475    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
291476    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
291477    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
291478    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
291479    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
291480    +END;
MPRINT(EM_DIAGRAM):   END;
291481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291482    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
291483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291484    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291485    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
291486    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
291487    +          +    -0.19914740985847 * S_MntMeatProducts
291488    +          +    -0.96920717464092 * S_NumCatalogPurchases
291489    +          +    -1.68508588177508 * S_NumDealsPurchases
291490    +          +     -0.9404284924488 * S_NumWebVisitsMonth
291491    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
291492    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
291493    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
291494    +          +    -1.60286606361912 * S_MntMeatProducts
291495    +          +    -0.05010796315816 * S_NumCatalogPurchases
291496    +          +      1.1380574488234 * S_NumDealsPurchases
291497    +          +     0.25426721345204 * S_NumWebVisitsMonth
291498    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
291499    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
291500    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
291501    +          +     2.58979830897092 * S_MntMeatProducts
291502    +          +      1.2569773545009 * S_NumCatalogPurchases
291503    +          +     0.21119951191653 * S_NumDealsPurchases
291504    +          +    -0.40993456334326 * S_NumWebVisitsMonth
291505    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
291506    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
291507    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
291508    +          +     1.58324428521578 * S_MntMeatProducts
291509    +          +    -0.64140579988939 * S_NumCatalogPurchases
291510    +          +    -0.07557073365385 * S_NumDealsPurchases
291511    +          +     0.27159109297915 * S_NumWebVisitsMonth
291512    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
291513    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
291514    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
291515    +          +     0.02133290318048 * S_MntMeatProducts
291516    +          +    -0.37682732019302 * S_NumCatalogPurchases
291517    +          +     2.57483962426003 * S_NumDealsPurchases
291518    +          +    -0.76651867011773 * S_NumWebVisitsMonth
291519    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
291520    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
291521    +          +     1.00798219323102 * Marital_StatusMarried
291522    +          +     -1.3878630687005 * Marital_StatusSingle
291523    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
291524    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
291525    +          +    -0.99149540204741 * Marital_StatusMarried
291526    +          +    -0.22772928542301 * Marital_StatusSingle
291527    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
291528    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
291529    +          +     1.54170826840021 * Marital_StatusMarried
291530    +          +    -0.09937587953829 * Marital_StatusSingle
291531    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
291532    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
291533    +          +    -0.48775794259019 * Marital_StatusMarried
291534    +          +     0.87075561905397 * Marital_StatusSingle
291535    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
291536    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
291537    +          +     0.01260332236695 * Marital_StatusMarried
291538    +          +     1.18815076116703 * Marital_StatusSingle
291539    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
291540    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
291541    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
291542    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
291543    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
291544    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
291545    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
291546    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
291547    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
291548    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
291549    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
291550    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
291551    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
291552    +END;
MPRINT(EM_DIAGRAM):   END;
291553    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291554    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
291555    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
291556    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
291557    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
291558    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
291559    +END;
MPRINT(EM_DIAGRAM):   END;
291560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291561    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
291562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291563    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291564    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
291565    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
291566    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
291567    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
291568    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
291569    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
291570    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
291571    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
291572    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
291573    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
291574    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
291575    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
291576    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
291577    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
291578    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
291579    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
291580    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
291581    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
291582    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
291583    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
291584    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
291585    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
291586    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
291587    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
291588    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
291589    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
291590    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
291591    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
291592    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
291593    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
291594    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
291595    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
291596    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
291597    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
291598    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
291599    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
291600    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
291601    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
291602    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
291603    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
291604    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
291605    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
291606    +END;
MPRINT(EM_DIAGRAM):   END;
291607    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291608    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
291609    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
291610    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
291611    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
291612    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
291613    +END;
MPRINT(EM_DIAGRAM):   END;
291614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291615    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
291616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291617    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291618    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
291619    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
291620    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
291621    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
291622    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
291623    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
291624    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
291625    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
291626    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
291627    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
291628    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
291629    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
291630    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
291631    +END;
MPRINT(EM_DIAGRAM):   END;
291632    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291633    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
291634    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
291635    +END;
MPRINT(EM_DIAGRAM):   END;
291636    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
291637    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
291638    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
291639    +END;
MPRINT(EM_DIAGRAM):   END;
291640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291641    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
291642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291643    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
291644    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
291645    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
291646    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
291647    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
291648    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
291649    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
291650    +END;
MPRINT(EM_DIAGRAM):   END;
291651    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
291652    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
291653    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
291654    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291655     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291656     quit;
291657     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291658     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291659     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291660     retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
291661     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291663     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291666     proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME
CREATOR);
291667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291669     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291670     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291671     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291673     proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
291674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
291675     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291676     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291678     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291679     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291680     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291681     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291682     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291683     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291683   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 765 rows and 5 columns.
 
291684     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291685     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
291686     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 765 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 765 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291687     filename _pref
291687   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
291688     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291689     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
291690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291691    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
291692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291693    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
291694    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
291695    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291696     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291697     quit;
291698     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291699     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291700     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291701     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
291702     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291704     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291707     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
291708     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291710     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291711     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291712     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291714     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
291715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291716     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291717     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291719     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291720     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291721     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291722     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291723     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291724     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291724   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
291725     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291726     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
291727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 769 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291728     filename _pref
291728   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
291729     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291730     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
291731    +
291732    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
291733    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
291733   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
291734    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
291735    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
291736    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
291737    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
291738    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291739     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291740     quit;
291741     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291742     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291743     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291744     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
291745     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291747     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291748     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291750     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
291751     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291752     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291753     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291754     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291755     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291757     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
291758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291759     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291760     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291762     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291763     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291764     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291765     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291766     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291767     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291767   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
291768     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291769     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
291770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 808 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291771     filename _pref
291771   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
291772     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291773     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
291774    +
291775    +
291776    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
291777    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
291778    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
291779    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
291780    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
291781    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291782    +
291783    +
291784    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
291785    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
291786    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
291787    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
291788    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
291789    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291790    +
291791    +
291792    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
291793    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
291794    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
291795    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
291796    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
291797    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291798    +
291799    +
291800    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
291801    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
291802    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
291803    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
291804    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
291805    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291806    +
291807    +
291808    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
291809    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
291810    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
291811    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
291812    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
291813    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291814    +
291815    +
291816    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
291817    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
291818    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
291819    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
291820    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
291821    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291822    +
291823    +
291824    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
291825    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
291826    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
291827    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
291828    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
291829    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291830    +
291831    +
291832    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
291833    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
291834    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
291835    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
291836    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
291837    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291838    +if
291839    +_FILTERNORM1 not in ( '.')
291840    + and
291841    +_FILTERNORM2 not in ( '.')
291842    + and
291843    +_FILTERNORM3 not in ( '.')
291844    + and
291845    +_FILTERNORM4 not in ( '.')
291846    + and
291847    +_FILTERNORM5 not in ( '.')
291848    + and
291849    +_FILTERNORM6 not in ( '.')
291850    + and
291851    +_FILTERNORM7 not in ( ' ')
291852    + and
291853    +_FILTERNORM8 not in ( ' ')
291854    +and
291855    +( Dt_Customer ne .)
291856    +and ( Income ne . and (Income<=107000))
291857    +and ( Kidhome ne .)
291858    +and ( MntFishProducts ne .)
291859    +and ( MntFruits ne .)
291860    +and ( MntGoldProds ne .)
291861    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
291862    +and ( MntSweetProducts ne .)
291863    +and ( MntWines ne .)
291864    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
291865    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
291866    +and ( NumStorePurchases ne .)
291867    +and ( NumWebPurchases ne .)
291868    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
291869    +and ( Recency ne .)
291870    +and ( Teenhome ne .)
291871    +and ( Year_Birth ne .)
291872    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
291873    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
291874    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
291875    +end;
MPRINT(EM_DIAGRAM):   end;
291876    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
291877    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291878     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291879     quit;
291880     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291881     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291882     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291883     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
291884     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291885     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
291886     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291889     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
291890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291892     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291893     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291894     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.04 seconds
 
 
291896     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
291897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291898     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291899     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291900     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291901     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291902     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291903     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291904     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291905     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291906     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291906   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
291907     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291908     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
291909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 874 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291910     %macro varDept(fcmpdata=,id=);
291911     %global nobs&id scoreFlag&id;
291912     %let scoreFlag&id = 0;
291913     %if &id=1 or ^&fcmpStart %then %do;
291914     proc sort data=&fcmpdata out=_temp&id nodupkey;
291915     by NAME;
291916     where id=&id and LHS in( %let j=1;
291917     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
291918     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
291919     "&var" %let j = %eval(&j+1);
291920     %end;
291921     );
291922     run;
291923     %let dsid = %sysfunc(open(_temp&id));
291924     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291925     %let dsid = %sysfunc(close(&dsid));
291926     %if &&nobs&id %then %do;
291927     %let scoreFlag&id = 1;
291928     %let fcmpStart = 1;
291929     %end;
291930     %else %let fcmpStart = 0;
291931     %end;
291932     %else %do;
291933     proc sort data=&fcmpdata out=_tempid;
291934     where id=&id;
291935     by LHS;
291936     run;
291937     %let dsid = %sysfunc(open(_tempid));
291938     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291939     %let dsid = %sysfunc(close(&dsid));
291940     %if ^&&nobs&id %then %do;
291941     proc datasets lib=work nolist;
291942     delete _tempid;
291943     run;
291944     quit;
291945     %end;
291946     %else %do;
291947     data _tempAll;
291948     set %let j=%eval(&id-1);
291949     %do x=1 %to &j;
291950     %if &&nobs&x %then %do;
291951     _temp&x %end;
291952     %end;
291953     ;
291954     run;
291955     proc sql;
291956     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
291956   ! work._tempid p2 where p.name=p2.lhs;
291957     quit;
291958     data _temp&id;
291959     set _temp&id;
291960     where LHS ne '' and NAME ne '' and Node ne '';
291961     run;
291962     proc datasets lib=work nolist;
291963     delete _tempAll;
291964     run;
291965     %let dsid = %sysfunc(open(_temp&id));
291966     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291967     %let dsid = %sysfunc(close(&dsid));
291968     %if ^&&nobs&id %then %do;
291969     proc datasets lib=work nolist;
291970     delete _temp&id;
291971     run;
291972     quit;
291973     %end;
291974     %else %do;
291975     %let scoreFlag&id = 1;
291976     data _temp&id;
291977     set _temp&id;
291978     where LHS ne NAME and node ne '';
291979     run;
291980     %let dsid = %sysfunc(open(_temp&id));
291981     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291982     %let dsid = %sysfunc(close(&dsid));
291983     %if ^&&nobs&id %then %do;
291984     proc datasets lib=work nolist;
291985     delete _temp&id;
291986     run;
291987     quit;
291988     %end;
291989     %else %do;
291990     proc sort data=_temp&id nodupkey;
291991     by LHS NAME;
291992     run;
291993     %end;
291994     %end;
291995     %end;
291996     %end;
291997     %mend varDept;
291998     %macro optCode(outdata=fcmpdata);
291999     %global fcmpStart;
292000     %let fcmpStart = 0;
292001     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
292002     %let NumNodes=9;
292003     %do k=1 %to &NumNodes;
292004     %vardept(fcmpdata=&outdata, id=&k);
292005     %end;
292006     %mend optCode;
292007     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
292008     filename _pref
292008   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
292009     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292010     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
292011    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
292012    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
292013    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
292014    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
292015    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
292016    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
292017    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
292018    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
292019    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
292020    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
292021    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
292022    +LENGTH _WARN_ $4
292023    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
292024    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
292025    +
292026    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
292027    +
292028    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
292029    +
292030    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
292031    +
292032    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
292033    +
292034    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
292035    +
292036    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
292037    +
292038    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
292039    +
292040    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
292041    +
292042    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
292043    +
292044    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
292045    +
292046    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
292047    +
292048    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
292049    +
292050    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
292051    +
292052    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
292053    +
292054    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
292055    +
292056    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
292057    +
292058    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
292059    +
292060    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
292061    +
292062    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
292063    +
292064    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
292065    +
292066    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
292067    +
292068    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
292069    +
292070    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
292071    +
292072    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
292073    +
292074    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
292075    +
292076    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
292077    +
292078    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
292079    +
292080    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
292081    +
292082    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
292083    +
292084    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
292085    +
292086    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
292087    +
292088    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
292089    +
292090    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
292091    +
292092    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
292093    +
292094    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
292095    +
292096    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
292097    +
292098    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
292099    +
292100    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
292101    +
292102    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
292103    +
292104    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
292105    +
292106    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
292107    +
292108    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
292109    +
292110    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
292111    +
292112    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
292113    +
292114    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
292115    +
292116    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
292117    +
292118    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
292119    +
292120    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
292121    +
292122    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
292123    +
292124    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
292125    +
292126    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
292127    +
292128    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
292129    +
292130    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
292131    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
292132    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
292133    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
292134    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
292135    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
292136    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
292137    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
292138    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
292139    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
292140    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
292141    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
292142    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
292143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292145    +end;
MPRINT(EM_DIAGRAM):   end;
292146    +else do;
MPRINT(EM_DIAGRAM):   else do;
292147    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
292148    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
292149    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292150    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
292151    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
292152    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
292153    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
292154    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
292155    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
292156    +         end;
MPRINT(EM_DIAGRAM):   end;
292157    +         else do;
MPRINT(EM_DIAGRAM):   else do;
292158    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
292159    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
292160    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
292161    +            end;
MPRINT(EM_DIAGRAM):   end;
292162    +         end;
MPRINT(EM_DIAGRAM):   end;
292163    +      end;
MPRINT(EM_DIAGRAM):   end;
292164    +      else do;
MPRINT(EM_DIAGRAM):   else do;
292165    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
292166    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
292167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
292168    +         end;
MPRINT(EM_DIAGRAM):   end;
292169    +      end;
MPRINT(EM_DIAGRAM):   end;
292170    +   end;
MPRINT(EM_DIAGRAM):   end;
292171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292172    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
292173    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
292174    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
292175    +      end;
MPRINT(EM_DIAGRAM):   end;
292176    +      else do;
MPRINT(EM_DIAGRAM):   else do;
292177    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
292178    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
292179    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
292180    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
292181    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
292182    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
292183    +         end;
MPRINT(EM_DIAGRAM):   end;
292184    +      end;
MPRINT(EM_DIAGRAM):   end;
292185    +   end;
MPRINT(EM_DIAGRAM):   end;
292186    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
292187    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
292188    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
292189    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
292190    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
292191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292193    +   end;
MPRINT(EM_DIAGRAM):   end;
292194    +end;
MPRINT(EM_DIAGRAM):   end;
292195    +
292196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292197    +*** Checking missing input Interval
292198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
292199    +
292200    +IF NMISS(
292201    +   AcceptedCmpTotal ,
292202    +   Frq ,
292203    +   Mnt ,
292204    +   MntMeatProducts ,
292205    +   NumCatalogPurchases ,
292206    +   NumDealsPurchases ,
292207    +   NumWebVisitsMonth ,
292208    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
292209    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
292210    +
292211    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292212    +END;
MPRINT(EM_DIAGRAM):   END;
292213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292214    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
292215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292216    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292217    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
292218    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
292219    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
292220    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
292221    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
292222    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
292223    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
292224    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
292225    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
292226    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
292227    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
292228    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
292229    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
292230    +END;
MPRINT(EM_DIAGRAM):   END;
292231    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292232    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
292233    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
292234    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
292235    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
292236    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
292237    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
292238    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
292239    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
292240    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
292241    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
292242    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
292243    +   ELSE S_NumCatalogPurchases
292244    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
292245    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
292246    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
292247    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
292248    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
292249    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
292250    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
292251    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
292252    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
292253    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
292254    +END;
MPRINT(EM_DIAGRAM):   END;
292255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292256    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
292257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292259    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
292260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292261    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292262    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
292263    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
292264    +          +     2.79168320854924 * S_MntMeatProducts
292265    +          +    -1.09894266401589 * S_NumCatalogPurchases
292266    +          +    -0.32966417347551 * S_NumDealsPurchases
292267    +          +    -0.72195034767343 * S_NumWebVisitsMonth
292268    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
292269    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
292270    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
292271    +          +     9.02469430152189 * S_MntMeatProducts
292272    +          +     1.42644521887241 * S_NumCatalogPurchases
292273    +          +      0.6475058577302 * S_NumDealsPurchases
292274    +          +     0.08123225110233 * S_NumWebVisitsMonth
292275    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
292276    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
292277    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
292278    +          +     5.40567027331821 * S_MntMeatProducts
292279    +          +     0.21404551755506 * S_NumCatalogPurchases
292280    +          +    -3.79184634796332 * S_NumDealsPurchases
292281    +          +     0.64355102802571 * S_NumWebVisitsMonth
292282    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
292283    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
292284    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
292285    +          +     2.35287601364019 * S_MntMeatProducts
292286    +          +    -3.27198648531912 * S_NumCatalogPurchases
292287    +          +    -0.16046880718311 * S_NumDealsPurchases
292288    +          +     -3.7025327830273 * S_NumWebVisitsMonth
292289    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
292290    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
292291    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
292292    +          +     8.39312647460766 * S_MntMeatProducts
292293    +          +     3.07026872536137 * S_NumCatalogPurchases
292294    +          +     2.03045608124213 * S_NumDealsPurchases
292295    +          +     3.86452915398414 * S_NumWebVisitsMonth
292296    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
292297    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
292298    +          +     0.14979485299347 * Marital_StatusMarried
292299    +          +    -0.09166445391312 * Marital_StatusSingle
292300    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
292301    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
292302    +          +      0.1646484112393 * Marital_StatusMarried
292303    +          +     0.01074681811884 * Marital_StatusSingle
292304    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
292305    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
292306    +          +    -0.28313626645981 * Marital_StatusMarried
292307    +          +      2.8257446964988 * Marital_StatusSingle
292308    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
292309    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
292310    +          +     3.05775024202559 * Marital_StatusMarried
292311    +          +    -0.23539571945671 * Marital_StatusSingle
292312    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
292313    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
292314    +          +    -0.48359916542157 * Marital_StatusMarried
292315    +          +    -1.64182316823237 * Marital_StatusSingle
292316    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
292317    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
292318    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
292319    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
292320    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
292321    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
292322    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
292323    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
292324    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
292325    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
292326    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
292327    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
292328    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
292329    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
292330    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
292331    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
292332    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
292333    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
292334    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
292335    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
292336    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
292337    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
292338    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
292339    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
292340    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
292341    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
292342    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
292343    +END;
MPRINT(EM_DIAGRAM):   END;
292344    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292345    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
292346    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
292347    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
292348    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
292349    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
292350    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
292351    +END;
MPRINT(EM_DIAGRAM):   END;
292352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292353    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
292354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292356    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
292357    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
292358    +          +     0.55999885697493 * S_MntMeatProducts
292359    +          +      0.2225207563207 * S_NumCatalogPurchases
292360    +          +     -1.0233439835205 * S_NumDealsPurchases
292361    +          +    -0.35430585878397 * S_NumWebVisitsMonth
292362    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
292363    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
292364    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
292365    +          +    -1.04508919964747 * S_MntMeatProducts
292366    +          +     -0.6758665249546 * S_NumCatalogPurchases
292367    +          +    -0.24215201937497 * S_NumDealsPurchases
292368    +          +    -1.02736823453312 * S_NumWebVisitsMonth
292369    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
292370    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
292371    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
292372    +          +    -3.97854305593999 * S_MntMeatProducts
292373    +          +    -2.05331728407593 * S_NumCatalogPurchases
292374    +          +    -0.48841403720827 * S_NumDealsPurchases
292375    +          +     0.25411498590567 * S_NumWebVisitsMonth
292376    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
292377    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
292378    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
292379    +          +     -0.7071400781557 * S_MntMeatProducts
292380    +          +     1.20780208787296 * S_NumCatalogPurchases
292381    +          +    -0.58152407834402 * S_NumDealsPurchases
292382    +          +     2.15567925539399 * S_NumWebVisitsMonth
292383    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
292384    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
292385    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
292386    +          +    -1.07023271439686 * S_MntMeatProducts
292387    +          +     0.31952847185507 * S_NumCatalogPurchases
292388    +          +     0.97232557455358 * S_NumDealsPurchases
292389    +          +     1.40227284681788 * S_NumWebVisitsMonth
292390    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
292391    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
292392    +          +    -1.54860787754125 * Marital_StatusMarried
292393    +          +     3.07164083530731 * Marital_StatusSingle
292394    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
292395    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
292396    +          +     1.93404037878036 * Marital_StatusMarried
292397    +          +    -1.33159061927866 * Marital_StatusSingle
292398    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
292399    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
292400    +          +    -1.20603561095549 * Marital_StatusMarried
292401    +          +     1.40927693179184 * Marital_StatusSingle
292402    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
292403    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
292404    +          +     -0.1442863204197 * Marital_StatusMarried
292405    +          +     0.60523055771734 * Marital_StatusSingle
292406    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
292407    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
292408    +          +     0.09024082077945 * Marital_StatusMarried
292409    +          +     0.46315219527454 * Marital_StatusSingle
292410    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
292411    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
292412    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
292413    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
292414    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
292415    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
292416    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
292417    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
292418    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
292419    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
292420    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
292421    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
292422    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
292423    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
292424    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
292425    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
292426    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
292427    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
292428    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
292429    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
292430    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
292431    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
292432    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
292433    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
292434    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
292435    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
292436    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
292437    +END;
MPRINT(EM_DIAGRAM):   END;
292438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292439    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
292440    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
292441    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
292442    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
292443    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
292444    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
292445    +END;
MPRINT(EM_DIAGRAM):   END;
292446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292447    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
292448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292449    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292450    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
292451    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
292452    +          +    -1.02461177883701 * S_MntMeatProducts
292453    +          +     0.58245198640098 * S_NumCatalogPurchases
292454    +          +    -0.23780276328844 * S_NumDealsPurchases
292455    +          +     1.28202459687231 * S_NumWebVisitsMonth
292456    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
292457    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
292458    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
292459    +          +     0.13875330330852 * S_MntMeatProducts
292460    +          +    -0.22996544763814 * S_NumCatalogPurchases
292461    +          +    -0.36599639965399 * S_NumDealsPurchases
292462    +          +     1.99081506581768 * S_NumWebVisitsMonth
292463    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
292464    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
292465    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
292466    +          +     0.94472031892058 * S_MntMeatProducts
292467    +          +     0.27511909854912 * S_NumCatalogPurchases
292468    +          +    -0.55526545857693 * S_NumDealsPurchases
292469    +          +    -0.61544688091302 * S_NumWebVisitsMonth
292470    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
292471    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
292472    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
292473    +          +     1.61403840093612 * S_MntMeatProducts
292474    +          +    -0.34382576245292 * S_NumCatalogPurchases
292475    +          +     0.70213159483637 * S_NumDealsPurchases
292476    +          +    -0.39731145628175 * S_NumWebVisitsMonth
292477    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
292478    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
292479    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
292480    +          +    -0.33974847531229 * S_MntMeatProducts
292481    +          +     1.74350962571519 * S_NumCatalogPurchases
292482    +          +     0.41098583446208 * S_NumDealsPurchases
292483    +          +    -0.66305298743409 * S_NumWebVisitsMonth
292484    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
292485    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
292486    +          +    -0.29510060772746 * Marital_StatusMarried
292487    +          +     1.74124353401891 * Marital_StatusSingle
292488    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
292489    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
292490    +          +    -0.61203463567014 * Marital_StatusMarried
292491    +          +     1.95705767804118 * Marital_StatusSingle
292492    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
292493    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
292494    +          +      1.7151906515185 * Marital_StatusMarried
292495    +          +     0.70376524929742 * Marital_StatusSingle
292496    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
292497    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
292498    +          +    -1.27088213578872 * Marital_StatusMarried
292499    +          +    -0.91253966593459 * Marital_StatusSingle
292500    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
292501    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
292502    +          +     -0.5308059771847 * Marital_StatusMarried
292503    +          +    -0.11208078645904 * Marital_StatusSingle
292504    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
292505    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
292506    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
292507    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
292508    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
292509    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
292510    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
292511    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
292512    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
292513    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
292514    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
292515    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
292516    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
292517    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
292518    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
292519    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
292520    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
292521    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
292522    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
292523    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
292524    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
292525    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
292526    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
292527    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
292528    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
292529    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
292530    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
292531    +END;
MPRINT(EM_DIAGRAM):   END;
292532    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292533    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
292534    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
292535    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
292536    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
292537    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
292538    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
292539    +END;
MPRINT(EM_DIAGRAM):   END;
292540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292541    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
292542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292543    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292544    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
292545    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
292546    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
292547    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
292548    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
292549    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
292550    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
292551    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
292552    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
292553    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
292554    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
292555    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
292556    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
292557    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
292558    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
292559    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
292560    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
292561    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
292562    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
292563    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
292564    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
292565    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
292566    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
292567    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
292568    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
292569    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
292570    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
292571    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
292572    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
292573    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
292574    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
292575    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
292576    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
292577    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
292578    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
292579    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
292580    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
292581    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
292582    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
292583    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
292584    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
292585    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
292586    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
292587    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
292588    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
292589    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
292590    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
292591    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
292592    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
292593    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
292594    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
292595    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
292596    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
292597    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
292598    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
292599    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
292600    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
292601    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
292602    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
292603    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
292604    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
292605    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
292606    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
292607    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
292608    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
292609    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
292610    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
292611    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
292612    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
292613    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
292614    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
292615    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
292616    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
292617    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
292618    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
292619    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
292620    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
292621    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
292622    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
292623    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
292624    +END;
MPRINT(EM_DIAGRAM):   END;
292625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292626    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
292627    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
292628    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
292629    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
292630    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
292631    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
292632    +END;
MPRINT(EM_DIAGRAM):   END;
292633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292634    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
292635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292636    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292637    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
292638    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
292639    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
292640    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
292641    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
292642    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
292643    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
292644    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
292645    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
292646    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
292647    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
292648    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
292649    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
292650    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
292651    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
292652    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
292653    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
292654    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
292655    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
292656    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
292657    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
292658    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
292659    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
292660    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
292661    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
292662    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
292663    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
292664    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
292665    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
292666    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
292667    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
292668    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
292669    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
292670    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
292671    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
292672    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
292673    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
292674    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
292675    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
292676    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
292677    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
292678    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
292679    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
292680    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
292681    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
292682    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
292683    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
292684    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
292685    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
292686    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
292687    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
292688    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
292689    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
292690    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
292691    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
292692    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
292693    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
292694    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
292695    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
292696    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
292697    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
292698    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
292699    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
292700    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
292701    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
292702    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
292703    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
292704    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
292705    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
292706    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
292707    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
292708    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
292709    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
292710    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
292711    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
292712    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
292713    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
292714    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
292715    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
292716    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
292717    +END;
MPRINT(EM_DIAGRAM):   END;
292718    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292719    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
292720    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
292721    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
292722    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
292723    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
292724    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
292725    +END;
MPRINT(EM_DIAGRAM):   END;
292726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292727    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
292728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292729    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292730    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
292731    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
292732    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
292733    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
292734    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
292735    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
292736    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
292737    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
292738    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
292739    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
292740    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
292741    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
292742    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
292743    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
292744    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
292745    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
292746    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
292747    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
292748    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
292749    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
292750    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
292751    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
292752    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
292753    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
292754    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
292755    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
292756    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
292757    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
292758    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
292759    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
292760    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
292761    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
292762    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
292763    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
292764    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
292765    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
292766    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
292767    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
292768    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
292769    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
292770    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
292771    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
292772    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
292773    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
292774    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
292775    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
292776    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
292777    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
292778    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
292779    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
292780    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
292781    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
292782    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
292783    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
292784    +END;
MPRINT(EM_DIAGRAM):   END;
292785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292786    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
292787    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
292788    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
292789    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
292790    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
292791    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
292792    +END;
MPRINT(EM_DIAGRAM):   END;
292793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292794    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
292795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292796    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292797    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
292798    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
292799    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
292800    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
292801    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
292802    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
292803    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
292804    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
292805    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
292806    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
292807    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
292808    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
292809    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
292810    +END;
MPRINT(EM_DIAGRAM):   END;
292811    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292812    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
292813    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
292814    +END;
MPRINT(EM_DIAGRAM):   END;
292815    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
292816    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
292817    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
292818    +END;
MPRINT(EM_DIAGRAM):   END;
292819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292820    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
292821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292822    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
292823    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
292824    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
292825    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
292826    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
292827    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
292828    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
292829    +END;
MPRINT(EM_DIAGRAM):   END;
292830    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
292831    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
292832    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
292833    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
292834     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
292835     quit;
292836     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
292837     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
292838     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
292839     retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
292840     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
292841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292842     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
292843     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292845     proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME
CREATOR);
292846     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292848     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292849     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
292850     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
292851     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
292852     proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
292853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292854     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
292855     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292857     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292858     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
292859     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292860     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292861     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292862     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
292862   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3959 rows and 5 columns.
 
292863     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292864     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
292865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3959 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 3959 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292866     filename _pref
292866   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
292867     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292868     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
292869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292870    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
292871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292872    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
292873    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
292874    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
292875     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
292876     quit;
292877     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
292878     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
292879     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
292880     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
292881     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
292882     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292883     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
292884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292885     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292886     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
292887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292889     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292890     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
292891     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
292892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292893     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
292894     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292895     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
292896     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292898     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292899     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
292900     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292901     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292902     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292903     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
292903   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
292904     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292905     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
292906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 3963 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292907     filename _pref
292907   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
292908     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292909     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
292910    +
292911    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
292912    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
292912   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
292913    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
292914    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
292915    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
292916    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
292917    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
292918     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
292919     quit;
292920     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
292921     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
292922     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
292923     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
292924     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
292925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292926     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
292927     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292928     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292929     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
292930     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292932     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292933     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
292934     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
292935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292936     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
292937     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292938     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
292939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292940     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292941     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292942     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
292943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292944     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292945     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292946     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
292946   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
292947     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
292948     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
292949     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 4002 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
292950     filename _pref
292950   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
292951     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292952     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
292953    +
292954    +
292955    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
292956    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
292957    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
292958    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
292959    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
292960    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
292961    +
292962    +
292963    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
292964    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
292965    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
292966    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
292967    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
292968    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
292969    +
292970    +
292971    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
292972    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
292973    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
292974    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
292975    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
292976    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
292977    +
292978    +
292979    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
292980    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
292981    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
292982    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
292983    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
292984    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
292985    +
292986    +
292987    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
292988    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
292989    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
292990    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
292991    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
292992    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
292993    +
292994    +
292995    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
292996    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
292997    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
292998    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
292999    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
293000    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293001    +
293002    +
293003    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
293004    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
293005    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
293006    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
293007    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
293008    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293009    +
293010    +
293011    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
293012    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
293013    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
293014    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
293015    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
293016    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293017    +if
293018    +_FILTERNORM1 not in ( '.')
293019    + and
293020    +_FILTERNORM2 not in ( '.')
293021    + and
293022    +_FILTERNORM3 not in ( '.')
293023    + and
293024    +_FILTERNORM4 not in ( '.')
293025    + and
293026    +_FILTERNORM5 not in ( '.')
293027    + and
293028    +_FILTERNORM6 not in ( '.')
293029    + and
293030    +_FILTERNORM7 not in ( ' ')
293031    + and
293032    +_FILTERNORM8 not in ( ' ')
293033    +and
293034    +( Dt_Customer ne .)
293035    +and ( Income ne . and (Income<=107000))
293036    +and ( Kidhome ne .)
293037    +and ( MntFishProducts ne .)
293038    +and ( MntFruits ne .)
293039    +and ( MntGoldProds ne .)
293040    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
293041    +and ( MntSweetProducts ne .)
293042    +and ( MntWines ne .)
293043    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
293044    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
293045    +and ( NumStorePurchases ne .)
293046    +and ( NumWebPurchases ne .)
293047    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
293048    +and ( Recency ne .)
293049    +and ( Teenhome ne .)
293050    +and ( Year_Birth ne .)
293051    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
293052    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
293053    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
293054    +end;
MPRINT(EM_DIAGRAM):   end;
293055    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
293056    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
293057     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
293058     quit;
293059     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
293060     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
293061     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
293062     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
293063     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
293064     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293065     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
293066     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293067     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293068     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
293069     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293071     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293072     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
293073     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
293074     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293075     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
293076     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
293077     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
293078     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293079     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293080     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293081     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
293082     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293083     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293084     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293085     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
293085   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
293086     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
293087     proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl54_FCMP data=_tempx;
293088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL54_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL54_FCMP has 4068 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293089     %macro varDept(fcmpdata=,id=);
293090     %global nobs&id scoreFlag&id;
293091     %let scoreFlag&id = 0;
293092     %if &id=1 or ^&fcmpStart %then %do;
293093     proc sort data=&fcmpdata out=_temp&id nodupkey;
293094     by NAME;
293095     where id=&id and LHS in( %let j=1;
293096     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
293097     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
293098     "&var" %let j = %eval(&j+1);
293099     %end;
293100     );
293101     run;
293102     %let dsid = %sysfunc(open(_temp&id));
293103     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293104     %let dsid = %sysfunc(close(&dsid));
293105     %if &&nobs&id %then %do;
293106     %let scoreFlag&id = 1;
293107     %let fcmpStart = 1;
293108     %end;
293109     %else %let fcmpStart = 0;
293110     %end;
293111     %else %do;
293112     proc sort data=&fcmpdata out=_tempid;
293113     where id=&id;
293114     by LHS;
293115     run;
293116     %let dsid = %sysfunc(open(_tempid));
293117     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293118     %let dsid = %sysfunc(close(&dsid));
293119     %if ^&&nobs&id %then %do;
293120     proc datasets lib=work nolist;
293121     delete _tempid;
293122     run;
293123     quit;
293124     %end;
293125     %else %do;
293126     data _tempAll;
293127     set %let j=%eval(&id-1);
293128     %do x=1 %to &j;
293129     %if &&nobs&x %then %do;
293130     _temp&x %end;
293131     %end;
293132     ;
293133     run;
293134     proc sql;
293135     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
293135   ! work._tempid p2 where p.name=p2.lhs;
293136     quit;
293137     data _temp&id;
293138     set _temp&id;
293139     where LHS ne '' and NAME ne '' and Node ne '';
293140     run;
293141     proc datasets lib=work nolist;
293142     delete _tempAll;
293143     run;
293144     %let dsid = %sysfunc(open(_temp&id));
293145     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293146     %let dsid = %sysfunc(close(&dsid));
293147     %if ^&&nobs&id %then %do;
293148     proc datasets lib=work nolist;
293149     delete _temp&id;
293150     run;
293151     quit;
293152     %end;
293153     %else %do;
293154     %let scoreFlag&id = 1;
293155     data _temp&id;
293156     set _temp&id;
293157     where LHS ne NAME and node ne '';
293158     run;
293159     %let dsid = %sysfunc(open(_temp&id));
293160     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293161     %let dsid = %sysfunc(close(&dsid));
293162     %if ^&&nobs&id %then %do;
293163     proc datasets lib=work nolist;
293164     delete _temp&id;
293165     run;
293166     quit;
293167     %end;
293168     %else %do;
293169     proc sort data=_temp&id nodupkey;
293170     by LHS NAME;
293171     run;
293172     %end;
293173     %end;
293174     %end;
293175     %end;
293176     %mend varDept;
293177     %macro optCode(outdata=fcmpdata);
293178     %global fcmpStart;
293179     %let fcmpStart = 0;
293180     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
293181     %let NumNodes=9;
293182     %do k=1 %to &NumNodes;
293183     %vardept(fcmpdata=&outdata, id=&k);
293184     %end;
293185     %mend optCode;
293186     %optcode(outData=EMWS8.Ensmbl54_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 150 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 103 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 47 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl54_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
293187     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
293188     * Ensmbl54: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Computing metadata for TRAIN data;
293189     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL54_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl54_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl54_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl54_TRAIN out=WORK.M1_LMKIH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_LMKIH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_LMKIH(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_LMKIH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_LMKIH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2D738RZ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SWPTXC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D738RZ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl54";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl54";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl54: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl54";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
293509     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
293510     set EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMINFO;
293511     where DATA='Ensmbl54' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl54' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
293512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL54_EMINFO.
      WHERE (DATA='Ensmbl54') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
293513     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMINFO;
293514     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
293515     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
293516     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
293520     run;
293521     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMINFO;
293522     set EMWS8.Ensmbl54_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMINFO WORK.MODELTEMP_INFO;
293523     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
The SAS System
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293524     proc sort data = EMWS8.Ensmbl54_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl54_EMINFO NOTHREADS;
293525     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
293526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
293527     proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
293528     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
293529     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293530     proc sort data = EMWS8.Ensmbl54_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl54_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
293531     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
293532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL54_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293533     data EMWS8.Ensmbl54_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMINFO;
293534     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
293535     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
293536     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL54_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
293537     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
293538     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
293539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
293540     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL54_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL54_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O256NDU3
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl54\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O256NDU3 new;
MPRINT(EM_DIAGRAM):   run;
293564     data EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMOUTFIT;
293565     set EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMOUTFIT;
293566     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
293567     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
293567   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
293568     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
293569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL54_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL54_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293570     proc sort data=EMWS8.Ensmbl54_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl54_EMREPORTFIT nothreads;
293571     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
293572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL54_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL54_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293573     %let _EMwarndup = 0;
293574     %let _EMtargetdup =;
293575     %let _EMASEtargetdup =;
293576     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
293577     set EMWS8.Ensmbl54_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMOUTFIT;
293578     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
293579     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
293580     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
293581     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
293582     end;
MPRINT(EM_DIAGRAM):   end;
293583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL54_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293584     proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
293585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set EMWS8.AUTONEURAL37_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 45 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
293587     proc sort data=EMWS8.Ensmbl54_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl54_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
293588     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293589     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set EMWS8.ENSMBL54_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
293590     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
293591     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
293592     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293593     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 35 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 45 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293594     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
293595     set EMWS8.Ensmbl54_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_CMeta_TRAIN;
293596     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
293596   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
293597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL54_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
293598     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
293599     set EMWS8.Ensmbl54_TRAIN(keep=
293600     F_DepVar
293601     I_DepVar
293602     P_DepVar0
293603     P_DepVar1
293604     R_DepVar0
293605     R_DepVar1
293606     U_DepVar
293607     _WARN_
293608     DepVar
293609     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
293610     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: View EMWS8.ENSMBL54_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL37_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL54_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl54_3SVHWY3 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl54_3SVHWY3;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl54_3SVHWY3(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl54_3SVHWY3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl54_3SVHWY3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000326557 OVLMAX 0.7566002646 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
297876     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
297877     set EMWS8.Ensmbl54_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_CMeta_TRAIN;
297878     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
297878   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
297879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL54_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
297880     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
297881     set EMWS8.Ensmbl54_VALIDATE(keep=
297882     F_DepVar
297883     I_DepVar
297884     P_DepVar0
297885     P_DepVar1
297886     R_DepVar0
297887     R_DepVar1
297888     U_DepVar
297889     _WARN_
297890     DepVar
297891     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
297892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: View EMWS8.ENSMBL54_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL37_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL54_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl54_0L3KGUW nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl54_0L3KGUW;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl54_0L3KGUW(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMCLASSIFICATION WORK.Ensmbl54_0L3KGUW;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl54_0L3KGUW;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl54_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000338296 OVLMAX 0.7591811745 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
302167     %let _cn = %sysfunc(getoption(CENTER));
302168     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
302169     proc print data=EMWS8.Ensmbl54_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl54_EMREPORTFIT noobs label;
302170     var STAT LABEL TRAIN
302171     VALIDATE
302172     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
302173     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
302174     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
302175     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
302176     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL54_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 98.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
302177     title10;
MPRINT(EM_DIAGRAM):   title10;
302178     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
302179     proc sort data=EMWS8.Ensmbl54_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl54_EMCLASSIFICATION nothreads;
302180     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
302181     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL54_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL54_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
302182     %let _cn = %sysfunc(getoption(CENTER));
302183     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
302184     proc print data=EMWS8.Ensmbl54_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl54_EMCLASSIFICATION noobs label;
302185     var from into pct_row pct_col count percent
302186     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
302187     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
302188     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
302189     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
302190     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
302191     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
302192     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
302193     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
302194     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
302195     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
302196     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
302197     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL54_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 99.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
302198     title9;
MPRINT(EM_DIAGRAM):   title9;
302199     title10;
MPRINT(EM_DIAGRAM):   title10;
302200     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
302201     %let _cn = %sysfunc(getoption(CENTER));
302202     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
302203     data EMWS8.Ensmbl54_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl54_EMEVENTREPORT;
302204     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
302204   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
302205     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
302205   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
302205   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
302205   ! FALSEEVENT
302206     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
302206   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
302206   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
302207        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
302208     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
302209     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
302210     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
302211     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
302212     set EMWS8.Ensmbl54_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl54_EMEVENTREPORT;
302213     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL54_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL54_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
302214     proc print data=EMWS8.Ensmbl54_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl54_EMEVENTREPORT noobs label;
302215     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
302216     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
302217     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
302218     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL54_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 100.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
302219     title10;
MPRINT(EM_DIAGRAM):   title10;
302220     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
302221     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
302222     modify Ensmbl54_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl54_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
302223     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
302224     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
302224   ! ;
MPRINT(EM_DIAGRAM):   run;
302225     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL54_EMRANK.DATA.
302226     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
302227     %let _cn = %sysfunc(getoption(CENTER));
302228     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
302229     proc print data=EMWS8.Ensmbl54_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl54_EMRANK label noobs;
302230     var
302231     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
302232     by
302233     notsorted DATAROLE
302234     notsorted TARGET
302235     notsorted TARGETLABEL
302236     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
302237     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
302238     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
302239     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL54_EMRANK.
NOTE: The PROCEDURE PRINT printed page 101.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
302240     title10;
MPRINT(EM_DIAGRAM):   title10;
302241     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
302242     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
302243     modify Ensmbl54_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl54_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
302244     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
302244   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
302245     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
302245   ! ;
MPRINT(EM_DIAGRAM):   run;
302246     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL54_EMSCOREDIST.DATA.
302247     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl54_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
